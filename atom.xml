<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>madcoding’s blog</title>
  
  <subtitle>学习，沉淀，分享，交流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.mad-coding.cn/"/>
  <updated>2019-08-26T02:49:06.708Z</updated>
  <id>https://www.mad-coding.cn/</id>
  
  <author>
    <name>madcoding</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python工具库</title>
    <link href="https://www.mad-coding.cn/2019/08/26/Python%E5%B7%A5%E5%85%B7%E5%BA%93/"/>
    <id>https://www.mad-coding.cn/2019/08/26/Python工具库/</id>
    <published>2019-08-26T02:34:58.000Z</published>
    <updated>2019-08-26T02:49:06.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。</p><p>转载链接：<a href="https://www.t00ls.net/pytools.html" target="_blank" rel="noopener">https://www.t00ls.net/pytools.html</a></p><a id="more"></a><h1 id="0x01-漏洞及渗透练习平台"><a href="#0x01-漏洞及渗透练习平台" class="headerlink" title="0x01 漏洞及渗透练习平台"></a>0x01 漏洞及渗透练习平台</h1><p>WebGoat漏洞练习平台：</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p>webgoat-legacy漏洞练习平台:</p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>zvuldirll漏洞练习平台：</p><p><a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener">https://github.com/710leo/ZVulDrill</a></p><p>vulapps漏洞练习平台：</p><p><a href="https://github.com/Medicean/VulApps" target="_blank" rel="noopener">https://github.com/Medicean/VulApps</a></p><p>dvwa漏洞练习平台：</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台 ：</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat：</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><p>Ruby编写的一款工具，生成含漏洞的虚拟机：</p><p><a href="https://github.com/cliffe/secgen" target="_blank" rel="noopener">https://github.com/cliffe/secgen</a></p><h1 id="0x02-花式扫描器"><a href="#0x02-花式扫描器" class="headerlink" title="0x02 花式扫描器"></a>0x02 花式扫描器</h1><p>Nmap端口扫描器：</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器：</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器：</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a></p><p><a href="https://github.com/infosec-au/altdns" target="_blank" rel="noopener">https://github.com/infosec-au/altdns</a></p><p>linux漏洞扫描：</p><p><a href="https://github.com/future-architect/vuls" target="_blank" rel="noopener">https://github.com/future-architect/vuls</a></p><p>基于端口扫描以及关联CVE:</p><p><a href="https://github.com/m0nad/HellRaiser" target="_blank" rel="noopener">https://github.com/m0nad/HellRaiser</a></p><p>漏洞路由扫描器：</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本：</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具：</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><p>服务器端口弱口令扫描器：</p><p><a href="https://github.com/wilson9x1/fenghuangscanner_v3" target="_blank" rel="noopener">https://github.com/wilson9x1/fenghuangscanner_v3</a></p><p>Fox-scan扫描器：</p><p><a href="https://github.com/fengxuangit/Fox-scan/" target="_blank" rel="noopener">https://github.com/fengxuangit/Fox-scan/</a></p><h1 id="0x03-信息搜集工具"><a href="#0x03-信息搜集工具" class="headerlink" title="0x03 信息搜集工具"></a>0x03 信息搜集工具</h1><p>社工收集器：</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集：</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具：</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><p>信息探测及扫描工具：</p><p><a href="https://github.com/darryllane/Bluto" target="_blank" rel="noopener">https://github.com/darryllane/Bluto</a></p><p>内部网络信息扫描器：</p><p><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a></p><p>远程桌面登录扫描器：</p><p><a href="https://github.com/linuz/Sticky-Keys-Slayer" target="_blank" rel="noopener">https://github.com/linuz/Sticky-Keys-Slayer</a></p><p>网络基础设施渗透工具</p><p><a href="https://github.com/SECFORCE/sparta" target="_blank" rel="noopener">https://github.com/SECFORCE/sparta</a></p><p>SNMAP密码破解:</p><p><a href="https://github.com/SECFORCE/SNMP-Brute" target="_blank" rel="noopener">https://github.com/SECFORCE/SNMP-Brute</a></p><h1 id="0x04-WEB"><a href="#0x04-WEB" class="headerlink" title="0x04 WEB"></a>0x04 WEB</h1><p>webshell大合集：</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本：</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集：</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack<em>tools</em>for_me</a></p><p>XSS数据接收平台：</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具：</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>xss多功能扫描器：</p><p><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a></p><p>web漏洞扫描器:</p><p><a href="https://github.com/andresriancho/w3af" target="_blank" rel="noopener">https://github.com/andresriancho/w3af</a></p><p>WEB漏洞扫描器：</p><p><a href="https://github.com/sullo/nikto" target="_blank" rel="noopener">https://github.com/sullo/nikto</a></p><p>渗透常用小工具包：</p><p><a href="https://github.com/leonteale/pentestpackage" target="_blank" rel="noopener">https://github.com/leonteale/pentestpackage</a></p><p>web目录扫描器:</p><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>web向命令注入检测工具：</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>自动化SQL注入检查工具：</p><p><a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">https://github.com/epinna/tplmap</a></p><p>SSL扫描器：</p><p><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a></p><p>安全工具集合：</p><p><a href="https://github.com/codejanus/ToolSuite" target="_blank" rel="noopener">https://github.com/codejanus/ToolSuite</a></p><p>apache日志分析器：</p><p><a href="https://github.com/mthbernardes/ARTLAS" target="_blank" rel="noopener">https://github.com/mthbernardes/ARTLAS</a></p><p>php代码审计工具：</p><p><a href="https://github.com/pwnsdx/BadCode" target="_blank" rel="noopener">https://github.com/pwnsdx/BadCode</a></p><p>web指纹识别扫描：</p><p><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a></p><p>检查网站恶意攻击：</p><p><a href="https://github.com/ciscocsirt/malspider" target="_blank" rel="noopener">https://github.com/ciscocsirt/malspider</a></p><p>wordprees漏洞扫描器：</p><p><a href="https://github.com/wpscanteam/wpscan" target="_blank" rel="noopener">https://github.com/wpscanteam/wpscan</a></p><p>固件漏洞扫描器：</p><p><a href="https://github.com/misterch0c/firminator_backend" target="_blank" rel="noopener">https://github.com/misterch0c/firminator_backend</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理：</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀：</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>git泄露利用EXP：</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本：</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p><a href="https://github.com/owtf/wafbypasser" target="_blank" rel="noopener">https://github.com/owtf/wafbypasser</a></p><p>一款开源WAF：</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><p>http命令行客户端：</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器：</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>DISCUZ漏洞扫描器：</p><p><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a></p><p>自动化代码审计工具</p><p><a href="https://github.com/wufeifei/cobra" target="_blank" rel="noopener">https://github.com/wufeifei/cobra</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/julienbedard/browsersploit" target="_blank" rel="noopener">https://github.com/julienbedard/browsersploit</a></p><p>tomcat自动后门部署：</p><p><a href="https://github.com/mgeeky/tomcatWarDeployer" target="_blank" rel="noopener">https://github.com/mgeeky/tomcatWarDeployer</a></p><p>网络空间指纹扫描器：</p><p><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a></p><p>burpsuit之J2EE扫描插件：</p><p><a href="https://github.com/ilmila/J2EEScan" target="_blank" rel="noopener">https://github.com/ilmila/J2EEScan</a></p><h1 id="0x05-windows域渗透工具"><a href="#0x05-windows域渗透工具" class="headerlink" title="0x05  windows域渗透工具"></a>0x05  windows域渗透工具</h1><p>mimikatz明文注入：</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集：</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集：</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><p>powershell的mimikittenz:</p><p><a href="https://github.com/putterpanda/mimikittenz" target="_blank" rel="noopener">https://github.com/putterpanda/mimikittenz</a></p><p>域渗透教程:</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><h1 id="0x06-Fuzz"><a href="#0x06-Fuzz" class="headerlink" title="0x06 Fuzz"></a>0x06 Fuzz</h1><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h1 id="0x07-漏洞利用及攻击框架"><a href="#0x07-漏洞利用及攻击框架" class="headerlink" title="0x07 漏洞利用及攻击框架"></a>0x07 漏洞利用及攻击框架</h1><p>msf框架：</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>pocsscan攻击框架：</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite攻击框架:</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto攻击框架：</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h1 id="0x08-漏洞POC-amp-EXP"><a href="#0x08-漏洞POC-amp-EXP" class="headerlink" title="0x08 漏洞POC&amp;EXP"></a>0x08 漏洞POC&amp;EXP</h1><p>ExploitDB官方git版本:</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析：</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>CVE-2016-2107:</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC：</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具:</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP:</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP:</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权):</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具:</p><p><a href="http://https//github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本:</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h1 id="0x09-中间人攻击及钓鱼"><a href="#0x09-中间人攻击及钓鱼" class="headerlink" title="0x09 中间人攻击及钓鱼"></a>0x09 中间人攻击及钓鱼</h1><p>中间人攻击框架:</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users:</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>中间人代理工具:</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼:</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h1 id="0x10-密码破解"><a href="#0x10-密码破解" class="headerlink" title="0x10 密码破解"></a>0x10 密码破解</h1><p>密码破解工具:</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器:</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h1 id="0x11-二进制及代码分析工具"><a href="#0x11-二进制及代码分析工具" class="headerlink" title="0x11 二进制及代码分析工具"></a>0x11 二进制及代码分析工具</h1><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp:</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><h1 id="0x12-二进制静态分析工具（python）"><a href="#0x12-二进制静态分析工具（python）" class="headerlink" title="0x12 二进制静态分析工具（python）"></a>0x12 二进制静态分析工具（python）</h1><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB:</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具:</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）:</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具:</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议:</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具:</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h1 id="0x13-EXP编写框架及工具"><a href="#0x13-EXP编写框架及工具" class="headerlink" title="0x13 EXP编写框架及工具"></a>0x13 EXP编写框架及工具</h1><p>二进制EXP编写工具:</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架:</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development:</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具:</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><p>哈希长度扩展攻击EXP：</p><p><a href="https://github.com/citronneur/rdpy" target="_blank" rel="noopener">https://github.com/citronneur/rdpy</a></p><h1 id="0x14-隐写"><a href="#0x14-隐写" class="headerlink" title="0x14 隐写"></a>0x14 隐写</h1><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h1 id="0x15-各类安全资料"><a href="#0x15-各类安全资料" class="headerlink" title="0x15 各类安全资料"></a>0x15 各类安全资料</h1><p>data_hacking合集:</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki:</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》:</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置:</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记:</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料:</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>《DO NOT FUCK WITH A HACKER》:</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><p>各类安全脑洞图：</p><p><a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><p>信息安全流程图：</p><p><a href="https://github.com/SecWiki/sec-chart/" target="_blank" rel="noopener">https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428</a></p><h1 id="0x16-各类CTF资源"><a href="#0x16-各类CTF资源" class="headerlink" title="0x16 各类CTF资源"></a>0x16 各类CTF资源</h1><p>近年ctf writeup大全:</p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2014</a></p><p>fbctf竞赛平台Demo:</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources:</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><p>ctf及黑客资源合集:</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集:</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><h1 id="0x17-各类编程资源"><a href="#0x17-各类编程资源" class="headerlink" title="0x17 各类编程资源"></a>0x17 各类编程资源</h1><p>大礼包（什么都有）:</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook:</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全:</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料:</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project</a></p><p>python框架，库，资源大合集:</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><h1 id="0x18-Python"><a href="#0x18-Python" class="headerlink" title="0x18 Python"></a>0x18 Python</h1><p>python 正则表达式库（用于简化构造复杂的python正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/" target="_blank" rel="noopener">https://github.com/VerbalExpressions/</a></p><p>python任务管理以及命令执行库:</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库:</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>Veil-Evasion免杀项目：</p><p><a href="https://github.com/Veil-Framework/Veil-Evasion" target="_blank" rel="noopener">https://github.com/Veil-Framework/Veil-Evasion</a></p><p>py3 爬虫框架:</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库:</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库:</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集:</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统:</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><h1 id="0x19-科学上网"><a href="#0x19-科学上网" class="headerlink" title="0x19 科学上网"></a>0x19 科学上网</h1><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p><h1 id="0x20-福利"><a href="#0x20-福利" class="headerlink" title="0x20 福利"></a>0x20 福利</h1><p>微信自动抢红包动态库</p><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="noopener">https://github.com/east520/AutoGetRedEnv</a></p><p>微信抢红包插件（安卓版）</p><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="noopener">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a></p><p>hardsed神器:</p><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/hardseed</a></p><h1 id="0x21-甲方安全工程师生存指南"><a href="#0x21-甲方安全工程师生存指南" class="headerlink" title="0x21 甲方安全工程师生存指南"></a>0x21 甲方安全工程师生存指南</h1><p>web索引及日志搜索工具：</p><p><a href="https://github.com/thomaspatzke/WASE" target="_blank" rel="noopener">https://github.com/thomaspatzke/WASE</a></p><p>开源日志采集器：</p><p><a href="https://github.com/wgliang/logcool" target="_blank" rel="noopener">https://github.com/wgliang/logcool</a></p><p>扫描CS结构的web debuger</p><p><a href="https://github.com/Kozea/wdb" target="_blank" rel="noopener">https://github.com/Kozea/wdb</a></p><p>恢复sqlite数据库删除注册信息：</p><p><a href="https://github.com/aramosf/recoversqlite/" target="_blank" rel="noopener">https://github.com/aramosf/recoversqlite/</a></p><p>gps欺骗检测工具:</p><p><a href="https://github.com/zxsecurity/gpsnitch" target="_blank" rel="noopener">https://github.com/zxsecurity/gpsnitch</a></p><p>应急处置响应框架:</p><p><a href="https://github.com/biggiesmallsAG/nightHawkResponse" target="_blank" rel="noopener">https://github.com/biggiesmallsAG/nightHawkResponse</a></p><p>web安全开发指南:</p><p><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="noopener">https://github.com/FallibleInc/security-guide-for-developers</a></p><p>各个知名厂商漏洞测试报告模板：</p><p><a href="https://github.com/juliocesarfort/public-pentesting-reports" target="_blank" rel="noopener">https://github.com/juliocesarfort/public-pentesting-reports </a>linux下恶意代码检测包：</p><p><a href="https://github.com/rfxn/linux-malware-detect" target="_blank" rel="noopener">https://github.com/rfxn/linux-malware-detect</a></p><p>操作系统运行指标可视化框架：</p><p><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">https://github.com/facebook/osquery</a></p><p>恶意代码分析系统：</p><p><a href="https://github.com/cuckoosandbox/cuckoo" target="_blank" rel="noopener">https://github.com/cuckoosandbox/cuckoo</a></p><p>定期搜索及存储web应用：</p><p><a href="https://github.com/Netflix/Scumblr" target="_blank" rel="noopener">https://github.com/Netflix/Scumblr</a></p><p>事件响应框架：</p><p><a href="https://github.com/google/grr" target="_blank" rel="noopener">https://github.com/google/grr</a></p><p>综合主机监控检测平台：</p><p><a href="https://github.com/ossec/ossec-hids" target="_blank" rel="noopener">https://github.com/ossec/ossec-hids</a></p><p>分布式实时数字取证系统：</p><p><a href="https://github.com/mozilla/mig" target="_blank" rel="noopener">https://github.com/mozilla/mig</a></p><p>Microsoft &amp; Unix 文件系统及硬盘取证工具：</p><p><a href="https://github.com/sleuthkit/sleuthkit" target="_blank" rel="noopener">https://github.com/sleuthkit/sleuthkit</a></p><h1 id="0x22-蜜罐"><a href="#0x22-蜜罐" class="headerlink" title="0x22 蜜罐"></a>0x22 蜜罐</h1><p>SSH蜜罐：</p><p><a href="https://github.com/desaster/kippo" target="_blank" rel="noopener">https://github.com/desaster/kippo</a></p><p>蜜罐集合资源：</p><p><a href="https://github.com/paralax/awesome-honeypots" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots</a></p><p>kippo进阶版蜜罐：</p><p><a href="https://github.com/micheloosterhof/cowrie" target="_blank" rel="noopener">https://github.com/micheloosterhof/cowrie</a></p><p>SMTP 蜜罐：</p><p><a href="https://github.com/awhitehatter/mailoney" target="_blank" rel="noopener">https://github.com/awhitehatter/mailoney</a></p><p>web应用程序蜜罐：</p><p><a href="https://github.com/mushorg/glastopf" target="_blank" rel="noopener">https://github.com/mushorg/glastopf</a></p><p>数据库蜜罐：</p><p><a href="https://github.com/jordan-wright/elastichoney" target="_blank" rel="noopener">https://github.com/jordan-wright/elastichoney</a></p><p>web蜜罐：</p><p><a href="https://github.com/atiger77/Dionaea" target="_blank" rel="noopener">https://github.com/atiger77/Dionaea</a></p><h1 id="0x23-远控"><a href="#0x23-远控" class="headerlink" title="0x23 远控"></a>0x23 远控</h1><p>用gmail充当C&amp;C服务器的后门</p><p><a href="https://github.com/byt3bl33d3r/gcat" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/gcat</a></p><p>开源的远控：</p><p><a href="https://github.com/UbbeLoL/uRAT" target="_blank" rel="noopener">https://github.com/UbbeLoL/uRAT</a></p><p>c#远控：</p><p><a href="https://github.com/hussein-aitlahcen/BlackHole" target="_blank" rel="noopener">https://github.com/hussein-aitlahcen/BlackHole</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。&lt;/p&gt;
&lt;p&gt;转载链接：&lt;a href=&quot;https://www.t00ls.net/pytools.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.t00ls.net/pytools.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="转载" scheme="https://www.mad-coding.cn/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>密码生成工具cewl的使用</title>
    <link href="https://www.mad-coding.cn/2019/08/22/%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-cewl%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.mad-coding.cn/2019/08/22/密码生成工具-cewl的使用/</id>
    <published>2019-08-22T08:53:50.000Z</published>
    <updated>2019-08-22T09:27:29.644Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天给大家介绍的是<code>Linux</code>字典生成工具<code>cewl</code>，并学习更多的高级参数用法。首先先简单的介绍一个<code>cewl</code>工具，该工具最大的功能就能能够爬取网站上的信息并自动生成字典，然后就可以使用该字典配合<code>hydra</code>去进行暴力破解，该工具常用于<code>CTF</code>中攻靶拿<code>Flag</code>使用。<code>OK</code>下面开始进入正题。</p><a id="more"></a><h1 id="0x01-环境需求"><a href="#0x01-环境需求" class="headerlink" title="0x01 环境需求"></a>0x01 环境需求</h1><blockquote><p>cewl需要安装在Linux中使用，我使用的环境事kali Linux</p></blockquote><p>如果使用的是其他<code>Linux</code>版本的系统话，需要使用命令去安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sodo apt-get install cewl</span><br></pre></td></tr></table></figure><p>命令行运行截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822170114.png" class="lozad"></p><h1 id="0x02-参数说明"><a href="#0x02-参数说明" class="headerlink" title="0x02 参数说明"></a>0x02 参数说明</h1><h2 id="2-1-可选参数"><a href="#2-1-可选参数" class="headerlink" title="2.1 可选参数"></a>2.1 可选参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-h, –help：显示帮助。</span><br><span class="line">-k, –keep：保存下载文件。</span><br><span class="line">-d &lt;x&gt;, –depth &lt;x&gt;：爬行深度，默认2。</span><br><span class="line">-m, –min_world_length：最小长度，默认最小长度为3。</span><br><span class="line">-o, –offsite：允许爬虫访问其他站点。</span><br><span class="line">-w, –write：将输出结果写入到文件。</span><br><span class="line">-u, –ua &lt;agent&gt;：设置user agent。</span><br><span class="line">-n, –no-words：不输出字典。</span><br><span class="line">–with-numbers：允许单词中存在数字，跟字母一样。</span><br><span class="line">-a, –meta：包括元数据。</span><br><span class="line">–meta_file file：输出元数据文件。</span><br><span class="line">-e, –email：包括email地址。</span><br><span class="line">–email_file &lt;file&gt;：输入邮件地址文件。</span><br><span class="line">–meta-temp-dir &lt;dir&gt;：exiftool解析文件时使用的临时目录，默认是/temp。</span><br><span class="line">-c, –count：显示发现的每个单词的数量。</span><br><span class="line">-v, –verbose：verbose。</span><br><span class="line">–debug:提取调试信息。</span><br></pre></td></tr></table></figure><h2 id="2-2-认证"><a href="#2-2-认证" class="headerlink" title="2.2 认证"></a>2.2 认证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">–auth_type：Digest或者basic认证。</span><br><span class="line">–auth_user：用户名认证。</span><br><span class="line">–auth_pass：密码认证。</span><br></pre></td></tr></table></figure><h2 id="2-3-代理"><a href="#2-3-代理" class="headerlink" title="2.3 代理"></a>2.3 代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">–proxy_host：代理主机。</span><br><span class="line">–proxy_port：代理端口，默认8080。</span><br><span class="line">–proxy_username：用户名代理。</span><br><span class="line">–proxy_password：密码代理。</span><br></pre></td></tr></table></figure><h1 id="0x03-实例使用"><a href="#0x03-实例使用" class="headerlink" title="0x03 实例使用"></a>0x03 实例使用</h1><p><strong>语法：</strong><code>cewl &lt;url&gt; [options]</code></p><h2 id="3-1-简单用法"><a href="#3-1-简单用法" class="headerlink" title="3.1 简单用法"></a>3.1 简单用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl https://xxxx.com</span><br></pre></td></tr></table></figure><p><strong>用法说明：</strong><code>cewl</code>会爬行该网页，抓取网页中的英文字母，没有设置最小字母长度的情况下默认是3,可以使用<code>-m</code>来指定最小单词长度。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171448.png" class="lozad"></p><p>##3.2 保存输出结果</p><p>将指定长度的结果报错在<code>txt</code>文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cewl https://digi.ninja/ -m 5 -w test.txt  </span><br><span class="line"><span class="comment">##爬行该页面上最小长度为5的单词并将结果保存在test.txt文档中</span></span><br></pre></td></tr></table></figure><p>然后输入<code>ls -lh</code>来查看结果文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171645.png" class="lozad"></p><p>使用<code>cat test.txt</code>命令来查看</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171700.png" class="lozad"></p><blockquote><p>ps:如果该站点的英文单词特别多的话，需要相当一段时间。</p></blockquote><p>然后输入<code>ls -lh</code>来查看结果文件</p><p>##3.3 从网站获取email地址</p><p>你可以使用<code>-e</code>参数来启用邮件参数，配合<code>-n</code>参数使用，<code>-n</code>参数是在爬行给定网站时隐藏生成的单词列表：</p><p>由于刚刚的测试站点上没有<code>email</code>地址，为了能更好的展示出来，换了一个有<code>email</code>地址的网页。结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl 目标站点 -e -n</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171934.png" class="lozad"></p><h2 id="3-4-统计网站中单词的重复次数"><a href="#3-4-统计网站中单词的重复次数" class="headerlink" title="3.4 统计网站中单词的重复次数"></a>3.4 <strong>统计网站中单词的重复次数</strong></h2><p>一个英文网站中，不免有很多重复的单词，如果你想统计每个单词的重复次数，可以使用<code>-c</code>命令</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171959.png" class="lozad"></p><h2 id="3-5-增加爬行深度"><a href="#3-5-增加爬行深度" class="headerlink" title="3.5 增加爬行深度"></a>3.5 <strong>增加爬行深度</strong></h2><p>如果你想增加爬行等级，来遍历网站中更多的单词来生成更大的字典，你可以使用<code>-d</code>参数，并指定一个爬行深度</p><p>等级来进行更加深入的爬行，默认等级是2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl https://portswigger.net/blog/http-desync-attacks-request-smuggling-reborn -d 3</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822172036.png" class="lozad"></p><h2 id="3-6-提取调试信息"><a href="#3-6-提取调试信息" class="headerlink" title="3.6 提取调试信息"></a>3.6 提取调试信息</h2><p>你可以使用<code>--debug</code>参数来启用调试模式，显示爬行网站时的错误和原始详细信息：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822172120.png" class="lozad"></p><h2 id="3-7-Verbose模式"><a href="#3-7-Verbose模式" class="headerlink" title="3.7 Verbose模式"></a>3.7 <strong>Verbose模式</strong></h2><p>为了扩大网站的爬行结果来获取网站更加完整详细的信息，你可以加-v参数，也就是<code>verbose</code>模式。它不会生成字典，而是会<code>dump</code>网站上的信息。</p><h2 id="3-8-生成数字字典"><a href="#3-8-生成数字字典" class="headerlink" title="3.8 生成数字字典"></a>3.8 生成数字字典</h2><p>如果你想生成字母数字字典，你可以使用—with-numbers参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://testphp.vulnweb.com/ --with-numbers</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822172223.png" class="lozad"></p><h2 id="3-9-cewl摘要-基础认证"><a href="#3-9-cewl摘要-基础认证" class="headerlink" title="3.9 cewl摘要/基础认证"></a>3.9 <strong>cewl摘要/基础认证</strong></h2><p>如果存在一个认证页面来登录网站，那么上面的配置就行不通了，为了生成字典，我们需要使用下面的参数来绕过认证页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">–auth_type: Digest/basic</span><br><span class="line"> –auth_user:用户名</span><br><span class="line"> –auth_pass: 密码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.1.105/dvwa/login.php --auth_type Digest --auth_user  --用户名 auth_pass 密码 -v</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.1.105/dvwa/login.php --auth_type basic --auth_user admin --auth_pass password -v</span><br></pre></td></tr></table></figure><h2 id="3-9-代理URL"><a href="#3-9-代理URL" class="headerlink" title="3.9 代理URL"></a>3.9 <strong>代理URL</strong></h2><p>如果网站使用了代理服务器，那么cewl的默认命令就无法生成字典了，比如下面这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl -w dict.txt http://192.168.1.103/wordpress/</span><br></pre></td></tr></table></figure><p>不过你可以使用—proxy参数来开启代理URL，这样就可以生成字典了，比如下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl --proxy_host 192.168.1.103 --proxy_port 3128 -w dict.txt http://192.168.1.103/wordpress/</span><br></pre></td></tr></table></figure><p>如下图所示，执行第二条命令之后，成功的输出了单词列表：</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.4hou.com/tools/14693.html" target="_blank" rel="noopener">https://www.4hou.com/tools/14693.html</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;今天给大家介绍的是&lt;code&gt;Linux&lt;/code&gt;字典生成工具&lt;code&gt;cewl&lt;/code&gt;，并学习更多的高级参数用法。首先先简单的介绍一个&lt;code&gt;cewl&lt;/code&gt;工具，该工具最大的功能就能能够爬取网站上的信息并自动生成字典，然后就可以使用该字典配合&lt;code&gt;hydra&lt;/code&gt;去进行暴力破解，该工具常用于&lt;code&gt;CTF&lt;/code&gt;中攻靶拿&lt;code&gt;Flag&lt;/code&gt;使用。&lt;code&gt;OK&lt;/code&gt;下面开始进入正题。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>工作之杂谈</title>
    <link href="https://www.mad-coding.cn/2019/08/22/%E5%B7%A5%E4%BD%9C%E4%B9%8B%E6%9D%82%E8%B0%88/"/>
    <id>https://www.mad-coding.cn/2019/08/22/工作之杂谈/</id>
    <published>2019-08-22T08:22:41.000Z</published>
    <updated>2019-08-22T10:04:03.194Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>简单谈谈在第一家公司工作近半年的感受。emmm，我的语文打小就不好，所以不会写软文，只会写大白话。做做记录而已啦~</p><a id="more"></a><h1 id="0x01-正文"><a href="#0x01-正文" class="headerlink" title="0x01 正文"></a>0x01 正文</h1><p>转眼间，我在第一家公司工作有近半年的时间了，在这半年的时间里，怎么说尼，我收获到了知识、工作技能、朋友，虽然我工作的这家公司不是什么500强公司，但是公司的工作氛围还可以，并且自己在做完工作后可以看书提升自己的技能。下面来简单介绍一下这几个月的工作和生活情况。</p><h2 id="1-1-第一个月"><a href="#1-1-第一个月" class="headerlink" title="1.1 第一个月"></a>1.1 第一个月</h2><p>  刚到公司的第一天，我来的还挺早，看到很多陌生的同事，我也不知道咋办，我，情商比较低，so，尴尬的喊哥，喊姐的打招呼。然后把公司的同事QQ都加了一遍（是不是有点小学生的感觉 0.0）。</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;简单谈谈在第一家公司工作近半年的感受。emmm，我的语文打小就不好，所以不会写软文，只会写大白话。做做记录而已啦~&lt;/p&gt;
    
    </summary>
    
      <category term="记录生活" scheme="https://www.mad-coding.cn/categories/%E8%AE%B0%E5%BD%95%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="工作" scheme="https://www.mad-coding.cn/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>4款GitHub泄露敏感信息搜索工具的安装使用与比较</title>
    <link href="https://www.mad-coding.cn/2019/08/22/4%E6%AC%BEGitHub%E6%B3%84%E9%9C%B2%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%AF%94%E8%BE%83/"/>
    <id>https://www.mad-coding.cn/2019/08/22/4款GitHub泄露敏感信息搜索工具的安装使用与比较/</id>
    <published>2019-08-22T08:20:02.000Z</published>
    <updated>2019-08-22T10:08:44.561Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>GitHub是一个免费开源的网站，是每个程序员最喜欢发布代码，分享技术的地方，这就导致了一个问题，程序员上传的代码中可能包含了项目中的敏感信息，比如数据库的链接地址和账号密码等。今天来给大家介绍4款发现GitHub中泄露的敏感信息的工具，并将它们做个对比。</p><a id="more"></a><h1 id="0x01-gitrob"><a href="#0x01-gitrob" class="headerlink" title="0x01  gitrob"></a>0x01  gitrob</h1><p>Ruby开发，支持通过postgresql数据库<br><a href="https://github.com/michenriksen/gitrob" target="_blank" rel="noopener">https://github.com/michenriksen/gitrob</a></p><h1 id="0x02-weakfilescan"><a href="#0x02-weakfilescan" class="headerlink" title="0x02 weakfilescan"></a>0x02 weakfilescan</h1><p>weakfilescan<br>Python开发，多线程，猪猪侠开发中文注释，个性化定制，需要beautifulsoup4<br>用于渗透人员在对网站进行网站渗透时查找敏感文件（配置文件、临时文件）、敏感目录，会首先爬取目标站点的三层目录资源，生成目录FUZZ和文件FUZZ<br><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a></p><h1 id="0x03-GitPrey"><a href="#0x03-GitPrey" class="headerlink" title="0x03 GitPrey"></a>0x03 GitPrey</h1><p>GitPrey<br>Python开发，国人开发中文支持，用于企业搜索关键词，及时发现潜在的敏感信息，需要登录<br><a href="https://github.com/repoog/GitPrey" target="_blank" rel="noopener">https://github.com/repoog/GitPrey</a></p><h1 id="0x04-GitMiner"><a href="#0x04-GitMiner" class="headerlink" title="0x04 GitMiner"></a>0x04 GitMiner</h1><p>GitMiner<br>Python开发，功能简单<br><a href="https://github.com/UnkL4b/GitMiner" target="_blank" rel="noopener">https://github.com/UnkL4b/GitMiner</a>  </p><h1 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h1><p><a href="https://www.cnblogs.com/sch01ar/p/7625607.html" target="_blank" rel="noopener">https://www.cnblogs.com/sch01ar/p/7625607.html</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;GitHub是一个免费开源的网站，是每个程序员最喜欢发布代码，分享技术的地方，这就导致了一个问题，程序员上传的代码中可能包含了项目中的敏感信息，比如数据库的链接地址和账号密码等。今天来给大家介绍4款发现GitHub中泄露的敏感信息的工具，并将它们做个对比。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="信息泄露" scheme="https://www.mad-coding.cn/tags/%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2/"/>
    
  </entry>
  
  <entry>
    <title>PicGo+GitHub打造自己的图床</title>
    <link href="https://www.mad-coding.cn/2019/08/22/picbed-GitHub%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
    <id>https://www.mad-coding.cn/2019/08/22/picbed-GitHub打造自己的图床/</id>
    <published>2019-08-22T07:16:15.000Z</published>
    <updated>2019-08-22T09:36:40.685Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>很多朋友之前使用七牛云作为自己博客的图床，但是在试用域名到到期后，所有的图片都挂掉了，造成了不必要的麻烦。今天给大家介绍 picbed+GitHub打造一个专属于自己的图床，将所有的图片都托管到GitHub上，写作时，只需要功按几个快捷键就可以完成图片的上传和展示，让你爱上创作。</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>需要的东西：</p><p>GitHub账号</p><p>picbed图床工具</p></blockquote><h2 id="1-1-GitHub账号申请"><a href="#1-1-GitHub账号申请" class="headerlink" title="1.1 GitHub账号申请"></a>1.1 GitHub账号申请</h2><p>出门右拐百度</p><h2 id="1-2-新建图床仓库"><a href="#1-2-新建图床仓库" class="headerlink" title="1.2 新建图床仓库"></a>1.2 新建图床仓库</h2><p>点击 git 主页右上角的 <code>+</code> 创建 <code>New repository</code>；</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822153421.png" class="lozad"></p><p>填写仓库信息，例如我就创建了一个 <code>cloudimg</code> 的仓库。这里注意，仓库得设置为 <code>Public</code> 因为后面通过客户端访问算是外部访问，因此无法访问 <code>Private</code> ，这样的话图片传上来之后只能存储不能显示。所以要设置为 <code>Public</code>。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822153247.png" class="lozad"></p><h2 id="1-3-创建-token-并复制保存"><a href="#1-3-创建-token-并复制保存" class="headerlink" title="1.3 创建 token 并复制保存"></a>1.3 创建 token 并复制保存</h2><p>此时仓库已经建立，点击右上角头像，然后进入设置；</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154036.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154102.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154201.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154229.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154427.png" class="lozad"></p><p>然后拉到下方创建，创建成功后，会出现下方的一串token，记得要复制，只会出现一次，不过实在忘记的话，可以删除了重新创建一个。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154526.png" class="lozad"></p><h1 id="0x02-PicGo-客户端配置"><a href="#0x02-PicGo-客户端配置" class="headerlink" title="0x02 PicGo 客户端配置"></a>0x02 PicGo 客户端配置</h1><h2 id="2-1-PicGod的下载安装"><a href="#2-1-PicGod的下载安装" class="headerlink" title="2.1 PicGod的下载安装"></a>2.1 PicGod的下载安装</h2><p>PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多。</p><p>git地址：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p><p>Win版下载链接：<a href="https://pan.baidu.com/s/17KycPMoqNCnc1cR_yQO8nQ" target="_blank" rel="noopener">百度云</a> 密码：PicG</p><p>##2.2 PicGod的配置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154935.png" class="lozad"></p><p>注意：设置自定义域名不要填，不然会一直提示上传图片失败，具体原因我也不知道为什么，在网上找的教程都配置了，但是我配置了以后上传图片总是失败，也算是一个大坑了，</p><h2 id="2-3-快捷键的设置"><a href="#2-3-快捷键的设置" class="headerlink" title="2.3 快捷键的设置"></a>2.3 快捷键的设置</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822155154.png" class="lozad"></p><p>想用什么快捷键只需要在键盘上安装几个键然后点击确定就行了，我这里的快捷键是Ctrl+Shift+C</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822155219.png" class="lozad"></p><p>开启开机自启和使用时间戳将上传的文件重命名</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822155353.png" class="lozad"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>配置好上传快捷键以后，还需要安装一个autocopy插件，该插件可以在你上传成功后，自动生成Markdown语法的图片链接到剪切板，只需要复制到Markdown编辑器就可以预览图片，简直方便至极。只需搜索安装就行了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822160535.png" class="lozad"></p><p>上传成功的相册专区</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822160606.png" class="lozad"></p><p>如果图片的Markdown链接没有自动复制到剪切板，只需要在相册中重新点击一下对应图片下方的复制按钮即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822160722.png" class="lozad"></p><h1 id="0x03-吐槽"><a href="#0x03-吐槽" class="headerlink" title="0x03 吐槽"></a>0x03 吐槽</h1><p>通过上面的操作，我们已经可以成功的将图片上传到GitHub了，但是有一点不得不吐槽一下，就是GitHub毕竟是国外的，所以我们上传到GitHub的图片加载的速度会有点慢，所以我就研究了一下微博图床，毕竟微博是国内的，然后就有了下面的事件。</p><p>配置好微博的图床</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822161539.png" class="lozad"></p><p>很开心的上传了图片，然后使用hexo本地加载一切正常，但是很奇怪的是部署到博客中的时候，浙西图片全部都显示404，我当时的心情是这样的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822161221.png" class="lozad"></p><p>然后我又不得不重新将图片的链接换成了GitHub图床上的链接才恢复正常。</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.jianshu.com/p/9d91355e8418" target="_blank" rel="noopener">https://www.jianshu.com/p/9d91355e8418</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;很多朋友之前使用七牛云作为自己博客的图床，但是在试用域名到到期后，所有的图片都挂掉了，造成了不必要的麻烦。今天给大家介绍 picbed+GitHub打造一个专属于自己的图床，将所有的图片都托管到GitHub上，写作时，只需要功按几个快捷键就可以完成图片的上传和展示，让你爱上创作。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://www.mad-coding.cn/categories/hexo/"/>
    
    
      <category term="图床" scheme="https://www.mad-coding.cn/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>LDAP-Admin-Tools工具安装激活教程</title>
    <link href="https://www.mad-coding.cn/2019/08/22/LDAP-Admin-Tools%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"/>
    <id>https://www.mad-coding.cn/2019/08/22/LDAP-Admin-Tools工具安装激活教程/</id>
    <published>2019-08-22T02:47:23.000Z</published>
    <updated>2019-08-27T12:28:28.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。</p><a id="more"></a><h1 id="0x01-下载安装"><a href="#0x01-下载安装" class="headerlink" title="0x01 下载安装"></a>0x01 下载安装</h1><p>LDAP下载：<a href="https://www.ldapsoft.com/download.html" target="_blank" rel="noopener">传送门</a> ,选择相应的系统版统下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105013.png" class="lozad"></p><p>下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。</p><h1 id="0x02-激活信息"><a href="#0x02-激活信息" class="headerlink" title="0x02  激活信息"></a>0x02  激活信息</h1><p> 不同版本的软件激活信息</p><h2 id="2-1-LDAP-Admin-Tool-Professional-Edition"><a href="#2-1-LDAP-Admin-Tool-Professional-Edition" class="headerlink" title="2.1 LDAP Admin Tool(Professional Edition)"></a>2.1 LDAP Admin Tool(Professional Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-2-LDAP-Admin-Tool-Standard-Edition"><a href="#2-2-LDAP-Admin-Tool-Standard-Edition" class="headerlink" title="2.2 LDAP Admin Tool(Standard Edition)"></a>2.2 LDAP Admin Tool(Standard Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-3-AD-Admin-amp-Reporting-Tool"><a href="#2-3-AD-Admin-amp-Reporting-Tool" class="headerlink" title="2.3 AD Admin &amp; Reporting Tool"></a>2.3 AD Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool"><a href="#2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool" class="headerlink" title="2.4 LDAP Plus AD HelpDesk Professional Tool"></a>2.4 LDAP Plus AD HelpDesk Professional Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-5-LDAP-Admin-amp-Reporting-Tool"><a href="#2-5-LDAP-Admin-amp-Reporting-Tool" class="headerlink" title="2.5 LDAP Admin &amp; Reporting Tool"></a>2.5 LDAP Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;</span><br><span class="line">,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-6-AD-Admin-Tool"><a href="#2-6-AD-Admin-Tool" class="headerlink" title="2.6 AD Admin Tool"></a>2.6 AD Admin Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line"></span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=&quot;,</span><br><span class="line"></span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259487000-4718859487000&quot;</span><br></pre></td></tr></table></figure><h1 id="0x03-激活步骤"><a href="#0x03-激活步骤" class="headerlink" title="0x03 激活步骤"></a>0x03 激活步骤</h1><p>打开软件后找到工具栏上的<code>license</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105418.png" class="lozad"></p><p>然后填上对应版本的激活邮箱和key</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105504.png" class="lozad"></p><p>填好后点击next需要继续输入activationCode ，在我给的激活信息里面</p><p>激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105527.png" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="LADP" scheme="https://www.mad-coding.cn/tags/LADP/"/>
    
  </entry>
  
  <entry>
    <title>LDAP-Admin-Tools工具安装激活教程</title>
    <link href="https://www.mad-coding.cn/2019/08/22/LDAP%E5%8C%BF%E5%90%8D%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/"/>
    <id>https://www.mad-coding.cn/2019/08/22/LDAP匿名访问漏洞/</id>
    <published>2019-08-22T02:47:23.000Z</published>
    <updated>2019-08-22T09:50:19.074Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。</p><a id="more"></a><h1 id="0x01-下载安装"><a href="#0x01-下载安装" class="headerlink" title="0x01 下载安装"></a>0x01 下载安装</h1><p>LDAP下载：<a href="https://www.ldapsoft.com/download.html" target="_blank" rel="noopener">传送门</a> ,选择相应的系统版统下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105013.png" class="lozad"></p><p>下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。</p><h1 id="0x02-激活信息"><a href="#0x02-激活信息" class="headerlink" title="0x02  激活信息"></a>0x02  激活信息</h1><p> 不同版本的软件激活信息</p><h2 id="2-1-LDAP-Admin-Tool-Professional-Edition"><a href="#2-1-LDAP-Admin-Tool-Professional-Edition" class="headerlink" title="2.1 LDAP Admin Tool(Professional Edition)"></a>2.1 LDAP Admin Tool(Professional Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-2-LDAP-Admin-Tool-Standard-Edition"><a href="#2-2-LDAP-Admin-Tool-Standard-Edition" class="headerlink" title="2.2 LDAP Admin Tool(Standard Edition)"></a>2.2 LDAP Admin Tool(Standard Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-3-AD-Admin-amp-Reporting-Tool"><a href="#2-3-AD-Admin-amp-Reporting-Tool" class="headerlink" title="2.3 AD Admin &amp; Reporting Tool"></a>2.3 AD Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool"><a href="#2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool" class="headerlink" title="2.4 LDAP Plus AD HelpDesk Professional Tool"></a>2.4 LDAP Plus AD HelpDesk Professional Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-5-LDAP-Admin-amp-Reporting-Tool"><a href="#2-5-LDAP-Admin-amp-Reporting-Tool" class="headerlink" title="2.5 LDAP Admin &amp; Reporting Tool"></a>2.5 LDAP Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;</span><br><span class="line">,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-6-AD-Admin-Tool"><a href="#2-6-AD-Admin-Tool" class="headerlink" title="2.6 AD Admin Tool"></a>2.6 AD Admin Tool</h2><p>“email”:”<a href="mailto:myluamas@gmail.com" target="_blank" rel="noopener">myluamas@gmail.com</a>“,</p><p>“registrationKey”:”VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=”,</p><p>“activationCode”:”STARTTIMEGMT1565259487000-4718859487000”</p><h1 id="0x03-激活步骤"><a href="#0x03-激活步骤" class="headerlink" title="0x03 激活步骤"></a>0x03 激活步骤</h1><p>打开软件后找到工具栏上的<code>license</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105418.png" class="lozad"></p><p>然后填上对应版本的激活邮箱和key</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105504.png" class="lozad"></p><p>填好后点击next需要继续输入activationCode ，在我给的激活信息里面</p><p>激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105527.png" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="LADP" scheme="https://www.mad-coding.cn/tags/LADP/"/>
    
  </entry>
  
  <entry>
    <title>AppScan 9.0.3.13 破解版本安装教程</title>
    <link href="https://www.mad-coding.cn/2019/08/21/AppScan-9-0-3-13-%E7%A0%B4%E8%A7%A3%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://www.mad-coding.cn/2019/08/21/AppScan-9-0-3-13-破解版本安装教程/</id>
    <published>2019-08-21T07:57:10.000Z</published>
    <updated>2019-08-21T09:39:25.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近AppScan 9.0.3.13 版本发布，国内已经以后大佬破解成功了，下面来给大家讲讲如何安装和破解的。</p><a id="more"></a><h1 id="0x01-AppScan简介"><a href="#0x01-AppScan简介" class="headerlink" title="0x01 AppScan简介"></a>0x01 AppScan简介</h1><p>IBM AppScan是一款非常好用且功能强大的Web 应用安全测试工具，曾以 Watchfire AppScan的名称享誉业界，Rational AppScan 可自动化 Web 应用的安全漏洞评估工作，能扫描和检测所有常见的 Web 应用安全漏洞，例如 SQL<br>注入（SQL-injection）、跨站点脚本攻击（cross-site scripting）、缓冲区溢出（buffer overflow）及最新的 Flash/Flex 应用及 Web 2.0 应用曝露等方面安全漏洞的扫描。</p><h1 id="0x02-开始安装"><a href="#0x02-开始安装" class="headerlink" title="0x02 开始安装"></a>0x02 开始安装</h1><p>下载：<a href="https://pan.baidu.com/s/1uy2CPCkGRNVZ-vCvnpjJiA" target="_blank" rel="noopener">百度网盘传送门</a>  密码：zkyy</p><p>下载完成后解压出来 双击文件夹中的.exe文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160158.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160211.png" class="lozad"></p><p>出现下面这个原因是因为没有安装.net框架，而APPscan是需要这个框架环境的。所以软件会自动帮我们下载框架安装。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160246.png" class="lozad"></p><p>框架下载中，耐性等待，可能时间会有点长。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160351.png" class="lozad"></p><p>安装完框架以后会提示是否立即重启，点击立即重启就好</p><p>重启过后，再次进入安装界面</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160511.png" class="lozad"></p><p>一切默认即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160527.png" class="lozad"></p><p>耐心等待一会，等待安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160538.png" class="lozad"></p><h1 id="0x03-开始破解"><a href="#0x03-开始破解" class="headerlink" title="0x03 开始破解"></a>0x03 开始破解</h1><p>将下载的压缩包中的另个压缩包解压出来，复制里面的dll文件到APPscan的安装目录下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160604.png" class="lozad"></p><p>进入APPscan的默认安装路径，如果是自己自定义的目录的话，找到就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramFiles (x86)\IBM\AppScan Standard</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160710.png" class="lozad"></p><p>然后打开APPscan,按照下面的操作导入证书</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160727.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160802.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160835.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160846.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160857.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160911.png" class="lozad"></p><p>破解完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160929.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>安装破解基本操作。一顿默认配置，搞定。哈哈哈哈</p><p>新版老本对比了一下，创建扫描的界面修改了一下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821161638.png" class="lozad"></p><p>增加了云扫描</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821161721.png" class="lozad"></p><p>其他的，大家自己与研究吧</p><p>附上官方教程视频</p><iframe width="900" height="506" src="https://www.youtube.com/embed/NiC7SJpwo80" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><iframe width="900" height="506" src="https://www.youtube.com/embed/JFj0pDY9pm8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;最近AppScan 9.0.3.13 版本发布，国内已经以后大佬破解成功了，下面来给大家讲讲如何安装和破解的。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="APPscan" scheme="https://www.mad-coding.cn/tags/APPscan/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试面试宝典</title>
    <link href="https://www.mad-coding.cn/2019/08/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
    <id>https://www.mad-coding.cn/2019/08/20/渗透测试面试宝典/</id>
    <published>2019-08-20T07:20:30.000Z</published>
    <updated>2019-08-22T09:57:48.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>随着科学技术的发展，网络安全已经提升到了国家层面。习大大说：“没有网络安全就没有国家安全。”那么在网络安全大热的今天，如何才能历经重重磨难才能达到公司需要的高度，才能符合面试官的口味,才能在众多才子中脱颖而出尼？那就好好看看博主这篇面试宝典吧，内容均是从网络上采集或者自己总结，有问题希望大家可以指出，一起进步！nice~</p><a id="more"></a><h1 id="0x01-简述漏洞挖掘的思路"><a href="#0x01-简述漏洞挖掘的思路" class="headerlink" title="0x01 简述漏洞挖掘的思路"></a>0x01 简述漏洞挖掘的思路</h1><h2 id="1-1-信息收集"><a href="#1-1-信息收集" class="headerlink" title="1. 1 信息收集"></a>1. 1 信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等）</span><br><span class="line">网站指纹识别（包括，cms，cdn，证书等），dns记录</span><br><span class="line">whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等）</span><br><span class="line">子域名收集，旁站，C段等</span><br><span class="line">google hacking针对化搜索，pdf文件，中间件版本，弱口令扫描等</span><br><span class="line">扫描网站目录结构，爆后台，网站banner，测试文件，备份等敏感文件泄漏等</span><br><span class="line">传输协议，通用漏洞，exp，github源码等</span><br></pre></td></tr></table></figure><h2 id="1-2-漏洞挖掘"><a href="#1-2-漏洞挖掘" class="headerlink" title="1.2 漏洞挖掘"></a>1.2 漏洞挖掘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">浏览网站，看看网站规模，功能，特点等</span><br><span class="line">端口，弱口令，目录等扫描,对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。</span><br><span class="line">XSS，SQL注入，上传，命令注入，CSRF，cookie安全检测，敏感信息，通信数据传输，暴力破解，任意文件上传，越权访问，未授权访问，目录遍历，文件 包含，重放攻击（短信轰炸），服务器漏洞检测，最后使用漏扫工具等</span><br></pre></td></tr></table></figure><h2 id="1-3-漏洞利用-amp-权限提升"><a href="#1-3-漏洞利用-amp-权限提升" class="headerlink" title="1.3 漏洞利用&amp;权限提升"></a>1.3 漏洞利用&amp;权限提升</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql提权，serv-u提权，oracle提权</span><br><span class="line">windows 溢出提权</span><br><span class="line">linux脏牛,内核漏洞提权</span><br></pre></td></tr></table></figure><h2 id="1-4-清除测试数据-amp-输出报告"><a href="#1-4-清除测试数据-amp-输出报告" class="headerlink" title="1.4 清除测试数据&amp;输出报告"></a>1.4 清除测试数据&amp;输出报告</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">日志、测试数据的清理</span><br><span class="line">总结，输出渗透测试报告，附修复方案</span><br></pre></td></tr></table></figure><h2 id="1-5-复测"><a href="#1-5-复测" class="headerlink" title="1.5 复测"></a>1.5 复测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">验证并发现是否有新漏洞，输出报告，归档</span><br></pre></td></tr></table></figure><h1 id="0x02-面试题（一）"><a href="#0x02-面试题（一）" class="headerlink" title="0x02  面试题（一）"></a>0x02  面试题（一）</h1><h2 id="2-1-拿到一个待检测的站，你觉得应该先做什么？"><a href="#2-1-拿到一个待检测的站，你觉得应该先做什么？" class="headerlink" title="2.1 拿到一个待检测的站，你觉得应该先做什么？"></a>2.1 拿到一个待检测的站，你觉得应该先做什么？</h2><h3 id="2-1-1-信息收集"><a href="#2-1-1-信息收集" class="headerlink" title="2.1.1 信息收集"></a>2.1.1 信息收集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、获取域名的whois信息,获取注册者邮箱姓名电话等，丢社工库里看看有没有泄露密码，然后尝试用泄露的密码进行登录后台。用邮箱做关键词进行丢进搜索引擎。利用搜索到的关联信息找出其他邮箱进而得到常用社交账号。社工找出社交账号，里面或许会找出管理员设置密码的习惯 。利用已有信息生成专用字典。</span><br><span class="line">2、查询服务器旁站以及子域名站点，因为主站一般比较难，所以先看看旁站有没有通用性的cms或者其他漏洞。</span><br><span class="line">3、查看服务器操作系统版本，web中间件，看看是否存在已知的漏洞，比如IIS，APACHE,NGINX的解析漏洞</span><br><span class="line">4、查看IP，进行IP地址端口扫描，对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。</span><br><span class="line">5、扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php探针</span><br><span class="line">6、google hack 进一步探测网站的信息，后台，敏感文件</span><br></pre></td></tr></table></figure><p>如何扩大攻击面呢？<br>1.收集尽量全的企业域名（包括各种子域名以及子公司的域名，越全越好）<br>2.收集尽量全的企业申请的公网 IP<br>3.对所有收集到的域名以及 IP 地址进行端口扫描（由于时间可能比较久，所以可以<br>选择利用 zoomeye、shodan、censys 等平台）<br>4.针对不同的服务进行对应的渗透测试（尤其是可能存在漏洞的中间件）</p><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;随着科学技术的发展，网络安全已经提升到了国家层面。习大大说：“没有网络安全就没有国家安全。”那么在网络安全大热的今天，如何才能历经重重磨难才能达到公司需要的高度，才能符合面试官的口味,才能在众多才子中脱颖而出尼？那就好好看看博主这篇面试宝典吧，内容均是从网络上采集或者自己总结，有问题希望大家可以指出，一起进步！nice~&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="面试" scheme="https://www.mad-coding.cn/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>web应用程序测试方法论</title>
    <link href="https://www.mad-coding.cn/2019/08/19/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    <id>https://www.mad-coding.cn/2019/08/19/web应用程序测试方法论/</id>
    <published>2019-08-19T13:46:39.000Z</published>
    <updated>2019-08-19T13:51:05.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天给大家分享一个web应用程序测试方法论的思维导图，希望大家可以通过思维导图理清自己测试的思路，查缺补漏，然后在总结出自己的方法论，欢迎大家和我交流。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214613.png" class="lozad"></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;今天给大家分享一个web应用程序测试方法论的思维导图，希望大家可以通过思维导图理清自己测试的思路，查
      
    
    </summary>
    
      <category term="思维导图" scheme="https://www.mad-coding.cn/categories/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="方法论" scheme="https://www.mad-coding.cn/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="应用程序测试" scheme="https://www.mad-coding.cn/tags/%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>burp加载jython时出错</title>
    <link href="https://www.mad-coding.cn/2019/08/19/burp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99/"/>
    <id>https://www.mad-coding.cn/2019/08/19/burp加载jython时出错/</id>
    <published>2019-08-19T13:39:27.000Z</published>
    <updated>2019-08-19T13:46:45.291Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在安装burpsuite中的jpython环境时，出现了问题，这里记录一下，防止下次再次出现问题时不知所措。</p><a id="more"></a><h1 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h1><p>具体环境配置如下，路径都是正确的</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214055.png" class="lozad"></p><p>勾选插件时出现下面的情况</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214215.png" class="lozad"></p><h1 id="0x02-问题原因"><a href="#0x02-问题原因" class="headerlink" title="0x02 问题原因"></a>0x02 问题原因</h1><p>jar包出现了问题，重新下载jar包完美解决问题</p><p>加载出错的jar包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214244.png" class="lozad"></p><p>官网下载的jar包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214301.png" class="lozad">    可以从文件的大小中就可以看出来，jar包有问题。</p><h1 id="0x03-解决步骤"><a href="#0x03-解决步骤" class="headerlink" title="0x03 解决步骤"></a>0x03 解决步骤</h1><p>第一步：去官网重新下载jython 的jar包文件</p><p> <a href="https://www.jython.org/downloads.html" target="_blank" rel="noopener">https://www.jython.org/downloads.html</a></p><p>第二步：将下载的jar包文件放到burp安装包路径下或者其他目录下也可以</p><p>注：必须示纯英文的路径，不能是中文路径，否则会出现错误。</p><p>第三步：重新导入jar包，路径需要正确，如下：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214332.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214344.png" class="lozad"></p><blockquote><p>小技巧：输入法状态切换到英文输入模式下，然后按j，即可快速定位需要找到的文件。</p></blockquote><p>重新加载，成功了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214422.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>在遇到问题时，不要慌张，先去百度，google等搜索引擎搜索一下，看看是否有前人的解决方法，这样可以快速的解决问题，如果没有找到相关的解决方法，可以通过错误信息的提示，逐一排查，找到可能的错误点</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;今天在安装burpsuite中的jpython环境时，出现了问题，这里记录一下，防止下次再次出现问题时不知所措。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="解决问题" scheme="https://www.mad-coding.cn/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
      <category term="Windows" scheme="https://www.mad-coding.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>nessus数据库崩溃问题</title>
    <link href="https://www.mad-coding.cn/2019/08/19/nessus%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/08/19/nessus数据库崩溃问题/</id>
    <published>2019-08-19T13:25:33.000Z</published>
    <updated>2019-08-19T13:38:06.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天想用nessus扫描器扫描一下系统，看看有没有什么漏洞，但是打开浏览器的时候发现，提示数据库崩溃了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819212849.png" class="lozad"></p><p>然后上网百度，貌似在百度贴吧中找到了答案，然后，为了给以后的自己和碰到同样问题的朋友看，我在给大家讲讲吧。</p><a id="more"></a><h1 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h1><p>在浏览器中打开nessus时，提示下面错误，</p><p>Corrupt Database</p><p>A corrupt database has been detected which prevents Nessus from running. Please take the following corrective actions:</p><p>图片详情</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213106.png" class="lozad"></p><h1 id="0x02-解决方法"><a href="#0x02-解决方法" class="headerlink" title="0x02 解决方法"></a>0x02 解决方法</h1><ol><li><p>按win+R ，输入services.msc</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213150.png" class="lozad"></p></li><li><p>找到tenable nessus服务，右击停止服务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213227.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213240.png" class="lozad"></p></li><li><p>在nessus的安装目录中，找到global.db文件，直接剪切到桌面或者删掉，或者大家实在找不到该文件的话，可以下载一个everything快速搜索软件，可以快速的搜索到这个软件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213309.png" class="lozad"></p></li><li><p>再次启动nessus服务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213402.png" class="lozad"></p></li><li><p>刷新浏览器，等舒适化完成，舒服Nessus，Nessus账号密码，成功登陆系统。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213423.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213434.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213456.png" class="lozad"></p></li></ol><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>出现问题，先不要慌张，因为，你应该不是第一个碰到这个问题的人，so，百度，Google，寻找答案，之所谓：授人予鱼，不如授人于渔。方法告诉你了，下次要记得的多百度寻找答案奥！: D</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;今天想用nessus扫描器扫描一下系统，看看有没有什么漏洞，但是打开浏览器的时候发现，提示数据库崩溃了。&lt;/p&gt;
&lt;p&gt;&lt;img alt data-src=&quot;https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819212849.png&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后上网百度，貌似在百度贴吧中找到了答案，然后，为了给以后的自己和碰到同样问题的朋友看，我在给大家讲讲吧。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="解决问题" scheme="https://www.mad-coding.cn/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
      <category term="Windows" scheme="https://www.mad-coding.cn/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>第一章：应用程序及表单风险（渗透测试方法论）</title>
    <link href="https://www.mad-coding.cn/2019/08/19/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%8A%E8%A1%A8%E5%8D%95%E9%A3%8E%E9%99%A9/"/>
    <id>https://www.mad-coding.cn/2019/08/19/第一章：应用程序及表单风险/</id>
    <published>2019-08-19T06:02:39.000Z</published>
    <updated>2019-08-22T03:07:25.612Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>渗透测试对于每个人来说，测试的思路都不一样，但是大体思路还是信息收集-&gt;漏洞扫描-&gt;漏洞利用-&gt;权限提升-&gt;清理痕迹-&gt;输出报告。不过企业中的灰盒测试一般都是主要漏洞挖掘为主，这样的话，就需要有一个测试的方法论在进行测试了。so，这里给大家整理出渗透测试的方法论分享给大家。</p><a id="more"></a><h1 id="0x01-搜索可见的内容"><a href="#0x01-搜索可见的内容" class="headerlink" title="0x01 搜索可见的内容"></a>0x01 搜索可见的内容</h1><p>一般情况下，手动浏览就可以确定应用程序的大部分内容和功能。浏览应用程序的基本方法是从初始页面开始，依次浏览每一个链接和所有的多阶段功能。但是为了仔细检查枚举的内容，全面记录每一项确定的功能，简单的浏览就不再能满足我们的需求，有必要使用更加先进的工具。</p><p>（1）首先配置浏览器，使用代理工具，可以使用BurpSuite等工具监控和解析由代理服务器处理的Web内容，对站点实行被动抓取。</p><p>首先开启代理，然后打开Burpsuite并找到Target下的Site map</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220707.png" class="lozad"></p><p>访问目标网站，对其进行自动爬取，由于完全自动化的方法在内容枚举方面还有一定的限制，例如</p><ol><li>身份验证时爬虫的一些操作会让通过验证的会话中断；</li><li>向某个敏感内容提交无效输入，应用程序可能会自我防御，终止会话；</li><li>多阶段功能往往会严格的执行输入确认检查，可能不会接受自动工具提交的值；</li><li>爬虫可能会发现并使用敏感功能，造成重大损失等等。</li></ol><p>所以更多的时候我们选择进行指定爬取，即用户通过常规方式浏览应用程序，来枚举应用程序的所有功能，生成的流量穿过一个组合拦截代理服务器与爬虫的工具，监控所有请求和响应，并且像一个正常的应用程序感知爬虫那样来分析应用程序的响应，BurpSuite中的爬虫就有这种用途。</p><p>（3）接下来进行指定爬取</p><p>​         以常规方式浏览整个应用程序，访问发现的每一个url，提交每一个表单并执行全部多阶段功能，尝试在JavaScript激活与禁用、cookie激活与禁用的情况下浏览。</p><p>如何禁用cookie</p><p>​         打开设置，找到Privacy，点击Firefox will右边的下拉菜单，选择use custom settings for history，然后将Accept cookies from sites前面的√去掉</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000246.png" class="lozad"></p><p>如何禁用JavaScript</p><p>​         在地址栏输入about:config，点击 I accept the risk！</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000228.png" class="lozad"></p><p>搜索javascript，找到javascript.enable，双击关闭</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000328.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000341.png" class="lozad"></p><p>4）完成手动浏览和被动抓取以后，可以用一组发现的url作为种子，使用爬虫抓取应用程序。有时候这样可以发现其他在手动浏览时忽略的内容。在进行自动抓取前，首先应确定任何危险的或可能会中断应用程序会话的url，并配置爬虫，将它们排除在抓取范围之外。</p><blockquote><p>PS：许多Web服务器的根目录下有一个名为robots.txt的文件，其中列出了站点不希望Web爬虫访问或搜索引擎列入索引的url。有时候这个文件中可能会包含一些敏感信息，这些信息很可能会危机Web程序的安全。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000432.png" class="lozad"></p></blockquote><h1 id="0x02-浏览公共资源"><a href="#0x02-浏览公共资源" class="headerlink" title="0x02 浏览公共资源"></a>0x02 浏览公共资源</h1><p>（1）使用因特网搜索引擎和历史档案，确定它们编入索引或保存的与目标应用程序有关的内容。</p><p>例如使用Wayback Machine查看历史档案</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820174711.png" class="lozad"></p><p>随便搜索一个网站，就用我们团队的网站来测试，可以看到不同的时间节点有保存的快照信息。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820175553.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820175921.png" class="lozad"></p><p>使用<strong>高级搜索</strong>提高效率。例如，在<code>Google</code>中，可以使用<code>site:</code>获取所有与目标站点有关的内容，使用<code>link:</code>获取链接到目标站点的其他站点。如果在搜索过程中找到现有应用程序已经删除的内容，仍然可以从搜索引擎的缓存中查看这些内容。这些已经被删除的内容中可能包含尚未删除的其他资源的链接。</p><p>使用<code>site: 目标站点</code>进行搜索</p><p><code>site:www.baidu.com</code>将返回Google引用的每一个目标站点的资源</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820180212.png" class="lozad"></p><p>site:<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>  inurl:login将返回所有包含login表达式的页面。在大型且复杂的应用程序中，可以快速定位感兴趣的资源，如管理菜单、密码重置等功能</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820180437.png" class="lozad"></p><p>使用link:进行搜索</p><p>link:<a href="http://www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。" target="_blank" rel="noopener">www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181209.png" class="lozad"></p><p>使用related进行搜索</p><p>related:<a href="http://www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。" target="_blank" rel="noopener">www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181233.png" class="lozad"></p><p>（3）搜索在应用程序内容[如联系信息，包括并未在屏幕上显示的内容(如HTML注释)]中发现的任何姓名与电子邮件地址。除Web搜索外，还应进行新闻和分组搜索。在论坛上寻找与目标应用程序及其支持基础架构有关的所有技术信息。</p><p>此处使用evilscience靶机作为检索对象</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181305.png" class="lozad"></p><p>在这个网站中有很多的注释，当然这些注释没有什么用，此处只是为了演示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181324.png" class="lozad"></p><p>在一些安全性不是很强的网站里面还会直接找到用户名</p><p>例如：<img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181345.png" class="lozad"></p><p>新闻搜索：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181406.png" class="lozad"></p><p>（4）检查已发布的任何WSDL文件，以生成应用程序可能采用的功能名称和参数值列表。</p><h1 id="0x03-发现隐藏内容"><a href="#0x03-发现隐藏内容" class="headerlink" title="0x03 发现隐藏内容"></a>0x03 发现隐藏内容</h1><h1 id="0x04-查找默认的内容"><a href="#0x04-查找默认的内容" class="headerlink" title="0x04 查找默认的内容"></a>0x04 查找默认的内容</h1><h1 id="0x05-枚举标识符制定的功能"><a href="#0x05-枚举标识符制定的功能" class="headerlink" title="0x05 枚举标识符制定的功能"></a>0x05 枚举标识符制定的功能</h1><h1 id="0x06-调试参数"><a href="#0x06-调试参数" class="headerlink" title="0x06 调试参数"></a>0x06 调试参数</h1><h1 id="0x07-调试参数"><a href="#0x07-调试参数" class="headerlink" title="0x07 调试参数"></a>0x07 调试参数</h1><h1 id="0x08-确定数据输入点"><a href="#0x08-确定数据输入点" class="headerlink" title="0x08 确定数据输入点"></a>0x08 确定数据输入点</h1><h1 id="0x09-确定所使用的技术"><a href="#0x09-确定所使用的技术" class="headerlink" title="0x09 确定所使用的技术"></a>0x09 确定所使用的技术</h1><h1 id="0x10-解析受攻击面"><a href="#0x10-解析受攻击面" class="headerlink" title="0x10 解析受攻击面"></a>0x10 解析受攻击面</h1><h1 id="0x11-通过客户端传送数据"><a href="#0x11-通过客户端传送数据" class="headerlink" title="0x11 通过客户端传送数据"></a>0x11 通过客户端传送数据</h1><h1 id="0x12-客户端输入控件"><a href="#0x12-客户端输入控件" class="headerlink" title="0x12 客户端输入控件"></a>0x12 客户端输入控件</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;渗透测试对于每个人来说，测试的思路都不一样，但是大体思路还是信息收集-&amp;gt;漏洞扫描-&amp;gt;漏洞利用-&amp;gt;权限提升-&amp;gt;清理痕迹-&amp;gt;输出报告。不过企业中的灰盒测试一般都是主要漏洞挖掘为主，这样的话，就需要有一个测试的方法论在进行测试了。so，这里给大家整理出渗透测试的方法论分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="方法论" scheme="https://www.mad-coding.cn/tags/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/tags/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo蝴蝶主题的一些小功能(跟新中)</title>
    <link href="https://www.mad-coding.cn/2019/08/18/hexo%E8%9D%B4%E8%9D%B6%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD-%E8%B7%9F%E6%96%B0%E4%B8%AD/"/>
    <id>https://www.mad-coding.cn/2019/08/18/hexo蝴蝶主题的一些小功能-跟新中/</id>
    <published>2019-08-18T04:43:57.000Z</published>
    <updated>2019-08-19T14:01:24.587Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在从使用next主题后，因为博客的加载缓慢问题，让我再次放弃的这个主题，而偶然的看到同事使用的<strong>蝴蝶</strong>主题，让我欢喜不已。因为这个主题真的太好看了，一下子吸引了我，而且整个博客加载的速度也是非常的快。不过由图床使用的是GitHub的图床，所有在图片加载这个方面还是有点慢。不过整理影响不是很大。这篇文章来给大家介绍一下，换了<strong>蝴蝶</strong> 主题后的一些小功能细节问题。</p><a id="more"></a><h1 id="0x01-导航栏图标问题"><a href="#0x01-导航栏图标问题" class="headerlink" title="0x01 导航栏图标问题"></a>0x01 导航栏图标问题</h1><p>导航栏栏图片，就是在导航栏的文字前面都有对应的小图标，不知道有没有人和我一样，因为增加了导航栏的功能菜单，但是苦苦的找不到对应的图标，让博客看起来不是很好看。</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215702.png" class="lozad"></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>访问<a href="https://www.thinkcmf.com/font/font_awesome/icon/hdd-o" target="_blank" rel="noopener">font_awesome网站</a>，主页如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215732.png" class="lozad"></p><p>搜索想要的图标，比如电影</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215746.png" class="lozad"></p><p>复制电影的代码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215801.png" class="lozad"></p><p>在主题的配置文件下替换掉后面的标识</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215816.png" class="lozad"></p><p>然后刷新一下浏览器就能看到了</p><h2 id="效果查看"><a href="#效果查看" class="headerlink" title="效果查看"></a>效果查看</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215835.png" class="lozad"></p><h1 id="0x02-分类目录二级目录"><a href="#0x02-分类目录二级目录" class="headerlink" title="0x02 分类目录二级目录"></a>0x02 分类目录二级目录</h1><p>不知道大家有没有这样的苦恼，就是在写文章的时候，把很多文章都归类到一个大类中，到最后自己找文章的时候都不太好找，但是如果我们将文章都归类到一个二级分类，然后二级分类在归类到一级分类，这样的话是不是找起来更方便一点尼。</p><h2 id="效果预览-1"><a href="#效果预览-1" class="headerlink" title="效果预览"></a>效果预览</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215849.png" class="lozad"></p><h2 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。理论上来说，还可以添加3级，4级分类目录，这个根据自己的喜好和实际需求了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215907.png" class="lozad"></p><p>在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。</p><h2 id="效果查看-1"><a href="#效果查看-1" class="headerlink" title="效果查看"></a>效果查看</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215919.png" class="lozad"></p><h1 id="0x03-hexo-部署出现问题"><a href="#0x03-hexo-部署出现问题" class="headerlink" title="0x03 hexo 部署出现问题"></a>0x03 hexo 部署出现问题</h1><p>在使用hexo d或者hexo deploy Mingling 时，发现不能部署。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215934.png" class="lozad"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在博客根目录下，输入<code>npm install --save hexo-deployer-git</code>命令，</p><p>安装完成以后再次之行hexo deploy 一切正常</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215947.png" class="lozad"></p><h1 id="0x04-关闭page页面或者特定文章的评论"><a href="#0x04-关闭page页面或者特定文章的评论" class="headerlink" title="0x04 关闭page页面或者特定文章的评论"></a>0x04 关闭page页面或者特定文章的评论</h1><p>我们在写文章的时候，经常可能会碰到有些文章不需要增加评论的功能，那怎么去实现尼，其实hexo早就想到这点了，实现很简单，一条命令即可。</p><h2 id="实现步骤-2"><a href="#实现步骤-2" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>只要在文章的md或者page的md文件头中加入comments: false即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220005.png" class="lozad"></p><p>注意：是comments 不是comment，单词别写错，第二个，false前面有一个<strong>空格</strong></p><h1 id="0x05-给Hexo正确添加RSS订阅"><a href="#0x05-给Hexo正确添加RSS订阅" class="headerlink" title="0x05 给Hexo正确添加RSS订阅"></a>0x05 给Hexo正确添加RSS订阅</h1><h2 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h2><p>在博客的根目录下输入<code>npm install hexo-generator-feed</code>命令安装，然后等待安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220017.png" class="lozad"></p><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>打开站点配置文件_config.yml，末尾添加以下配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#RSS订阅</span></span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: <span class="number">20</span></span><br></pre></td></tr></table></figure><p>打开主题配置文件_config.yml，按Ctrl+F 搜索rss，添加配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>输入一下命令，然后刷新一下浏览器即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220032.png" class="lozad"></p><p><img alt="img" data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63r98bfavj21gn0nbads.jpg" class="lozad"></p><h1 id="0x06-修改阅读时长，文章热度"><a href="#0x06-修改阅读时长，文章热度" class="headerlink" title="0x06 修改阅读时长，文章热度"></a>0x06 修改阅读时长，文章热度</h1><h2 id="实现步骤-3"><a href="#实现步骤-3" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>Butterfly/languages/zh-CN.yml 下，搜索post，然后按照下图修改即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220053.png" class="lozad"></p><h2 id="效果显示"><a href="#效果显示" class="headerlink" title="效果显示"></a>效果显示</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220113.png" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在从使用next主题后，因为博客的加载缓慢问题，让我再次放弃的这个主题，而偶然的看到同事使用的&lt;strong&gt;蝴蝶&lt;/strong&gt;主题，让我欢喜不已。因为这个主题真的太好看了，一下子吸引了我，而且整个博客加载的速度也是非常的快。不过由图床使用的是GitHub的图床，所有在图片加载这个方面还是有点慢。不过整理影响不是很大。这篇文章来给大家介绍一下，换了&lt;strong&gt;蝴蝶&lt;/strong&gt; 主题后的一些小功能细节问题。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://www.mad-coding.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.mad-coding.cn/tags/hexo/"/>
    
      <category term="主题功能" scheme="https://www.mad-coding.cn/tags/%E4%B8%BB%E9%A2%98%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>oneindex后续</title>
    <link href="https://www.mad-coding.cn/2019/08/16/oneindex%E5%90%8E%E7%BB%AD/"/>
    <id>https://www.mad-coding.cn/2019/08/16/oneindex后续/</id>
    <published>2019-08-16T01:45:37.000Z</published>
    <updated>2019-08-18T03:57:28.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    在前一篇文章《<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#more](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#more)">使用onedrive+oneindex打造一个专属个人网盘</a>》中，我们已经成功的搭建好了一个网盘了，但是这还不算完美，还需要增加一些小细节，比如文件夹加密，文件夹描述，云盘底部介绍等等，下面就来给大家讲讲如何实现。</p><a id="more"></a><h1 id="0x01-实现文件夹加密功能"><a href="#0x01-实现文件夹加密功能" class="headerlink" title="0x01 实现文件夹加密功能"></a>0x01 实现文件夹加密功能</h1><p>实现文件夹加密的功能非常简单，原理就是在需要加密的文件夹中创建一个.password的文件，然后在该文件中输入自己需要设置的密码即可。但是，问题来了，我们正常情况下，Windows是不允许创建一个没有名称的文件的，提示如下。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816095402.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816095232.png" class="lozad"></p><p>那么，该如何解决这个问题尼？ 其实还是有方法的。比如在cmd中使用命令来直接创建该文件，就不会出现这种情况了，具体操作如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Desktop <span class="comment">#切换到桌面</span></span><br><span class="line">echo <span class="number">123456</span> &gt; .password   <span class="comment">#创建.password文件，并将123456写入该文件</span></span><br><span class="line"><span class="comment">#123456就是加密的文章夹密码</span></span><br></pre></td></tr></table></figure><p>.password文件创建好后，可以上传到你想加密的文件夹，当然这个文件也可以复制到其他文件夹，这样就不需要每次重复创建了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816095923.png" class="lozad"></p><p>如果想立马看到效果的话，去oneindex后台重新刷新一下缓存，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816100042.png" class="lozad"></p><p>再次访问发现成功加密文件夹，需要输入密码才能访问</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816100119.png" class="lozad"></p><p>ps1：这里输入密码访问成功访问后，发现后面就不用再次输入密码了，原因是浏览器记录了缓存信息，再次使用一个新的浏览器打开还是需要密码的，所以不用担心。</p><p>ps2：如果需要实现在加密的文件夹中再加密文件夹，原理还是一样的，也是在需要加密的文件夹中放入.password文件即可，这样的话，就可以给每个不同的私人文件夹放置不同的密码，即使一个文件夹的密码被猜解出来，其他文件夹也还是安全的。</p><h1 id="0x02-网盘底部创建介绍信息"><a href="#0x02-网盘底部创建介绍信息" class="headerlink" title="0x02 网盘底部创建介绍信息"></a>0x02 网盘底部创建介绍信息</h1><p>这个功能实现过程非常的简单，只需要在网盘根目录中新建一个README.md文件即可，然后在该文件中写入自己需要介绍的信息。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816102157.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816102124.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>如果还有新功能，会在跟新。皮卡皮卡^v^</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;​    在前一篇文章《&lt;a href=&quot;[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#more](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#more)&quot;&gt;使用onedrive+oneindex打造一个专属个人网盘&lt;/a&gt;》中，我们已经成功的搭建好了一个网盘了，但是这还不算完美，还需要增加一些小细节，比如文件夹加密，文件夹描述，云盘底部介绍等等，下面就来给大家讲讲如何实现。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://www.mad-coding.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="好玩" scheme="https://www.mad-coding.cn/categories/%E6%95%99%E7%A8%8B/%E5%A5%BD%E7%8E%A9/"/>
    
    
      <category term="oneindex;onedrive" scheme="https://www.mad-coding.cn/tags/oneindex-onedrive/"/>
    
  </entry>
  
  <entry>
    <title>如何将*.frm，*.MYD和*.MYI格式的文件导入MySQL中</title>
    <link href="https://www.mad-coding.cn/2019/08/14/%E5%A6%82%E4%BD%95%E5%B0%86-frm%EF%BC%8C-MYD%E5%92%8C-MYI%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL%E4%B8%AD/"/>
    <id>https://www.mad-coding.cn/2019/08/14/如何将-frm，-MYD和-MYI格式的文件导入MySQL中/</id>
    <published>2019-08-14T10:16:59.000Z</published>
    <updated>2019-08-18T03:53:47.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​        在学mysql数据库的时候，可能有小伙伴经常碰到.frm, .MYD，.MYI 的文件，但是却不知道如何还原其中的数据，今天博客也是碰到了一样的问题，经过在晚上一番搜索后，成功还原了，在这里记录一下，然后分享给大家。</p><a id="more"></a><h1 id="0x01-操作步骤"><a href="#0x01-操作步骤" class="headerlink" title="0x01 操作步骤"></a>0x01 操作步骤</h1><p>创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE test2</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814181929.png" class="lozad"></p><p>执行成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182045.png" class="lozad"></p><p>刷新数据库</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182133.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182154.png" class="lozad"></p><p>利用PHPstudy找到mysql数据库的安装路径，然后找到data文件夹</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182207.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182239.png" class="lozad"></p><p>将<em>.frm，</em>.MYD和*.MYI的文件都复制到刚刚创建的数据库文件夹中</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182249.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182408.png" class="lozad"></p><p>再次回到小海豚中刷新数据库，发现表已经出现了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182443.png" class="lozad"></p><p>然后，然后就能看到数据库。哇卡卡。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182458.png" class="lozad"></p><h1 id="0x02-踩坑说明"><a href="#0x02-踩坑说明" class="headerlink" title="0x02 踩坑说明"></a>0x02 踩坑说明</h1><p> 我自己在虚拟机中单独安装了mysql5.5的数据库，然后使用小海豚进行连接，但是发现，创建数据库的时候，在mysql的数据库安装文件夹的data中没有出现最新创建的数据库文件夹，。。。。郁闷，为啥每次这些坑都会被我碰到。。。，</p><p>解决方法：我想起来PHPstudy中集成了mysql，于是，我直接卸载了mysql，直接安装了PHPstudy，然后成功还原了数据库。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;​        在学mysql数据库的时候，可能有小伙伴经常碰到.frm, .MYD，.MYI 的文件，但是却不知道如何还原其中的数据，今天博客也是碰到了一样的问题，经过在晚上一番搜索后，成功还原了，在这里记录一下，然后分享给大家。&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="https://www.mad-coding.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="mysql" scheme="https://www.mad-coding.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/mysql/"/>
    
    
      <category term="mysql" scheme="https://www.mad-coding.cn/tags/mysql/"/>
    
      <category term="数据库" scheme="https://www.mad-coding.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>onedrive+oneindex打造属于自己的个人网盘</title>
    <link href="https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    <id>https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</id>
    <published>2019-08-09T14:50:35.000Z</published>
    <updated>2019-08-18T03:58:14.980Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    前几天在别人的博客中看到有自己搭建的个人专属网盘，看起来还不错的样子，然后了解到是用<code>onedrive+oneindex</code>来实现的，所以自己也通过在网上学习一些相关的文章，并且搭建成功了，所以在这里分享一下搭建的流程，一来是给自己的总结，二来是分享给需要的朋友。</p><a id="more"></a><h1 id="0x01-环境准备"><a href="#0x01-环境准备" class="headerlink" title="0x01 环境准备"></a>0x01 环境准备</h1><blockquote><p>环境需求：</p><p>1.vps一个</p><p>2.宝塔面板环境，Nginx，PHP需要5.6以上版本</p><p>3.onedrive 5T空间</p><p>4.oneindex</p><p>5.域名一个</p></blockquote><h2 id="1-1-vps购买"><a href="#1-1-vps购买" class="headerlink" title="1.1 vps购买"></a>1.1 vps购买</h2><p>访问<a href="https://virmach.com/" target="_blank" rel="noopener">vps购买地址</a>选择经济实惠的Linux VPS</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812094415.png" class="lozad"></p><p>然后拉到最底下，选择kvm的vps，当然选择openVZ的也可以。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812000710.png" class="lozad"></p><p>选择第一个2.5刀的</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095701.png" class="lozad"></p><p>选择操作系统和带宽</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095822.png" class="lozad"></p><p>选择vps的位置，然后加入购物车</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095912.png" class="lozad"></p><p>结账</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095953.png" class="lozad"></p><p>填写相关信息，然后选择支付宝付款</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812100027.png" class="lozad"></p><h2 id="1-2-宝塔面板的安装"><a href="#1-2-宝塔面板的安装" class="headerlink" title="1.2 宝塔面板的安装"></a>1.2 宝塔面板的安装</h2><p><strong>entos</strong>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install      -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><strong>Ubuntu/Deepin</strong> 安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash      install.sh</span><br></pre></td></tr></table></figure><p><strong>Debian</strong>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Fedora</strong>安装命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O  install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h2 id="1-3-Nginx和PHP的安装"><a href="#1-3-Nginx和PHP的安装" class="headerlink" title="1.3 Nginx和PHP的安装"></a>1.3 Nginx和PHP的安装</h2><p>​    安装完宝塔面板后，在浏览器中输入<code>vpsip:8888</code>进入宝塔面板，登陆的账号密码在成功安装宝塔后会有提示，根据提示输入登陆就好了，一般情况下第一次登陆宝塔会提示让你安装<code>LNMP</code>环境或者<code>LAMP</code>环境，我们选择安装<code>Nginx+PHP5.6</code>就好了，<code>mysql</code>和<code>phpmyadmin</code>不需要安装</p><p>安装的进度如下，耐心等待安装完成即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812000917.png" class="lozad"></p><h1 id="0x02-注册365邮箱"><a href="#0x02-注册365邮箱" class="headerlink" title="0x02 注册365邮箱"></a>0x02 注册365邮箱</h1><p>​        临时邮箱网址：<a href="https://t.odmail.cn/" target="_blank" rel="noopener">https://t.odmail.cn/</a> </p><p>复制网页中的邮箱然后选择 <a href="https://signup.microsoft.com/signup?sku=student" target="_blank" rel="noopener"><strong>学生版</strong></a> or <a href="https://signup.microsoft.com/signup?sku=faculty" target="_blank" rel="noopener"><strong>教师版</strong></a> 在注册,记住，页面不要关闭，待会需要接收验证码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812001044.png" class="lozad"></p><p>输入刚刚的邮箱</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002410.png" class="lozad"></p><p>返回刚刚临时邮箱的页面，接收到验证码了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002444.png" class="lozad"></p><p>输入验证码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002515.png" class="lozad"></p><p>输入相关信息完成注册</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002515.png" class="lozad"></p><p>需要用手机号验证一下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002550.png" class="lozad"></p><p>注册完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002609.png" class="lozad"></p><h1 id="0x03-安装oneindex"><a href="#0x03-安装oneindex" class="headerlink" title="0x03 安装oneindex"></a>0x03 安装oneindex</h1><h2 id="3-1-注册域名"><a href="#3-1-注册域名" class="headerlink" title="3.1 注册域名"></a>3.1 注册域名</h2><p><a href="https://wanwang.aliyun.com/?spm=5176.12825654.eofdhaal5.69.3dbd2c4aV1flhF" target="_blank" rel="noopener">域名注册地址</a>直接购买，不懂的，出门右拐百度</p><h2 id="3-2-设置域名解析"><a href="#3-2-设置域名解析" class="headerlink" title="3.2 设置域名解析"></a>3.2 设置域名解析</h2><p>在域名管理中设置域名解析</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105215.png" class="lozad"></p><p>A记录指向是自己的vps ip地址pan是域名的二级域名，也就是pan.xxx.com</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105318.png" class="lozad"></p><h2 id="3-3-安装oneindex"><a href="#3-3-安装oneindex" class="headerlink" title="3.3 安装oneindex"></a>3.3 安装oneindex</h2><p>注册好了onedrive以后，我们现在有5T的空间了，具体有没有5T，会在后面上传的部分介绍如何查看</p><p>首先需要下载oneindex的源码，GitHub下载地址：<a href="https://github.com/donwa/oneindex.git" target="_blank" rel="noopener">onindex</a></p><p>然后登陆宝塔面板，配置一下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812103644.png" class="lozad"></p><p>填写自己注册的域名</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812103725.png" class="lozad"></p><p>点击进入网站目录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812103811.png" class="lozad"></p><p>然后刚刚下载的oneindex源码上传上去，也可以使用远程下载直接远程下载oneindex的源码，如果是自己上传的，需要解压缩一下，解压完以后如下图：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003319.png" class="lozad"></p><p>然后访问自己的域名直接安装，必须全部都是√才行，如果3,4的权限不够需要在宝塔面板中赋予该文件夹可读可写的权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003403.png" class="lozad"></p><p>都是√的可以跳过不看这个</p><p>重新回到宝塔面板给需要赋予权限的两个文件夹赋权</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105648.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105826.png" class="lozad"></p><p>再次刷新，OK，都是√了，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190806084911.gif" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003517.png" class="lozad"></p><h1 id="0x04-oneindex的基本设置"><a href="#0x04-oneindex的基本设置" class="headerlink" title="0x04 oneindex的基本设置"></a>0x04 oneindex的基本设置</h1><p>输入<code>域名/?/admin</code>进入oneindex后台管理系统，初始密码是oneindex</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812121805.png" class="lozad"></p><p>修改网盘的名称</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812110510.png" class="lozad"></p><p>在宝塔中设置定时刷新缓存计划</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812110822.png" class="lozad"></p><p>在宝塔面板中添加计划任务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812110735.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003537.png" class="lozad"></p><h1 id="0x05-文件上传"><a href="#0x05-文件上传" class="headerlink" title="0x05 文件上传"></a>0x05 文件上传</h1><p>​    为了方便我们上传文件到网盘中，我们需要用到RaiDrive将网盘映射到本地计算机中，当做本地磁盘来使用，具体操作如下：<br>RaiDrive下载:<a href="https://www.raidrive.com/" target="_blank" rel="noopener">官网地址</a>,<a href="http://t.cn/EZKRDHl" target="_blank" rel="noopener">蓝奏云盘</a></p><p>下载完以后就是一步步安装了，傻瓜式操作，下面主要讲一下安装完以后如何将网盘映射到本地</p><p>首先，安装好的RAIDrive是英文的，不习惯得话可以设置成中文，如图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812085628.png" class="lozad"></p><p>然后将网盘映射到本地，操作如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004552.png" class="lozad"></p><p>点击接受</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004605.png" class="lozad"></p><p>耐心等待一会以后</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004624.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004637.png" class="lozad"></p><h1 id="0x06-碰到的问题"><a href="#0x06-碰到的问题" class="headerlink" title="0x06 碰到的问题"></a>0x06 碰到的问题</h1><h2 id="3-4-授权5T空间的时候碰到错误"><a href="#3-4-授权5T空间的时候碰到错误" class="headerlink" title="3.4 授权5T空间的时候碰到错误"></a>3.4 授权5T空间的时候碰到错误</h2><p><strong>问题描述：</strong></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003656.png" class="lozad"></p><p><strong>问题原因：</strong></p><p>没有使用开通5T onedrive空间的账号登陆</p><p><strong>解决方法：</strong></p><p>如果有5T 的onedrive空间的账号，直接使用该账号登陆即可，如果没有的话，需要自己重新注册一个即可。</p><h2 id="3-5-网盘文章打开404"><a href="#3-5-网盘文章打开404" class="headerlink" title="3.5 网盘文章打开404"></a>3.5 网盘文章打开404</h2><p><strong>问题描述：</strong></p><p>上传到网盘的文件，点击打开以后显示404</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003902.png" class="lozad"></p><p>问题原因：</p><p>没有设置伪静态，导致访问文件时找不到资源文件。</p><p>解决方法：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004008.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004032.png" class="lozad"></p><p>设置好以后再次访问域名，发现里面的文件夹和文件都可以直接点击查看</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004050.png" class="lozad"></p><h2 id="3-6-解决图片打开是404问题"><a href="#3-6-解决图片打开是404问题" class="headerlink" title="3.6 解决图片打开是404问题"></a>3.6 解决图片打开是404问题</h2><p>将伪静态替换成下面</p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^./files/(.)</span> /wp-includes/ms-files.php?file=<span class="number">1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^.+?(/wp-.*)</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^.+?(/.*.php)$</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功访问</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812111011.png" class="lozad"></p><p><strong>参考链接：</strong></p><p><a href="https://www.52pojie.cn/thread-847650-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-847650-1-1.html</a></p><p> <a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p><p> <a href="https://blog.csdn.net/github_39533414/article/details/83687260" target="_blank" rel="noopener">https://blog.csdn.net/github_39533414/article/details/83687260</a></p><p> <a href="https://www.moerats.com/archives/592/" target="_blank" rel="noopener">https://www.moerats.com/archives/592/</a></p><p> <a href="http://www.sumbk.com/339.html" target="_blank" rel="noopener">http://www.sumbk.com/339.html</a></p><p> <a href="http://blog.jialezi.net/?post=120" target="_blank" rel="noopener">http://blog.jialezi.net/?post=120</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;​    前几天在别人的博客中看到有自己搭建的个人专属网盘，看起来还不错的样子，然后了解到是用&lt;code&gt;onedrive+oneindex&lt;/code&gt;来实现的，所以自己也通过在网上学习一些相关的文章，并且搭建成功了，所以在这里分享一下搭建的流程，一来是给自己的总结，二来是分享给需要的朋友。&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://www.mad-coding.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
      <category term="好玩" scheme="https://www.mad-coding.cn/categories/%E6%95%99%E7%A8%8B/%E5%A5%BD%E7%8E%A9/"/>
    
    
      <category term="oneindex" scheme="https://www.mad-coding.cn/tags/oneindex/"/>
    
      <category term="onedrive" scheme="https://www.mad-coding.cn/tags/onedrive/"/>
    
      <category term="个人网盘" scheme="https://www.mad-coding.cn/tags/%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
    
  </entry>
  
  <entry>
    <title>给博客添加豆瓣书架功能</title>
    <link href="https://www.mad-coding.cn/2019/08/09/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6%E5%8A%9F%E8%83%BD/"/>
    <id>https://www.mad-coding.cn/2019/08/09/给博客添加豆瓣书架功能/</id>
    <published>2019-08-09T14:37:05.000Z</published>
    <updated>2019-08-18T03:58:24.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在一次浏览个人博客网站的过程中，返现有个网站有豆瓣读书的功能，可以在页面展示自己读了哪些书，想看哪些书等，我觉得这个功能特别的好，可以记录自己的读书，还可以在读完以后写上自己的书评。下面来给大家讲讲怎么在自己的博客中实现这个功能。</p><a id="more"></a><p>#0x01 成品展示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809230631.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809230647.png" class="lozad"></p><p>#0x02 需求配置</p><p>##2.1 安装插件</p><p>在博客的根目录下输入命令安装</p><p><code>npm install hexo-douban --save</code></p><p>##2.2 站点配置文件中添加配置</p><p>在<code>Hexo</code>站点根目录配置文件<code>_config.xml</code>中的末尾添加如下配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">douban:</span><br><span class="line">   user: mythsman</span><br><span class="line">   builtin: false</span><br><span class="line">   book:</span><br><span class="line">     title: <span class="string">'This is my book title'</span></span><br><span class="line">     quote: <span class="string">'This is my book quote'</span></span><br><span class="line">   movie:</span><br><span class="line">     title: <span class="string">'This is my movie title'</span></span><br><span class="line">     quote: <span class="string">'This is my movie quote'</span></span><br><span class="line">   game:</span><br><span class="line">     title: <span class="string">'This is my game title'</span></span><br><span class="line">     quote: <span class="string">'This is my game quote'</span></span><br><span class="line">   timeout: <span class="number">10000</span></span><br></pre></td></tr></table></figure><blockquote><p>上面参数说明：</p><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击      “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.douban.com%2Fpeople%2Fxxxxxx%2F" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a>“      ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入hexo s和hexo      g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。</li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms      ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul></blockquote><p>由于<code>hexo-douban</code>是默认抓取豆瓣读书、豆瓣电影以及豆瓣游戏的，如果只想要其中一部分，可以把其它部分在上述配置文件中去掉即可。</p><h1 id="0x03-启用使用"><a href="#0x03-启用使用" class="headerlink" title="0x03 启用使用"></a>0x03 启用使用</h1><p>插件安装好了，需要配置的也配置好了，下面就需要生成我们的豆瓣书架、电影页面了。</p><p>##3.1 生成页面</p><p>在GitBash下输入命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清除之前生成的文件</span></span><br><span class="line">hexo douban -bmg   <span class="comment">#生成豆瓣书籍、电影、游戏页面</span></span><br><span class="line">hexo g             <span class="comment">#生成文章</span></span><br><span class="line">hexo s           <span class="comment">#启动本地服务器</span></span><br><span class="line">hexo deploy        <span class="comment">#上传部署</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-bgm代表的是book、game、movie三个参数，如果只需要其中的一部分就只带你想要的那些参数。</span></span><br></pre></td></tr></table></figure><blockquote><p>注：由于<code>hexo douban</code>的简写也是hexo d，与hexo deploy的简写指令hexo d冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式</p></blockquote><p>##3.2 测试</p><p>如果在<code>hexo douban -bmg</code>这步没有问题的话，会出现如下信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809233452.png" class="lozad"></p><p>然后我们只需要在站点目录下测试<a href="http://localhost:4000/books" target="_blank" rel="noopener">http://localhost:4000/books</a> 或者 <a href="http://localhost:4000/movies等，如果看到页面了就说明成功了。" target="_blank" rel="noopener">http://localhost:4000/movies等，如果看到页面了就说明成功了。</a></p><p>##3.3 配置</p><p>如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件<code>_config.xml</code>，找到菜单按钮，可以选择性的添加下面内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  books: /books     <span class="comment"># 这是链接到books页面</span></span><br><span class="line">  movies: /movies   <span class="comment">#  这是链接到movies页面</span></span><br><span class="line">  games: /games   <span class="comment"># 这是链接到games页面</span></span><br></pre></td></tr></table></figure><p>注意添加完成之后按钮并不是中文的，这是由于在languages文件夹下面的<code>zh-CN</code>（中文语言配置文件）没有添加上述对应的中文参数信息，所以我们需要主动添加,语言文件夹在你的主题配置文件夹下面，如下图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809235531.png" class="lozad"></p><p>在<code>menu</code>菜单下添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  books: 阅读</span><br><span class="line">  movies: 电影</span><br><span class="line">  games: 游戏</span><br></pre></td></tr></table></figure><p>#0x04 碰到的问题</p><p>输入<code>hexo douban -bg</code>以后，发现没有按照教程一样产生相关的页面</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234000.png" class="lozad"></p><p>在网上百度，<code>Google</code>了好久都没有相关的问题，只有相关的教程，也重装了无数次，还是不成功，但是这个插件明明是支持next主题的，所以我就在虚拟机里面重新搭建了一个干干净净的博客，然后安装上这个插件后，发现可以正常产生页面的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234028.png" class="lozad"></p><p>所以断定，肯定是我的博客配置出现了问题而不是插件的问题了，在精确定位一下问题：要么是主题的配置的问题，要么的<code>hexo</code>的配置问题，要么是可能去之前安装的功能插件冲突。</p><p>通过将原始的配置复制到我的博客中，发现产生，同构将我博客中的配置文件复制到原始的配置中，发现不能产生，从而断定了问题是出在<code>hexo</code>的站点配置文件中，因为我直接将新的站点配置文件复制进去是可以正常产生页面的。所以在进一步排查到底是站点配置文件中的什么配置出了问题。</p><p>最后查出，原来是<code>douban:</code>前面多了空格，必须要顶格才行。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234203.png" class="lozad"></p><p>再次运行<code>hexo douban -bmg</code>成功生成<code>books</code>和<code>games</code>页面。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234225.png" class="lozad"></p><p>#0x05 参考链接</p><p><a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">https://github.com/mythsman/hexo-douban</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在一次浏览个人博客网站的过程中，返现有个网站有豆瓣读书的功能，可以在页面展示自己读了哪些书，想看哪些书等，我觉得这个功能特别的好，可以记录自己的读书，还可以在读完以后写上自己的书评。下面来给大家讲讲怎么在自己的博客中实现这个功能。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://www.mad-coding.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.mad-coding.cn/tags/hexo/"/>
    
      <category term="豆瓣书架" scheme="https://www.mad-coding.cn/tags/%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>github+hexo+域名搭建一个自己的网站</title>
    <link href="https://www.mad-coding.cn/2019/08/09/github-hexo-%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    <id>https://www.mad-coding.cn/2019/08/09/github-hexo-域名搭建一个自己的网站/</id>
    <published>2019-08-09T14:36:44.000Z</published>
    <updated>2019-08-18T06:22:03.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​        在一次无意的搜索文章中，看到了一个特别好的网站，不管是前端还是网站的内容都做的非常吸引人。我一开始以为是WordPress搭建的个人博客，后台得知使用hexo+GitHub来搭建的，顿时心中的博客火又燃了起来。<code>$_$</code>因为我之前也用WordPress搭建过自己的博客，但是由于需要购买阿里云的服务器，这对于我这个穷人来说是一笔开销，所以在服务器到期以后就没有在续费了，而hexo+GitHub搭建的是完全免费的，利用的是GitHub page，然后hexo将我们写的博客渲染成静态页面在部署到GitHub中去，最后在前端展现出来。下面就给大家介绍一个搭建的过程。</p><a id="more"></a><p>#0x01 环境准备</p><blockquote><p>需要的东西：</p><ol><li>node.js</li><li>git</li><li>hexo</li><li>GitHub账号</li><li>域名</li></ol></blockquote><p>##1.1 node和git的安装</p><p>Node.js下载](<a href="http://nodejs.org/" target="_blank" rel="noopener">http://nodejs.org/</a>) ，<a href="http://git-scm.com/" target="_blank" rel="noopener">Git下载</a> ，下载完成以后，直接傻瓜式下一步安装即可。</p><p>按win+R 输入<code>cmd</code>命令来检查是否安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v <span class="comment">#查看node版本</span></span><br><span class="line">git -v <span class="comment">#查看git版本</span></span><br></pre></td></tr></table></figure><p>出现下图说明安装成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816134834.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816134852.png" class="lozad"></p><p>##1.2 hexo的安装</p><p>首先需要新建一个空的Blog文件夹，可以在任意盘符右击新建个文件夹，也可以通过cmd命令来完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135215.png" class="lozad"></p><p>输入Blog文件夹下输入<code>npm install hexo -g</code>安装<code>hexo</code>（速度根据你的实时网速）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135313.png" class="lozad"></p><p>输入<code>hexo -v</code>，检查<code>hexo</code>是否安装成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135359.png" class="lozad"></p><p>输入<code>hexo init</code>，初始化该文件夹（需要等待一会）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135420.png" class="lozad"></p><p>输入<code>npm install</code>，安装所需要的组件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135440.png" class="lozad"></p><p>输入<code>hexo g</code>（=hexo generate），生成静态页面</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135513.png" class="lozad"></p><p>输入<code>hexo s</code>（=hexo server），开启服务器，访问该网址，正式体验<code>Hexo</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135538.png" class="lozad"></p><p>访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 出现下图，说明本地搭建成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135627.png" class="lozad"></p><p>命令总结：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo -v <span class="comment">#查看hexo版本</span></span><br><span class="line">hexo init<span class="comment">#初始化hexo</span></span><br><span class="line">hexo install <span class="comment">#安装hexo</span></span><br><span class="line">hexo g<span class="comment">#将文章渲染成静态页面</span></span><br><span class="line">hexo s<span class="comment">#启动本地hexo服务器</span></span><br><span class="line">hexo d  <span class="comment">#部署到GitHub（后面介绍）</span></span><br></pre></td></tr></table></figure><h2 id="1-3-注册GitHub账号"><a href="#1-3-注册GitHub账号" class="headerlink" title="1.3 注册GitHub账号"></a>1.3 注册GitHub账号</h2><p>注册地址：<a href="https://github.com/" target="_blank" rel="noopener">github</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816155627.png" class="lozad"></p><p>输入用户名，邮箱和账号密码后点击注册，进入第二步</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816155949.png" class="lozad"></p><p>选择免费个人版</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816160249.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816160355.png" class="lozad"></p><p>去刚刚注册的邮箱验证一下即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816160431.png" class="lozad"></p><h2 id="1-4-购买域名"><a href="#1-4-购买域名" class="headerlink" title="1.4 购买域名"></a>1.4 购买域名</h2><p>购买域名是为了将GitHub的默认域名解析到自己的域名下，这样以后就可以直接访问自己的域名了，不需要在输入GitHub的默认域名了。</p><p><a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯注册域名传送门</a>  <a href="https://wanwang.aliyun.com" target="_blank" rel="noopener">阿里云注册域名传送门</a></p><h1 id="0x02-搭建hexo博客"><a href="#0x02-搭建hexo博客" class="headerlink" title="0x02 搭建hexo博客"></a>0x02 搭建hexo博客</h1><h2 id="2-1-配置GitHub"><a href="#2-1-配置GitHub" class="headerlink" title="2.1 配置GitHub"></a>2.1 配置GitHub</h2><p>首先需要创建一个新的repository仓库，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162045.png" class="lozad"></p><p>​    <img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162135.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162258.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162500.png" class="lozad"></p><p>一直往下拉，找到GitHub pages</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162646.png" class="lozad"></p><p>访问链接效果如下：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163028.png" class="lozad"></p><p>将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163105.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163122.png" class="lozad"></p><p>分别输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"madcoding"</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">"madcoding@163.com"</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163217.png" class="lozad"></p><p><strong>注：这里“madcoding”可以替换成自己的用户名，邮箱可以替换成自己的邮箱</strong></p><p>输入<code>ssh-keygen -t rsa -C “madcoding163.com”</code>连续三个回车，生成密钥，最后得到了两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code>（默认存储路径是：C:\Users\Administrator.ssh）。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163333.png" class="lozad"></p><p>输入<code>eval &quot;$(ssh-agent -s)&quot;</code>，添加密钥到<code>ssh-agent</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163601.png" class="lozad"></p><p> 再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163652.png" class="lozad"></p><p>在目录C:\Users\Administrator.ssh下载，找到下面两文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163711.png" class="lozad"></p><p>用记事本打开id_rsa.pub，复制里面的内容</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163730.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163742.png" class="lozad"></p><p>添加成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163759.png" class="lozad"></p><p>继续在Git bash中输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> 然后输入两次yes，返回下图说明连接成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163840.png" class="lozad"></p><h2 id="2-2-自定义域名设置"><a href="#2-2-自定义域名设置" class="headerlink" title="2.2 自定义域名设置"></a>2.2 自定义域名设置</h2><p>在Blog的source目录下，新建一个CANME文件，具体操作如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164007.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164044.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164727.png" class="lozad"></p><p>在cmd窗口中输入ping 用户名.github.io 得到GitHub分配的一个公网ip地址，记下这个地址</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164454.png" class="lozad"></p><p>##2.3 设置域名解析</p><p>然后到阿里云购买好的域名中心，设置域名解析，下面是设置好的结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164642.png" class="lozad"></p><p>设置步骤：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164925.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164942.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165010.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165027.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165046.png" class="lozad"></p><p>##2.4 配置部署</p><p>在Blog的根目录下，找到_config.yml文件，修改repo值（在末尾）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165607.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165450.png" class="lozad"></p><p>在Git bash中输入hexo new post “test”</p><p>这时，可以在source文件下的_posts文件夹中看到刚刚新建的test文件，写文章可以直接在该文档中去写</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165733.png" class="lozad"></p><p>在生成以及部署文章之前，需要安装一个扩展：</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165849.png" class="lozad"></p><p>使用编辑器编好文章，那么就可以使用命令：hexo g 来生成静态的文档</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165925.png" class="lozad"></p><p>然后使用hexo d 来部署到GitHub中</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165951.png" class="lozad"></p><p>如果点击login后dos界面没有反应，按一下enter键就好了</p><p>出现下图，部署成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816170119.png" class="lozad"></p><h1 id="0x03-美化博客"><a href="#0x03-美化博客" class="headerlink" title="0x03 美化博客"></a>0x03 美化博客</h1><h2 id="3-1-跟换主题"><a href="#3-1-跟换主题" class="headerlink" title="3.1 跟换主题"></a>3.1 跟换主题</h2><p>1.可以直接去hexo官方主题库中去找一个自己喜欢的主题去下载，然后下载完成后复制到themes文件夹下。<a href="https://hexo.io/themes/" target="_blank" rel="noopener">传送门</a></p><p>2.在Blog目录下，右击，点击Git bash here，然后输入</p><p>git clone <a href="https://github.com/shenliyang/hexo-theme-snippet.git" target="_blank" rel="noopener">https://github.com/shenliyang/hexo-theme-snippet.git</a> </p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816173519.png" class="lozad"></p><h2 id="3-2-博客导航栏设置"><a href="#3-2-博客导航栏设置" class="headerlink" title="3.2 博客导航栏设置"></a>3.2 博客导航栏设置</h2><p>直接在博客主题目录下设置即可，在zh-CN中设置也可以。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63rxz6chbj20dz06y74j.jpg" class="lozad"></p><p>​    效果显示</p><p><img alt data-src="G:%5CBlog%5Csource_posts%5C78bb2039ly1g63rz389x9j20v2027q5y.jpg" class="lozad"></p><h2 id="3-3-分类设置"><a href="#3-3-分类设置" class="headerlink" title="3.3 分类设置"></a>3.3 分类设置</h2><p>虽然我们在主题中设置了导航栏，但是却没有给导航栏设置对应的页面，所以点击的时候是不能正常显示的。</p><h3 id="3-3-1-添加分类列表"><a href="#3-3-1-添加分类列表" class="headerlink" title="3.3.1 添加分类列表"></a>3.3.1 添加分类列表</h3><p>在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 <strong>source</strong> 文件夹中新建一个 <strong>categories</strong> 文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s2yji4qj20gy0aoq3e.jpg" class="lozad"></p><p>打开 <strong>categories</strong> 文件夹中的 <strong>index.md</strong> 文件，添加 <strong>type</strong> 字段，设置为 <strong>“categories”</strong>。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s3sxxtuj20bt04g745.jpg" class="lozad"></p><p>接着到主题文件夹下的 _config.yml 配置文件下，找到 <strong>menu</strong> 模块，把 <strong>categories</strong> 的注释给去掉。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s4q4qq9j20ek06bwep.jpg" class="lozad"></p><p>刷新页面（如果刷新没效果，可以重启服务），可以在页面左侧栏上看到多了一个“分类”列表。</p><h3 id="3-3-2-如何将文章添加到对应分类？"><a href="#3-3-2-如何将文章添加到对应分类？" class="headerlink" title="3.3.2 如何将文章添加到对应分类？"></a>3.3.2 如何将文章添加到对应分类？</h3><p>文章发布前，在 front-matter 部分，多写一个 <strong>categories</strong> 字段，然后参数写上类别的名称，保存后重启服务，在网页上点击“分类”，可以看到分类下已经生成了刚刚设置的类别，并把刚刚发布的文章归类在此类别下。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s656g6xj20em091glo.jpg" class="lozad"></p><h2 id="3-4-标签设置"><a href="#3-4-标签设置" class="headerlink" title="3.4 标签设置"></a>3.4 标签设置</h2><p>方法跟分类设置原理一样，这里就不在重复介绍了，需要注意一点的是格式问题。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s81nzjlj20d705cjra.jpg" class="lozad"></p><h2 id="3-5-Hexo-博客添加站内搜索"><a href="#3-5-Hexo-博客添加站内搜索" class="headerlink" title="3.5 Hexo 博客添加站内搜索"></a>3.5 Hexo 博客添加站内搜索</h2><p>蝴蝶主题支持Algolia，Local Search，这就给大家介绍一些Local Search，因为这个配置简单，-&gt; -&gt;。注意：安装的时候要是项目根目录下安装。</p><p>安装 hexo-generator-search</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>安装 hexo-generator-searchdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 <strong>ture</strong>。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63siez3j3j20la068mxd.jpg" class="lozad"></p><p>效果图</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sixkh8fj20l20c9wi4.jpg" class="lozad"></p><h1 id="0x04-其他功能"><a href="#0x04-其他功能" class="headerlink" title="0x04 其他功能"></a>0x04 其他功能</h1><h1 id="0x05-采坑指南"><a href="#0x05-采坑指南" class="headerlink" title="0x05 采坑指南"></a>0x05 采坑指南</h1><h2 id="5-1-端口占用问题"><a href="#5-1-端口占用问题" class="headerlink" title="5.1 端口占用问题"></a>5.1 端口占用问题</h2><p>假如页面一直无法跳转，那么可能端口被占用了。此时我们<code>ctrl+c</code>停止服务器，接着输入<code>“hexo server -p 端口号”</code>来改变端口号</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sltc3yfj20g0045mx1.jpg" class="lozad"></p><h2 id="5-2-npm-install-hexo-g出现问题"><a href="#5-2-npm-install-hexo-g出现问题" class="headerlink" title="5.2 npm install hexo -g出现问题"></a>5.2 npm install hexo -g出现问题</h2><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sm9gnpfj20k004mt8u.jpg" class="lozad"></p><p>解决方法：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63smjyd3bj20iq03oq31.jpg" class="lozad"></p><p>然后再次执行<code>npm install hexo  -g</code></p><h2 id="5-3-ssh-key配置失败"><a href="#5-3-ssh-key配置失败" class="headerlink" title="5.3 ssh-key配置失败"></a>5.3 ssh-key配置失败</h2><p>首先，清除所有的<code>key-pair</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br><span class="line">rm -r ~/.ssh</span><br></pre></td></tr></table></figure><p>删除你在<code>github</code>中的<code>public-key</code>,重新生成<code>ssh</code>密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>接下来正常操作</p><p>在<code>github</code>上添加公钥<code>public-key</code>:</p><p>1、首先在你的终端运行<code>xclip -sel c ~/.ssh/id_rsa.pub</code>将公钥内容复制到剪切板</p><p>2、在<code>github</code>上添加公钥时，直接复制即可</p><p>3、保存</p><p>删除你在<code>github</code>中的<code>public-key</code></p><p>重新生成<code>ssh</code>密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>测试：</p><p>在终端 <code>ssh -T git@github.com</code></p><h2 id="5-4-发布文章时出现问题"><a href="#5-4-发布文章时出现问题" class="headerlink" title="5.4 发布文章时出现问题"></a>5.4 发布文章时出现问题</h2><p>###5.4.1 问题描述</p><p>使用<code>hexo d -g</code>命令发布文章使，出现如下问题</p><p>YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1:</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sqhgmawj20mq0a03yu.jpg" class="lozad"></p><h3 id="5-4-2-问题原因"><a href="#5-4-2-问题原因" class="headerlink" title="5.4.2 问题原因"></a>5.4.2 问题原因</h3><p>在发布文章的<code>md</code>文件里面开头的文件头没有加空格如下：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sr6vxpbj20ho052t8v.jpg" class="lozad"></p><h3 id="5-4-3-解决方法"><a href="#5-4-3-解决方法" class="headerlink" title="5.4.3 解决方法"></a>5.4.3 解决方法</h3><p>加上空格后，重新编译，没有出错（记得保存）</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63srtnqhrj20cl05h74a.jpg" class="lozad"></p><p>重新编译，完成部署</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63ss3rwp9j20f1073q2z.jpg" class="lozad"></p><h2 id="5-5-输入hexo-generate或者其他hexo的命令时出现下面的问题"><a href="#5-5-输入hexo-generate或者其他hexo的命令时出现下面的问题" class="headerlink" title="5.5 输入hexo generate或者其他hexo的命令时出现下面的问题"></a>5.5 输入hexo generate或者其他hexo的命令时出现下面的问题</h2><h3 id="5-5-1-问题描述"><a href="#5-5-1-问题描述" class="headerlink" title="5.5.1 问题描述"></a>5.5.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63ssmzdxej20jy0dlwfq.jpg" class="lozad"></p><h3 id="5-5-2-问题原因"><a href="#5-5-2-问题原因" class="headerlink" title="5.5.2 问题原因"></a>5.5.2 问题原因</h3><p>yml的配置文件中国，冒号后面需要有空格，如下：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63stb003fj20ly03edfu.jpg" class="lozad"></p><h3 id="5-5-3-解决方法"><a href="#5-5-3-解决方法" class="headerlink" title="5.5.3 解决方法"></a>5.5.3 解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63stxxxr9j20n1034wee.jpg" class="lozad"></p><p>保存后重新运行，没报错，空格真的是大坑。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sudywlzj20cw02pjr8.jpg" class="lozad"></p><h2 id="5-6-部署博客没有CSS"><a href="#5-6-部署博客没有CSS" class="headerlink" title="5.6 部署博客没有CSS"></a>5.6 部署博客没有CSS</h2><h3 id="5-6-1-问题描述"><a href="#5-6-1-问题描述" class="headerlink" title="5.6.1 问题描述"></a>5.6.1 问题描述</h3><p>在本地server成功，显示没有问题</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63szsvf18j20it0aztcu.jpg" class="lozad"></p><p>但是部署到github上之后，就无法显示主题和图片了</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sz41tkij20zi0r6go5.jpg" class="lozad"></p><h3 id="5-6-2-解决方法"><a href="#5-6-2-解决方法" class="headerlink" title="5.6.2 解决方法"></a>5.6.2 解决方法</h3><p>更改一下_config.yml文件，其中的url和root属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ur: http://www.nideyuming.com/blog/</span><br><span class="line">root: /blog</span><br></pre></td></tr></table></figure><p>root 下面应该设置成 /你的项目名 而不是/</p><p>然后重新部署一下就成功了。</p><h2 id="5-7-GitHub配置个人域名出现问题"><a href="#5-7-GitHub配置个人域名出现问题" class="headerlink" title="5.7 GitHub配置个人域名出现问题"></a>5.7 GitHub配置个人域名出现问题</h2><h3 id="5-7-1-问题描述"><a href="#5-7-1-问题描述" class="headerlink" title="5.7.1 问题描述"></a>5.7.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sy0dtlxj20tr0kvq4a.jpg" class="lozad"></p><h3 id="5-7-2-解决方法"><a href="#5-7-2-解决方法" class="headerlink" title="5.7.2  解决方法"></a>5.7.2  解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t0ljwbpj20sz0lk76b.jpg" class="lozad"></p><h2 id="5-8-npm-install安装依赖出现问题"><a href="#5-8-npm-install安装依赖出现问题" class="headerlink" title="5.8 npm install安装依赖出现问题"></a>5.8 npm install安装依赖出现问题</h2><h3 id="5-8-1-问题描述"><a href="#5-8-1-问题描述" class="headerlink" title="5.8.1 问题描述"></a>5.8.1 问题描述</h3><p>npm WARN <a href="mailto:babel-eslint@10.0.1" target="_blank" rel="noopener">babel-eslint@10.0.1</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t1gkedpj20k206sjrx.jpg" class="lozad"></p><h3 id="5-8-2-解决方法"><a href="#5-8-2-解决方法" class="headerlink" title="5.8.2 解决方法"></a>5.8.2 解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t24qb2hj20mx0cpae4.jpg" class="lozad"></p><p>##5.9 输入自己后买的域名后访问是404</p><h3 id="5-9-1-问题描述"><a href="#5-9-1-问题描述" class="headerlink" title="5.9.1 问题描述"></a>5.9.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t30fnfkj20r20dv3yx.jpg" class="lozad"></p><p>但是使用github的默认域名可以正常访问，所以问题出在了域名解析和站点配置的问题上了</p><p>先考虑重置设置一下域名解析的记录，将</p><p>重新设置好了域名解析，但是还是出现404，我TM。。。。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t3frgu7j20p60ht0t5.jpg" class="lozad"></p><p>行，那就是站点配置上面的错误了，在<code>hexo</code>生成的博客的<code>source</code>目录下新建一个 <code>CNAME</code> 文件，然后在这个文件中填入你的域名，这样就不会每次发布之后，<code>gitpage</code>里的 <code>customdomain</code>都被重置掉啦。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t3yrcdxj20hx08ht8z.jpg" class="lozad"></p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t47u135j20ff03mgle.jpg" class="lozad"></p><p>重新部署后，在<code>GitHub</code>中会出现<code>CNAME</code>，说明设置成功了</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t4g3nx8j211s0453yo.jpg" class="lozad"></p><h1 id="0x06-参考链接"><a href="#0x06-参考链接" class="headerlink" title="0x06 参考链接"></a>0x06 参考链接</h1><p><a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a></p><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">https://www.simon96.online/2018/10/12/hexo-tutorial/</a></p><p><a href="https://blog.csdn.net/liuyongshun2/article/details/54629087" target="_blank" rel="noopener">https://blog.csdn.net/liuyongshun2/article/details/54629087</a></p><p><a href="https://jerryc.me/posts/21cfbf15/#快速開始" target="_blank" rel="noopener">https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;​        在一次无意的搜索文章中，看到了一个特别好的网站，不管是前端还是网站的内容都做的非常吸引人。我一开始以为是WordPress搭建的个人博客，后台得知使用hexo+GitHub来搭建的，顿时心中的博客火又燃了起来。&lt;code&gt;$_$&lt;/code&gt;因为我之前也用WordPress搭建过自己的博客，但是由于需要购买阿里云的服务器，这对于我这个穷人来说是一笔开销，所以在服务器到期以后就没有在续费了，而hexo+GitHub搭建的是完全免费的，利用的是GitHub page，然后hexo将我们写的博客渲染成静态页面在部署到GitHub中去，最后在前端展现出来。下面就给大家介绍一个搭建的过程。&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://www.mad-coding.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.mad-coding.cn/tags/hexo/"/>
    
      <category term="github" scheme="https://www.mad-coding.cn/tags/github/"/>
    
      <category term="博客" scheme="https://www.mad-coding.cn/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>自定义hexo创建文章的模板</title>
    <link href="https://www.mad-coding.cn/2019/08/02/%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E6%9D%BF/"/>
    <id>https://www.mad-coding.cn/2019/08/02/自定义hexo创建文章的模板/</id>
    <published>2019-08-02T03:44:51.000Z</published>
    <updated>2019-08-18T03:55:48.613Z</updated>
    
    <content type="html"><![CDATA[<p>#0x00 前言</p><p>在众多的博客中，我选择了<code>hexo</code>，最大的优势就是可以结合<code>GitHub page</code>来搭建一个免费的个人博客系统，将文章都托管到<code>GitHub</code>上，在也不用担心服务器过期的问题了，而且可以自己买一个域名，解析了<code>GitHub</code>上就可以直接使域名访问了。很多小伙伴给自己个博客添加了很多其他的功能，但是每次写文章的时候都需要在文章的开头去写一遍，这简直就是重复造轮子。其实，你可以自己在<code>scaffolds</code>中去修改属于你自己的模板</p><a id="more"></a><p>#0x01 目录了解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">hexo-install-directory</span><br><span class="line">├── CNAME</span><br><span class="line">├── _config.yml  //Hexo的配置文件，可以配置主题、语言等</span><br><span class="line">├── avatar.jpg</span><br><span class="line">├── db.json</span><br><span class="line">├── debug.log</span><br><span class="line">├── node_modules</span><br><span class="line">├── public     //执行hexo g命令后，生成的内容会在这里，包括所有的文章、页面、分类、tag等.</span><br><span class="line">├── scaffolds    //保存着默认模板，自定义模板就是修改该目录下的文件</span><br><span class="line">│   ├── draft.md //默认的草稿模板</span><br><span class="line">│   ├── page.md  //默认的页面模板</span><br><span class="line">│   └── post.md  //默认的文章模板</span><br><span class="line">├── source  //Hexo存放编辑页面的地方，可以使用vim或其他编辑器编辑这里的内容</span><br><span class="line">│   ├── 404.html //自定义404页面，可以使用腾讯公益404页面</span><br><span class="line">│   ├── Staticfile </span><br><span class="line">│   ├── _drafts  //存放所有的草稿文件的目录</span><br><span class="line">│   ├── _posts //存放所有的文章文件的目录，用的最多，比如执行hexo n "post_name"之后，post_name这篇文章就存放在这个目录下</span><br><span class="line">│   ├── categories</span><br><span class="line">└── themes //Hexo的所有主题</span><br><span class="line">    ├── landscape //原始hexo主题</span><br><span class="line">    ├── next     //这是我目前用的主题</span><br></pre></td></tr></table></figure><h1 id="0x02-修改步骤"><a href="#0x02-修改步骤" class="headerlink" title="0x02 修改步骤"></a>0x02 修改步骤</h1><p>在博客的<code>scaffolds</code>目录下有三个<code>md</code>文档，只需要改<code>post.md</code>即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802145835.png" class="lozad"></p><p>我的模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">----</span><br><span class="line">title: &#123;&#123; title &#125;&#125;  //文章标题</span><br><span class="line">date: &#123;&#123; date &#125;&#125;    //文章创建时间</span><br><span class="line">permalink:          //文章显示连接</span><br><span class="line">categories:         //文章匪类目录</span><br><span class="line">tags: []            //文章标签，可多个，用，隔开</span><br><span class="line">description:        //文章描述</span><br><span class="line">image:              //自定义的文章摘要图片，只在页面展示，文章内消失</span><br><span class="line">copyright: true     //增加底部的版权信息（需要配置）</span><br><span class="line">-----</span><br><span class="line">//首页文章展示缩略图</span><br><span class="line">&lt;img src=&quot;https://&quot; alt=&quot;&quot; style=&quot;width:100%&quot; /&gt;  </span><br><span class="line"></span><br><span class="line">0x00 前言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">## 0x01 </span><br><span class="line"></span><br><span class="line">## 0x02</span><br><span class="line"></span><br><span class="line">## 0x03</span><br><span class="line"></span><br><span class="line">## 0x04</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">版权信息</span><br></pre></td></tr></table></figure><p>模板图片如下:</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802145338.png" class="lozad"></p><p>#0x03 效果展示</p><p>首页预览</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802160051.png" class="lozad"></p><p>文章详情</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802160001.png" class="lozad"></p><p>版权信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802160239.png" class="lozad"></p><p>## </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#0x00 前言&lt;/p&gt;
&lt;p&gt;在众多的博客中，我选择了&lt;code&gt;hexo&lt;/code&gt;，最大的优势就是可以结合&lt;code&gt;GitHub page&lt;/code&gt;来搭建一个免费的个人博客系统，将文章都托管到&lt;code&gt;GitHub&lt;/code&gt;上，在也不用担心服务器过期的问题了，而且可以自己买一个域名，解析了&lt;code&gt;GitHub&lt;/code&gt;上就可以直接使域名访问了。很多小伙伴给自己个博客添加了很多其他的功能，但是每次写文章的时候都需要在文章的开头去写一遍，这简直就是重复造轮子。其实，你可以自己在&lt;code&gt;scaffolds&lt;/code&gt;中去修改属于你自己的模板&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://www.mad-coding.cn/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://www.mad-coding.cn/tags/hexo/"/>
    
      <category term="文章模板" scheme="https://www.mad-coding.cn/tags/%E6%96%87%E7%AB%A0%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
</feed>
