<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Python工具库]]></title>
    <url>%2F2019%2F08%2F26%2FPython%E5%B7%A5%E5%85%B7%E5%BA%93%2F</url>
    <content type="text"><![CDATA[0x00 前言我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。 转载链接：https://www.t00ls.net/pytools.html 0x01 漏洞及渗透练习平台WebGoat漏洞练习平台： https://github.com/WebGoat/WebGoat webgoat-legacy漏洞练习平台: https://github.com/WebGoat/WebGoat-Legacy zvuldirll漏洞练习平台： https://github.com/710leo/ZVulDrill vulapps漏洞练习平台： https://github.com/Medicean/VulApps dvwa漏洞练习平台： https://github.com/RandomStorm/DVWA 数据库注入练习平台 ： https://github.com/Audi-1/sqli-labs 用node编写的漏洞练习平台，like OWASP Node Goat： https://github.com/cr0hn/vulnerable-node Ruby编写的一款工具，生成含漏洞的虚拟机： https://github.com/cliffe/secgen 0x02 花式扫描器Nmap端口扫描器： https://github.com/nmap/nmap 本地网络扫描器： https://github.com/SkyLined/LocalNetworkScanner 子域名扫描器： https://github.com/lijiejie/subDomainsBrute https://github.com/aboul3la/Sublist3r https://github.com/TheRook/subbrute https://github.com/infosec-au/altdns linux漏洞扫描： https://github.com/future-architect/vuls 基于端口扫描以及关联CVE: https://github.com/m0nad/HellRaiser 漏洞路由扫描器： https://github.com/jh00nbr/Routerhunter-2.0 迷你批量信息泄漏扫描脚本： https://github.com/lijiejie/BBScan Waf类型检测工具： https://github.com/EnableSecurity/wafw00f 服务器端口弱口令扫描器： https://github.com/wilson9x1/fenghuangscanner_v3 Fox-scan扫描器： https://github.com/fengxuangit/Fox-scan/ 0x03 信息搜集工具社工收集器： https://github.com/n0tr00t/Sreg Github信息搜集： https://github.com/sea-god/gitscan github Repo信息搜集工具： https://github.com/metac0rtex/GitHarvester 信息探测及扫描工具： https://github.com/darryllane/Bluto 内部网络信息扫描器： https://github.com/sowish/LNScan 远程桌面登录扫描器： https://github.com/linuz/Sticky-Keys-Slayer 网络基础设施渗透工具 https://github.com/SECFORCE/sparta SNMAP密码破解: https://github.com/SECFORCE/SNMP-Brute 0x04 WEBwebshell大合集： https://github.com/tennc/webshell 渗透以及web攻击脚本： https://github.com/brianwrf/hackUtils web渗透小工具大合集： https://github.com/rootphantomer/hacktoolsfor_me XSS数据接收平台： https://github.com/firesunCN/BlueLotus_XSSReceiver XSS与CSRF工具： https://github.com/evilcos/xssor xss多功能扫描器： https://github.com/shawarkhanethicalhacker/BruteXSS web漏洞扫描器: https://github.com/andresriancho/w3af WEB漏洞扫描器： https://github.com/sullo/nikto 渗透常用小工具包： https://github.com/leonteale/pentestpackage web目录扫描器: https://github.com/maurosoria/dirsearch web向命令注入检测工具： https://github.com/stasinopoulos/commix 自动化SQL注入检查工具： https://github.com/epinna/tplmap SSL扫描器： https://github.com/rbsec/sslscan 安全工具集合： https://github.com/codejanus/ToolSuite apache日志分析器： https://github.com/mthbernardes/ARTLAS php代码审计工具： https://github.com/pwnsdx/BadCode web指纹识别扫描： https://github.com/urbanadventurer/whatweb 检查网站恶意攻击： https://github.com/ciscocsirt/malspider wordprees漏洞扫描器： https://github.com/wpscanteam/wpscan 固件漏洞扫描器： https://github.com/misterch0c/firminator_backend 数据库注入工具 https://github.com/sqlmapproject/sqlmap Web代理： https://github.com/zt2/sqli-hunter 新版中国菜刀： https://github.com/Chora10/Cknife git泄露利用EXP： https://github.com/lijiejie/GitHack 浏览器攻击框架： https://github.com/beefproject/beef 自动化绕过WAF脚本： https://github.com/khalilbijjou/WAFNinja https://github.com/owtf/wafbypasser 一款开源WAF： https://github.com/SpiderLabs/ModSecurity http命令行客户端： https://github.com/jkbrzt/httpie 浏览器调试利器： https://github.com/firebug/firebug DISCUZ漏洞扫描器： https://github.com/code-scan/dzscan 自动化代码审计工具 https://github.com/wufeifei/cobra 浏览器攻击框架： https://github.com/julienbedard/browsersploit tomcat自动后门部署： https://github.com/mgeeky/tomcatWarDeployer 网络空间指纹扫描器： https://github.com/nanshihui/Scan-T burpsuit之J2EE扫描插件： https://github.com/ilmila/J2EEScan 0x05 windows域渗透工具mimikatz明文注入： https://github.com/gentilkiwi/mimikatz Powershell渗透库合集： https://github.com/PowerShellMafia/PowerSploit Powershell tools合集： https://github.com/clymb3r/PowerShell powershell的mimikittenz: https://github.com/putterpanda/mimikittenz 域渗透教程: https://github.com/l3m0n/pentest_study 0x06 FuzzWeb向Fuzz工具 https://github.com/xmendez/wfuzz HTTP暴力破解，撞库攻击脚本 https://github.com/lijiejie/htpwdScan 0x07 漏洞利用及攻击框架msf框架： https://github.com/rapid7/metasploit-framework pocsscan攻击框架： https://github.com/erevus-cn/pocscan Pocsuite攻击框架: https://github.com/knownsec/Pocsuite Beebeeto攻击框架： https://github.com/n0tr00t/Beebeeto-framework 0x08 漏洞POC&amp;EXPExploitDB官方git版本: https://github.com/offensive-security/exploit-database php漏洞代码分析： https://github.com/80vul/phpcodz CVE-2016-2107: https://github.com/FiloSottile/CVE-2016-2107 CVE-2015-7547 POC： https://github.com/fjserna/CVE-2015-7547 JAVA反序列化POC生成工具: https://github.com/frohoff/ysoserial JAVA反序列化EXP: https://github.com/foxglovesec/JavaUnserializeExploits Jenkins CommonCollections EXP: https://github.com/CaledoniaProject/jenkins-cli-exploit CVE-2015-2426 EXP (windows内核提权): https://github.com/vlad902/hacking-team-windows-kernel-lpe use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示): https://github.com/hxer/vulnapp php7缓存覆写漏洞Demo及相关工具: https://github.com/GoSecure/php7-opcache-override XcodeGhost木马样本: https://github.com/XcodeGhostSource/XcodeGhost 0x09 中间人攻击及钓鱼中间人攻击框架: https://github.com/secretsquirrel/the-backdoor-factory https://github.com/secretsquirrel/BDFProxy https://github.com/byt3bl33d3r/MITMf Inject code, jam wifi, and spy on wifi users: https://github.com/DanMcInerney/LANs.py 中间人代理工具: https://github.com/intrepidusgroup/mallory wifi钓鱼: https://github.com/sophron/wifiphisher 0x10 密码破解密码破解工具: https://github.com/shinnok/johnny 本地存储的各类密码提取利器: https://github.com/AlessandroZ/LaZagne 0x11 二进制及代码分析工具二进制分析工具 https://github.com/devttys0/binwalk 系统扫描器 https://github.com/quarkslab/binmap rp: https://github.com/0vercl0k/rp Windows Exploit Development工具 https://github.com/lillypad/badger 0x12 二进制静态分析工具（python）https://github.com/bdcht/amoco Python Exploit Development Assistance for GDB: https://github.com/longld/peda 对BillGates Linux Botnet系木马活动的监控工具 https://github.com/ValdikSS/billgates-botnet-tracker 木马配置参数提取工具: https://github.com/kevthehermit/RATDecoders Shellphish编写的二进制分析工具（CTF向）: https://github.com/angr/angr 针对python的静态代码分析工具: https://github.com/yinwang0/pysonar2 一个自动化的脚本（shell）分析工具，用来给出警告和建议: https://github.com/koalaman/shellcheck 基于AST变换的简易Javascript反混淆辅助工具: https://github.com/ChiChou/etacsufbo 0x13 EXP编写框架及工具二进制EXP编写工具: https://github.com/t00sh/rop-tool CTF Pwn 类题目脚本编写框架: https://github.com/Gallopsled/pwntools an easy-to-use io library for pwning development: https://github.com/zTrix/zio 跨平台注入工具: https://github.com/frida/frida 哈希长度扩展攻击EXP： https://github.com/citronneur/rdpy 0x14 隐写隐写检测工具 https://github.com/abeluck/stegdetect 0x15 各类安全资料data_hacking合集: https://github.com/ClickSecurity/data_hacking mobile-security-wiki: https://github.com/exploitprotocol/mobile-security-wiki 书籍《reverse-engineering-for-beginners》: https://github.com/veficos/reverse-engineering-for-beginners 一些信息安全标准及设备配置: https://github.com/luyg24/IT_security APT相关笔记: https://github.com/kbandla/APTnotes Kcon资料: https://github.com/knownsec/KCon 《DO NOT FUCK WITH A HACKER》: https://github.com/citypw/DNFWAH 各类安全脑洞图： https://github.com/phith0n/Mind-Map 信息安全流程图： https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428 0x16 各类CTF资源近年ctf writeup大全: https://github.com/ctfs/write-ups-2016 https://github.com/ctfs/write-ups-2015 https://github.com/ctfs/write-ups-2014 fbctf竞赛平台Demo: https://github.com/facebook/fbctf ctf Resources: https://github.com/ctfs/resources ctf及黑客资源合集: https://github.com/bt3gl/My-Gray-Hacker-Resources ctf和安全工具大合集: https://github.com/zardus/ctf-tools ctf向 python工具包 https://github.com/P1kachu/v0lt 0x17 各类编程资源大礼包（什么都有）: https://github.com/bayandin/awesome-awesomeness bash-handbook: https://github.com/denysdovhan/bash-handbook python资源大全: https://github.com/jobbole/awesome-python-cn git学习资料: https://github.com/xirong/my-git 安卓开源代码解析 https://github.com/android-cn/android-open-project python框架，库，资源大合集: https://github.com/vinta/awesome-python JS 正则表达式库（用于简化构造复杂的JS正则表达式）: https://github.com/VerbalExpressions/JSVerbalExpressions 0x18 Pythonpython 正则表达式库（用于简化构造复杂的python正则表达式）: https://github.com/VerbalExpressions/ python任务管理以及命令执行库: https://github.com/pyinvoke/invoke python exe打包库: https://github.com/pyinstaller/pyinstaller Veil-Evasion免杀项目： https://github.com/Veil-Framework/Veil-Evasion py3 爬虫框架: https://github.com/orf/cyborg 一个提供底层接口数据包编程和网络协议支持的python库: https://github.com/CoreSecurity/impacket python requests 库: https://github.com/kennethreitz/requests python 实用工具合集: https://github.com/mahmoud/boltons python爬虫系统: https://github.com/binux/pyspider 0x19 科学上网科学上网工具 https://github.com/XX-net/XX-Net 0x20 福利微信自动抢红包动态库 https://github.com/east520/AutoGetRedEnv 微信抢红包插件（安卓版） https://github.com/geeeeeeeeek/WeChatLuckyMoney hardsed神器: https://github.com/yangyangwithgnu/hardseed 0x21 甲方安全工程师生存指南web索引及日志搜索工具： https://github.com/thomaspatzke/WASE 开源日志采集器： https://github.com/wgliang/logcool 扫描CS结构的web debuger https://github.com/Kozea/wdb 恢复sqlite数据库删除注册信息： https://github.com/aramosf/recoversqlite/ gps欺骗检测工具: https://github.com/zxsecurity/gpsnitch 应急处置响应框架: https://github.com/biggiesmallsAG/nightHawkResponse web安全开发指南: https://github.com/FallibleInc/security-guide-for-developers 各个知名厂商漏洞测试报告模板： https://github.com/juliocesarfort/public-pentesting-reports linux下恶意代码检测包： https://github.com/rfxn/linux-malware-detect 操作系统运行指标可视化框架： https://github.com/facebook/osquery 恶意代码分析系统： https://github.com/cuckoosandbox/cuckoo 定期搜索及存储web应用： https://github.com/Netflix/Scumblr 事件响应框架： https://github.com/google/grr 综合主机监控检测平台： https://github.com/ossec/ossec-hids 分布式实时数字取证系统： https://github.com/mozilla/mig Microsoft &amp; Unix 文件系统及硬盘取证工具： https://github.com/sleuthkit/sleuthkit 0x22 蜜罐SSH蜜罐： https://github.com/desaster/kippo 蜜罐集合资源： https://github.com/paralax/awesome-honeypots kippo进阶版蜜罐： https://github.com/micheloosterhof/cowrie SMTP 蜜罐： https://github.com/awhitehatter/mailoney web应用程序蜜罐： https://github.com/mushorg/glastopf 数据库蜜罐： https://github.com/jordan-wright/elastichoney web蜜罐： https://github.com/atiger77/Dionaea 0x23 远控用gmail充当C&amp;C服务器的后门 https://github.com/byt3bl33d3r/gcat 开源的远控： https://github.com/UbbeLoL/uRAT c#远控： https://github.com/hussein-aitlahcen/BlackHole]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[密码生成工具cewl的使用]]></title>
    <url>%2F2019%2F08%2F22%2F%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-cewl%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[0x00 前言今天给大家介绍的是Linux字典生成工具cewl，并学习更多的高级参数用法。首先先简单的介绍一个cewl工具，该工具最大的功能就能能够爬取网站上的信息并自动生成字典，然后就可以使用该字典配合hydra去进行暴力破解，该工具常用于CTF中攻靶拿Flag使用。OK下面开始进入正题。 0x01 环境需求 cewl需要安装在Linux中使用，我使用的环境事kali Linux 如果使用的是其他Linux版本的系统话，需要使用命令去安装 1sodo apt-get install cewl 命令行运行截图 0x02 参数说明2.1 可选参数1234567891011121314151617-h, –help：显示帮助。-k, –keep：保存下载文件。-d &lt;x&gt;, –depth &lt;x&gt;：爬行深度，默认2。-m, –min_world_length：最小长度，默认最小长度为3。-o, –offsite：允许爬虫访问其他站点。-w, –write：将输出结果写入到文件。-u, –ua &lt;agent&gt;：设置user agent。-n, –no-words：不输出字典。–with-numbers：允许单词中存在数字，跟字母一样。-a, –meta：包括元数据。–meta_file file：输出元数据文件。-e, –email：包括email地址。–email_file &lt;file&gt;：输入邮件地址文件。–meta-temp-dir &lt;dir&gt;：exiftool解析文件时使用的临时目录，默认是/temp。-c, –count：显示发现的每个单词的数量。-v, –verbose：verbose。–debug:提取调试信息。 2.2 认证123–auth_type：Digest或者basic认证。–auth_user：用户名认证。–auth_pass：密码认证。 2.3 代理1234–proxy_host：代理主机。–proxy_port：代理端口，默认8080。–proxy_username：用户名代理。–proxy_password：密码代理。 0x03 实例使用语法：cewl &lt;url&gt; [options] 3.1 简单用法1cewl https://xxxx.com 用法说明：cewl会爬行该网页，抓取网页中的英文字母，没有设置最小字母长度的情况下默认是3,可以使用-m来指定最小单词长度。 ##3.2 保存输出结果 将指定长度的结果报错在txt文件中 12cewl https://digi.ninja/ -m 5 -w test.txt ##爬行该页面上最小长度为5的单词并将结果保存在test.txt文档中 然后输入ls -lh来查看结果文件 使用cat test.txt命令来查看 ps:如果该站点的英文单词特别多的话，需要相当一段时间。 然后输入ls -lh来查看结果文件 ##3.3 从网站获取email地址 你可以使用-e参数来启用邮件参数，配合-n参数使用，-n参数是在爬行给定网站时隐藏生成的单词列表： 由于刚刚的测试站点上没有email地址，为了能更好的展示出来，换了一个有email地址的网页。结果如下： 1cewl 目标站点 -e -n 3.4 统计网站中单词的重复次数一个英文网站中，不免有很多重复的单词，如果你想统计每个单词的重复次数，可以使用-c命令 3.5 增加爬行深度如果你想增加爬行等级，来遍历网站中更多的单词来生成更大的字典，你可以使用-d参数，并指定一个爬行深度 等级来进行更加深入的爬行，默认等级是2 1cewl https://portswigger.net/blog/http-desync-attacks-request-smuggling-reborn -d 3 3.6 提取调试信息你可以使用--debug参数来启用调试模式，显示爬行网站时的错误和原始详细信息： 3.7 Verbose模式为了扩大网站的爬行结果来获取网站更加完整详细的信息，你可以加-v参数，也就是verbose模式。它不会生成字典，而是会dump网站上的信息。 3.8 生成数字字典如果你想生成字母数字字典，你可以使用—with-numbers参数 1cewl http://testphp.vulnweb.com/ --with-numbers 3.9 cewl摘要/基础认证如果存在一个认证页面来登录网站，那么上面的配置就行不通了，为了生成字典，我们需要使用下面的参数来绕过认证页面： 123–auth_type: Digest/basic –auth_user:用户名 –auth_pass: 密码 1cewl http://192.168.1.105/dvwa/login.php --auth_type Digest --auth_user --用户名 auth_pass 密码 -v 或者 1cewl http://192.168.1.105/dvwa/login.php --auth_type basic --auth_user admin --auth_pass password -v 3.9 代理URL如果网站使用了代理服务器，那么cewl的默认命令就无法生成字典了，比如下面这条命令： 1cewl -w dict.txt http://192.168.1.103/wordpress/ 不过你可以使用—proxy参数来开启代理URL，这样就可以生成字典了，比如下列命令： 1cewl --proxy_host 192.168.1.103 --proxy_port 3128 -w dict.txt http://192.168.1.103/wordpress/ 如下图所示，执行第二条命令之后，成功的输出了单词列表： 0x04 参考链接https://www.4hou.com/tools/14693.html ###]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[工作之杂谈]]></title>
    <url>%2F2019%2F08%2F22%2F%E5%B7%A5%E4%BD%9C%E4%B9%8B%E6%9D%82%E8%B0%88%2F</url>
    <content type="text"><![CDATA[0x00 前言简单谈谈在第一家公司工作近半年的感受。emmm，我的语文打小就不好，所以不会写软文，只会写大白话。做做记录而已啦~ 0x01 正文转眼间，我在第一家公司工作有近半年的时间了，在这半年的时间里，怎么说尼，我收获到了知识、工作技能、朋友，虽然我工作的这家公司不是什么500强公司，但是公司的工作氛围还可以，并且自己在做完工作后可以看书提升自己的技能。下面来简单介绍一下这几个月的工作和生活情况。 1.1 第一个月 刚到公司的第一天，我来的还挺早，看到很多陌生的同事，我也不知道咋办，我，情商比较低，so，尴尬的喊哥，喊姐的打招呼。然后把公司的同事QQ都加了一遍（是不是有点小学生的感觉 0.0）。 ###]]></content>
      <categories>
        <category>记录生活</category>
      </categories>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4款GitHub泄露敏感信息搜索工具的安装使用与比较]]></title>
    <url>%2F2019%2F08%2F22%2F4%E6%AC%BEGitHub%E6%B3%84%E9%9C%B2%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%AF%94%E8%BE%83%2F</url>
    <content type="text"><![CDATA[0x00 前言GitHub是一个免费开源的网站，是每个程序员最喜欢发布代码，分享技术的地方，这就导致了一个问题，程序员上传的代码中可能包含了项目中的敏感信息，比如数据库的链接地址和账号密码等。今天来给大家介绍4款发现GitHub中泄露的敏感信息的工具，并将它们做个对比。 0x01 gitrobRuby开发，支持通过postgresql数据库https://github.com/michenriksen/gitrob 0x02 weakfilescanweakfilescanPython开发，多线程，猪猪侠开发中文注释，个性化定制，需要beautifulsoup4用于渗透人员在对网站进行网站渗透时查找敏感文件（配置文件、临时文件）、敏感目录，会首先爬取目标站点的三层目录资源，生成目录FUZZ和文件FUZZhttps://github.com/ring04h/weakfilescan 0x03 GitPreyGitPreyPython开发，国人开发中文支持，用于企业搜索关键词，及时发现潜在的敏感信息，需要登录https://github.com/repoog/GitPrey 0x04 GitMinerGitMinerPython开发，功能简单https://github.com/UnkL4b/GitMiner 0x05 参考链接https://www.cnblogs.com/sch01ar/p/7625607.html ###]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>信息泄露</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PicGo+GitHub打造自己的图床]]></title>
    <url>%2F2019%2F08%2F22%2Fpicbed-GitHub%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A%2F</url>
    <content type="text"><![CDATA[0x00 前言很多朋友之前使用七牛云作为自己博客的图床，但是在试用域名到到期后，所有的图片都挂掉了，造成了不必要的麻烦。今天给大家介绍 picbed+GitHub打造一个专属于自己的图床，将所有的图片都托管到GitHub上，写作时，只需要功按几个快捷键就可以完成图片的上传和展示，让你爱上创作。 0x01 前期准备 需要的东西： GitHub账号 picbed图床工具 1.1 GitHub账号申请出门右拐百度 1.2 新建图床仓库点击 git 主页右上角的 + 创建 New repository； 填写仓库信息，例如我就创建了一个 cloudimg 的仓库。这里注意，仓库得设置为 Public 因为后面通过客户端访问算是外部访问，因此无法访问 Private ，这样的话图片传上来之后只能存储不能显示。所以要设置为 Public。 1.3 创建 token 并复制保存此时仓库已经建立，点击右上角头像，然后进入设置； 然后拉到下方创建，创建成功后，会出现下方的一串token，记得要复制，只会出现一次，不过实在忘记的话，可以删除了重新创建一个。 0x02 PicGo 客户端配置2.1 PicGod的下载安装PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多。 git地址：PicGo Win版下载链接：百度云 密码：PicG ##2.2 PicGod的配置 注意：设置自定义域名不要填，不然会一直提示上传图片失败，具体原因我也不知道为什么，在网上找的教程都配置了，但是我配置了以后上传图片总是失败，也算是一个大坑了， 2.3 快捷键的设置 想用什么快捷键只需要在键盘上安装几个键然后点击确定就行了，我这里的快捷键是Ctrl+Shift+C 开启开机自启和使用时间戳将上传的文件重命名 安装插件配置好上传快捷键以后，还需要安装一个autocopy插件，该插件可以在你上传成功后，自动生成Markdown语法的图片链接到剪切板，只需要复制到Markdown编辑器就可以预览图片，简直方便至极。只需搜索安装就行了。 上传成功的相册专区 如果图片的Markdown链接没有自动复制到剪切板，只需要在相册中重新点击一下对应图片下方的复制按钮即可。 0x03 吐槽通过上面的操作，我们已经可以成功的将图片上传到GitHub了，但是有一点不得不吐槽一下，就是GitHub毕竟是国外的，所以我们上传到GitHub的图片加载的速度会有点慢，所以我就研究了一下微博图床，毕竟微博是国内的，然后就有了下面的事件。 配置好微博的图床 很开心的上传了图片，然后使用hexo本地加载一切正常，但是很奇怪的是部署到博客中的时候，浙西图片全部都显示404，我当时的心情是这样的。 然后我又不得不重新将图片的链接换成了GitHub图床上的链接才恢复正常。 0x04 参考链接https://www.jianshu.com/p/9d91355e8418 ###]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LDAP-Admin-Tools工具安装激活教程]]></title>
    <url>%2F2019%2F08%2F22%2FLDAP-Admin-Tools%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[0x00 前言在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。 0x01 下载安装LDAP下载：传送门 ,选择相应的系统版统下载 下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。 0x02 激活信息 不同版本的软件激活信息 2.1 LDAP Admin Tool(Professional Edition)123email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot; 2.2 LDAP Admin Tool(Standard Edition)123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot; 2.3 AD Admin &amp; Reporting Tool123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot; 2.4 LDAP Plus AD HelpDesk Professional Tool123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot; 2.5 LDAP Admin &amp; Reporting Tool123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot; 2.6 AD Admin Tool12345&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259487000-4718859487000&quot; 0x03 激活步骤打开软件后找到工具栏上的license 然后填上对应版本的激活邮箱和key 填好后点击next需要继续输入activationCode ，在我给的激活信息里面 激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>LADP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LDAP-Admin-Tools工具安装激活教程]]></title>
    <url>%2F2019%2F08%2F22%2FLDAP%E5%8C%BF%E5%90%8D%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E%2F</url>
    <content type="text"><![CDATA[0x00 前言在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。 0x01 下载安装LDAP下载：传送门 ,选择相应的系统版统下载 下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。 0x02 激活信息 不同版本的软件激活信息 2.1 LDAP Admin Tool(Professional Edition)123email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot; 2.2 LDAP Admin Tool(Standard Edition)123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot; 2.3 AD Admin &amp; Reporting Tool123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot; 2.4 LDAP Plus AD HelpDesk Professional Tool123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot; 2.5 LDAP Admin &amp; Reporting Tool123&quot;email&quot;:&quot;myluamas@gmail.com&quot;,&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot; 2.6 AD Admin Tool“email”:”myluamas@gmail.com“, “registrationKey”:”VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=”, “activationCode”:”STARTTIMEGMT1565259487000-4718859487000” 0x03 激活步骤打开软件后找到工具栏上的license 然后填上对应版本的激活邮箱和key 填好后点击next需要继续输入activationCode ，在我给的激活信息里面 激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>LADP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AppScan 9.0.3.13 破解版本安装教程]]></title>
    <url>%2F2019%2F08%2F21%2FAppScan-9-0-3-13-%E7%A0%B4%E8%A7%A3%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[0x00 前言最近AppScan 9.0.3.13 版本发布，国内已经以后大佬破解成功了，下面来给大家讲讲如何安装和破解的。 0x01 AppScan简介IBM AppScan是一款非常好用且功能强大的Web 应用安全测试工具，曾以 Watchfire AppScan的名称享誉业界，Rational AppScan 可自动化 Web 应用的安全漏洞评估工作，能扫描和检测所有常见的 Web 应用安全漏洞，例如 SQL注入（SQL-injection）、跨站点脚本攻击（cross-site scripting）、缓冲区溢出（buffer overflow）及最新的 Flash/Flex 应用及 Web 2.0 应用曝露等方面安全漏洞的扫描。 0x02 开始安装下载：百度网盘传送门 密码：zkyy 下载完成后解压出来 双击文件夹中的.exe文件 出现下面这个原因是因为没有安装.net框架，而APPscan是需要这个框架环境的。所以软件会自动帮我们下载框架安装。 框架下载中，耐性等待，可能时间会有点长。 安装完框架以后会提示是否立即重启，点击立即重启就好 重启过后，再次进入安装界面 一切默认即可 耐心等待一会，等待安装完成 0x03 开始破解将下载的压缩包中的另个压缩包解压出来，复制里面的dll文件到APPscan的安装目录下 进入APPscan的默认安装路径，如果是自己自定义的目录的话，找到就行 1C:\ProgramFiles (x86)\IBM\AppScan Standard 然后打开APPscan,按照下面的操作导入证书 破解完成 0x04 总结安装破解基本操作。一顿默认配置，搞定。哈哈哈哈 新版老本对比了一下，创建扫描的界面修改了一下 增加了云扫描 其他的，大家自己与研究吧 附上官方教程视频]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>APPscan</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[渗透测试面试宝典]]></title>
    <url>%2F2019%2F08%2F20%2F%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8%2F</url>
    <content type="text"><![CDATA[0x00 前言随着科学技术的发展，网络安全已经提升到了国家层面。习大大说：“没有网络安全就没有国家安全。”那么在网络安全大热的今天，如何才能历经重重磨难才能达到公司需要的高度，才能符合面试官的口味,才能在众多才子中脱颖而出尼？那就好好看看博主这篇面试宝典吧，内容均是从网络上采集或者自己总结，有问题希望大家可以指出，一起进步！nice~ 0x01 简述漏洞挖掘的思路1. 1 信息收集1234567服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等）网站指纹识别（包括，cms，cdn，证书等），dns记录whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等）子域名收集，旁站，C段等google hacking针对化搜索，pdf文件，中间件版本，弱口令扫描等扫描网站目录结构，爆后台，网站banner，测试文件，备份等敏感文件泄漏等传输协议，通用漏洞，exp，github源码等 1.2 漏洞挖掘123浏览网站，看看网站规模，功能，特点等端口，弱口令，目录等扫描,对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。XSS，SQL注入，上传，命令注入，CSRF，cookie安全检测，敏感信息，通信数据传输，暴力破解，任意文件上传，越权访问，未授权访问，目录遍历，文件 包含，重放攻击（短信轰炸），服务器漏洞检测，最后使用漏扫工具等 1.3 漏洞利用&amp;权限提升123mysql提权，serv-u提权，oracle提权windows 溢出提权linux脏牛,内核漏洞提权 1.4 清除测试数据&amp;输出报告12日志、测试数据的清理总结，输出渗透测试报告，附修复方案 1.5 复测1验证并发现是否有新漏洞，输出报告，归档 0x02 面试题（一）2.1 拿到一个待检测的站，你觉得应该先做什么？2.1.1 信息收集1234561、获取域名的whois信息,获取注册者邮箱姓名电话等，丢社工库里看看有没有泄露密码，然后尝试用泄露的密码进行登录后台。用邮箱做关键词进行丢进搜索引擎。利用搜索到的关联信息找出其他邮箱进而得到常用社交账号。社工找出社交账号，里面或许会找出管理员设置密码的习惯 。利用已有信息生成专用字典。2、查询服务器旁站以及子域名站点，因为主站一般比较难，所以先看看旁站有没有通用性的cms或者其他漏洞。3、查看服务器操作系统版本，web中间件，看看是否存在已知的漏洞，比如IIS，APACHE,NGINX的解析漏洞4、查看IP，进行IP地址端口扫描，对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。5、扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php探针6、google hack 进一步探测网站的信息，后台，敏感文件 如何扩大攻击面呢？1.收集尽量全的企业域名（包括各种子域名以及子公司的域名，越全越好）2.收集尽量全的企业申请的公网 IP3.对所有收集到的域名以及 IP 地址进行端口扫描（由于时间可能比较久，所以可以选择利用 zoomeye、shodan、censys 等平台）4.针对不同的服务进行对应的渗透测试（尤其是可能存在漏洞的中间件） 0x030x04 参考链接https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ ###]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[web应用程序测试方法论]]></title>
    <url>%2F2019%2F08%2F19%2Fweb%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA%2F</url>
    <content type="text"><![CDATA[0x00 前言今天给大家分享一个web应用程序测试方法论的思维导图，希望大家可以通过思维导图理清自己测试的思路，查缺补漏，然后在总结出自己的方法论，欢迎大家和我交流。 ###]]></content>
      <categories>
        <category>思维导图</category>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>方法论</tag>
        <tag>应用程序测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[burp加载jython时出错]]></title>
    <url>%2F2019%2F08%2F19%2Fburp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99%2F</url>
    <content type="text"><![CDATA[0x00 前言今天在安装burpsuite中的jpython环境时，出现了问题，这里记录一下，防止下次再次出现问题时不知所措。 0x01 问题描述具体环境配置如下，路径都是正确的 勾选插件时出现下面的情况 0x02 问题原因jar包出现了问题，重新下载jar包完美解决问题 加载出错的jar包 官网下载的jar包 可以从文件的大小中就可以看出来，jar包有问题。 0x03 解决步骤第一步：去官网重新下载jython 的jar包文件 https://www.jython.org/downloads.html 第二步：将下载的jar包文件放到burp安装包路径下或者其他目录下也可以 注：必须示纯英文的路径，不能是中文路径，否则会出现错误。 第三步：重新导入jar包，路径需要正确，如下： 小技巧：输入法状态切换到英文输入模式下，然后按j，即可快速定位需要找到的文件。 重新加载，成功了。 0x04 总结在遇到问题时，不要慌张，先去百度，google等搜索引擎搜索一下，看看是否有前人的解决方法，这样可以快速的解决问题，如果没有找到相关的解决方法，可以通过错误信息的提示，逐一排查，找到可能的错误点 ###]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>解决问题</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nessus数据库崩溃问题]]></title>
    <url>%2F2019%2F08%2F19%2Fnessus%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[0x00 前言今天想用nessus扫描器扫描一下系统，看看有没有什么漏洞，但是打开浏览器的时候发现，提示数据库崩溃了。 然后上网百度，貌似在百度贴吧中找到了答案，然后，为了给以后的自己和碰到同样问题的朋友看，我在给大家讲讲吧。 0x01 问题描述在浏览器中打开nessus时，提示下面错误， Corrupt Database A corrupt database has been detected which prevents Nessus from running. Please take the following corrective actions: 图片详情 0x02 解决方法 按win+R ，输入services.msc 找到tenable nessus服务，右击停止服务 在nessus的安装目录中，找到global.db文件，直接剪切到桌面或者删掉，或者大家实在找不到该文件的话，可以下载一个everything快速搜索软件，可以快速的搜索到这个软件 再次启动nessus服务 刷新浏览器，等舒适化完成，舒服Nessus，Nessus账号密码，成功登陆系统。 0x03 总结出现问题，先不要慌张，因为，你应该不是第一个碰到这个问题的人，so，百度，Google，寻找答案，之所谓：授人予鱼，不如授人于渔。方法告诉你了，下次要记得的多百度寻找答案奥！: D]]></content>
      <categories>
        <category>安全工具</category>
      </categories>
      <tags>
        <tag>解决问题</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[第一章：应用程序及表单风险（渗透测试方法论）]]></title>
    <url>%2F2019%2F08%2F19%2F%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%8A%E8%A1%A8%E5%8D%95%E9%A3%8E%E9%99%A9%2F</url>
    <content type="text"><![CDATA[0x00 前言渗透测试对于每个人来说，测试的思路都不一样，但是大体思路还是信息收集-&gt;漏洞扫描-&gt;漏洞利用-&gt;权限提升-&gt;清理痕迹-&gt;输出报告。不过企业中的灰盒测试一般都是主要漏洞挖掘为主，这样的话，就需要有一个测试的方法论在进行测试了。so，这里给大家整理出渗透测试的方法论分享给大家。 0x01 搜索可见的内容一般情况下，手动浏览就可以确定应用程序的大部分内容和功能。浏览应用程序的基本方法是从初始页面开始，依次浏览每一个链接和所有的多阶段功能。但是为了仔细检查枚举的内容，全面记录每一项确定的功能，简单的浏览就不再能满足我们的需求，有必要使用更加先进的工具。 （1）首先配置浏览器，使用代理工具，可以使用BurpSuite等工具监控和解析由代理服务器处理的Web内容，对站点实行被动抓取。 首先开启代理，然后打开Burpsuite并找到Target下的Site map 访问目标网站，对其进行自动爬取，由于完全自动化的方法在内容枚举方面还有一定的限制，例如 身份验证时爬虫的一些操作会让通过验证的会话中断； 向某个敏感内容提交无效输入，应用程序可能会自我防御，终止会话； 多阶段功能往往会严格的执行输入确认检查，可能不会接受自动工具提交的值； 爬虫可能会发现并使用敏感功能，造成重大损失等等。 所以更多的时候我们选择进行指定爬取，即用户通过常规方式浏览应用程序，来枚举应用程序的所有功能，生成的流量穿过一个组合拦截代理服务器与爬虫的工具，监控所有请求和响应，并且像一个正常的应用程序感知爬虫那样来分析应用程序的响应，BurpSuite中的爬虫就有这种用途。 （3）接下来进行指定爬取 ​ 以常规方式浏览整个应用程序，访问发现的每一个url，提交每一个表单并执行全部多阶段功能，尝试在JavaScript激活与禁用、cookie激活与禁用的情况下浏览。 如何禁用cookie ​ 打开设置，找到Privacy，点击Firefox will右边的下拉菜单，选择use custom settings for history，然后将Accept cookies from sites前面的√去掉 如何禁用JavaScript ​ 在地址栏输入about:config，点击 I accept the risk！ 搜索javascript，找到javascript.enable，双击关闭 4）完成手动浏览和被动抓取以后，可以用一组发现的url作为种子，使用爬虫抓取应用程序。有时候这样可以发现其他在手动浏览时忽略的内容。在进行自动抓取前，首先应确定任何危险的或可能会中断应用程序会话的url，并配置爬虫，将它们排除在抓取范围之外。 PS：许多Web服务器的根目录下有一个名为robots.txt的文件，其中列出了站点不希望Web爬虫访问或搜索引擎列入索引的url。有时候这个文件中可能会包含一些敏感信息，这些信息很可能会危机Web程序的安全。 0x02 浏览公共资源（1）使用因特网搜索引擎和历史档案，确定它们编入索引或保存的与目标应用程序有关的内容。 例如使用Wayback Machine查看历史档案 随便搜索一个网站，就用我们团队的网站来测试，可以看到不同的时间节点有保存的快照信息。 使用高级搜索提高效率。例如，在Google中，可以使用site:获取所有与目标站点有关的内容，使用link:获取链接到目标站点的其他站点。如果在搜索过程中找到现有应用程序已经删除的内容，仍然可以从搜索引擎的缓存中查看这些内容。这些已经被删除的内容中可能包含尚未删除的其他资源的链接。 使用site: 目标站点进行搜索 site:www.baidu.com将返回Google引用的每一个目标站点的资源 site:www.baidu.com inurl:login将返回所有包含login表达式的页面。在大型且复杂的应用程序中，可以快速定位感兴趣的资源，如管理菜单、密码重置等功能 使用link:进行搜索 link:www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。 使用related进行搜索 related:www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。 （3）搜索在应用程序内容[如联系信息，包括并未在屏幕上显示的内容(如HTML注释)]中发现的任何姓名与电子邮件地址。除Web搜索外，还应进行新闻和分组搜索。在论坛上寻找与目标应用程序及其支持基础架构有关的所有技术信息。 此处使用evilscience靶机作为检索对象 在这个网站中有很多的注释，当然这些注释没有什么用，此处只是为了演示 在一些安全性不是很强的网站里面还会直接找到用户名 例如： 新闻搜索： （4）检查已发布的任何WSDL文件，以生成应用程序可能采用的功能名称和参数值列表。 0x03 发现隐藏内容0x04 查找默认的内容0x05 枚举标识符制定的功能0x06 调试参数0x07 调试参数0x08 确定数据输入点0x09 确定所使用的技术0x10 解析受攻击面0x11 通过客户端传送数据0x12 客户端输入控件###]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>方法论</tag>
        <tag>渗透测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo蝴蝶主题的一些小功能(跟新中)]]></title>
    <url>%2F2019%2F08%2F18%2Fhexo%E8%9D%B4%E8%9D%B6%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD-%E8%B7%9F%E6%96%B0%E4%B8%AD%2F</url>
    <content type="text"><![CDATA[0x00 前言在从使用next主题后，因为博客的加载缓慢问题，让我再次放弃的这个主题，而偶然的看到同事使用的蝴蝶主题，让我欢喜不已。因为这个主题真的太好看了，一下子吸引了我，而且整个博客加载的速度也是非常的快。不过由图床使用的是GitHub的图床，所有在图片加载这个方面还是有点慢。不过整理影响不是很大。这篇文章来给大家介绍一下，换了蝴蝶 主题后的一些小功能细节问题。 0x01 导航栏图标问题导航栏栏图片，就是在导航栏的文字前面都有对应的小图标，不知道有没有人和我一样，因为增加了导航栏的功能菜单，但是苦苦的找不到对应的图标，让博客看起来不是很好看。 效果预览 实现步骤访问font_awesome网站，主页如下 搜索想要的图标，比如电影 复制电影的代码 在主题的配置文件下替换掉后面的标识 然后刷新一下浏览器就能看到了 效果查看 0x02 分类目录二级目录不知道大家有没有这样的苦恼，就是在写文章的时候，把很多文章都归类到一个大类中，到最后自己找文章的时候都不太好找，但是如果我们将文章都归类到一个二级分类，然后二级分类在归类到一级分类，这样的话是不是找起来更方便一点尼。 效果预览 实现步骤在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。理论上来说，还可以添加3级，4级分类目录，这个根据自己的喜好和实际需求了。 在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。 效果查看 0x03 hexo 部署出现问题在使用hexo d或者hexo deploy Mingling 时，发现不能部署。 问题描述 解决方法在博客根目录下，输入npm install --save hexo-deployer-git命令， 安装完成以后再次之行hexo deploy 一切正常 0x04 关闭page页面或者特定文章的评论我们在写文章的时候，经常可能会碰到有些文章不需要增加评论的功能，那怎么去实现尼，其实hexo早就想到这点了，实现很简单，一条命令即可。 实现步骤只要在文章的md或者page的md文件头中加入comments: false即可 注意：是comments 不是comment，单词别写错，第二个，false前面有一个空格 0x05 给Hexo正确添加RSS订阅安装feed插件在博客的根目录下输入npm install hexo-generator-feed命令安装，然后等待安装完成 添加配置文件打开站点配置文件_config.yml，末尾添加以下配置 12345678910 # Extensions## Plugins: http://hexo.io/plugins/#RSS订阅plugin:- hexo-generator-feed#Feed Atomfeed:type: atompath: atom.xmllimit: 20 打开主题配置文件_config.yml，按Ctrl+F 搜索rss，添加配置 1rss: /atom.xml 查看输入一下命令，然后刷新一下浏览器即可 123hexo cleanhexo ghexo s 0x06 修改阅读时长，文章热度实现步骤Butterfly/languages/zh-CN.yml 下，搜索post，然后按照下图修改即可 效果显示]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>主题功能</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[oneindex后续]]></title>
    <url>%2F2019%2F08%2F16%2Foneindex%E5%90%8E%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[0x00 前言​ 在前一篇文章《使用onedrive+oneindex打造一个专属个人网盘》中，我们已经成功的搭建好了一个网盘了，但是这还不算完美，还需要增加一些小细节，比如文件夹加密，文件夹描述，云盘底部介绍等等，下面就来给大家讲讲如何实现。 0x01 实现文件夹加密功能实现文件夹加密的功能非常简单，原理就是在需要加密的文件夹中创建一个.password的文件，然后在该文件中输入自己需要设置的密码即可。但是，问题来了，我们正常情况下，Windows是不允许创建一个没有名称的文件的，提示如下。 那么，该如何解决这个问题尼？ 其实还是有方法的。比如在cmd中使用命令来直接创建该文件，就不会出现这种情况了，具体操作如下： 123cd Desktop #切换到桌面echo 123456 &gt; .password #创建.password文件，并将123456写入该文件#123456就是加密的文章夹密码 .password文件创建好后，可以上传到你想加密的文件夹，当然这个文件也可以复制到其他文件夹，这样就不需要每次重复创建了。 如果想立马看到效果的话，去oneindex后台重新刷新一下缓存， 再次访问发现成功加密文件夹，需要输入密码才能访问 ps1：这里输入密码访问成功访问后，发现后面就不用再次输入密码了，原因是浏览器记录了缓存信息，再次使用一个新的浏览器打开还是需要密码的，所以不用担心。 ps2：如果需要实现在加密的文件夹中再加密文件夹，原理还是一样的，也是在需要加密的文件夹中放入.password文件即可，这样的话，就可以给每个不同的私人文件夹放置不同的密码，即使一个文件夹的密码被猜解出来，其他文件夹也还是安全的。 0x02 网盘底部创建介绍信息这个功能实现过程非常的简单，只需要在网盘根目录中新建一个README.md文件即可，然后在该文件中写入自己需要介绍的信息。 0x03 总结如果还有新功能，会在跟新。皮卡皮卡^v^ ###]]></content>
      <categories>
        <category>教程</category>
        <category>好玩</category>
      </categories>
      <tags>
        <tag>oneindex;onedrive</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何将*.frm，*.MYD和*.MYI格式的文件导入MySQL中]]></title>
    <url>%2F2019%2F08%2F14%2F%E5%A6%82%E4%BD%95%E5%B0%86-frm%EF%BC%8C-MYD%E5%92%8C-MYI%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL%E4%B8%AD%2F</url>
    <content type="text"><![CDATA[0x00 前言​ 在学mysql数据库的时候，可能有小伙伴经常碰到.frm, .MYD，.MYI 的文件，但是却不知道如何还原其中的数据，今天博客也是碰到了一样的问题，经过在晚上一番搜索后，成功还原了，在这里记录一下，然后分享给大家。 0x01 操作步骤创建数据库 1CREATE DATABASE test2 执行成功 刷新数据库 利用PHPstudy找到mysql数据库的安装路径，然后找到data文件夹 将.frm，.MYD和*.MYI的文件都复制到刚刚创建的数据库文件夹中 再次回到小海豚中刷新数据库，发现表已经出现了 然后，然后就能看到数据库。哇卡卡。 0x02 踩坑说明 我自己在虚拟机中单独安装了mysql5.5的数据库，然后使用小海豚进行连接，但是发现，创建数据库的时候，在mysql的数据库安装文件夹的data中没有出现最新创建的数据库文件夹，。。。。郁闷，为啥每次这些坑都会被我碰到。。。， 解决方法：我想起来PHPstudy中集成了mysql，于是，我直接卸载了mysql，直接安装了PHPstudy，然后成功还原了数据库。]]></content>
      <categories>
        <category>数据库</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[onedrive+oneindex打造属于自己的个人网盘]]></title>
    <url>%2F2019%2F08%2F09%2Fonedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98%2F</url>
    <content type="text"><![CDATA[0x00 前言​ 前几天在别人的博客中看到有自己搭建的个人专属网盘，看起来还不错的样子，然后了解到是用onedrive+oneindex来实现的，所以自己也通过在网上学习一些相关的文章，并且搭建成功了，所以在这里分享一下搭建的流程，一来是给自己的总结，二来是分享给需要的朋友。 0x01 环境准备 环境需求： 1.vps一个 2.宝塔面板环境，Nginx，PHP需要5.6以上版本 3.onedrive 5T空间 4.oneindex 5.域名一个 1.1 vps购买访问vps购买地址选择经济实惠的Linux VPS 然后拉到最底下，选择kvm的vps，当然选择openVZ的也可以。 选择第一个2.5刀的 选择操作系统和带宽 选择vps的位置，然后加入购物车 结账 填写相关信息，然后选择支付宝付款 1.2 宝塔面板的安装entos安装命令： 1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh Ubuntu/Deepin 安装命令： 1wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh Debian安装命令： 1wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh Fedora安装命令: 1wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh 1.3 Nginx和PHP的安装​ 安装完宝塔面板后，在浏览器中输入vpsip:8888进入宝塔面板，登陆的账号密码在成功安装宝塔后会有提示，根据提示输入登陆就好了，一般情况下第一次登陆宝塔会提示让你安装LNMP环境或者LAMP环境，我们选择安装Nginx+PHP5.6就好了，mysql和phpmyadmin不需要安装 安装的进度如下，耐心等待安装完成即可。 0x02 注册365邮箱​ 临时邮箱网址：https://t.odmail.cn/ 复制网页中的邮箱然后选择 学生版 or 教师版 在注册,记住，页面不要关闭，待会需要接收验证码 输入刚刚的邮箱 返回刚刚临时邮箱的页面，接收到验证码了 输入验证码 输入相关信息完成注册 需要用手机号验证一下 注册完成 0x03 安装oneindex3.1 注册域名域名注册地址直接购买，不懂的，出门右拐百度 3.2 设置域名解析在域名管理中设置域名解析 A记录指向是自己的vps ip地址pan是域名的二级域名，也就是pan.xxx.com 3.3 安装oneindex注册好了onedrive以后，我们现在有5T的空间了，具体有没有5T，会在后面上传的部分介绍如何查看 首先需要下载oneindex的源码，GitHub下载地址：onindex 然后登陆宝塔面板，配置一下 填写自己注册的域名 点击进入网站目录 然后刚刚下载的oneindex源码上传上去，也可以使用远程下载直接远程下载oneindex的源码，如果是自己上传的，需要解压缩一下，解压完以后如下图： 然后访问自己的域名直接安装，必须全部都是√才行，如果3,4的权限不够需要在宝塔面板中赋予该文件夹可读可写的权限 都是√的可以跳过不看这个 重新回到宝塔面板给需要赋予权限的两个文件夹赋权 再次刷新，OK，都是√了， 0x04 oneindex的基本设置输入域名/?/admin进入oneindex后台管理系统，初始密码是oneindex 修改网盘的名称 在宝塔中设置定时刷新缓存计划 在宝塔面板中添加计划任务 0x05 文件上传​ 为了方便我们上传文件到网盘中，我们需要用到RaiDrive将网盘映射到本地计算机中，当做本地磁盘来使用，具体操作如下：RaiDrive下载:官网地址,蓝奏云盘 下载完以后就是一步步安装了，傻瓜式操作，下面主要讲一下安装完以后如何将网盘映射到本地 首先，安装好的RAIDrive是英文的，不习惯得话可以设置成中文，如图 然后将网盘映射到本地，操作如下 点击接受 耐心等待一会以后 0x06 碰到的问题3.4 授权5T空间的时候碰到错误问题描述： 问题原因： 没有使用开通5T onedrive空间的账号登陆 解决方法： 如果有5T 的onedrive空间的账号，直接使用该账号登陆即可，如果没有的话，需要自己重新注册一个即可。 3.5 网盘文章打开404问题描述： 上传到网盘的文件，点击打开以后显示404 问题原因： 没有设置伪静态，导致访问文件时找不到资源文件。 解决方法： 设置好以后再次访问域名，发现里面的文件夹和文件都可以直接点击查看 3.6 解决图片打开是404问题将伪静态替换成下面 1234567891011rewrite ^./files/(.) /wp-includes/ms-files.php?file=1 last;if (!-e $request_filename)&#123;rewrite ^.+?(/wp-.*) $1 last;rewrite ^.+?(/.*.php)$ $1 last;rewrite ^ /index.php last;&#125; 成功访问 参考链接： https://www.52pojie.cn/thread-847650-1-1.html https://github.com/donwa/oneindex https://blog.csdn.net/github_39533414/article/details/83687260 https://www.moerats.com/archives/592/ http://www.sumbk.com/339.html http://blog.jialezi.net/?post=120]]></content>
      <categories>
        <category>教程</category>
        <category>好玩</category>
      </categories>
      <tags>
        <tag>oneindex</tag>
        <tag>onedrive</tag>
        <tag>个人网盘</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[给博客添加豆瓣书架功能]]></title>
    <url>%2F2019%2F08%2F09%2F%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[0x00 前言在一次浏览个人博客网站的过程中，返现有个网站有豆瓣读书的功能，可以在页面展示自己读了哪些书，想看哪些书等，我觉得这个功能特别的好，可以记录自己的读书，还可以在读完以后写上自己的书评。下面来给大家讲讲怎么在自己的博客中实现这个功能。 #0x01 成品展示 #0x02 需求配置 ##2.1 安装插件 在博客的根目录下输入命令安装 npm install hexo-douban --save ##2.2 站点配置文件中添加配置 在Hexo站点根目录配置文件_config.xml中的末尾添加如下配置： 12345678910111213douban: user: mythsman builtin: false book: title: 'This is my book title' quote: 'This is my book quote' movie: title: 'This is my movie title' quote: 'This is my movie quote' game: title: 'This is my game title' quote: 'This is my game quote' timeout: 10000 上面参数说明： user: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击 “个人主页” ，这时候地址栏的URL大概是这样：”https://www.douban.com/people/xxxxxx/“ ，其中的”xxxxxx”就是你的个人ID了。 builtin: 是否将生成页面的功能嵌入hexo s和hexo g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。 title: 该页面的标题. quote: 写在页面开头的一段话,支持html语法. timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。 由于hexo-douban是默认抓取豆瓣读书、豆瓣电影以及豆瓣游戏的，如果只想要其中一部分，可以把其它部分在上述配置文件中去掉即可。 0x03 启用使用插件安装好了，需要配置的也配置好了，下面就需要生成我们的豆瓣书架、电影页面了。 ##3.1 生成页面 在GitBash下输入命令： 1234567hexo clean #清除之前生成的文件hexo douban -bmg #生成豆瓣书籍、电影、游戏页面hexo g #生成文章hexo s #启动本地服务器hexo deploy #上传部署#-bgm代表的是book、game、movie三个参数，如果只需要其中的一部分就只带你想要的那些参数。 注：由于hexo douban的简写也是hexo d，与hexo deploy的简写指令hexo d冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式 ##3.2 测试 如果在hexo douban -bmg这步没有问题的话，会出现如下信息 然后我们只需要在站点目录下测试http://localhost:4000/books 或者 http://localhost:4000/movies等，如果看到页面了就说明成功了。 ##3.3 配置 如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件_config.xml，找到菜单按钮，可以选择性的添加下面内容： 123456menu: home: / archives: /archives books: /books # 这是链接到books页面 movies: /movies # 这是链接到movies页面 games: /games # 这是链接到games页面 注意添加完成之后按钮并不是中文的，这是由于在languages文件夹下面的zh-CN（中文语言配置文件）没有添加上述对应的中文参数信息，所以我们需要主动添加,语言文件夹在你的主题配置文件夹下面，如下图 在menu菜单下添加： 1234menu: books: 阅读 movies: 电影 games: 游戏 #0x04 碰到的问题 输入hexo douban -bg以后，发现没有按照教程一样产生相关的页面 在网上百度，Google了好久都没有相关的问题，只有相关的教程，也重装了无数次，还是不成功，但是这个插件明明是支持next主题的，所以我就在虚拟机里面重新搭建了一个干干净净的博客，然后安装上这个插件后，发现可以正常产生页面的。 所以断定，肯定是我的博客配置出现了问题而不是插件的问题了，在精确定位一下问题：要么是主题的配置的问题，要么的hexo的配置问题，要么是可能去之前安装的功能插件冲突。 通过将原始的配置复制到我的博客中，发现产生，同构将我博客中的配置文件复制到原始的配置中，发现不能产生，从而断定了问题是出在hexo的站点配置文件中，因为我直接将新的站点配置文件复制进去是可以正常产生页面的。所以在进一步排查到底是站点配置文件中的什么配置出了问题。 最后查出，原来是douban:前面多了空格，必须要顶格才行。 再次运行hexo douban -bmg成功生成books和games页面。 #0x05 参考链接 https://github.com/mythsman/hexo-douban]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>豆瓣书架</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github+hexo+域名搭建一个自己的网站]]></title>
    <url>%2F2019%2F08%2F09%2Fgithub-hexo-%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[0x00 前言​ 在一次无意的搜索文章中，看到了一个特别好的网站，不管是前端还是网站的内容都做的非常吸引人。我一开始以为是WordPress搭建的个人博客，后台得知使用hexo+GitHub来搭建的，顿时心中的博客火又燃了起来。$_$因为我之前也用WordPress搭建过自己的博客，但是由于需要购买阿里云的服务器，这对于我这个穷人来说是一笔开销，所以在服务器到期以后就没有在续费了，而hexo+GitHub搭建的是完全免费的，利用的是GitHub page，然后hexo将我们写的博客渲染成静态页面在部署到GitHub中去，最后在前端展现出来。下面就给大家介绍一个搭建的过程。 #0x01 环境准备 需要的东西： node.js git hexo GitHub账号 域名 ##1.1 node和git的安装 Node.js下载](http://nodejs.org/) ，Git下载 ，下载完成以后，直接傻瓜式下一步安装即可。 按win+R 输入cmd命令来检查是否安装成功 12node -v #查看node版本git -v #查看git版本 出现下图说明安装成功 ##1.2 hexo的安装 首先需要新建一个空的Blog文件夹，可以在任意盘符右击新建个文件夹，也可以通过cmd命令来完成 输入Blog文件夹下输入npm install hexo -g安装hexo（速度根据你的实时网速） 输入hexo -v，检查hexo是否安装成功 输入hexo init，初始化该文件夹（需要等待一会） 输入npm install，安装所需要的组件 输入hexo g（=hexo generate），生成静态页面 输入hexo s（=hexo server），开启服务器，访问该网址，正式体验Hexo 访问http://localhost:4000 出现下图，说明本地搭建成功 命令总结： 123456hexo -v #查看hexo版本hexo init #初始化hexohexo install #安装hexohexo g #将文章渲染成静态页面hexo s #启动本地hexo服务器hexo d #部署到GitHub（后面介绍） 1.3 注册GitHub账号注册地址：github 输入用户名，邮箱和账号密码后点击注册，进入第二步 选择免费个人版 去刚刚注册的邮箱验证一下即可 1.4 购买域名购买域名是为了将GitHub的默认域名解析到自己的域名下，这样以后就可以直接访问自己的域名了，不需要在输入GitHub的默认域名了。 腾讯注册域名传送门 阿里云注册域名传送门 0x02 搭建hexo博客2.1 配置GitHub首先需要创建一个新的repository仓库， ​ 一直往下拉，找到GitHub pages 访问链接效果如下： 将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话） 分别输入： 12git config --global user.name "madcoding"git config --global user.email "madcoding@163.com" 注：这里“madcoding”可以替换成自己的用户名，邮箱可以替换成自己的邮箱 输入ssh-keygen -t rsa -C “madcoding163.com”连续三个回车，生成密钥，最后得到了两个文件：id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator.ssh）。 输入eval &quot;$(ssh-agent -s)&quot;，添加密钥到ssh-agent 再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent 在目录C:\Users\Administrator.ssh下载，找到下面两文件 用记事本打开id_rsa.pub，复制里面的内容 添加成功 继续在Git bash中输入ssh -T git@github.com 然后输入两次yes，返回下图说明连接成功 2.2 自定义域名设置在Blog的source目录下，新建一个CANME文件，具体操作如下 在cmd窗口中输入ping 用户名.github.io 得到GitHub分配的一个公网ip地址，记下这个地址 ##2.3 设置域名解析 然后到阿里云购买好的域名中心，设置域名解析，下面是设置好的结果 设置步骤： ##2.4 配置部署 在Blog的根目录下，找到_config.yml文件，修改repo值（在末尾） 在Git bash中输入hexo new post “test” 这时，可以在source文件下的_posts文件夹中看到刚刚新建的test文件，写文章可以直接在该文档中去写 在生成以及部署文章之前，需要安装一个扩展： npm install hexo-deployer-git –save 使用编辑器编好文章，那么就可以使用命令：hexo g 来生成静态的文档 然后使用hexo d 来部署到GitHub中 如果点击login后dos界面没有反应，按一下enter键就好了 出现下图，部署成功 0x03 美化博客3.1 跟换主题1.可以直接去hexo官方主题库中去找一个自己喜欢的主题去下载，然后下载完成后复制到themes文件夹下。传送门 2.在Blog目录下，右击，点击Git bash here，然后输入 git clone https://github.com/shenliyang/hexo-theme-snippet.git 3.2 博客导航栏设置直接在博客主题目录下设置即可，在zh-CN中设置也可以。 ​ 效果显示 3.3 分类设置虽然我们在主题中设置了导航栏，但是却没有给导航栏设置对应的页面，所以点击的时候是不能正常显示的。 3.3.1 添加分类列表在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 source 文件夹中新建一个 categories 文件夹。 1hexo new page categories 打开 categories 文件夹中的 index.md 文件，添加 type 字段，设置为 “categories”。如下图所示。 接着到主题文件夹下的 _config.yml 配置文件下，找到 menu 模块，把 categories 的注释给去掉。如下图所示。 刷新页面（如果刷新没效果，可以重启服务），可以在页面左侧栏上看到多了一个“分类”列表。 3.3.2 如何将文章添加到对应分类？文章发布前，在 front-matter 部分，多写一个 categories 字段，然后参数写上类别的名称，保存后重启服务，在网页上点击“分类”，可以看到分类下已经生成了刚刚设置的类别，并把刚刚发布的文章归类在此类别下。如下图所示。 3.4 标签设置方法跟分类设置原理一样，这里就不在重复介绍了，需要注意一点的是格式问题。 3.5 Hexo 博客添加站内搜索蝴蝶主题支持Algolia，Local Search，这就给大家介绍一些Local Search，因为这个配置简单，-&gt; -&gt;。注意：安装的时候要是项目根目录下安装。 安装 hexo-generator-search 1npm install hexo-generator-search --save 安装 hexo-generator-searchdb 1npm install hexo-generator-searchdb --save 在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。 12345search: path: search.xml field: post format: html limit: 10000 编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 ture。 效果图 0x04 其他功能0x05 采坑指南5.1 端口占用问题假如页面一直无法跳转，那么可能端口被占用了。此时我们ctrl+c停止服务器，接着输入“hexo server -p 端口号”来改变端口号 5.2 npm install hexo -g出现问题 解决方法： 然后再次执行npm install hexo -g 5.3 ssh-key配置失败首先，清除所有的key-pair 12ssh-add -Drm -r ~/.ssh 删除你在github中的public-key,重新生成ssh密钥对 1ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot; 接下来正常操作 在github上添加公钥public-key: 1、首先在你的终端运行xclip -sel c ~/.ssh/id_rsa.pub将公钥内容复制到剪切板 2、在github上添加公钥时，直接复制即可 3、保存 删除你在github中的public-key 重新生成ssh密钥对 1ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot; 测试： 在终端 ssh -T git@github.com 5.4 发布文章时出现问题###5.4.1 问题描述 使用hexo d -g命令发布文章使，出现如下问题 YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1: 5.4.2 问题原因在发布文章的md文件里面开头的文件头没有加空格如下： 5.4.3 解决方法加上空格后，重新编译，没有出错（记得保存） 重新编译，完成部署 5.5 输入hexo generate或者其他hexo的命令时出现下面的问题5.5.1 问题描述 5.5.2 问题原因yml的配置文件中国，冒号后面需要有空格，如下： 5.5.3 解决方法 保存后重新运行，没报错，空格真的是大坑。 5.6 部署博客没有CSS5.6.1 问题描述在本地server成功，显示没有问题 但是部署到github上之后，就无法显示主题和图片了 5.6.2 解决方法更改一下_config.yml文件，其中的url和root属性。 12ur: http://www.nideyuming.com/blog/root: /blog root 下面应该设置成 /你的项目名 而不是/ 然后重新部署一下就成功了。 5.7 GitHub配置个人域名出现问题5.7.1 问题描述 5.7.2 解决方法 5.8 npm install安装依赖出现问题5.8.1 问题描述npm WARN babel-eslint@10.0.1 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself. 5.8.2 解决方法 ##5.9 输入自己后买的域名后访问是404 5.9.1 问题描述 但是使用github的默认域名可以正常访问，所以问题出在了域名解析和站点配置的问题上了 先考虑重置设置一下域名解析的记录，将 重新设置好了域名解析，但是还是出现404，我TM。。。。 行，那就是站点配置上面的错误了，在hexo生成的博客的source目录下新建一个 CNAME 文件，然后在这个文件中填入你的域名，这样就不会每次发布之后，gitpage里的 customdomain都被重置掉啦。 重新部署后，在GitHub中会出现CNAME，说明设置成功了 0x06 参考链接https://www.cnblogs.com/fengxiongZz/p/7707219.html https://www.simon96.online/2018/10/12/hexo-tutorial/ https://blog.csdn.net/liuyongshun2/article/details/54629087 https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自定义hexo创建文章的模板]]></title>
    <url>%2F2019%2F08%2F02%2F%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E6%9D%BF%2F</url>
    <content type="text"><![CDATA[#0x00 前言 在众多的博客中，我选择了hexo，最大的优势就是可以结合GitHub page来搭建一个免费的个人博客系统，将文章都托管到GitHub上，在也不用担心服务器过期的问题了，而且可以自己买一个域名，解析了GitHub上就可以直接使域名访问了。很多小伙伴给自己个博客添加了很多其他的功能，但是每次写文章的时候都需要在文章的开头去写一遍，这简直就是重复造轮子。其实，你可以自己在scaffolds中去修改属于你自己的模板 #0x01 目录了解 123456789101112131415161718192021hexo-install-directory├── CNAME├── _config.yml //Hexo的配置文件，可以配置主题、语言等├── avatar.jpg├── db.json├── debug.log├── node_modules├── public //执行hexo g命令后，生成的内容会在这里，包括所有的文章、页面、分类、tag等.├── scaffolds //保存着默认模板，自定义模板就是修改该目录下的文件│ ├── draft.md //默认的草稿模板│ ├── page.md //默认的页面模板│ └── post.md //默认的文章模板├── source //Hexo存放编辑页面的地方，可以使用vim或其他编辑器编辑这里的内容│ ├── 404.html //自定义404页面，可以使用腾讯公益404页面│ ├── Staticfile │ ├── _drafts //存放所有的草稿文件的目录│ ├── _posts //存放所有的文章文件的目录，用的最多，比如执行hexo n "post_name"之后，post_name这篇文章就存放在这个目录下│ ├── categories└── themes //Hexo的所有主题 ├── landscape //原始hexo主题 ├── next //这是我目前用的主题 0x02 修改步骤在博客的scaffolds目录下有三个md文档，只需要改post.md即可。 我的模板 1234567891011121314151617181920212223242526272829303132----title: &#123;&#123; title &#125;&#125; //文章标题date: &#123;&#123; date &#125;&#125; //文章创建时间permalink: //文章显示连接categories: //文章匪类目录tags: [] //文章标签，可多个，用，隔开description: //文章描述image: //自定义的文章摘要图片，只在页面展示，文章内消失copyright: true //增加底部的版权信息（需要配置）-----//首页文章展示缩略图&lt;img src=&quot;https://&quot; alt=&quot;&quot; style=&quot;width:100%&quot; /&gt; 0x00 前言&lt;!-- more --&gt;## 0x01 ## 0x02## 0x03## 0x04&lt;hr /&gt;版权信息 模板图片如下: #0x03 效果展示 首页预览 文章详情 版权信息 ##]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>文章模板</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的大学生活]]></title>
    <url>%2F2019%2F07%2F01%2F%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%B4%BB%2F</url>
    <content type="text"><![CDATA[#0x00 前言 ​ 我大学读的是计算机科学与技术专业，说实话，这个专业真的太大了，囊括了整个计算机的大类，所以学校的课程中，什么都学，什么计算机导论，离散数学，Java，C，C#，数据库，JSP等等，但是教的都是一些基本的皮毛知识，有些连入门都不算，所以要想在某个知识有所突破，基本上都是靠自己去图书馆借书回来学习。 ​ 在大学中，如果按照学习来分类的话，有这么几个人。第一类人——学神，听过这类人特别牛X，不光学习好，年年拿国家励志奖学金，而且还有这种职位，比如学社会主席，某某大赛领队人….；第二类人——学霸，他们是上课认真听讲，课下不用复习，靠前突击复习。期末稳稳优秀，我宿舍就有几个，哈哈哈，我们宿舍在班上也算是男生中的学霸宿舍了；第三类人——学渣，他们是上课玩手机，下课打游戏，吃饭叫外卖，考试靠小抄。 0x01 大一​ 大一小萌新，充满着对大学的憧憬，然后大一也是最惨的，学生会中部长对大一干部喝来喝去，一副官腔样，贼恶心。除了这些大一小萌新还会在志愿者协会参加各种户外和校内的志愿者活动，只为了志愿者证书上的那60小时志愿工时，不过我在大一的时候为了多见见世面，参加了不少志愿活动，大大小小的积累下来有100多个工时。不过最后被我弄丢了╮(╯▽╰)╭然后就是我在大学还参加一个社团叫剪纸协会（非物质文化遗产奥），不过我在里面也是混日子，没有学到多少技能，到是吧脸皮练厚了，哈哈哈。这就样大一结束。 #0x02 大二 ​ 大二，学习上的事就暂且不谈了，都一样，周一周五上课，周六周日放假。不过不同的人大二的生活就开始不一样了。要是说很多人在大一的时候都差不多，一起参加了学生会，社团什么的，到了大二以后，换届的换届，退会的退会，有幸的是，我当上了剪纸协会的副会长，一般一个社会会有4个负责人，1个会长，两个副会长，还有一个理事长。反正都是管事的，每次社团需要举办什么活动，我们几个负责人都要讨论一下活动的举办等等一系列问题，话说，举办活动还是挺有意思的，不过举办活动前后事情也是挺多的。需要外联部去拉赞助，需要组织部写策划案，需要剪纸部和纸艺创作部出作品展览，协调活动现场人员情况等等。就这样，大二我除了每天上课以外，其余的时光都是在协会中度过了，不过我喜欢去图书馆借点书在协会里面看书，一个人安静的看书，还有空调，也是一种享受！皮卡皮卡^v^ 。 ​ 在一次偶然的机遇中，我碰到了学校计算机协会的会长，在于他交流的过程中，他和我讲了一些有关黑客的东西，其中就涉及到了各种技术，什么ip定位（小皮毛），渗透测试、kali Linux等，当时的我是第一次接触到渗透测试这个词，也没有听过kali Linux，只知道有软件测试和Linux系统这么一回事。当我从百度中搜索了有关这些词的信息后，开启了我新世界的大门。为了学习渗透，我在虚拟机中装上了kali Linux，这个过程在我摸索的过程了还是碰到了不少坑的，这里就不说了，装上kali Linux以后，第一个想法就是，我该怎么用，怎么去和电影里面的一样去黑别人的电脑？等等，于是在网上搜索了一些相关的资料和视频，开始学习kali Linux，其中，我研究最多的模块就是内网了，其实实际上就是局域网环境内的攻击，这些我是先拿我宿舍的室友和路由器开的刀，先是研究如何破解WiFi密码，然后破击成功后使用nmap扫描内网存活主机，使用arp欺骗局域网的主机，窃取局域网中用户的数据流量等等（这些其实不懂，就是跟着视频操作一遍，照葫芦画瓢，不懂原理），再去使用nessus扫描主机存在的漏洞，最后利用漏洞攻击系统等等（未成功过。:( ），在无线网破解这部分我曾经还在freebuf上发表一篇文章——如何使用Airgeddon找回WiFi密码 ，这篇文章从技术研究，文章的撰写发布花了我好几天的时间，在写文章的那天弄到3点在写完成，不过最后发表了，很开心。大二就说这么多吧，其他的大三再说。 #0x03 大三 ​ 时间很快，我到了大三，大三上学期不知道怎么回事，课少的可怜，所以我就有更多的时间来研究渗透测试的东西了，这段时间我研究了msf中的木马，具体技术也不是很懂，就是利用命令来生成木马，然后将木马发送给受害者，只要受害者点击了以后，我这边就可以反弹回来一个会话，俗称shell，在这里，我可以查看该用户主机中的所有信息（管理员权限），当初就是将这个给我的一个室友演示的，成功让他上船。然后两个人一起研究渗透测试，免杀，Android马等等，只是当初思维比较局限，不知道web层面的渗透，只知道有日战这么一说，但是具体的也不知道怎么日。。。。 ​ 大三下学期的课与上学期的课形成了鲜明的对比，基本上天天满课，有的时候晚上还要上课，这，让我在渗透测试方面的研究方面的研究时间大大减少，而且我在大三还萌生了考研的想法，所以，学习任务繁重啊。╮(╯▽╰)╭，不过幸运的是，我在大三过了六级，低分飘过，过了三级网络技术，还拿到了国家励志，也算是我的幸运之年了。皮卡皮卡(^__^) #0x04 大四 ​ 考研，考研失败，经历就不分享了，免得误导小朋友。不过给出建议就是坚持，很多人在考研的后期都奔溃了，时间不够用，没有复习完，考场心态爆（我在考数学的时候心态崩过，然后出去洗把脸换个位置调整过来了），所以，一定要坚持，怎么也得熬到考研结束。说不定，你就成功了。哇咔咔！！！]]></content>
      <categories>
        <category>记录生活</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
